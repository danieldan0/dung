{"version":3,"sources":["..\\static\\js\\main.1fa08d07.js","..\\webpack\\bootstrap 2a42e7069df4f809317f","game.js","entity.js","xy.js","..\\node_modules\\rot-js\\lib\\rot.js","being.js","..\\node_modules\\promise\\lib\\core.js","..\\node_modules\\webpack\\buildin\\global.js","..\\config\\polyfills.js","index.js","..\\node_modules\\asap\\browser-raw.js","level.js","map.js","player.js","screens.js","textbuffer.js","tile.js","..\\node_modules\\object-assign\\index.js","..\\node_modules\\process\\browser.js","..\\node_modules\\promise\\lib\\es6-extensions.js","..\\node_modules\\promise\\lib\\rejection-tracking.js","..\\node_modules\\whatwg-fetch\\fetch.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","_classCallCheck","instance","Constructor","TypeError","__WEBPACK_IMPORTED_MODULE_0_rot_js__","__WEBPACK_IMPORTED_MODULE_0_rot_js___default","__WEBPACK_IMPORTED_MODULE_3__level__","__WEBPACK_IMPORTED_MODULE_4__player__","__WEBPACK_IMPORTED_MODULE_5__screens__","__WEBPACK_IMPORTED_MODULE_6__textbuffer__","__WEBPACK_IMPORTED_MODULE_7__xy__","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","Game","this","scheduler","a","Scheduler","Speed","engine","Engine","display","Display","fontSize","textBuffer","document","body","appendChild","getContainer","player","game","bindEventToScreen","event","window","addEventListener","e","currentScreen","handleInput","switchScreen","startScreen","level","getSize","_switchLevel","setEntity","getFreeCells","random","start","xy","tile","getTileAt","tileVisual","getVisual","entity","getEntityAt","visual","draw","x","y","ch","fg","bg","lock","loseScreen","clear","size","setOptions","width","height","configure","position","j","beings","getBeings","add","screen","exit","getDisplay","enter","render","Entity","_visual","_xy","_level","XY","arguments","undefined","dx","dy","Math","max","abs","sqrt","global","process","requestAnimationFrame","cb","setTimeout","child","scrollLeft","scrollTop","createElement","type","canvas","getBoundingClientRect","left","top","getContext","_termcolor","beginPath","clearRect","w","h","clearCmd","clearToAnsi","fillStyle","stdout","write","drawImage","b","f","g","fill","fillRect","fillText","chs","font","lineTo","measureText","moveTo","textAlign","textBaseline","style","visibility","documentElement","ROT","isSupported","Function","bind","DEFAULT_WIDTH","DEFAULT_HEIGHT","DIRS","4","8","6","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","Text","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","str","maxWidth","result","tokens","tokenize","lineWidth","token","offset","replace","match","index","part","substring","push","trim","_breakLines","Infinity","lineLength","lastTokenWithSpace","charAt","indexOf","_breakInsideToken","arr","split","pop","join","nextIndex","breakIndex","lastIndexOf","splice","lastTextToken","tokenIndex","removeBreakChar","newBreakToken","newTextToken","Array","floor","RNG","getUniform","randomize","Number","mod","String","capitalize","toUpperCase","lpad","character","count","cnt","rpad","format","template","map","args","slice","replacer","group1","group2","obj","group","parts","shift","method","toLowerCase","replaced","apply","first","unshift","create","tmp","extend","parent","constructor","mozRequestAnimationFrame","webkitRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","options","_context","_data","_dirty","_options","_backend","defaultOptions","transpose","layout","spacing","border","forceSquareRatio","fontFamily","fontStyle","tileWidth","tileHeight","tileMap","tileSet","tileColorize","termColor","DEBUG","_tick","what","colors","compute","getOptions","computeSize","availWidth","availHeight","computeFontSize","eventToPosition","touches","clientX","clientY","rect","drawText","text","cx","cy","lines","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","charCodeAt","_draw","clearBefore","data","Backend","context","Rect","_spacingX","_spacingY","_canvasCache","cache","charWidth","ceil","_drawWithCache","_drawNoCache","hash","ctx","chars","concat","boxWidth","boxHeight","oldFont","ratio","widthFraction","Hex","_hexSize","xprop","yprop","px","reverse","_fill","hexSizeWidth","hexSizeHeight","hexSize","min","prop","Tile","_colorCanvas","Error","globalCompositeOperation","getSeed","_seed","setSeed","seed","_s0","_frac","_s1","_s2","_c","t","getUniformInt","lowerBound","upperBound","getNormal","mean","stddev","u","v","r","gauss","log","getPercentage","getWeightedValue","total","getState","setState","state","clone","Date","now","StringGenerator","words","order","prior","_boundary","fromCharCode","_suffix","_prefix","_priorValues","generate","_sample","_join","observe","string","_split","subcontext","_observeEvent","getStats","priorCount","dataCount","eventCount","_backoff","available","EventQueue","_time","_events","_eventTimes","getTime","time","remove","_remove","_queue","_repeat","_current","item","repeat","next","Simple","getSpeed","Action","_defaultDuration","_duration","setDuration","_scheduler","_lock","unlock","actor","act","then","Map","_width","_height","callback","_fillMap","Arena","empty","DividedMaze","_stack","_map","_process","room","_partitionRoom","availX","availY","bottom","right","walls","solid","hole","IceyMaze","regularity","_regularity","nx","ny","done","blocked","dirs","_randomize","_isFree","EllerMaze","L","R","_addToList","_removeFromList","Cellular","born","survive","topology","connected","_dirs","probability","set","newMap","widthStep","widthStart","cur","ncount","_getNeighbors","_completeMaze","dir","allFreeSpace","notConnected","_freeSpace","_pointKey","_findConnected","keys","_getFromTo","from","to","local","_tunnelToConnected","k","pp","connectedKeys","notConnectedKeys","_getClosest","point","space","minPoint","minDist","stack","keepNotConnected","tests","xx","pkey","yy","Dungeon","_rooms","_corridors","getRooms","getCorridors","Digger","roomWidth","roomHeight","corridorLength","dugPercentage","timeLimit","_features","Room","Corridor","_featureAttempts","_walls","_digCallback","_canBeDugCallback","_isWallCallback","_priorityWallCallback","_dug","area","_firstRoom","t1","wall","_findWall","parseInt","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","priorityWalls","_addDoors","Feature","createRandomCenter","prio1","prio2","feature","createRandomAt","isValid","createPriorityWalls","deltas","delta","isWallCallback","clearDoors","addDoors","Uniform","roomDugPercentage","_roomAttempts","_corridorAttempts","_connected","_unconnected","_generateRooms","_generateCorridors","_generateRoom","createRandom","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","center1","center2","diffX","diffY","dirIndex1","dirIndex2","getLeft","getRight","getTop","getBottom","_placeInWall","end","_digLine","diff","rotation","mid","index2","round","mid1","mid2","addDoor","dirIndex","avail","lastBadIndex","points","corridor","Rogue","cellWidth","cellHeight","_calculateRoomSize","connectedCells","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","cell","connections","cellx","celly","idx","ncgx","ncgy","otherRoom","cgx","cgy","found","dirToCheck","cw","validRoom","directions","dirIdx","newI","newJ","console","roomw","roomh","sx","sy","cwp","chp","sxOffset","syOffset","ii","jj","_getWallPosition","aRoom","aDirection","rx","ry","door","_drawCorridore","startPosition","endPosition","tempDist","xDir","yDir","move","xOffset","yOffset","xpos","ypos","moves","xAbs","yAbs","percent","firstHalf","secondHalf","connection","otherWall","canBeDugCallback","digCallback","debug","x1","y1","x2","y2","doorX","doorY","_x1","_y1","_x2","_y2","_doors","getDoors","startX","startY","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","ok","firstCornerBad","secondCornerBad","priorityWallCallback","Noise","Simplex","gradients","_F2","_G2","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","G2","n0","n1","n2","X0","Y0","x0","y0","t0","grad","t2","FOV","lightPassesCallback","_lightPasses","_getCircle","countFactor","startOffset","DiscreteShadowcasting","_coords","A","B","blocks","DATA","neighbors","angle","_visibleCoords","v1","callee","v2","PreciseShadowcasting","A1","A2","SHADOWS","neighborCount","_checkVisibility","index1","edge1","old","edge2","visible","visibleLength","P","P1","P2","RecursiveShadowcasting","OCTANTS","_renderOctant","compute180","previousOctant","nextPreviousOctant","nextOctant","compute90","octant","_castVisibility","row","visSlopeStart","visSlopeEnd","radius","yx","newStart","mapX","mapY","slopeStart","slopeEnd","Color","fromString","cached","_cache","values","color1","color2","add_","multiply","multiply_","interpolate","factor","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","color","hue2rgb","q","toRGB","_clamp","toHex","toString","num","black","navy","darkblue","mediumblue","blue","darkgreen","green","teal","darkcyan","deepskyblue","darkturquoise","mediumspringgreen","lime","springgreen","aqua","cyan","midnightblue","dodgerblue","forestgreen","seagreen","darkslategray","darkslategrey","limegreen","mediumseagreen","turquoise","royalblue","steelblue","darkslateblue","mediumturquoise","indigo","darkolivegreen","cadetblue","cornflowerblue","mediumaquamarine","dimgray","dimgrey","slateblue","olivedrab","slategray","slategrey","lightslategray","lightslategrey","mediumslateblue","lawngreen","chartreuse","aquamarine","maroon","purple","olive","gray","grey","skyblue","lightskyblue","blueviolet","darkred","darkmagenta","saddlebrown","darkseagreen","lightgreen","mediumpurple","darkviolet","palegreen","darkorchid","yellowgreen","sienna","brown","darkgray","darkgrey","lightblue","greenyellow","paleturquoise","lightsteelblue","powderblue","firebrick","darkgoldenrod","mediumorchid","rosybrown","darkkhaki","silver","mediumvioletred","indianred","peru","chocolate","tan","lightgray","lightgrey","palevioletred","thistle","orchid","goldenrod","crimson","gainsboro","plum","burlywood","lightcyan","lavender","darksalmon","violet","palegoldenrod","lightcoral","khaki","aliceblue","honeydew","azure","sandybrown","wheat","beige","whitesmoke","mintcream","ghostwhite","salmon","antiquewhite","linen","lightgoldenrodyellow","oldlace","red","fuchsia","magenta","deeppink","orangered","tomato","hotpink","coral","darkorange","lightsalmon","orange","lightpink","pink","gold","peachpuff","navajowhite","moccasin","bisque","mistyrose","blanchedalmond","papayawhip","lavenderblush","seashell","cornsilk","lemonchiffon","floralwhite","snow","yellow","lightyellow","ivory","white","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","range","_fov","_lights","_reflectivityCache","_fovCache","reset","setFOV","fov","setLight","clearLights","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","_updateFOV","fovKey","formFactor","key1","vis","key2","Path","toX","toY","passableCallback","_toX","_toY","_fromX","_fromY","_passableCallback","fromX","fromY","Dijkstra","_computed","_todo","_add","_compute","prev","neighbor","AStar","_done","_distance","Term","_cx","_cy","_lastColor","_ox","_oy","columns","rows","positionToAnsi","newColor","colorToAnsi","Xterm","rgb","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","__WEBPACK_IMPORTED_MODULE_0__entity__","__WEBPACK_IMPORTED_MODULE_1__game__","Being","_Entity","_this","getPrototypeOf","setPosition","passable","bump","_speed","_hp","damage","die","noop","getThen","ex","LAST_ERROR","IS_ERROR","tryCallOne","fn","tryCallTwo","Promise","_45","_81","_65","_54","doResolve","safeThen","onFulfilled","onRejected","resolve","reject","res","handle","Handler","deferred","_10","handleResolved","asap","promise","ret","newValue","finale","_97","reason","_61","eval","enable","assign","init","alert","rawAsap","task","queue","requestFlush","flushing","flush","currentIndex","capacity","scan","newLength","makeRequestCallFromTimer","handleTimer","timeoutHandle","clearInterval","intervalHandle","setInterval","scope","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","toggle","observer","node","createTextNode","characterData","__WEBPACK_IMPORTED_MODULE_2__xy__","__WEBPACK_IMPORTED_MODULE_3__map__","Level","_beings","_size","mapData","_freeCells","freeCells","_empty","oldXY","getXY","getLevel","generateMap","digger","__WEBPACK_IMPORTED_MODULE_3__xy__","__WEBPACK_IMPORTED_MODULE_2__tile__","__WEBPACK_IMPORTED_MODULE_1__being__","__WEBPACK_IMPORTED_MODULE_2__game__","_get","receiver","desc","getOwnPropertyDescriptor","Player","_Being","_handleKey","code","_keys","direction","plus","over","keyCode","removeEventListener","Screen","inputType","inputData","startGame","winScreen","background","__WEBPACK_IMPORTED_MODULE_0__xy__","TextBuffer","pos","Types","blocksLos","toObject","val","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","test1","getOwnPropertyNames","test2","test3","forEach","letter","err","source","symbols","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","timeout","len","run","Item","array","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","all","remaining","race","disable","enabled","onUnhandled","allRejections","matchWhitelist","rejections","error","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","warn","_72","line","list","some","cls","RangeError","normalizeName","test","normalizeValue","iteratorFor","items","iterator","support","iterable","Symbol","Headers","headers","append","isArray","header","consumed","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","bufferClone","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","rejected","decode","json","JSON","parse","normalizeMethod","upcased","methods","Request","input","url","credentials","mode","referrer","form","bytes","decodeURIComponent","parseHeaders","rawHeaders","Response","bodyInit","status","statusText","fetch","viewClasses","DataView","isView","oldValue","has","thisArg","entries","response","redirectStatuses","redirect","location","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill"],"mappings":"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","file":"static/js/main.1fa08d07.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dung/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 21);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rot_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__being__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__entity__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__level__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__player__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__screens__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__textbuffer__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__xy__ = __webpack_require__(2);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\n\n\n\n\nvar Game = function () {\n\tfunction Game() {\n\t\t_classCallCheck(this, Game);\n\t}\n\n\t_createClass(Game, [{\n\t\tkey: 'init',\n\t\tvalue: function init() {\n\t\t\tthis.scheduler = new __WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.Scheduler.Speed();\n\t\t\tthis.engine = new __WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.Engine(this.scheduler);\n\t\t\tthis.display = new __WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.Display({ fontSize: 16 });\n\t\t\tthis.textBuffer = new __WEBPACK_IMPORTED_MODULE_6__textbuffer__[\"a\" /* default */](this.display);\n\t\t\tdocument.body.appendChild(this.display.getContainer());\n\t\t\tthis.player = new __WEBPACK_IMPORTED_MODULE_4__player__[\"a\" /* default */]();\n\n\t\t\t// Create a helper function for binding to an event\n\t\t\t// and making it send it to the screen\n\t\t\tvar game = this; // So that we don't lose this\n\t\t\tvar bindEventToScreen = function bindEventToScreen(event) {\n\t\t\t\twindow.addEventListener(event, function (e) {\n\t\t\t\t\t// When an event is received, send it to the\n\t\t\t\t\t// screen if there is one\n\t\t\t\t\tif (game.currentScreen !== null) {\n\t\t\t\t\t\t// Send the event type and data to the screen\n\t\t\t\t\t\tgame.currentScreen.handleInput(event, e);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t\t// Bind keyboard input events\n\t\t\tbindEventToScreen('keydown');\n\t\t\tbindEventToScreen('keyup');\n\t\t\tbindEventToScreen('keypress');\n\n\t\t\tthis.switchScreen(__WEBPACK_IMPORTED_MODULE_5__screens__[\"a\" /* default */].startScreen);\n\t\t}\n\t}, {\n\t\tkey: 'startGame',\n\t\tvalue: function startGame() {\n\t\t\t// FIXME build a level and position a player\n\t\t\tvar level = new __WEBPACK_IMPORTED_MODULE_3__level__[\"a\" /* default */]();\n\t\t\tvar size = level.getSize();\n\t\t\tthis._switchLevel(level);\n\t\t\tthis.level.setEntity(this.player, level.getFreeCells().random());\n\n\t\t\tthis.engine.start();\n\t\t}\n\t}, {\n\t\tkey: 'draw',\n\t\tvalue: function draw(xy) {\n\t\t\tvar tile = this.level.getTileAt(xy);\n\t\t\tvar tileVisual = tile.getVisual();\n\t\t\tvar entity = this.level.getEntityAt(xy);\n\t\t\tvar visual = entity.getVisual();\n\t\t\tthis.display.draw(xy.x, xy.y, visual.ch, visual.fg, tileVisual.bg);\n\t\t}\n\t}, {\n\t\tkey: 'over',\n\t\tvalue: function over() {\n\t\t\tthis.engine.lock();\n\t\t\t// FIXME show something\n\t\t\tthis.switchScreen(__WEBPACK_IMPORTED_MODULE_5__screens__[\"a\" /* default */].loseScreen);\n\t\t}\n\t}, {\n\t\tkey: '_switchLevel',\n\t\tvalue: function _switchLevel(level) {\n\t\t\t// remove old beings from the scheduler\n\t\t\tthis.scheduler.clear();\n\n\t\t\tthis.level = level;\n\t\t\tvar size = this.level.getSize();\n\n\t\t\tvar bufferSize = 3;\n\t\t\tthis.display.setOptions({ width: size.x, height: size.y + bufferSize });\n\t\t\tthis.textBuffer.configure({\n\t\t\t\tdisplay: this.display,\n\t\t\t\tposition: new __WEBPACK_IMPORTED_MODULE_7__xy__[\"a\" /* default */](0, size.y),\n\t\t\t\tsize: new __WEBPACK_IMPORTED_MODULE_7__xy__[\"a\" /* default */](size.x, bufferSize)\n\t\t\t});\n\t\t\tthis.textBuffer.clear();\n\n\t\t\t/* FIXME draw a level */\n\t\t\tvar xy = new __WEBPACK_IMPORTED_MODULE_7__xy__[\"a\" /* default */]();\n\t\t\tfor (var i = 0; i < size.x; i++) {\n\t\t\t\txy.x = i;\n\t\t\t\tfor (var j = 0; j < size.y; j++) {\n\t\t\t\t\txy.y = j;\n\t\t\t\t\tthis.draw(xy);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// add new beings to the scheduler\n\t\t\tvar beings = this.level.getBeings();\n\t\t\tfor (var p in beings) {\n\t\t\t\tthis.scheduler.add(beings[p], true);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'getDisplay',\n\t\tvalue: function getDisplay() {\n\t\t\treturn this.display;\n\t\t}\n\t}, {\n\t\tkey: 'switchScreen',\n\t\tvalue: function switchScreen(screen) {\n\t\t\t// If we had a screen before, notify it that we exited\n\t\t\tif (Game.currentScreen !== null) {\n\t\t\t\tGame.currentScreen.exit();\n\t\t\t}\n\t\t\t// Clear the display\n\t\t\tthis.getDisplay().clear();\n\t\t\t// Update our current screen, notify it we entered\n\t\t\t// and then render it\n\t\t\tthis.currentScreen = screen;\n\t\t\tif (this.currentScreen) {\n\t\t\t\tthis.currentScreen.enter();\n\t\t\t\tthis.currentScreen.render(this.display);\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn Game;\n}();\n\nGame.scheduler = null;\nGame.engine = null;\nGame.player = null;\nGame.level = null;\nGame.display = null;\nGame.textBuffer = null;\nGame.currentScreen = null;\n\n\nvar game = new Game();\n/* harmony default export */ __webpack_exports__[\"a\"] = (game);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Entity = function () {\n\tfunction Entity(visual) {\n\t\t_classCallCheck(this, Entity);\n\n\t\tthis._visual = visual;\n\t\tthis._xy = null;\n\t\tthis._level = null;\n\t}\n\n\t_createClass(Entity, [{\n\t\tkey: \"getVisual\",\n\t\tvalue: function getVisual() {\n\t\t\treturn this._visual;\n\t\t}\n\t}, {\n\t\tkey: \"getXY\",\n\t\tvalue: function getXY() {\n\t\t\treturn this._xy;\n\t\t}\n\t}, {\n\t\tkey: \"getLevel\",\n\t\tvalue: function getLevel() {\n\t\t\treturn this._level;\n\t\t}\n\t}, {\n\t\tkey: \"setPosition\",\n\t\tvalue: function setPosition(xy, level) {\n\t\t\tthis._xy = xy;\n\t\t\tthis._level = level;\n\t\t\treturn this;\n\t\t}\n\t}]);\n\n\treturn Entity;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Entity);\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar XY = function () {\n\tfunction XY() {\n\t\tvar x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\t\tvar y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n\t\t_classCallCheck(this, XY);\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\t_createClass(XY, [{\n\t\tkey: \"toString\",\n\t\tvalue: function toString() {\n\t\t\treturn this.x + \",\" + this.y;\n\t\t}\n\t}, {\n\t\tkey: \"is\",\n\t\tvalue: function is(xy) {\n\t\t\treturn this.x === xy.x && this.y === xy.y;\n\t\t}\n\t}, {\n\t\tkey: \"dist8\",\n\t\tvalue: function dist8(xy) {\n\t\t\tvar dx = xy.x - this.x,\n\t\t\t    dy = xy.y - this.y;\n\n\t\t\treturn Math.max(Math.abs(dx), Math.abs(dy));\n\t\t}\n\t}, {\n\t\tkey: \"dist4\",\n\t\tvalue: function dist4(xy) {\n\t\t\tvar dx = xy.x - this.x,\n\t\t\t    dy = xy.y - this.y;\n\n\t\t\treturn Math.abs(dx) + Math.abs(dy);\n\t\t}\n\t}, {\n\t\tkey: \"dist\",\n\t\tvalue: function dist(xy) {\n\t\t\tvar dx = xy.x - this.x,\n\t\t\t    dy = xy.y - this.y;\n\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t}\n\t}, {\n\t\tkey: \"plus\",\n\t\tvalue: function plus(xy) {\n\t\t\treturn new XY(this.x + xy.x, this.y + xy.y);\n\t\t}\n\t}, {\n\t\tkey: \"minus\",\n\t\tvalue: function minus(xy) {\n\t\t\treturn new XY(this.x - xy.x, this.y - xy.y);\n\t\t}\n\t}]);\n\n\treturn XY;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (XY);\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, process) {/*\n\tThis is rot.js, the ROguelike Toolkit in JavaScript.\n\tVersion 0.6~dev, generated on Mon Nov 30 10:34:42 CET 2015.\n*/\n/**\n * Add objects for Node.js environment\n */\nglobal.requestAnimationFrame = function(cb) {\n\treturn setTimeout(cb, 1000/60);\n};\n\nglobal.document = {\n\tbody: {\n\t\tappendChild: function(child) {},\n\t\tscrollLeft: 0,\n\t\tscrollTop: 0\n\t},\n\tcreateElement: function(type) {\n\t\tvar canvas;\n\t\treturn canvas = {\n\t\t\tgetBoundingClientRect: function() {\n\t\t\t\tvar rect;\n\t\t\t\treturn rect = {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\ttop: 0\n\t\t\t\t};\n\t\t\t},\n\t\t\tgetContext: function(type) {\n\t\t\t\tvar context;\n\t\t\t\treturn context = {\n\t\t\t\t\t_termcolor: null,\n\t\t\t\t\tbeginPath: function() {},\n\t\t\t\t\tcanvas: canvas,\n\t\t\t\t\tclearRect: function(x, y, w, h) {\n\t\t\t\t\t\tif(this._termcolor !== null) {\n\t\t\t\t\t\t\tvar clearCmd = this._termcolor.clearToAnsi(this.fillStyle);\n\t\t\t\t\t\t\tprocess.stdout.write(clearCmd);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tdrawImage: function(a, b, c, d, e, f, g, h, i) {},\n\t\t\t\t\tfill: function() {},\n\t\t\t\t\tfillRect: function(x, y, w, h) {\n\t\t\t\t\t\tif(this._termcolor !== null) {\n\t\t\t\t\t\t\tvar clearCmd = this._termcolor.clearToAnsi(this.fillStyle);\n\t\t\t\t\t\t\tprocess.stdout.write(clearCmd);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfillStyle: \"#000\",\n\t\t\t\t\tfillText: function(chs, x, y) {},\n\t\t\t\t\tfont: \"monospace\",\n\t\t\t\t\tlineTo: function(x, y) {},\n\t\t\t\t\tmeasureText: function(ch) {\n\t\t\t\t\t\tvar result;\n\t\t\t\t\t\treturn result = {\n\t\t\t\t\t\t\twidth: 12\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\tmoveTo: function(x, y) {},\n\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\ttextBaseline: \"middle\"\n\t\t\t\t};\n\t\t\t},\n\t\t\theight: 0,\n\t\t\tstyle: {\n\t\t\t\tleft: \"100px\",\n\t\t\t\tposition: \"absolute\",\n\t\t\t\ttop: \"100px\",\n\t\t\t\tvisibility: \"hidden\"\n\t\t\t},\n\t\t\twidth: 0\n\t\t};\n\t},\n\tdocumentElement: {\n\t\tscrollLeft: 0,\n\t\tscrollTop: 0\n\t}\n};\n/**\n * @namespace Top-level ROT namespace\n */\nvar ROT = {\n\t/**\n\t * @returns {bool} Is rot.js supported by this browser?\n\t */\n\tisSupported: function() {\n\t\treturn !!(document.createElement(\"canvas\").getContext && Function.prototype.bind);\n\t},\n\n\t/** Default with for display and map generators */\n\tDEFAULT_WIDTH: 80,\n\t/** Default height for display and map generators */\n\tDEFAULT_HEIGHT: 25,\n\n\t/** Directional constants. Ordering is important! */\n\tDIRS: {\n\t\t\"4\": [\n\t\t\t[ 0, -1],\n\t\t\t[ 1,  0],\n\t\t\t[ 0,  1],\n\t\t\t[-1,  0]\n\t\t],\n\t\t\"8\": [\n\t\t\t[ 0, -1],\n\t\t\t[ 1, -1],\n\t\t\t[ 1,  0],\n\t\t\t[ 1,  1],\n\t\t\t[ 0,  1],\n\t\t\t[-1,  1],\n\t\t\t[-1,  0],\n\t\t\t[-1, -1]\n\t\t],\n\t\t\"6\": [\n\t\t\t[-1, -1],\n\t\t\t[ 1, -1],\n\t\t\t[ 2,  0],\n\t\t\t[ 1,  1],\n\t\t\t[-1,  1],\n\t\t\t[-2,  0]\n\t\t]\n\t},\n\n\t/** Cancel key. */\n\tVK_CANCEL: 3, \n\t/** Help key. */\n\tVK_HELP: 6, \n\t/** Backspace key. */\n\tVK_BACK_SPACE: 8, \n\t/** Tab key. */\n\tVK_TAB: 9, \n\t/** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n\tVK_CLEAR: 12, \n\t/** Return/enter key on the main keyboard. */\n\tVK_RETURN: 13, \n\t/** Reserved, but not used. */\n\tVK_ENTER: 14, \n\t/** Shift key. */\n\tVK_SHIFT: 16, \n\t/** Control key. */\n\tVK_CONTROL: 17, \n\t/** Alt (Option on Mac) key. */\n\tVK_ALT: 18, \n\t/** Pause key. */\n\tVK_PAUSE: 19, \n\t/** Caps lock. */\n\tVK_CAPS_LOCK: 20, \n\t/** Escape key. */\n\tVK_ESCAPE: 27, \n\t/** Space bar. */\n\tVK_SPACE: 32, \n\t/** Page Up key. */\n\tVK_PAGE_UP: 33, \n\t/** Page Down key. */\n\tVK_PAGE_DOWN: 34, \n\t/** End key. */\n\tVK_END: 35, \n\t/** Home key. */\n\tVK_HOME: 36, \n\t/** Left arrow. */\n\tVK_LEFT: 37, \n\t/** Up arrow. */\n\tVK_UP: 38, \n\t/** Right arrow. */\n\tVK_RIGHT: 39, \n\t/** Down arrow. */\n\tVK_DOWN: 40, \n\t/** Print Screen key. */\n\tVK_PRINTSCREEN: 44, \n\t/** Ins(ert) key. */\n\tVK_INSERT: 45, \n\t/** Del(ete) key. */\n\tVK_DELETE: 46, \n\t/***/\n\tVK_0: 48,\n\t/***/\n\tVK_1: 49,\n\t/***/\n\tVK_2: 50,\n\t/***/\n\tVK_3: 51,\n\t/***/\n\tVK_4: 52,\n\t/***/\n\tVK_5: 53,\n\t/***/\n\tVK_6: 54,\n\t/***/\n\tVK_7: 55,\n\t/***/\n\tVK_8: 56,\n\t/***/\n\tVK_9: 57,\n\t/** Colon (:) key. Requires Gecko 15.0 */\n\tVK_COLON: 58, \n\t/** Semicolon (;) key. */\n\tVK_SEMICOLON: 59, \n\t/** Less-than (<) key. Requires Gecko 15.0 */\n\tVK_LESS_THAN: 60, \n\t/** Equals (=) key. */\n\tVK_EQUALS: 61, \n\t/** Greater-than (>) key. Requires Gecko 15.0 */\n\tVK_GREATER_THAN: 62, \n\t/** Question mark (?) key. Requires Gecko 15.0 */\n\tVK_QUESTION_MARK: 63, \n\t/** Atmark (@) key. Requires Gecko 15.0 */\n\tVK_AT: 64, \n\t/***/\n\tVK_A: 65,\n\t/***/\n\tVK_B: 66,\n\t/***/\n\tVK_C: 67,\n\t/***/\n\tVK_D: 68,\n\t/***/\n\tVK_E: 69,\n\t/***/\n\tVK_F: 70,\n\t/***/\n\tVK_G: 71,\n\t/***/\n\tVK_H: 72,\n\t/***/\n\tVK_I: 73,\n\t/***/\n\tVK_J: 74,\n\t/***/\n\tVK_K: 75,\n\t/***/\n\tVK_L: 76,\n\t/***/\n\tVK_M: 77,\n\t/***/\n\tVK_N: 78,\n\t/***/\n\tVK_O: 79,\n\t/***/\n\tVK_P: 80,\n\t/***/\n\tVK_Q: 81,\n\t/***/\n\tVK_R: 82,\n\t/***/\n\tVK_S: 83,\n\t/***/\n\tVK_T: 84,\n\t/***/\n\tVK_U: 85,\n\t/***/\n\tVK_V: 86,\n\t/***/\n\tVK_W: 87,\n\t/***/\n\tVK_X: 88,\n\t/***/\n\tVK_Y: 89,\n\t/***/\n\tVK_Z: 90,\n\t/***/\n\tVK_CONTEXT_MENU: 93,\n\t/** 0 on the numeric keypad. */\n\tVK_NUMPAD0: 96, \n\t/** 1 on the numeric keypad. */\n\tVK_NUMPAD1: 97, \n\t/** 2 on the numeric keypad. */\n\tVK_NUMPAD2: 98, \n\t/** 3 on the numeric keypad. */\n\tVK_NUMPAD3: 99, \n\t/** 4 on the numeric keypad. */\n\tVK_NUMPAD4: 100, \n\t/** 5 on the numeric keypad. */\n\tVK_NUMPAD5: 101, \n\t/** 6 on the numeric keypad. */\n\tVK_NUMPAD6: 102, \n\t/** 7 on the numeric keypad. */\n\tVK_NUMPAD7: 103, \n\t/** 8 on the numeric keypad. */\n\tVK_NUMPAD8: 104, \n\t/** 9 on the numeric keypad. */\n\tVK_NUMPAD9: 105, \n\t/** * on the numeric keypad. */\n\tVK_MULTIPLY: 106,\n\t/** + on the numeric keypad. */\n\tVK_ADD: 107, \n\t/***/\n\tVK_SEPARATOR: 108,\n\t/** - on the numeric keypad. */\n\tVK_SUBTRACT: 109, \n\t/** Decimal point on the numeric keypad. */\n\tVK_DECIMAL: 110, \n\t/** / on the numeric keypad. */\n\tVK_DIVIDE: 111, \n\t/** F1 key. */\n\tVK_F1: 112, \n\t/** F2 key. */\n\tVK_F2: 113, \n\t/** F3 key. */\n\tVK_F3: 114, \n\t/** F4 key. */\n\tVK_F4: 115, \n\t/** F5 key. */\n\tVK_F5: 116, \n\t/** F6 key. */\n\tVK_F6: 117, \n\t/** F7 key. */\n\tVK_F7: 118, \n\t/** F8 key. */\n\tVK_F8: 119, \n\t/** F9 key. */\n\tVK_F9: 120, \n\t/** F10 key. */\n\tVK_F10: 121, \n\t/** F11 key. */\n\tVK_F11: 122, \n\t/** F12 key. */\n\tVK_F12: 123, \n\t/** F13 key. */\n\tVK_F13: 124, \n\t/** F14 key. */\n\tVK_F14: 125, \n\t/** F15 key. */\n\tVK_F15: 126, \n\t/** F16 key. */\n\tVK_F16: 127, \n\t/** F17 key. */\n\tVK_F17: 128, \n\t/** F18 key. */\n\tVK_F18: 129, \n\t/** F19 key. */\n\tVK_F19: 130, \n\t/** F20 key. */\n\tVK_F20: 131, \n\t/** F21 key. */\n\tVK_F21: 132, \n\t/** F22 key. */\n\tVK_F22: 133, \n\t/** F23 key. */\n\tVK_F23: 134, \n\t/** F24 key. */\n\tVK_F24: 135, \n\t/** Num Lock key. */\n\tVK_NUM_LOCK: 144, \n\t/** Scroll Lock key. */\n\tVK_SCROLL_LOCK: 145, \n\t/** Circumflex (^) key. Requires Gecko 15.0 */\n\tVK_CIRCUMFLEX: 160, \n\t/** Exclamation (!) key. Requires Gecko 15.0 */\n\tVK_EXCLAMATION: 161, \n\t/** Double quote () key. Requires Gecko 15.0 */\n\tVK_DOUBLE_QUOTE: 162, \n\t/** Hash (#) key. Requires Gecko 15.0 */\n\tVK_HASH: 163, \n\t/** Dollar sign ($) key. Requires Gecko 15.0 */\n\tVK_DOLLAR: 164, \n\t/** Percent (%) key. Requires Gecko 15.0 */\n\tVK_PERCENT: 165, \n\t/** Ampersand (&) key. Requires Gecko 15.0 */\n\tVK_AMPERSAND: 166, \n\t/** Underscore (_) key. Requires Gecko 15.0 */\n\tVK_UNDERSCORE: 167, \n\t/** Open parenthesis (() key. Requires Gecko 15.0 */\n\tVK_OPEN_PAREN: 168, \n\t/** Close parenthesis ()) key. Requires Gecko 15.0 */\n\tVK_CLOSE_PAREN: 169, \n\t/* Asterisk (*) key. Requires Gecko 15.0 */\n\tVK_ASTERISK: 170,\n\t/** Plus (+) key. Requires Gecko 15.0 */\n\tVK_PLUS: 171, \n\t/** Pipe (|) key. Requires Gecko 15.0 */\n\tVK_PIPE: 172, \n\t/** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n\tVK_HYPHEN_MINUS: 173, \n\t/** Open curly bracket ({) key. Requires Gecko 15.0 */\n\tVK_OPEN_CURLY_BRACKET: 174, \n\t/** Close curly bracket (}) key. Requires Gecko 15.0 */\n\tVK_CLOSE_CURLY_BRACKET: 175, \n\t/** Tilde (~) key. Requires Gecko 15.0 */\n\tVK_TILDE: 176, \n\t/** Comma (,) key. */\n\tVK_COMMA: 188, \n\t/** Period (.) key. */\n\tVK_PERIOD: 190, \n\t/** Slash (/) key. */\n\tVK_SLASH: 191, \n\t/** Back tick (`) key. */\n\tVK_BACK_QUOTE: 192, \n\t/** Open square bracket ([) key. */\n\tVK_OPEN_BRACKET: 219, \n\t/** Back slash (\\) key. */\n\tVK_BACK_SLASH: 220, \n\t/** Close square bracket (]) key. */\n\tVK_CLOSE_BRACKET: 221, \n\t/** Quote (''') key. */\n\tVK_QUOTE: 222, \n\t/** Meta key on Linux, Command key on Mac. */\n\tVK_META: 224, \n\t/** AltGr key on Linux. Requires Gecko 15.0 */\n\tVK_ALTGR: 225, \n\t/** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n\tVK_WIN: 91, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_KANA: 21, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_HANGUL: 21, \n\t/** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n\tVK_EISU: 22, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_JUNJA: 23, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_FINAL: 24, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_HANJA: 25, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_KANJI: 25, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_CONVERT: 28, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_NONCONVERT: 29, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_ACCEPT: 30, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_MODECHANGE: 31, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_SELECT: 41, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_PRINT: 42, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_EXECUTE: 43, \n\t/** Linux support for this keycode was added in Gecko 4.0.\t */\n\tVK_SLEEP: 95 \n};\n/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nROT.Text = {\n\tRE_COLORS: /%([bc]){([^}]*)}/g,\n\n\t/* token types */\n\tTYPE_TEXT:\t\t0,\n\tTYPE_NEWLINE:\t1,\n\tTYPE_FG:\t\t2,\n\tTYPE_BG:\t\t3,\n\n\t/**\n\t * Measure size of a resulting text block\n\t */\n\tmeasure: function(str, maxWidth) {\n\t\tvar result = {width:0, height:1};\n\t\tvar tokens = this.tokenize(str, maxWidth);\n\t\tvar lineWidth = 0;\n\n\t\tfor (var i=0;i<tokens.length;i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tswitch (token.type) {\n\t\t\t\tcase this.TYPE_TEXT:\n\t\t\t\t\tlineWidth += token.value.length;\n\t\t\t\tbreak;\n\n\t\t\t\tcase this.TYPE_NEWLINE:\n\t\t\t\t\tresult.height++;\n\t\t\t\t\tresult.width = Math.max(result.width, lineWidth);\n\t\t\t\t\tlineWidth = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tresult.width = Math.max(result.width, lineWidth);\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * Convert string to a series of a formatting commands\n\t */\n\ttokenize: function(str, maxWidth) {\n\t\tvar result = [];\n\n\t\t/* first tokenization pass - split texts and color formatting commands */\n\t\tvar offset = 0;\n\t\tstr.replace(this.RE_COLORS, function(match, type, name, index) {\n\t\t\t/* string before */\n\t\t\tvar part = str.substring(offset, index);\n\t\t\tif (part.length) {\n\t\t\t\tresult.push({\n\t\t\t\t\ttype: ROT.Text.TYPE_TEXT,\n\t\t\t\t\tvalue: part\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/* color command */\n\t\t\tresult.push({\n\t\t\t\ttype: (type == \"c\" ? ROT.Text.TYPE_FG : ROT.Text.TYPE_BG),\n\t\t\t\tvalue: name.trim()\n\t\t\t});\n\n\t\t\toffset = index + match.length;\n\t\t\treturn \"\";\n\t\t});\n\n\t\t/* last remaining part */\n\t\tvar part = str.substring(offset);\n\t\tif (part.length) {\n\t\t\tresult.push({\n\t\t\t\ttype: ROT.Text.TYPE_TEXT,\n\t\t\t\tvalue: part\n\t\t\t});\n\t\t}\n\n\t\treturn this._breakLines(result, maxWidth);\n\t},\n\n\t/* insert line breaks into first-pass tokenized data */\n\t_breakLines: function(tokens, maxWidth) {\n\t\tif (!maxWidth) { maxWidth = Infinity; };\n\n\t\tvar i = 0;\n\t\tvar lineLength = 0;\n\t\tvar lastTokenWithSpace = -1;\n\n\t\twhile (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n\t\t\tvar token = tokens[i];\n\t\t\tif (token.type == ROT.Text.TYPE_NEWLINE) { /* reset */\n\t\t\t\tlineLength = 0; \n\t\t\t\tlastTokenWithSpace = -1;\n\t\t\t}\n\t\t\tif (token.type != ROT.Text.TYPE_TEXT) { /* skip non-text tokens */\n\t\t\t\ti++;\n\t\t\t\tcontinue; \n\t\t\t}\n\n\t\t\t/* remove spaces at the beginning of line */\n\t\t\twhile (lineLength == 0 && token.value.charAt(0) == \" \") { token.value = token.value.substring(1); }\n\n\t\t\t/* forced newline? insert two new tokens after this one */\n\t\t\tvar index = token.value.indexOf(\"\\n\");\n\t\t\tif (index != -1) { \n\t\t\t\ttoken.value = this._breakInsideToken(tokens, i, index, true); \n\n\t\t\t\t/* if there are spaces at the end, we must remove them (we do not want the line too long) */\n\t\t\t\tvar arr = token.value.split(\"\");\n\t\t\t\twhile (arr.length && arr[arr.length-1] == \" \") { arr.pop(); }\n\t\t\t\ttoken.value = arr.join(\"\");\n\t\t\t}\n\n\t\t\t/* token degenerated? */\n\t\t\tif (!token.value.length) {\n\t\t\t\ttokens.splice(i, 1);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n\n\t\t\t\t/* is it possible to break within this token? */\n\t\t\t\tvar index = -1;\n\t\t\t\twhile (1) {\n\t\t\t\t\tvar nextIndex = token.value.indexOf(\" \", index+1);\n\t\t\t\t\tif (nextIndex == -1) { break; }\n\t\t\t\t\tif (lineLength + nextIndex > maxWidth) { break; }\n\t\t\t\t\tindex = nextIndex;\n\t\t\t\t}\n\n\t\t\t\tif (index != -1) { /* break at space within this one */\n\t\t\t\t\ttoken.value = this._breakInsideToken(tokens, i, index, true);\n\t\t\t\t} else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n\t\t\t\t\tvar token = tokens[lastTokenWithSpace];\n\t\t\t\t\tvar breakIndex = token.value.lastIndexOf(\" \");\n\t\t\t\t\ttoken.value = this._breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n\t\t\t\t\ti = lastTokenWithSpace;\n\t\t\t\t} else { /* force break in this token */\n\t\t\t\t\ttoken.value = this._breakInsideToken(tokens, i, maxWidth-lineLength, false);\n\t\t\t\t}\n\n\t\t\t} else { /* line not long, continue */\n\t\t\t\tlineLength += token.value.length;\n\t\t\t\tif (token.value.indexOf(\" \") != -1) { lastTokenWithSpace = i; }\n\t\t\t}\n\t\t\t\n\t\t\ti++; /* advance to next token */\n\t\t}\n\n\n\t\ttokens.push({type: ROT.Text.TYPE_NEWLINE}); /* insert fake newline to fix the last text line */\n\n\t\t/* remove trailing space from text tokens before newlines */\n\t\tvar lastTextToken = null;\n\t\tfor (var i=0;i<tokens.length;i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tswitch (token.type) {\n\t\t\t\tcase ROT.Text.TYPE_TEXT: lastTextToken = token; break;\n\t\t\t\tcase ROT.Text.TYPE_NEWLINE: \n\t\t\t\t\tif (lastTextToken) { /* remove trailing space */\n\t\t\t\t\t\tvar arr = lastTextToken.value.split(\"\");\n\t\t\t\t\t\twhile (arr.length && arr[arr.length-1] == \" \") { arr.pop(); }\n\t\t\t\t\t\tlastTextToken.value = arr.join(\"\");\n\t\t\t\t\t}\n\t\t\t\t\tlastTextToken = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\ttokens.pop(); /* remove fake token */\n\n\t\treturn tokens;\n\t},\n\n\t/**\n\t * Create new tokens and insert them into the stream\n\t * @param {object[]} tokens\n\t * @param {int} tokenIndex Token being processed\n\t * @param {int} breakIndex Index within current token's value\n\t * @param {bool} removeBreakChar Do we want to remove the breaking character?\n\t * @returns {string} remaining unbroken token value\n\t */\n\t_breakInsideToken: function(tokens, tokenIndex, breakIndex, removeBreakChar) {\n\t\tvar newBreakToken = {\n\t\t\ttype: ROT.Text.TYPE_NEWLINE\n\t\t}\n\t\tvar newTextToken = {\n\t\t\ttype: ROT.Text.TYPE_TEXT,\n\t\t\tvalue: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n\t\t}\n\t\ttokens.splice(tokenIndex+1, 0, newBreakToken, newTextToken);\n\t\treturn tokens[tokenIndex].value.substring(0, breakIndex);\n\t}\n}\n/**\n * @returns {any} Randomly picked item, null when length=0\n */\nArray.prototype.random = Array.prototype.random || function() {\n\tif (!this.length) { return null; }\n\treturn this[Math.floor(ROT.RNG.getUniform() * this.length)];\n}\n\n/**\n * @returns {array} New array with randomized items\n * FIXME destroys this!\n */\nArray.prototype.randomize = Array.prototype.randomize || function() {\n\tvar result = [];\n\twhile (this.length) {\n\t\tvar index = this.indexOf(this.random());\n\t\tresult.push(this.splice(index, 1)[0]);\n\t}\n\treturn result;\n}\n/**\n * Always positive modulus\n * @param {int} n Modulus\n * @returns {int} this modulo n\n */\nNumber.prototype.mod = Number.prototype.mod || function(n) {\n\treturn ((this%n)+n)%n;\n}\n/**\n * @returns {string} First letter capitalized\n */\nString.prototype.capitalize = String.prototype.capitalize || function() {\n\treturn this.charAt(0).toUpperCase() + this.substring(1);\n}\n\n/** \n * Left pad\n * @param {string} [character=\"0\"]\n * @param {int} [count=2]\n */\nString.prototype.lpad = String.prototype.lpad || function(character, count) {\n\tvar ch = character || \"0\";\n\tvar cnt = count || 2;\n\n\tvar s = \"\";\n\twhile (s.length < (cnt - this.length)) { s += ch; }\n\ts = s.substring(0, cnt-this.length);\n\treturn s+this;\n}\n\n/** \n * Right pad\n * @param {string} [character=\"0\"]\n * @param {int} [count=2]\n */\nString.prototype.rpad = String.prototype.rpad || function(character, count) {\n\tvar ch = character || \"0\";\n\tvar cnt = count || 2;\n\n\tvar s = \"\";\n\twhile (s.length < (cnt - this.length)) { s += ch; }\n\ts = s.substring(0, cnt-this.length);\n\treturn this+s;\n}\n\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nString.format = String.format || function(template) {\n\tvar map = String.format.map;\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\n\tvar replacer = function(match, group1, group2, index) {\n\t\tif (template.charAt(index-1) == \"%\") { return match.substring(1); }\n\t\tif (!args.length) { return match; }\n\t\tvar obj = args[0];\n\n\t\tvar group = group1 || group2;\n\t\tvar parts = group.split(\",\");\n\t\tvar name = parts.shift();\n\t\tvar method = map[name.toLowerCase()];\n\t\tif (!method) { return match; }\n\n\t\tvar obj = args.shift();\n\t\tvar replaced = obj[method].apply(obj, parts);\n\n\t\tvar first = name.charAt(0);\n\t\tif (first != first.toLowerCase()) { replaced = replaced.capitalize(); }\n\n\t\treturn replaced;\n\t}\n\treturn template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\n\nString.format.map = String.format.map || {\n\t\"s\": \"toString\"\n}\n\n/**\n * Convenience shortcut to String.format(this)\n */\nString.prototype.format = String.prototype.format || function() {\n\tvar args = Array.prototype.slice.call(arguments);\n\targs.unshift(this);\n\treturn String.format.apply(String, args);\n}\n\nif (!Object.create) {  \n\t/**\n\t * ES5 Object.create\n\t */\n\tObject.create = function(o) {  \n\t\tvar tmp = function() {};\n\t\ttmp.prototype = o;\n\t\treturn new tmp();\n\t};  \n}  \n/**\n * Sets prototype of this function to an instance of parent function\n * @param {function} parent\n */\nFunction.prototype.extend = Function.prototype.extend || function(parent) {\n\tthis.prototype = Object.create(parent.prototype);\n\tthis.prototype.constructor = this;\n\treturn this;\n}\nif (typeof window != \"undefined\") {\n\twindow.requestAnimationFrame =\n\t\twindow.requestAnimationFrame\n\t\t|| window.mozRequestAnimationFrame\n\t\t|| window.webkitRequestAnimationFrame\n\t\t|| window.oRequestAnimationFrame\n\t\t|| window.msRequestAnimationFrame\n\t\t|| function(cb) { return setTimeout(cb, 1000/60); };\n\n\twindow.cancelAnimationFrame =\n\t\twindow.cancelAnimationFrame\n\t\t|| window.mozCancelAnimationFrame\n\t\t|| window.webkitCancelAnimationFrame\n\t\t|| window.oCancelAnimationFrame\n\t\t|| window.msCancelAnimationFrame\n\t\t|| function(id) { return clearTimeout(id); };\n}\n/**\n * @class Visual map display\n * @param {object} [options]\n * @param {int} [options.width=ROT.DEFAULT_WIDTH]\n * @param {int} [options.height=ROT.DEFAULT_HEIGHT]\n * @param {int} [options.fontSize=15]\n * @param {string} [options.fontFamily=\"monospace\"]\n * @param {string} [options.fontStyle=\"\"] bold/italic/none/both\n * @param {string} [options.fg=\"#ccc\"]\n * @param {string} [options.bg=\"#000\"]\n * @param {float} [options.spacing=1]\n * @param {float} [options.border=0]\n * @param {string} [options.layout=\"rect\"]\n * @param {bool} [options.forceSquareRatio=false]\n * @param {int} [options.tileWidth=32]\n * @param {int} [options.tileHeight=32]\n * @param {object} [options.tileMap={}]\n * @param {image} [options.tileSet=null]\n * @param {image} [options.tileColorize=false]\n */\nROT.Display = function(options) {\n\tvar canvas = document.createElement(\"canvas\");\n\tthis._context = canvas.getContext(\"2d\");\n\tthis._data = {};\n\tthis._dirty = false; /* false = nothing, true = all, object = dirty cells */\n\tthis._options = {};\n\tthis._backend = null;\n\t\n\tvar defaultOptions = {\n\t\twidth: ROT.DEFAULT_WIDTH,\n\t\theight: ROT.DEFAULT_HEIGHT,\n\t\ttranspose: false,\n\t\tlayout: \"rect\",\n\t\tfontSize: 15,\n\t\tspacing: 1,\n\t\tborder: 0,\n\t\tforceSquareRatio: false,\n\t\tfontFamily: \"monospace\",\n\t\tfontStyle: \"\",\n\t\tfg: \"#ccc\",\n\t\tbg: \"#000\",\n\t\ttileWidth: 32,\n\t\ttileHeight: 32,\n\t\ttileMap: {},\n\t\ttileSet: null,\n\t\ttileColorize: false,\n\t\ttermColor: \"xterm\"\n\t};\n\tfor (var p in options) { defaultOptions[p] = options[p]; }\n\tthis.setOptions(defaultOptions);\n\tthis.DEBUG = this.DEBUG.bind(this);\n\n\tthis._tick = this._tick.bind(this);\n\trequestAnimationFrame(this._tick);\n}\n\n/**\n * Debug helper, ideal as a map generator callback. Always bound to this.\n * @param {int} x\n * @param {int} y\n * @param {int} what\n */\nROT.Display.prototype.DEBUG = function(x, y, what) {\n\tvar colors = [this._options.bg, this._options.fg];\n\tthis.draw(x, y, null, null, colors[what % colors.length]);\n}\n\n/**\n * Clear the whole display (cover it with background color)\n */\nROT.Display.prototype.clear = function() {\n\tthis._data = {};\n\tthis._dirty = true;\n}\n\n/**\n * @see ROT.Display\n */\nROT.Display.prototype.setOptions = function(options) {\n\tfor (var p in options) { this._options[p] = options[p]; }\n\tif (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n\t\tif (options.layout) { \n\t\t\tthis._backend = new ROT.Display[options.layout.capitalize()](this._context);\n\t\t}\n\n\t\tvar font = (this._options.fontStyle ? this._options.fontStyle + \" \" : \"\") + this._options.fontSize + \"px \" + this._options.fontFamily;\n\t\tthis._context.font = font;\n\t\tthis._backend.compute(this._options);\n\t\tthis._context.font = font;\n\t\tthis._context.textAlign = \"center\";\n\t\tthis._context.textBaseline = \"middle\";\n\t\tthis._dirty = true;\n\t}\n\treturn this;\n}\n\n/**\n * Returns currently set options\n * @returns {object} Current options object \n */\nROT.Display.prototype.getOptions = function() {\n\treturn this._options;\n}\n\n/**\n * Returns the DOM node of this display\n * @returns {node} DOM node\n */\nROT.Display.prototype.getContainer = function() {\n\treturn this._context.canvas;\n}\n\n/**\n * Compute the maximum width/height to fit into a set of given constraints\n * @param {int} availWidth Maximum allowed pixel width\n * @param {int} availHeight Maximum allowed pixel height\n * @returns {int[2]} cellWidth,cellHeight\n */\nROT.Display.prototype.computeSize = function(availWidth, availHeight) {\n\treturn this._backend.computeSize(availWidth, availHeight, this._options);\n}\n\n/**\n * Compute the maximum font size to fit into a set of given constraints\n * @param {int} availWidth Maximum allowed pixel width\n * @param {int} availHeight Maximum allowed pixel height\n * @returns {int} fontSize\n */\nROT.Display.prototype.computeFontSize = function(availWidth, availHeight) {\n\treturn this._backend.computeFontSize(availWidth, availHeight, this._options);\n}\n\n/**\n * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n * @param {Event} e event\n * @returns {int[2]} -1 for values outside of the canvas\n */\nROT.Display.prototype.eventToPosition = function(e) {\n\tif (e.touches) {\n\t\tvar x = e.touches[0].clientX;\n\t\tvar y = e.touches[0].clientY;\n\t} else {\n\t\tvar x = e.clientX;\n\t\tvar y = e.clientY;\n\t}\n\n\tvar rect = this._context.canvas.getBoundingClientRect();\n\tx -= rect.left;\n\ty -= rect.top;\n\t\n\tif (x < 0 || y < 0 || x >= this._context.canvas.width || y >= this._context.canvas.height) { return [-1, -1]; }\n\n\treturn this._backend.eventToPosition(x, y);\n}\n\n/**\n * @param {int} x\n * @param {int} y\n * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n * @param {string} [fg] foreground color\n * @param {string} [bg] background color\n */\nROT.Display.prototype.draw = function(x, y, ch, fg, bg) {\n\tif (!fg) { fg = this._options.fg; }\n\tif (!bg) { bg = this._options.bg; }\n\tthis._data[x+\",\"+y] = [x, y, ch, fg, bg];\n\t\n\tif (this._dirty === true) { return; } /* will already redraw everything */\n\tif (!this._dirty) { this._dirty = {}; } /* first! */\n\tthis._dirty[x+\",\"+y] = true;\n}\n\n/**\n * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n * @param {int} x\n * @param {int} y\n * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n * @param {int} [maxWidth] wrap at what width?\n * @returns {int} lines drawn\n */\nROT.Display.prototype.drawText = function(x, y, text, maxWidth) {\n\tvar fg = null;\n\tvar bg = null;\n\tvar cx = x;\n\tvar cy = y;\n\tvar lines = 1;\n\tif (!maxWidth) { maxWidth = this._options.width-x; }\n\n\tvar tokens = ROT.Text.tokenize(text, maxWidth);\n\n\twhile (tokens.length) { /* interpret tokenized opcode stream */\n\t\tvar token = tokens.shift();\n\t\tswitch (token.type) {\n\t\t\tcase ROT.Text.TYPE_TEXT:\n\t\t\t\tvar isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n\t\t\t\tfor (var i=0;i<token.value.length;i++) {\n\t\t\t\t\tvar cc = token.value.charCodeAt(i);\n\t\t\t\t\tvar c = token.value.charAt(i);\n\t\t\t\t\t// Assign to `true` when the current char is full-width.\n\t\t\t\t\tisFullWidth = (cc > 0xff && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) && cc > 0xffee;\n\t\t\t\t\t// Current char is space, whatever full-width or half-width both are OK.\n\t\t\t\t\tisSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n\t\t\t\t\t// The previous char is full-width and\n\t\t\t\t\t// current char is nether half-width nor a space.\n\t\t\t\t\tif (isPrevFullWidth && !isFullWidth && !isSpace) { cx++; } // add an extra position\n\t\t\t\t\t// The current char is full-width and\n\t\t\t\t\t// the previous char is not a space.\n\t\t\t\t\tif(isFullWidth && !isPrevSpace) { cx++; } // add an extra position\n\t\t\t\t\tthis.draw(cx++, cy, c, fg, bg);\n\t\t\t\t\tisPrevSpace = isSpace;\n\t\t\t\t\tisPrevFullWidth = isFullWidth;\n\t\t\t\t}\n\t\t\tbreak;\n\n\t\t\tcase ROT.Text.TYPE_FG:\n\t\t\t\tfg = token.value || null;\n\t\t\tbreak;\n\n\t\t\tcase ROT.Text.TYPE_BG:\n\t\t\t\tbg = token.value || null;\n\t\t\tbreak;\n\n\t\t\tcase ROT.Text.TYPE_NEWLINE:\n\t\t\t\tcx = x;\n\t\t\t\tcy++;\n\t\t\t\tlines++\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn lines;\n}\n\n/**\n * Timer tick: update dirty parts\n */\nROT.Display.prototype._tick = function() {\n\trequestAnimationFrame(this._tick);\n\n\tif (!this._dirty) { return; }\n\n\tif (this._dirty === true) { /* draw all */\n\t\tthis._context.fillStyle = this._options.bg;\n\t\tthis._context.fillRect(0, 0, this._context.canvas.width, this._context.canvas.height);\n\n\t\tfor (var id in this._data) { /* redraw cached data */\n\t\t\tthis._draw(id, false);\n\t\t}\n\n\t} else { /* draw only dirty */\n\t\tfor (var key in this._dirty) {\n\t\t\tthis._draw(key, true);\n\t\t}\n\t}\n\n\tthis._dirty = false;\n}\n\n/**\n * @param {string} key What to draw\n * @param {bool} clearBefore Is it necessary to clean before?\n */\nROT.Display.prototype._draw = function(key, clearBefore) {\n\tvar data = this._data[key];\n\tif (data[4] != this._options.bg) { clearBefore = true; }\n\n\tthis._backend.draw(data, clearBefore);\n}\n/**\n * @class Abstract display backend module\n * @private\n */\nROT.Display.Backend = function(context) {\n\tthis._context = context;\n}\n\nROT.Display.Backend.prototype.compute = function(options) {\n}\n\nROT.Display.Backend.prototype.draw = function(data, clearBefore) {\n}\n\nROT.Display.Backend.prototype.computeSize = function(availWidth, availHeight) {\n}\n\nROT.Display.Backend.prototype.computeFontSize = function(availWidth, availHeight) {\n}\n\nROT.Display.Backend.prototype.eventToPosition = function(x, y) {\n}\n/**\n * @class Rectangular backend\n * @private\n */\nROT.Display.Rect = function(context) {\n\tROT.Display.Backend.call(this, context);\n\t\n\tthis._spacingX = 0;\n\tthis._spacingY = 0;\n\tthis._canvasCache = {};\n\tthis._options = {};\n}\nROT.Display.Rect.extend(ROT.Display.Backend);\n\nROT.Display.Rect.cache = false;\n\nROT.Display.Rect.prototype.compute = function(options) {\n\tthis._canvasCache = {};\n\tthis._options = options;\n\n\tvar charWidth = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._spacingX = Math.ceil(options.spacing * charWidth);\n\tthis._spacingY = Math.ceil(options.spacing * options.fontSize);\n\n\tif (this._options.forceSquareRatio) {\n\t\tthis._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n\t}\n\n\tthis._context.canvas.width = options.width * this._spacingX;\n\tthis._context.canvas.height = options.height * this._spacingY;\n}\n\nROT.Display.Rect.prototype.draw = function(data, clearBefore) {\n\tif (this.constructor.cache) {\n\t\tthis._drawWithCache(data, clearBefore);\n\t} else {\n\t\tthis._drawNoCache(data, clearBefore);\n\t}\n}\n\nROT.Display.Rect.prototype._drawWithCache = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tvar hash = \"\"+ch+fg+bg;\n\tif (hash in this._canvasCache) {\n\t\tvar canvas = this._canvasCache[hash];\n\t} else {\n\t\tvar b = this._options.border;\n\t\tvar canvas = document.createElement(\"canvas\");\n\t\tvar ctx = canvas.getContext(\"2d\");\n\t\tcanvas.width = this._spacingX;\n\t\tcanvas.height = this._spacingY;\n\t\tctx.fillStyle = bg;\n\t\tctx.fillRect(b, b, canvas.width-b, canvas.height-b);\n\t\t\n\t\tif (ch) {\n\t\t\tctx.fillStyle = fg;\n\t\t\tctx.font = this._context.font;\n\t\t\tctx.textAlign = \"center\";\n\t\t\tctx.textBaseline = \"middle\";\n\n\t\t\tvar chars = [].concat(ch);\n\t\t\tfor (var i=0;i<chars.length;i++) {\n\t\t\t\tctx.fillText(chars[i], this._spacingX/2, Math.ceil(this._spacingY/2));\n\t\t\t}\n\t\t}\n\t\tthis._canvasCache[hash] = canvas;\n\t}\n\t\n\tthis._context.drawImage(canvas, x*this._spacingX, y*this._spacingY);\n}\n\nROT.Display.Rect.prototype._drawNoCache = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tif (clearBefore) { \n\t\tvar b = this._options.border;\n\t\tthis._context.fillStyle = bg;\n\t\tthis._context.fillRect(x*this._spacingX + b, y*this._spacingY + b, this._spacingX - b, this._spacingY - b);\n\t}\n\t\n\tif (!ch) { return; }\n\n\tthis._context.fillStyle = fg;\n\n\tvar chars = [].concat(ch);\n\tfor (var i=0;i<chars.length;i++) {\n\t\tthis._context.fillText(chars[i], (x+0.5) * this._spacingX, Math.ceil((y+0.5) * this._spacingY));\n\t}\n}\n\nROT.Display.Rect.prototype.computeSize = function(availWidth, availHeight) {\n\tvar width = Math.floor(availWidth / this._spacingX);\n\tvar height = Math.floor(availHeight / this._spacingY);\n\treturn [width, height];\n}\n\nROT.Display.Rect.prototype.computeFontSize = function(availWidth, availHeight) {\n\tvar boxWidth = Math.floor(availWidth / this._options.width);\n\tvar boxHeight = Math.floor(availHeight / this._options.height);\n\n\t/* compute char ratio */\n\tvar oldFont = this._context.font;\n\tthis._context.font = \"100px \" + this._options.fontFamily;\n\tvar width = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._context.font = oldFont;\n\tvar ratio = width / 100;\n\t\t\n\tvar widthFraction = ratio * boxHeight / boxWidth;\n\tif (widthFraction > 1) { /* too wide with current aspect ratio */\n\t\tboxHeight = Math.floor(boxHeight / widthFraction);\n\t}\n\treturn Math.floor(boxHeight / this._options.spacing);\n}\n\nROT.Display.Rect.prototype.eventToPosition = function(x, y) {\n\treturn [Math.floor(x/this._spacingX), Math.floor(y/this._spacingY)];\n}\n/**\n * @class Hexagonal backend\n * @private\n */\nROT.Display.Hex = function(context) {\n\tROT.Display.Backend.call(this, context);\n\n\tthis._spacingX = 0;\n\tthis._spacingY = 0;\n\tthis._hexSize = 0;\n\tthis._options = {};\n}\nROT.Display.Hex.extend(ROT.Display.Backend);\n\nROT.Display.Hex.prototype.compute = function(options) {\n\tthis._options = options;\n\n\t/* FIXME char size computation does not respect transposed hexes */\n\tvar charWidth = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._hexSize = Math.floor(options.spacing * (options.fontSize + charWidth/Math.sqrt(3)) / 2);\n\tthis._spacingX = this._hexSize * Math.sqrt(3) / 2;\n\tthis._spacingY = this._hexSize * 1.5;\n\n\tif (options.transpose) {\n\t\tvar xprop = \"height\";\n\t\tvar yprop = \"width\";\n\t} else {\n\t\tvar xprop = \"width\";\n\t\tvar yprop = \"height\";\n\t}\n\tthis._context.canvas[xprop] = Math.ceil( (options.width + 1) * this._spacingX );\n\tthis._context.canvas[yprop] = Math.ceil( (options.height - 1) * this._spacingY + 2*this._hexSize );\n}\n\nROT.Display.Hex.prototype.draw = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tvar px = [\n\t\t(x+1) * this._spacingX,\n\t\ty * this._spacingY + this._hexSize\n\t];\n\tif (this._options.transpose) { px.reverse(); }\n\n\tif (clearBefore) { \n\t\tthis._context.fillStyle = bg;\n\t\tthis._fill(px[0], px[1]);\n\t}\n\t\n\tif (!ch) { return; }\n\n\tthis._context.fillStyle = fg;\n\n\tvar chars = [].concat(ch);\n\tfor (var i=0;i<chars.length;i++) {\n\t\tthis._context.fillText(chars[i], px[0], Math.ceil(px[1]));\n\t}\n}\n\nROT.Display.Hex.prototype.computeSize = function(availWidth, availHeight) {\n\tif (this._options.transpose) {\n\t\tavailWidth += availHeight;\n\t\tavailHeight = availWidth - availHeight;\n\t\tavailWidth -= availHeight;\n\t}\n\n\tvar width = Math.floor(availWidth / this._spacingX) - 1;\n\tvar height = Math.floor((availHeight - 2*this._hexSize) / this._spacingY + 1);\n\treturn [width, height];\n}\n\nROT.Display.Hex.prototype.computeFontSize = function(availWidth, availHeight) {\n\tif (this._options.transpose) {\n\t\tavailWidth += availHeight;\n\t\tavailHeight = availWidth - availHeight;\n\t\tavailWidth -= availHeight;\n\t}\n\n\tvar hexSizeWidth = 2*availWidth / ((this._options.width+1) * Math.sqrt(3)) - 1;\n\tvar hexSizeHeight = availHeight / (2 + 1.5*(this._options.height-1));\n\tvar hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n\n\t/* compute char ratio */\n\tvar oldFont = this._context.font;\n\tthis._context.font = \"100px \" + this._options.fontFamily;\n\tvar width = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._context.font = oldFont;\n\tvar ratio = width / 100;\n\n\thexSize = Math.floor(hexSize)+1; /* closest larger hexSize */\n\n\t/* FIXME char size computation does not respect transposed hexes */\n\tvar fontSize = 2*hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n\n\t/* closest smaller fontSize */\n\treturn Math.ceil(fontSize)-1;\n}\n\nROT.Display.Hex.prototype.eventToPosition = function(x, y) {\n\tif (this._options.transpose) {\n\t\tx += y;\n\t\ty = x-y;\n\t\tx -= y;\n\t\tvar prop = \"width\";\n\t} else {\n\t\tvar prop = \"height\";\n\t}\n\tvar size = this._context.canvas[prop] / this._options[prop];\n\ty = Math.floor(y/size);\n\n\tif (y.mod(2)) { /* odd row */\n\t\tx -= this._spacingX;\n\t\tx = 1 + 2*Math.floor(x/(2*this._spacingX));\n\t} else {\n\t\tx = 2*Math.floor(x/(2*this._spacingX));\n\t}\n\t\n\treturn [x, y];\n}\n\n/**\n * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n */\nROT.Display.Hex.prototype._fill = function(cx, cy) {\n\tvar a = this._hexSize;\n\tvar b = this._options.border;\n\t\n\tthis._context.beginPath();\n\n\tif (this._options.transpose) {\n\t\tthis._context.moveTo(cx-a+b,\tcy);\n\t\tthis._context.lineTo(cx-a/2+b,\tcy+this._spacingX-b);\n\t\tthis._context.lineTo(cx+a/2-b,\tcy+this._spacingX-b);\n\t\tthis._context.lineTo(cx+a-b,\tcy);\n\t\tthis._context.lineTo(cx+a/2-b,\tcy-this._spacingX+b);\n\t\tthis._context.lineTo(cx-a/2+b,\tcy-this._spacingX+b);\n\t\tthis._context.lineTo(cx-a+b,\tcy);\n\t} else {\n\t\tthis._context.moveTo(cx,\t\t\t\t\tcy-a+b);\n\t\tthis._context.lineTo(cx+this._spacingX-b,\tcy-a/2+b);\n\t\tthis._context.lineTo(cx+this._spacingX-b,\tcy+a/2-b);\n\t\tthis._context.lineTo(cx,\t\t\t\t\tcy+a-b);\n\t\tthis._context.lineTo(cx-this._spacingX+b,\tcy+a/2-b);\n\t\tthis._context.lineTo(cx-this._spacingX+b,\tcy-a/2+b);\n\t\tthis._context.lineTo(cx,\t\t\t\t\tcy-a+b);\n\t}\n\tthis._context.fill();\n}\n/**\n * @class Tile backend\n * @private\n */\nROT.Display.Tile = function(context) {\n\tROT.Display.Rect.call(this, context);\n\t\n\tthis._options = {};\n\tthis._colorCanvas = document.createElement(\"canvas\");\n}\nROT.Display.Tile.extend(ROT.Display.Rect);\n\nROT.Display.Tile.prototype.compute = function(options) {\n\tthis._options = options;\n\tthis._context.canvas.width = options.width * options.tileWidth;\n\tthis._context.canvas.height = options.height * options.tileHeight;\n\tthis._colorCanvas.width = options.tileWidth;\n\tthis._colorCanvas.height = options.tileHeight;\n}\n\nROT.Display.Tile.prototype.draw = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tvar tileWidth = this._options.tileWidth;\n\tvar tileHeight = this._options.tileHeight;\n\n\tif (clearBefore) {\n\t\tif (this._options.tileColorize) {\n\t\t\tthis._context.clearRect(x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n\t\t} else {\n\t\t\tthis._context.fillStyle = bg;\n\t\t\tthis._context.fillRect(x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n\t\t}\n\t}\n\n\tif (!ch) { return; }\n\n\tvar chars = [].concat(ch);\n\tfor (var i=0;i<chars.length;i++) {\n\t\tvar tile = this._options.tileMap[chars[i]];\n\t\tif (!tile) { throw new Error(\"Char '\" + chars[i] + \"' not found in tileMap\"); }\n\t\t\n\t\tif (this._options.tileColorize) { /* apply colorization */\n\t\t\tvar canvas = this._colorCanvas;\n\t\t\tvar context = canvas.getContext(\"2d\");\n\t\t\tcontext.clearRect(0, 0, tileWidth, tileHeight);\n\n\t\t\tcontext.drawImage(\n\t\t\t\tthis._options.tileSet,\n\t\t\t\ttile[0], tile[1], tileWidth, tileHeight,\n\t\t\t\t0, 0, tileWidth, tileHeight\n\t\t\t);\n\n\t\t\tif (fg != \"transparent\") {\n\t\t\t\tcontext.fillStyle = fg;\n\t\t\t\tcontext.globalCompositeOperation = \"source-atop\";\n\t\t\t\tcontext.fillRect(0, 0, tileWidth, tileHeight);\n\t\t\t}\n\n\t\t\tif (bg != \"transparent\") {\n\t\t\t\tcontext.fillStyle = bg;\n\t\t\t\tcontext.globalCompositeOperation = \"destination-over\";\n\t\t\t\tcontext.fillRect(0, 0, tileWidth, tileHeight);\n\t\t\t}\n\n\t\t\tthis._context.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n\n\t\t} else { /* no colorizing, easy */\n\t\t\tthis._context.drawImage(\n\t\t\t\tthis._options.tileSet,\n\t\t\t\ttile[0], tile[1], tileWidth, tileHeight,\n\t\t\t\tx*tileWidth, y*tileHeight, tileWidth, tileHeight\n\t\t\t);\n\t\t}\n\t}\n}\n\nROT.Display.Tile.prototype.computeSize = function(availWidth, availHeight) {\n\tvar width = Math.floor(availWidth / this._options.tileWidth);\n\tvar height = Math.floor(availHeight / this._options.tileHeight);\n\treturn [width, height];\n}\n\nROT.Display.Tile.prototype.computeFontSize = function(availWidth, availHeight) {\n\tvar width = Math.floor(availWidth / this._options.width);\n\tvar height = Math.floor(availHeight / this._options.height);\n\treturn [width, height];\n}\n\nROT.Display.Tile.prototype.eventToPosition = function(x, y) {\n\treturn [Math.floor(x/this._options.tileWidth), Math.floor(y/this._options.tileHeight)];\n}\n/**\n * @namespace\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nROT.RNG = {\n\t/**\n\t * @returns {number} \n\t */\n\tgetSeed: function() {\n\t\treturn this._seed;\n\t},\n\n\t/**\n\t * @param {number} seed Seed the number generator\n\t */\n\tsetSeed: function(seed) {\n\t\tseed = (seed < 1 ? 1/seed : seed);\n\n\t\tthis._seed = seed;\n\t\tthis._s0 = (seed >>> 0) * this._frac;\n\n\t\tseed = (seed*69069 + 1) >>> 0;\n\t\tthis._s1 = seed * this._frac;\n\n\t\tseed = (seed*69069 + 1) >>> 0;\n\t\tthis._s2 = seed * this._frac;\n\n\t\tthis._c = 1;\n\t\treturn this;\n\t},\n\n\t/**\n\t * @returns {float} Pseudorandom value [0,1), uniformly distributed\n\t */\n\tgetUniform: function() {\n\t\tvar t = 2091639 * this._s0 + this._c * this._frac;\n\t\tthis._s0 = this._s1;\n\t\tthis._s1 = this._s2;\n\t\tthis._c = t | 0;\n\t\tthis._s2 = t - this._c;\n\t\treturn this._s2;\n\t},\n\n\t/**\n\t * @param {int} lowerBound The lower end of the range to return a value from, inclusive\n\t * @param {int} upperBound The upper end of the range to return a value from, inclusive\n\t * @returns {int} Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n\t */\n\tgetUniformInt: function(lowerBound, upperBound) {\n\t\tvar max = Math.max(lowerBound, upperBound);\n\t\tvar min = Math.min(lowerBound, upperBound);\n\t\treturn Math.floor(this.getUniform() * (max - min + 1)) + min;\n\t},\n\n\t/**\n\t * @param {float} [mean=0] Mean value\n\t * @param {float} [stddev=1] Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n\t * @returns {float} A normally distributed pseudorandom value\n\t */\n\tgetNormal: function(mean, stddev) {\n\t\tdo {\n\t\t\tvar u = 2*this.getUniform()-1;\n\t\t\tvar v = 2*this.getUniform()-1;\n\t\t\tvar r = u*u + v*v;\n\t\t} while (r > 1 || r == 0);\n\n\t\tvar gauss = u * Math.sqrt(-2*Math.log(r)/r);\n\t\treturn (mean || 0) + gauss*(stddev || 1);\n\t},\n\n\t/**\n\t * @returns {int} Pseudorandom value [1,100] inclusive, uniformly distributed\n\t */\n\tgetPercentage: function() {\n\t\treturn 1 + Math.floor(this.getUniform()*100);\n\t},\n\t\n\t/**\n\t * @param {object} data key=whatever, value=weight (relative probability)\n\t * @returns {string} whatever\n\t */\n\tgetWeightedValue: function(data) {\n\t\tvar total = 0;\n\t\t\n\t\tfor (var id in data) {\n\t\t\ttotal += data[id];\n\t\t}\n\t\tvar random = this.getUniform()*total;\n\t\t\n\t\tvar part = 0;\n\t\tfor (var id in data) {\n\t\t\tpart += data[id];\n\t\t\tif (random < part) { return id; }\n\t\t}\n\n\t\t// If by some floating-point annoyance we have\n\t\t// random >= total, just return the last id.\n\t\treturn id;\n\t},\n\n\t/**\n\t * Get RNG state. Useful for storing the state and re-setting it via setState.\n\t * @returns {?} Internal state\n\t */\n\tgetState: function() {\n\t\treturn [this._s0, this._s1, this._s2, this._c];\n\t},\n\n\t/**\n\t * Set a previously retrieved state.\n\t * @param {?} state\n\t */\n\tsetState: function(state) {\n\t\tthis._s0 = state[0];\n\t\tthis._s1 = state[1];\n\t\tthis._s2 = state[2];\n\t\tthis._c  = state[3];\n\t\treturn this;\n\t},\n\n\t/**\n\t * Returns a cloned RNG\n\t */\n\tclone: function() {\n\t\tvar clone = Object.create(this);\n\t\tclone.setState(this.getState());\n\t\treturn clone;\n\t},\n\n\t_s0: 0,\n\t_s1: 0,\n\t_s2: 0,\n\t_c: 0,\n\t_frac: 2.3283064365386963e-10 /* 2^-32 */\n}\n\nROT.RNG.setSeed(Date.now());\n/**\n * @class (Markov process)-based string generator. \n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>. \n * Offers configurable order and prior.\n * @param {object} [options]\n * @param {bool} [options.words=false] Use word mode?\n * @param {int} [options.order=3]\n * @param {float} [options.prior=0.001]\n */\nROT.StringGenerator = function(options) {\n\tthis._options = {\n\t\twords: false,\n\t\torder: 3,\n\t\tprior: 0.001\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\n\tthis._boundary = String.fromCharCode(0);\n\tthis._suffix = this._boundary;\n\tthis._prefix = [];\n\tfor (var i=0;i<this._options.order;i++) { this._prefix.push(this._boundary); }\n\n\tthis._priorValues = {};\n\tthis._priorValues[this._boundary] = this._options.prior;\n\n\tthis._data = {};\n}\n\n/**\n * Remove all learning data\n */\nROT.StringGenerator.prototype.clear = function() {\n\tthis._data = {};\n\tthis._priorValues = {};\n}\n\n/**\n * @returns {string} Generated string\n */\nROT.StringGenerator.prototype.generate = function() {\n\tvar result = [this._sample(this._prefix)];\n\twhile (result[result.length-1] != this._boundary) {\n\t\tresult.push(this._sample(result));\n\t}\n\treturn this._join(result.slice(0, -1));\n}\n\n/**\n * Observe (learn) a string from a training set\n */\nROT.StringGenerator.prototype.observe = function(string) {\n\tvar tokens = this._split(string);\n\n\tfor (var i=0; i<tokens.length; i++) {\n\t\tthis._priorValues[tokens[i]] = this._options.prior;\n\t}\n\n\ttokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n\n\tfor (var i=this._options.order; i<tokens.length; i++) {\n\t\tvar context = tokens.slice(i-this._options.order, i);\n\t\tvar event = tokens[i];\n\t\tfor (var j=0; j<context.length; j++) {\n\t\t\tvar subcontext = context.slice(j);\n\t\t\tthis._observeEvent(subcontext, event);\n\t\t}\n\t}\n}\n\nROT.StringGenerator.prototype.getStats = function() {\n\tvar parts = [];\n\n\tvar priorCount = 0;\n\tfor (var p in this._priorValues) { priorCount++; }\n\tpriorCount--; /* boundary */\n\tparts.push(\"distinct samples: \" + priorCount);\n\n\tvar dataCount = 0;\n\tvar eventCount = 0;\n\tfor (var p in this._data) { \n\t\tdataCount++; \n\t\tfor (var key in this._data[p]) {\n\t\t\teventCount++;\n\t\t}\n\t}\n\tparts.push(\"dictionary size (contexts): \" + dataCount);\n\tparts.push(\"dictionary size (events): \" + eventCount);\n\n\treturn parts.join(\", \");\n}\n\n/**\n * @param {string}\n * @returns {string[]}\n */\nROT.StringGenerator.prototype._split = function(str) {\n\treturn str.split(this._options.words ? /\\s+/ : \"\");\n}\n\n/**\n * @param {string[]}\n * @returns {string} \n */\nROT.StringGenerator.prototype._join = function(arr) {\n\treturn arr.join(this._options.words ? \" \" : \"\");\n}\n\n/**\n * @param {string[]} context\n * @param {string} event\n */\nROT.StringGenerator.prototype._observeEvent = function(context, event) {\n\tvar key = this._join(context);\n\tif (!(key in this._data)) { this._data[key] = {}; }\n\tvar data = this._data[key];\n\n\tif (!(event in data)) { data[event] = 0; }\n\tdata[event]++;\n}\n\n/**\n * @param {string[]}\n * @returns {string}\n */\nROT.StringGenerator.prototype._sample = function(context) {\n\tcontext = this._backoff(context);\n\tvar key = this._join(context);\n\tvar data = this._data[key];\n\n\tvar available = {};\n\n\tif (this._options.prior) {\n\t\tfor (var event in this._priorValues) { available[event] = this._priorValues[event]; }\n\t\tfor (var event in data) { available[event] += data[event]; }\n\t} else { \n\t\tavailable = data;\n\t}\n\n\treturn ROT.RNG.getWeightedValue(available);\n}\n\n/**\n * @param {string[]}\n * @returns {string[]}\n */\nROT.StringGenerator.prototype._backoff = function(context) {\n\tif (context.length > this._options.order) {\n\t\tcontext = context.slice(-this._options.order);\n\t} else if (context.length < this._options.order) {\n\t\tcontext = this._prefix.slice(0, this._options.order - context.length).concat(context);\n\t}\n\n\twhile (!(this._join(context) in this._data) && context.length > 0) { context = context.slice(1); }\n\n\treturn context;\n}\n/**\n * @class Generic event queue: stores events and retrieves them based on their time\n */\nROT.EventQueue = function() {\n\tthis._time = 0;\n\tthis._events = [];\n\tthis._eventTimes = [];\n}\n\n/**\n * @returns {number} Elapsed time\n */\nROT.EventQueue.prototype.getTime = function() {\n\treturn this._time;\n}\n\n/**\n * Clear all scheduled events\n */\nROT.EventQueue.prototype.clear = function() {\n\tthis._events = [];\n\tthis._eventTimes = [];\n\treturn this;\n}\n\n/**\n * @param {?} event\n * @param {number} time\n */\nROT.EventQueue.prototype.add = function(event, time) {\n\tvar index = this._events.length;\n\tfor (var i=0;i<this._eventTimes.length;i++) {\n\t\tif (this._eventTimes[i] > time) {\n\t\t\tindex = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tthis._events.splice(index, 0, event);\n\tthis._eventTimes.splice(index, 0, time);\n}\n\n/**\n * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n * @returns {? || null} The event previously added by addEvent, null if no event available\n */\nROT.EventQueue.prototype.get = function() {\n\tif (!this._events.length) { return null; }\n\n\tvar time = this._eventTimes.splice(0, 1)[0];\n\tif (time > 0) { /* advance */\n\t\tthis._time += time;\n\t\tfor (var i=0;i<this._eventTimes.length;i++) { this._eventTimes[i] -= time; }\n\t}\n\n\treturn this._events.splice(0, 1)[0];\n}\n\n/**\n * Remove an event from the queue\n * @param {?} event\n * @returns {bool} success?\n */\nROT.EventQueue.prototype.remove = function(event) {\n\tvar index = this._events.indexOf(event);\n\tif (index == -1) { return false }\n\tthis._remove(index);\n\treturn true;\n}\n\n/**\n * Remove an event from the queue\n * @param {int} index\n */\nROT.EventQueue.prototype._remove = function(index) {\n\tthis._events.splice(index, 1);\n\tthis._eventTimes.splice(index, 1);\n}\n/**\n * @class Abstract scheduler\n */\nROT.Scheduler = function() {\n\tthis._queue = new ROT.EventQueue();\n\tthis._repeat = [];\n\tthis._current = null;\n}\n\n/**\n * @see ROT.EventQueue#getTime\n */\nROT.Scheduler.prototype.getTime = function() {\n\treturn this._queue.getTime();\n}\n\n/**\n * @param {?} item\n * @param {bool} repeat\n */\nROT.Scheduler.prototype.add = function(item, repeat) {\n\tif (repeat) { this._repeat.push(item); }\n\treturn this;\n}\n\n/**\n * Clear all items\n */\nROT.Scheduler.prototype.clear = function() {\n\tthis._queue.clear();\n\tthis._repeat = [];\n\tthis._current = null;\n\treturn this;\n}\n\n/**\n * Remove a previously added item\n * @param {?} item\n * @returns {bool} successful?\n */\nROT.Scheduler.prototype.remove = function(item) {\n\tvar result = this._queue.remove(item);\n\n\tvar index = this._repeat.indexOf(item);\n\tif (index != -1) { this._repeat.splice(index, 1); }\n\n\tif (this._current == item) { this._current = null; }\n\n\treturn result;\n}\n\n/**\n * Schedule next item\n * @returns {?}\n */\nROT.Scheduler.prototype.next = function() {\n\tthis._current = this._queue.get();\n\treturn this._current;\n}\n/**\n * @class Simple fair scheduler (round-robin style)\n * @augments ROT.Scheduler\n */\nROT.Scheduler.Simple = function() {\n\tROT.Scheduler.call(this);\n}\nROT.Scheduler.Simple.extend(ROT.Scheduler);\n\n/**\n * @see ROT.Scheduler#add\n */\nROT.Scheduler.Simple.prototype.add = function(item, repeat) {\n\tthis._queue.add(item, 0);\n\treturn ROT.Scheduler.prototype.add.call(this, item, repeat);\n}\n\n/**\n * @see ROT.Scheduler#next\n */\nROT.Scheduler.Simple.prototype.next = function() {\n\tif (this._current && this._repeat.indexOf(this._current) != -1) {\n\t\tthis._queue.add(this._current, 0);\n\t}\n\treturn ROT.Scheduler.prototype.next.call(this);\n}\n/**\n * @class Speed-based scheduler\n * @augments ROT.Scheduler\n */\nROT.Scheduler.Speed = function() {\n\tROT.Scheduler.call(this);\n}\nROT.Scheduler.Speed.extend(ROT.Scheduler);\n\n/**\n * @param {object} item anything with \"getSpeed\" method\n * @param {bool} repeat\n * @see ROT.Scheduler#add\n */\nROT.Scheduler.Speed.prototype.add = function(item, repeat) {\n\tthis._queue.add(item, 1/item.getSpeed());\n\treturn ROT.Scheduler.prototype.add.call(this, item, repeat);\n}\n\n/**\n * @see ROT.Scheduler#next\n */\nROT.Scheduler.Speed.prototype.next = function() {\n\tif (this._current && this._repeat.indexOf(this._current) != -1) {\n\t\tthis._queue.add(this._current, 1/this._current.getSpeed());\n\t}\n\treturn ROT.Scheduler.prototype.next.call(this);\n}\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nROT.Scheduler.Action = function() {\n\tROT.Scheduler.call(this);\n\tthis._defaultDuration = 1; /* for newly added */\n\tthis._duration = this._defaultDuration; /* for this._current */\n}\nROT.Scheduler.Action.extend(ROT.Scheduler);\n\n/**\n * @param {object} item\n * @param {bool} repeat\n * @param {number} [time=1]\n * @see ROT.Scheduler#add\n */\nROT.Scheduler.Action.prototype.add = function(item, repeat, time) {\n\tthis._queue.add(item, time || this._defaultDuration);\n\treturn ROT.Scheduler.prototype.add.call(this, item, repeat);\n}\n\nROT.Scheduler.Action.prototype.clear = function() {\n\tthis._duration = this._defaultDuration;\n\treturn ROT.Scheduler.prototype.clear.call(this);\n}\n\nROT.Scheduler.Action.prototype.remove = function(item) {\n\tif (item == this._current) { this._duration = this._defaultDuration; }\n\treturn ROT.Scheduler.prototype.remove.call(this, item);\n}\n\n/**\n * @see ROT.Scheduler#next\n */\nROT.Scheduler.Action.prototype.next = function() {\n\tif (this._current && this._repeat.indexOf(this._current) != -1) {\n\t\tthis._queue.add(this._current, this._duration || this._defaultDuration);\n\t\tthis._duration = this._defaultDuration;\n\t}\n\treturn ROT.Scheduler.prototype.next.call(this);\n}\n\n/**\n * Set duration for the active item\n */\nROT.Scheduler.Action.prototype.setDuration = function(time) {\n\tif (this._current) { this._duration = time; }\n\treturn this;\n}\n/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nROT.Engine = function(scheduler) {\n\tthis._scheduler = scheduler;\n\tthis._lock = 1;\n}\n\n/**\n * Start the main loop. When this call returns, the loop is locked.\n */\nROT.Engine.prototype.start = function() {\n\treturn this.unlock();\n}\n\n/**\n * Interrupt the engine by an asynchronous action\n */\nROT.Engine.prototype.lock = function() {\n\tthis._lock++;\n\treturn this;\n}\n\n/**\n * Resume execution (paused by a previous lock)\n */\nROT.Engine.prototype.unlock = function() {\n\tif (!this._lock) { throw new Error(\"Cannot unlock unlocked engine\"); }\n\tthis._lock--;\n\n\twhile (!this._lock) {\n\t\tvar actor = this._scheduler.next();\n\t\tif (!actor) { return this.lock(); } /* no actors */\n\t\tvar result = actor.act();\n\t\tif (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n\t\t\tthis.lock();\n\t\t\tresult.then(this.unlock.bind(this));\n\t\t}\n\t}\n\n\treturn this;\n}\n/**\n * @class Base map generator\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n */\nROT.Map = function(width, height) {\n\tthis._width = width || ROT.DEFAULT_WIDTH;\n\tthis._height = height || ROT.DEFAULT_HEIGHT;\n};\n\nROT.Map.prototype.create = function(callback) {}\n\nROT.Map.prototype._fillMap = function(value) {\n\tvar map = [];\n\tfor (var i=0;i<this._width;i++) {\n\t\tmap.push([]);\n\t\tfor (var j=0;j<this._height;j++) { map[i].push(value); }\n\t}\n\treturn map;\n}\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nROT.Map.Arena = function(width, height) {\n\tROT.Map.call(this, width, height);\n}\nROT.Map.Arena.extend(ROT.Map);\n\nROT.Map.Arena.prototype.create = function(callback) {\n\tvar w = this._width-1;\n\tvar h = this._height-1;\n\tfor (var i=0;i<=w;i++) {\n\t\tfor (var j=0;j<=h;j++) {\n\t\t\tvar empty = (i && j && i<w && j<h);\n\t\t\tcallback(i, j, empty ? 0 : 1);\n\t\t}\n\t}\n\treturn this;\n}\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nROT.Map.DividedMaze = function(width, height) {\n\tROT.Map.call(this, width, height);\n\tthis._stack = [];\n}\nROT.Map.DividedMaze.extend(ROT.Map);\n\nROT.Map.DividedMaze.prototype.create = function(callback) {\n\tvar w = this._width;\n\tvar h = this._height;\n\t\n\tthis._map = [];\n\t\n\tfor (var i=0;i<w;i++) {\n\t\tthis._map.push([]);\n\t\tfor (var j=0;j<h;j++) {\n\t\t\tvar border = (i == 0 || j == 0 || i+1 == w || j+1 == h);\n\t\t\tthis._map[i].push(border ? 1 : 0);\n\t\t}\n\t}\n\t\n\tthis._stack = [\n\t\t[1, 1, w-2, h-2]\n\t];\n\tthis._process();\n\t\n\tfor (var i=0;i<w;i++) {\n\t\tfor (var j=0;j<h;j++) {\n\t\t\tcallback(i, j, this._map[i][j]);\n\t\t}\n\t}\n\tthis._map = null;\n\treturn this;\n}\n\nROT.Map.DividedMaze.prototype._process = function() {\n\twhile (this._stack.length) {\n\t\tvar room = this._stack.shift(); /* [left, top, right, bottom] */\n\t\tthis._partitionRoom(room);\n\t}\n}\n\nROT.Map.DividedMaze.prototype._partitionRoom = function(room) {\n\tvar availX = [];\n\tvar availY = [];\n\t\n\tfor (var i=room[0]+1;i<room[2];i++) {\n\t\tvar top = this._map[i][room[1]-1];\n\t\tvar bottom = this._map[i][room[3]+1];\n\t\tif (top && bottom && !(i % 2)) { availX.push(i); }\n\t}\n\t\n\tfor (var j=room[1]+1;j<room[3];j++) {\n\t\tvar left = this._map[room[0]-1][j];\n\t\tvar right = this._map[room[2]+1][j];\n\t\tif (left && right && !(j % 2)) { availY.push(j); }\n\t}\n\n\tif (!availX.length || !availY.length) { return; }\n\n\tvar x = availX.random();\n\tvar y = availY.random();\n\t\n\tthis._map[x][y] = 1;\n\t\n\tvar walls = [];\n\t\n\tvar w = []; walls.push(w); /* left part */\n\tfor (var i=room[0]; i<x; i++) { \n\t\tthis._map[i][y] = 1;\n\t\tw.push([i, y]); \n\t}\n\t\n\tvar w = []; walls.push(w); /* right part */\n\tfor (var i=x+1; i<=room[2]; i++) { \n\t\tthis._map[i][y] = 1;\n\t\tw.push([i, y]); \n\t}\n\n\tvar w = []; walls.push(w); /* top part */\n\tfor (var j=room[1]; j<y; j++) { \n\t\tthis._map[x][j] = 1;\n\t\tw.push([x, j]); \n\t}\n\t\n\tvar w = []; walls.push(w); /* bottom part */\n\tfor (var j=y+1; j<=room[3]; j++) { \n\t\tthis._map[x][j] = 1;\n\t\tw.push([x, j]); \n\t}\n\t\t\n\tvar solid = walls.random();\n\tfor (var i=0;i<walls.length;i++) {\n\t\tvar w = walls[i];\n\t\tif (w == solid) { continue; }\n\t\t\n\t\tvar hole = w.random();\n\t\tthis._map[hole[0]][hole[1]] = 0;\n\t}\n\n\tthis._stack.push([room[0], room[1], x-1, y-1]); /* left top */\n\tthis._stack.push([x+1, room[1], room[2], y-1]); /* right top */\n\tthis._stack.push([room[0], y+1, x-1, room[3]]); /* left bottom */\n\tthis._stack.push([x+1, y+1, room[2], room[3]]); /* right bottom */\n}\n/**\n * @class Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n * @augments ROT.Map\n */\nROT.Map.IceyMaze = function(width, height, regularity) {\n\tROT.Map.call(this, width, height);\n\tthis._regularity = regularity || 0;\n}\nROT.Map.IceyMaze.extend(ROT.Map);\n\nROT.Map.IceyMaze.prototype.create = function(callback) {\n\tvar width = this._width;\n\tvar height = this._height;\n\t\n\tvar map = this._fillMap(1);\n\t\n\twidth -= (width % 2 ? 1 : 2);\n\theight -= (height % 2 ? 1 : 2);\n\n\tvar cx = 0;\n\tvar cy = 0;\n\tvar nx = 0;\n\tvar ny = 0;\n\n\tvar done = 0;\n\tvar blocked = false;\n\tvar dirs = [\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0]\n\t];\n\tdo {\n\t\tcx = 1 + 2*Math.floor(ROT.RNG.getUniform()*(width-1) / 2);\n\t\tcy = 1 + 2*Math.floor(ROT.RNG.getUniform()*(height-1) / 2);\n\n\t\tif (!done) { map[cx][cy] = 0; }\n\t\t\n\t\tif (!map[cx][cy]) {\n\t\t\tthis._randomize(dirs);\n\t\t\tdo {\n\t\t\t\tif (Math.floor(ROT.RNG.getUniform()*(this._regularity+1)) == 0) { this._randomize(dirs); }\n\t\t\t\tblocked = true;\n\t\t\t\tfor (var i=0;i<4;i++) {\n\t\t\t\t\tnx = cx + dirs[i][0]*2;\n\t\t\t\t\tny = cy + dirs[i][1]*2;\n\t\t\t\t\tif (this._isFree(map, nx, ny, width, height)) {\n\t\t\t\t\t\tmap[nx][ny] = 0;\n\t\t\t\t\t\tmap[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcx = nx;\n\t\t\t\t\t\tcy = ny;\n\t\t\t\t\t\tblocked = false;\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} while (!blocked);\n\t\t}\n\t} while (done+1 < width*height/4);\n\t\n\tfor (var i=0;i<this._width;i++) {\n\t\tfor (var j=0;j<this._height;j++) {\n\t\t\tcallback(i, j, map[i][j]);\n\t\t}\n\t}\n\tthis._map = null;\n\treturn this;\n}\n\nROT.Map.IceyMaze.prototype._randomize = function(dirs) {\n\tfor (var i=0;i<4;i++) {\n\t\tdirs[i][0] = 0;\n\t\tdirs[i][1] = 0;\n\t}\n\t\n\tswitch (Math.floor(ROT.RNG.getUniform()*4)) {\n\t\tcase 0:\n\t\t\tdirs[0][0] = -1; dirs[1][0] = 1;\n\t\t\tdirs[2][1] = -1; dirs[3][1] = 1;\n\t\tbreak;\n\t\tcase 1:\n\t\t\tdirs[3][0] = -1; dirs[2][0] = 1;\n\t\t\tdirs[1][1] = -1; dirs[0][1] = 1;\n\t\tbreak;\n\t\tcase 2:\n\t\t\tdirs[2][0] = -1; dirs[3][0] = 1;\n\t\t\tdirs[0][1] = -1; dirs[1][1] = 1;\n\t\tbreak;\n\t\tcase 3:\n\t\t\tdirs[1][0] = -1; dirs[0][0] = 1;\n\t\t\tdirs[3][1] = -1; dirs[2][1] = 1;\n\t\tbreak;\n\t}\n}\n\nROT.Map.IceyMaze.prototype._isFree = function(map, x, y, width, height) {\n\tif (x < 1 || y < 1 || x >= width || y >= height) { return false; }\n\treturn map[x][y];\n}\n/**\n * @class Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n * @augments ROT.Map\n */\nROT.Map.EllerMaze = function(width, height) {\n\tROT.Map.call(this, width, height);\n}\nROT.Map.EllerMaze.extend(ROT.Map);\n\nROT.Map.EllerMaze.prototype.create = function(callback) {\n\tvar map = this._fillMap(1);\n\tvar w = Math.ceil((this._width-2)/2);\n\t\n\tvar rand = 9/24;\n\t\n\tvar L = [];\n\tvar R = [];\n\t\n\tfor (var i=0;i<w;i++) {\n\t\tL.push(i);\n\t\tR.push(i);\n\t}\n\tL.push(w-1); /* fake stop-block at the right side */\n\n\tfor (var j=1;j+3<this._height;j+=2) {\n\t\t/* one row */\n\t\tfor (var i=0;i<w;i++) {\n\t\t\t/* cell coords (will be always empty) */\n\t\t\tvar x = 2*i+1;\n\t\t\tvar y = j;\n\t\t\tmap[x][y] = 0;\n\t\t\t\n\t\t\t/* right connection */\n\t\t\tif (i != L[i+1] && ROT.RNG.getUniform() > rand) {\n\t\t\t\tthis._addToList(i, L, R);\n\t\t\t\tmap[x+1][y] = 0;\n\t\t\t}\n\t\t\t\n\t\t\t/* bottom connection */\n\t\t\tif (i != L[i] && ROT.RNG.getUniform() > rand) {\n\t\t\t\t/* remove connection */\n\t\t\t\tthis._removeFromList(i, L, R);\n\t\t\t} else {\n\t\t\t\t/* create connection */\n\t\t\t\tmap[x][y+1] = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t/* last row */\n\tfor (var i=0;i<w;i++) {\n\t\t/* cell coords (will be always empty) */\n\t\tvar x = 2*i+1;\n\t\tvar y = j;\n\t\tmap[x][y] = 0;\n\t\t\n\t\t/* right connection */\n\t\tif (i != L[i+1] && (i == L[i] || ROT.RNG.getUniform() > rand)) {\n\t\t\t/* dig right also if the cell is separated, so it gets connected to the rest of maze */\n\t\t\tthis._addToList(i, L, R);\n\t\t\tmap[x+1][y] = 0;\n\t\t}\n\t\t\n\t\tthis._removeFromList(i, L, R);\n\t}\n\t\n\tfor (var i=0;i<this._width;i++) {\n\t\tfor (var j=0;j<this._height;j++) {\n\t\t\tcallback(i, j, map[i][j]);\n\t\t}\n\t}\n\t\n\treturn this;\n}\n\n/**\n * Remove \"i\" from its list\n */\nROT.Map.EllerMaze.prototype._removeFromList = function(i, L, R) {\n\tR[L[i]] = R[i];\n\tL[R[i]] = L[i];\n\tR[i] = i;\n\tL[i] = i;\n}\n\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nROT.Map.EllerMaze.prototype._addToList = function(i, L, R) {\n\tR[L[i+1]] = R[i];\n\tL[R[i]] = L[i+1];\n\tR[i] = i+1;\n\tL[i+1] = i;\n}\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nROT.Map.Cellular = function(width, height, options) {\n\tROT.Map.call(this, width, height);\n\tthis._options = {\n\t\tborn: [5, 6, 7, 8],\n\t\tsurvive: [4, 5, 6, 7, 8],\n\t\ttopology: 8,\n\t\tconnected: false\n\t};\n\tthis.setOptions(options);\n\t\n\tthis._dirs = ROT.DIRS[this._options.topology];\n\tthis._map = this._fillMap(0);\n}\nROT.Map.Cellular.extend(ROT.Map);\n\n/**\n * Fill the map with random values\n * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n */\nROT.Map.Cellular.prototype.randomize = function(probability) {\n\tfor (var i=0;i<this._width;i++) {\n\t\tfor (var j=0;j<this._height;j++) {\n\t\t\tthis._map[i][j] = (ROT.RNG.getUniform() < probability ? 1 : 0);\n\t\t}\n\t}\n\treturn this;\n}\n\n/**\n * Change options.\n * @see ROT.Map.Cellular\n */\nROT.Map.Cellular.prototype.setOptions = function(options) {\n\tfor (var p in options) { this._options[p] = options[p]; }\n}\n\nROT.Map.Cellular.prototype.set = function(x, y, value) {\n\tthis._map[x][y] = value;\n}\n\nROT.Map.Cellular.prototype.create = function(callback) {\n\tvar newMap = this._fillMap(0);\n\tvar born = this._options.born;\n\tvar survive = this._options.survive;\n\n\n\tfor (var j=0;j<this._height;j++) {\n\t\tvar widthStep = 1;\n\t\tvar widthStart = 0;\n\t\tif (this._options.topology == 6) { \n\t\t\twidthStep = 2;\n\t\t\twidthStart = j%2;\n\t\t}\n\n\t\tfor (var i=widthStart; i<this._width; i+=widthStep) {\n\n\t\t\tvar cur = this._map[i][j];\n\t\t\tvar ncount = this._getNeighbors(i, j);\n\t\t\t\n\t\t\tif (cur && survive.indexOf(ncount) != -1) { /* survive */\n\t\t\t\tnewMap[i][j] = 1;\n\t\t\t} else if (!cur && born.indexOf(ncount) != -1) { /* born */\n\t\t\t\tnewMap[i][j] = 1;\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\t\n\tthis._map = newMap;\n\n\tif (this._options.connected) { this._completeMaze(); } // optionally connect every space\n\n\tif (!callback) { return; }\n\n\tfor (var j=0;j<this._height;j++) {\n\t\tvar widthStep = 1;\n\t\tvar widthStart = 0;\n\t\tif (this._options.topology == 6) { \n\t\t\twidthStep = 2;\n\t\t\twidthStart = j%2;\n\t\t}\n\t\tfor (var i=widthStart; i<this._width; i+=widthStep) {\n\t\t\tcallback(i, j, newMap[i][j]);\n\t\t}\n\t}\n}\n\n/**\n * Get neighbor count at [i,j] in this._map\n */\nROT.Map.Cellular.prototype._getNeighbors = function(cx, cy) {\n\tvar result = 0;\n\tfor (var i=0;i<this._dirs.length;i++) {\n\t\tvar dir = this._dirs[i];\n\t\tvar x = cx + dir[0];\n\t\tvar y = cy + dir[1];\n\t\t\n\t\tif (x < 0 || x >= this._width || x < 0 || y >= this._width) { continue; }\n\t\tresult += (this._map[x][y] == 1 ? 1 : 0);\n\t}\n\t\n\treturn result;\n}\n\n/**\n * Make sure every non-wall space is accessible.\n */\nROT.Map.Cellular.prototype._completeMaze = function() {\n\tvar allFreeSpace = [];\n\tvar notConnected = {};\n\t// find all free space\n\tfor (var x = 0; x < this._width; x++) {\n\t\tfor (var y = 0; y < this._height; y++) {\n\t\t\tif (this._freeSpace(x, y)) {\n\t\t\t\tvar p = [x, y];\n\t\t\t\tnotConnected[this._pointKey(p)] = p;\n\t\t\t\tallFreeSpace.push([x, y]);\n\t\t\t}\n\t\t}\n\t}\n\tvar start = allFreeSpace[ROT.RNG.getUniformInt(0, allFreeSpace.length - 1)];\n\n\tvar key = this._pointKey(start);\n\tvar connected = {};\n\tconnected[key] = start;\n\tdelete notConnected[key]\n\n\t// find what's connected to the starting point\n\tthis._findConnected(connected, notConnected, [start]);\n\n\twhile (Object.keys(notConnected).length > 0) {\n\n\t\t// find two points from notConnected to connected\n\t\tvar p = this._getFromTo(connected, notConnected);\n\t\tvar from = p[0]; // notConnected\n\t\tvar to = p[1]; // connected\n\n\t\t// find everything connected to the starting point\n\t\tvar local = {};\n\t\tlocal[this._pointKey(from)] = from;\n\t\tthis._findConnected(local, notConnected, [from], true);\n\n\t\t// connect to a connected square\n\t\tthis._tunnelToConnected(to, from, connected, notConnected);\n\n\t\t// now all of local is connected\n\t\tfor (var k in local) {\n\t\t\tvar pp = local[k];\n\t\t\tthis._map[pp[0]][pp[1]] = 0;\n\t\t\tconnected[k] = pp;\n\t\t\tdelete notConnected[k];\n\t\t}\n\t}\n}\n\n/**\n * Find random points to connect. Search for the closest point in the larger space. \n * This is to minimize the length of the passage while maintaining good performance.\n */\nROT.Map.Cellular.prototype._getFromTo = function(connected, notConnected) {\n\tvar from, to, d;\n\tvar connectedKeys = Object.keys(connected);\n\tvar notConnectedKeys = Object.keys(notConnected);\n\tfor (var i = 0; i < 5; i++) {\n\t\tif (connectedKeys.length < notConnectedKeys.length) {\n\t\t\tvar keys = connectedKeys;\n\t\t\tto = connected[keys[ROT.RNG.getUniformInt(0, keys.length - 1)]]\n\t\t\tfrom = this._getClosest(to, notConnected);\n\t\t} else {\n\t\t\tvar keys = notConnectedKeys;\n\t\t\tfrom = notConnected[keys[ROT.RNG.getUniformInt(0, keys.length - 1)]]\n\t\t\tto = this._getClosest(from, connected);\n\t\t}\n\t\td = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n\t\tif (d < 64) {\n\t\t\tbreak;\n\t\t}\n\t}\n\t// console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n\treturn [from, to];\n}\n\nROT.Map.Cellular.prototype._getClosest = function(point, space) {\n\tvar minPoint = null;\n\tvar minDist = null;\n\tfor (k in space) {\n\t\tvar p = space[k];\n\t\tvar d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n\t\tif (minDist == null || d < minDist) {\n\t\t\tminDist = d;\n\t\t\tminPoint = p;\n\t\t}\n\t}\n\treturn minPoint;\n}\n\nROT.Map.Cellular.prototype._findConnected = function(connected, notConnected, stack, keepNotConnected) {\n\twhile(stack.length > 0) {\n\t\tvar p = stack.splice(0, 1)[0];\n\t\tvar tests = [\n\t\t\t[p[0] + 1, p[1]],\n\t\t\t[p[0] - 1, p[1]],\n\t\t\t[p[0],     p[1] + 1],\n\t\t\t[p[0],     p[1] - 1]\n\t\t];\n\t\tfor (var i = 0; i < tests.length; i++) {\n\t\t\tvar key = this._pointKey(tests[i]);\n\t\t\tif (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1])) {\n\t\t\t\tconnected[key] = tests[i];\n\t\t\t\tif (!keepNotConnected) {\n\t\t\t\t\tdelete notConnected[key];\n\t\t\t\t}\n\t\t\t\tstack.push(tests[i]);\n\t\t\t}\n\t\t}\n\t}\n}\n\nROT.Map.Cellular.prototype._tunnelToConnected = function(to, from, connected, notConnected) {\n\tvar key = this._pointKey(from);\n\tvar a, b;\n\tif (from[0] < to[0]) {\n\t\ta = from;\n\t\tb = to;\n\t} else {\n\t\ta = to;\n\t\tb = from;\n\t}\n\tfor (var xx = a[0]; xx <= b[0]; xx++) {\n\t\tthis._map[xx][a[1]] = 0;\n\t\tvar p = [xx, a[1]];\n\t\tvar pkey = this._pointKey(p);\n\t\tconnected[pkey] = p;\n\t\tdelete notConnected[pkey];\n\t}\n\n\t// x is now fixed\n\tvar x = b[0];\n\n\tif (from[1] < to[1]) {\n\t\ta = from;\n\t\tb = to;\n\t} else {\n\t\ta = to;\n\t\tb = from;\n\t}\n\tfor (var yy = a[1]; yy < b[1]; yy++) {\n\t\tthis._map[x][yy] = 0;\n\t\tvar p = [x, yy];\n\t\tvar pkey = this._pointKey(p);\n\t\tconnected[pkey] = p;\n\t\tdelete notConnected[pkey];\n\t}\n}\n\nROT.Map.Cellular.prototype._freeSpace = function(x, y) {\n\treturn x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] != 1;\n}\n\nROT.Map.Cellular.prototype._pointKey = function(p) {\n\treturn p[0] + \".\" + p[1];\n}\n\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nROT.Map.Dungeon = function(width, height) {\n\tROT.Map.call(this, width, height);\n\tthis._rooms = []; /* list of all rooms */\n\tthis._corridors = [];\n}\nROT.Map.Dungeon.extend(ROT.Map);\n\n/**\n * Get all generated rooms\n * @returns {ROT.Map.Feature.Room[]}\n */\nROT.Map.Dungeon.prototype.getRooms = function() {\n\treturn this._rooms;\n}\n\n/**\n * Get all generated corridors\n * @returns {ROT.Map.Feature.Corridor[]}\n */\nROT.Map.Dungeon.prototype.getCorridors = function() {\n\treturn this._corridors;\n}\n/**\n * @class Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at \n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n * @augments ROT.Map.Dungeon\n */\nROT.Map.Digger = function(width, height, options) {\n\tROT.Map.Dungeon.call(this, width, height);\n\t\n\tthis._options = {\n\t\troomWidth: [3, 9], /* room minimum and maximum width */\n\t\troomHeight: [3, 5], /* room minimum and maximum height */\n\t\tcorridorLength: [3, 10], /* corridor minimum and maximum length */\n\t\tdugPercentage: 0.2, /* we stop after this percentage of level area has been dug out */\n\t\ttimeLimit: 1000 /* we stop after this much time has passed (msec) */\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\t\n\tthis._features = {\n\t\t\"Room\": 4,\n\t\t\"Corridor\": 4\n\t}\n\tthis._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n\tthis._walls = {}; /* these are available for digging */\n\t\n\tthis._digCallback = this._digCallback.bind(this);\n\tthis._canBeDugCallback = this._canBeDugCallback.bind(this);\n\tthis._isWallCallback = this._isWallCallback.bind(this);\n\tthis._priorityWallCallback = this._priorityWallCallback.bind(this);\n}\nROT.Map.Digger.extend(ROT.Map.Dungeon);\n\n/**\n * Create a map\n * @see ROT.Map#create\n */\nROT.Map.Digger.prototype.create = function(callback) {\n\tthis._rooms = [];\n\tthis._corridors = [];\n\tthis._map = this._fillMap(1);\n\tthis._walls = {};\n\tthis._dug = 0;\n\tvar area = (this._width-2) * (this._height-2);\n\n\tthis._firstRoom();\n\t\n\tvar t1 = Date.now();\n\n\tdo {\n\t\tvar t2 = Date.now();\n\t\tif (t2 - t1 > this._options.timeLimit) { break; }\n\n\t\t/* find a good wall */\n\t\tvar wall = this._findWall();\n\t\tif (!wall) { break; } /* no more walls */\n\t\t\n\t\tvar parts = wall.split(\",\");\n\t\tvar x = parseInt(parts[0]);\n\t\tvar y = parseInt(parts[1]);\n\t\tvar dir = this._getDiggingDirection(x, y);\n\t\tif (!dir) { continue; } /* this wall is not suitable */\n\t\t\n//\t\tconsole.log(\"wall\", x, y);\n\n\t\t/* try adding a feature */\n\t\tvar featureAttempts = 0;\n\t\tdo {\n\t\t\tfeatureAttempts++;\n\t\t\tif (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n\t\t\t\t//if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n\t\t\t\tthis._removeSurroundingWalls(x, y);\n\t\t\t\tthis._removeSurroundingWalls(x-dir[0], y-dir[1]);\n\t\t\t\tbreak; \n\t\t\t}\n\t\t} while (featureAttempts < this._featureAttempts);\n\t\t\n\t\tvar priorityWalls = 0;\n\t\tfor (var id in this._walls) { \n\t\t\tif (this._walls[id] > 1) { priorityWalls++; }\n\t\t}\n\n\t} while (this._dug/area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n\n\tthis._addDoors();\n\n\tif (callback) {\n\t\tfor (var i=0;i<this._width;i++) {\n\t\t\tfor (var j=0;j<this._height;j++) {\n\t\t\t\tcallback(i, j, this._map[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis._walls = {};\n\tthis._map = null;\n\n\treturn this;\n}\n\nROT.Map.Digger.prototype._digCallback = function(x, y, value) {\n\tif (value == 0 || value == 2) { /* empty */\n\t\tthis._map[x][y] = 0;\n\t\tthis._dug++;\n\t} else { /* wall */\n\t\tthis._walls[x+\",\"+y] = 1;\n\t}\n}\n\nROT.Map.Digger.prototype._isWallCallback = function(x, y) {\n\tif (x < 0 || y < 0 || x >= this._width || y >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\nROT.Map.Digger.prototype._canBeDugCallback = function(x, y) {\n\tif (x < 1 || y < 1 || x+1 >= this._width || y+1 >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\nROT.Map.Digger.prototype._priorityWallCallback = function(x, y) {\n\tthis._walls[x+\",\"+y] = 2;\n}\n\nROT.Map.Digger.prototype._firstRoom = function() {\n\tvar cx = Math.floor(this._width/2);\n\tvar cy = Math.floor(this._height/2);\n\tvar room = ROT.Map.Feature.Room.createRandomCenter(cx, cy, this._options);\n\tthis._rooms.push(room);\n\troom.create(this._digCallback);\n}\n\n/**\n * Get a suitable wall\n */\nROT.Map.Digger.prototype._findWall = function() {\n\tvar prio1 = [];\n\tvar prio2 = [];\n\tfor (var id in this._walls) {\n\t\tvar prio = this._walls[id];\n\t\tif (prio == 2) { \n\t\t\tprio2.push(id); \n\t\t} else {\n\t\t\tprio1.push(id);\n\t\t}\n\t}\n\t\n\tvar arr = (prio2.length ? prio2 : prio1);\n\tif (!arr.length) { return null; } /* no walls :/ */\n\t\n\tvar id = arr.random();\n\tdelete this._walls[id];\n\n\treturn id;\n}\n\n/**\n * Tries adding a feature\n * @returns {bool} was this a successful try?\n */\nROT.Map.Digger.prototype._tryFeature = function(x, y, dx, dy) {\n\tvar feature = ROT.RNG.getWeightedValue(this._features);\n\tfeature = ROT.Map.Feature[feature].createRandomAt(x, y, dx, dy, this._options);\n\t\n\tif (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n//\t\tconsole.log(\"not valid\");\n//\t\tfeature.debug();\n\t\treturn false;\n\t}\n\t\n\tfeature.create(this._digCallback);\n//\tfeature.debug();\n\n\tif (feature instanceof ROT.Map.Feature.Room) { this._rooms.push(feature); }\n\tif (feature instanceof ROT.Map.Feature.Corridor) { \n\t\tfeature.createPriorityWalls(this._priorityWallCallback);\n\t\tthis._corridors.push(feature); \n\t}\n\t\n\treturn true;\n}\n\nROT.Map.Digger.prototype._removeSurroundingWalls = function(cx, cy) {\n\tvar deltas = ROT.DIRS[4];\n\n\tfor (var i=0;i<deltas.length;i++) {\n\t\tvar delta = deltas[i];\n\t\tvar x = cx + delta[0];\n\t\tvar y = cy + delta[1];\n\t\tdelete this._walls[x+\",\"+y];\n\t\tvar x = cx + 2*delta[0];\n\t\tvar y = cy + 2*delta[1];\n\t\tdelete this._walls[x+\",\"+y];\n\t}\n}\n\n/**\n * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n */\nROT.Map.Digger.prototype._getDiggingDirection = function(cx, cy) {\n\tif (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) { return null; }\n\n\tvar result = null;\n\tvar deltas = ROT.DIRS[4];\n\t\n\tfor (var i=0;i<deltas.length;i++) {\n\t\tvar delta = deltas[i];\n\t\tvar x = cx + delta[0];\n\t\tvar y = cy + delta[1];\n\t\t\n\t\tif (!this._map[x][y]) { /* there already is another empty neighbor! */\n\t\t\tif (result) { return null; }\n\t\t\tresult = delta;\n\t\t}\n\t}\n\t\n\t/* no empty neighbor */\n\tif (!result) { return null; }\n\t\n\treturn [-result[0], -result[1]];\n}\n\n/**\n * Find empty spaces surrounding rooms, and apply doors.\n */\nROT.Map.Digger.prototype._addDoors = function() {\n\tvar data = this._map;\n\tvar isWallCallback = function(x, y) {\n\t\treturn (data[x][y] == 1);\n\t}\n\tfor (var i = 0; i < this._rooms.length; i++ ) {\n\t\tvar room = this._rooms[i];\n\t\troom.clearDoors();\n\t\troom.addDoors(isWallCallback);\n\t}\n}\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nROT.Map.Uniform = function(width, height, options) {\n\tROT.Map.Dungeon.call(this, width, height);\n\n\tthis._options = {\n\t\troomWidth: [3, 9], /* room minimum and maximum width */\n\t\troomHeight: [3, 5], /* room minimum and maximum height */\n\t\troomDugPercentage: 0.1, /* we stop after this percentage of level area has been dug out by rooms */\n\t\ttimeLimit: 1000 /* we stop after this much time has passed (msec) */\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\n\tthis._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n\tthis._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n\n\tthis._connected = []; /* list of already connected rooms */\n\tthis._unconnected = []; /* list of remaining unconnected rooms */\n\t\n\tthis._digCallback = this._digCallback.bind(this);\n\tthis._canBeDugCallback = this._canBeDugCallback.bind(this);\n\tthis._isWallCallback = this._isWallCallback.bind(this);\n}\nROT.Map.Uniform.extend(ROT.Map.Dungeon);\n\n/**\n * Create a map. If the time limit has been hit, returns null.\n * @see ROT.Map#create\n */\nROT.Map.Uniform.prototype.create = function(callback) {\n\tvar t1 = Date.now();\n\twhile (1) {\n\t\tvar t2 = Date.now();\n\t\tif (t2 - t1 > this._options.timeLimit) { return null; } /* time limit! */\n\t\n\t\tthis._map = this._fillMap(1);\n\t\tthis._dug = 0;\n\t\tthis._rooms = [];\n\t\tthis._unconnected = [];\n\t\tthis._generateRooms();\n\t\tif (this._rooms.length < 2) { continue; }\n\t\tif (this._generateCorridors()) { break; }\n\t}\n\t\n\tif (callback) {\n\t\tfor (var i=0;i<this._width;i++) {\n\t\t\tfor (var j=0;j<this._height;j++) {\n\t\t\t\tcallback(i, j, this._map[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn this;\n}\n\n/**\n * Generates a suitable amount of rooms\n */\nROT.Map.Uniform.prototype._generateRooms = function() {\n\tvar w = this._width-2;\n\tvar h = this._height-2;\n\n\tdo {\n\t\tvar room = this._generateRoom();\n\t\tif (this._dug/(w*h) > this._options.roomDugPercentage) { break; } /* achieved requested amount of free space */\n\t} while (room);\n\n\t/* either enough rooms, or not able to generate more of them :) */\n}\n\n/**\n * Try to generate one room\n */\nROT.Map.Uniform.prototype._generateRoom = function() {\n\tvar count = 0;\n\twhile (count < this._roomAttempts) {\n\t\tcount++;\n\t\t\n\t\tvar room = ROT.Map.Feature.Room.createRandom(this._width, this._height, this._options);\n\t\tif (!room.isValid(this._isWallCallback, this._canBeDugCallback)) { continue; }\n\t\t\n\t\troom.create(this._digCallback);\n\t\tthis._rooms.push(room);\n\t\treturn room;\n\t} \n\n\t/* no room was generated in a given number of attempts */\n\treturn null;\n}\n\n/**\n * Generates connectors beween rooms\n * @returns {bool} success Was this attempt successfull?\n */\nROT.Map.Uniform.prototype._generateCorridors = function() {\n\tvar cnt = 0;\n\twhile (cnt < this._corridorAttempts) {\n\t\tcnt++;\n\t\tthis._corridors = [];\n\n\t\t/* dig rooms into a clear map */\n\t\tthis._map = this._fillMap(1);\n\t\tfor (var i=0;i<this._rooms.length;i++) { \n\t\t\tvar room = this._rooms[i];\n\t\t\troom.clearDoors();\n\t\t\troom.create(this._digCallback); \n\t\t}\n\n\t\tthis._unconnected = this._rooms.slice().randomize();\n\t\tthis._connected = [];\n\t\tif (this._unconnected.length) { this._connected.push(this._unconnected.pop()); } /* first one is always connected */\n\t\t\n\t\twhile (1) {\n\t\t\t/* 1. pick random connected room */\n\t\t\tvar connected = this._connected.random();\n\t\t\t\n\t\t\t/* 2. find closest unconnected */\n\t\t\tvar room1 = this._closestRoom(this._unconnected, connected);\n\t\t\t\n\t\t\t/* 3. connect it to closest connected */\n\t\t\tvar room2 = this._closestRoom(this._connected, room1);\n\t\t\t\n\t\t\tvar ok = this._connectRooms(room1, room2);\n\t\t\tif (!ok) { break; } /* stop connecting, re-shuffle */\n\t\t\t\n\t\t\tif (!this._unconnected.length) { return true; } /* done; no rooms remain */\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * For a given room, find the closest one from the list\n */\nROT.Map.Uniform.prototype._closestRoom = function(rooms, room) {\n\tvar dist = Infinity;\n\tvar center = room.getCenter();\n\tvar result = null;\n\t\n\tfor (var i=0;i<rooms.length;i++) {\n\t\tvar r = rooms[i];\n\t\tvar c = r.getCenter();\n\t\tvar dx = c[0]-center[0];\n\t\tvar dy = c[1]-center[1];\n\t\tvar d = dx*dx+dy*dy;\n\t\t\n\t\tif (d < dist) {\n\t\t\tdist = d;\n\t\t\tresult = r;\n\t\t}\n\t}\n\t\n\treturn result;\n}\n\nROT.Map.Uniform.prototype._connectRooms = function(room1, room2) {\n\t/*\n\t\troom1.debug();\n\t\troom2.debug();\n\t*/\n\n\tvar center1 = room1.getCenter();\n\tvar center2 = room2.getCenter();\n\n\tvar diffX = center2[0] - center1[0];\n\tvar diffY = center2[1] - center1[1];\n\n\tif (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n\t\tvar dirIndex1 = (diffY > 0 ? 2 : 0);\n\t\tvar dirIndex2 = (dirIndex1 + 2) % 4;\n\t\tvar min = room2.getLeft();\n\t\tvar max = room2.getRight();\n\t\tvar index = 0;\n\t} else { /* first try connecting east-west walls */\n\t\tvar dirIndex1 = (diffX > 0 ? 1 : 3);\n\t\tvar dirIndex2 = (dirIndex1 + 2) % 4;\n\t\tvar min = room2.getTop();\n\t\tvar max = room2.getBottom();\n\t\tvar index = 1;\n\t}\n\n\tvar start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n\tif (!start) { return false; }\n\n\tif (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n\t\tvar end = start.slice();\n\t\tvar value = null;\n\t\tswitch (dirIndex2) {\n\t\t\tcase 0: value = room2.getTop()-1; break;\n\t\t\tcase 1: value = room2.getRight()+1; break;\n\t\t\tcase 2: value = room2.getBottom()+1; break;\n\t\t\tcase 3: value = room2.getLeft()-1; break;\n\t\t}\n\t\tend[(index+1)%2] = value;\n\t\tthis._digLine([start, end]);\n\t\t\n\t} else if (start[index] < min-1 || start[index] > max+1) { /* need to switch target wall (L-like) */\n\n\t\tvar diff = start[index] - center2[index];\n\t\tswitch (dirIndex2) {\n\t\t\tcase 0:\n\t\t\tcase 1:\tvar rotation = (diff < 0 ? 3 : 1); break;\n\t\t\tcase 2:\n\t\t\tcase 3:\tvar rotation = (diff < 0 ? 1 : 3); break;\n\t\t}\n\t\tdirIndex2 = (dirIndex2 + rotation) % 4;\n\t\t\n\t\tvar end = this._placeInWall(room2, dirIndex2);\n\t\tif (!end) { return false; }\n\n\t\tvar mid = [0, 0];\n\t\tmid[index] = start[index];\n\t\tvar index2 = (index+1)%2;\n\t\tmid[index2] = end[index2];\n\t\tthis._digLine([start, mid, end]);\n\t\t\n\t} else { /* use current wall pair, but adjust the line in the middle (S-like) */\n\t\n\t\tvar index2 = (index+1)%2;\n\t\tvar end = this._placeInWall(room2, dirIndex2);\n\t\tif (!end) { return false; }\n\t\tvar mid = Math.round((end[index2] + start[index2])/2);\n\n\t\tvar mid1 = [0, 0];\n\t\tvar mid2 = [0, 0];\n\t\tmid1[index] = start[index];\n\t\tmid1[index2] = mid;\n\t\tmid2[index] = end[index];\n\t\tmid2[index2] = mid;\n\t\tthis._digLine([start, mid1, mid2, end]);\n\t}\n\n\troom1.addDoor(start[0], start[1]);\n\troom2.addDoor(end[0], end[1]);\n\t\n\tvar index = this._unconnected.indexOf(room1);\n\tif (index != -1) {\n\t\tthis._unconnected.splice(index, 1);\n\t\tthis._connected.push(room1);\n\t}\n\n\tvar index = this._unconnected.indexOf(room2);\n\tif (index != -1) {\n\t\tthis._unconnected.splice(index, 1);\n\t\tthis._connected.push(room2);\n\t}\n\t\n\treturn true;\n}\n\nROT.Map.Uniform.prototype._placeInWall = function(room, dirIndex) {\n\tvar start = [0, 0];\n\tvar dir = [0, 0];\n\tvar length = 0;\n\t\n\tswitch (dirIndex) {\n\t\tcase 0:\n\t\t\tdir = [1, 0];\n\t\t\tstart = [room.getLeft(), room.getTop()-1];\n\t\t\tlength = room.getRight()-room.getLeft()+1;\n\t\tbreak;\n\t\tcase 1:\n\t\t\tdir = [0, 1];\n\t\t\tstart = [room.getRight()+1, room.getTop()];\n\t\t\tlength = room.getBottom()-room.getTop()+1;\n\t\tbreak;\n\t\tcase 2:\n\t\t\tdir = [1, 0];\n\t\t\tstart = [room.getLeft(), room.getBottom()+1];\n\t\t\tlength = room.getRight()-room.getLeft()+1;\n\t\tbreak;\n\t\tcase 3:\n\t\t\tdir = [0, 1];\n\t\t\tstart = [room.getLeft()-1, room.getTop()];\n\t\t\tlength = room.getBottom()-room.getTop()+1;\n\t\tbreak;\n\t}\n\t\n\tvar avail = [];\n\tvar lastBadIndex = -2;\n\n\tfor (var i=0;i<length;i++) {\n\t\tvar x = start[0] + i*dir[0];\n\t\tvar y = start[1] + i*dir[1];\n\t\tavail.push(null);\n\t\t\n\t\tvar isWall = (this._map[x][y] == 1);\n\t\tif (isWall) {\n\t\t\tif (lastBadIndex != i-1) { avail[i] = [x, y]; }\n\t\t} else {\n\t\t\tlastBadIndex = i;\n\t\t\tif (i) { avail[i-1] = null; }\n\t\t}\n\t}\n\t\n\tfor (var i=avail.length-1; i>=0; i--) {\n\t\tif (!avail[i]) { avail.splice(i, 1); }\n\t}\n\treturn (avail.length ? avail.random() : null);\n}\n\n/**\n * Dig a polyline.\n */\nROT.Map.Uniform.prototype._digLine = function(points) {\n\tfor (var i=1;i<points.length;i++) {\n\t\tvar start = points[i-1];\n\t\tvar end = points[i];\n\t\tvar corridor = new ROT.Map.Feature.Corridor(start[0], start[1], end[0], end[1]);\n\t\tcorridor.create(this._digCallback);\n\t\tthis._corridors.push(corridor);\n\t}\n}\n\nROT.Map.Uniform.prototype._digCallback = function(x, y, value) {\n\tthis._map[x][y] = value;\n\tif (value == 0) { this._dug++; }\n}\n\nROT.Map.Uniform.prototype._isWallCallback = function(x, y) {\n\tif (x < 0 || y < 0 || x >= this._width || y >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\nROT.Map.Uniform.prototype._canBeDugCallback = function(x, y) {\n\tif (x < 1 || y < 1 || x+1 >= this._width || y+1 >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\n/**\n * @author hyakugei\n * @class Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.cellWidth=3] Number of cells to create on the horizontal (number of rooms horizontally)\n * @param {int[]} [options.cellHeight=3] Number of cells to create on the vertical (number of rooms vertically) \n * @param {int} [options.roomWidth] Room min and max width - normally set auto-magically via the constructor.\n * @param {int} [options.roomHeight] Room min and max height - normally set auto-magically via the constructor. \n */\nROT.Map.Rogue = function(width, height, options) {\n\tROT.Map.call(this, width, height);\n\t\n\tthis._options = {\n\t\tcellWidth: 3,  // NOTE to self, these could probably work the same as the roomWidth/room Height values\n\t\tcellHeight: 3  //     ie. as an array with min-max values for each direction....\n\t}\n\t\n\tfor (var p in options) { this._options[p] = options[p]; }\n\t\n\t/*\n\tSet the room sizes according to the over-all width of the map, \n\tand the cell sizes. \n\t*/\n\t\n\tif (!this._options.hasOwnProperty(\"roomWidth\")) {\n\t\tthis._options[\"roomWidth\"] = this._calculateRoomSize(this._width, this._options[\"cellWidth\"]);\n\t}\n\tif (!this._options.hasOwnProperty(\"roomHeight\")) {\n\t\tthis._options[\"roomHeight\"] = this._calculateRoomSize(this._height, this._options[\"cellHeight\"]);\n\t}\n\t\n}\n\nROT.Map.Rogue.extend(ROT.Map); \n\n/**\n * @see ROT.Map#create\n */\nROT.Map.Rogue.prototype.create = function(callback) {\n\tthis.map = this._fillMap(1);\n\tthis.rooms = [];\n\tthis.connectedCells = [];\n\t\n\tthis._initRooms();\n\tthis._connectRooms();\n\tthis._connectUnconnectedRooms();\n\tthis._createRandomRoomConnections();\n\tthis._createRooms();\n\tthis._createCorridors();\n\t\n\tif (callback) {\n\t\tfor (var i = 0; i < this._width; i++) {\n\t\t\tfor (var j = 0; j < this._height; j++) {\n\t\t\t\tcallback(i, j, this.map[i][j]);   \n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn this;\n}\n\nROT.Map.Rogue.prototype._calculateRoomSize = function(size, cell) {\n\tvar max = Math.floor((size/cell) * 0.8);\n\tvar min = Math.floor((size/cell) * 0.25);\n\tif (min < 2) min = 2;\n\tif (max < 2) max = 2;\n\treturn [min, max];\n}\n\nROT.Map.Rogue.prototype._initRooms = function () { \n\t// create rooms array. This is the \"grid\" list from the algo.  \n\tfor (var i = 0; i < this._options.cellWidth; i++) {  \n\t\tthis.rooms.push([]);\n\t\tfor(var j = 0; j < this._options.cellHeight; j++) {\n\t\t\tthis.rooms[i].push({\"x\":0, \"y\":0, \"width\":0, \"height\":0, \"connections\":[], \"cellx\":i, \"celly\":j});\n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._connectRooms = function() {\n\t//pick random starting grid\n\tvar cgx = ROT.RNG.getUniformInt(0, this._options.cellWidth-1);\n\tvar cgy = ROT.RNG.getUniformInt(0, this._options.cellHeight-1);\n\t\n\tvar idx;\n\tvar ncgx;\n\tvar ncgy;\n\t\n\tvar found = false;\n\tvar room;\n\tvar otherRoom;\n\t\n\t// find  unconnected neighbour cells\n\tdo {\n\t\n\t\t//var dirToCheck = [0,1,2,3,4,5,6,7];\n\t\tvar dirToCheck = [0,2,4,6];\n\t\tdirToCheck = dirToCheck.randomize();\n\t\t\n\t\tdo {\n\t\t\tfound = false;\n\t\t\tidx = dirToCheck.pop();\n\t\t\t\n\t\t\t\n\t\t\tncgx = cgx + ROT.DIRS[8][idx][0];\n\t\t\tncgy = cgy + ROT.DIRS[8][idx][1];\n\t\t\t\n\t\t\tif(ncgx < 0 || ncgx >= this._options.cellWidth) continue;\n\t\t\tif(ncgy < 0 || ncgy >= this._options.cellHeight) continue;\n\t\t\t\n\t\t\troom = this.rooms[cgx][cgy];\n\t\t\t\n\t\t\tif(room[\"connections\"].length > 0)\n\t\t\t{\n\t\t\t\t// as long as this room doesn't already coonect to me, we are ok with it. \n\t\t\t\tif(room[\"connections\"][0][0] == ncgx &&\n\t\t\t\troom[\"connections\"][0][1] == ncgy)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\totherRoom = this.rooms[ncgx][ncgy];\n\t\t\t\n\t\t\tif (otherRoom[\"connections\"].length == 0) { \n\t\t\t\totherRoom[\"connections\"].push([cgx,cgy]);\n\t\t\t\t\n\t\t\t\tthis.connectedCells.push([ncgx, ncgy]);\n\t\t\t\tcgx = ncgx;\n\t\t\t\tcgy = ncgy;\n\t\t\t\tfound = true;\n\t\t\t}\n\t\t\t\t\t\n\t\t} while (dirToCheck.length > 0 && found == false)\n\t\t\n\t} while (dirToCheck.length > 0)\n\n}\n\nROT.Map.Rogue.prototype._connectUnconnectedRooms = function() {\n\t//While there are unconnected rooms, try to connect them to a random connected neighbor \n\t//(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n\tvar cw = this._options.cellWidth;\n\tvar ch = this._options.cellHeight;\n\t\n\tvar randomConnectedCell;\n\tthis.connectedCells = this.connectedCells.randomize();\n\tvar room;\n\tvar otherRoom;\n\tvar validRoom;\n\t\n\tfor (var i = 0; i < this._options.cellWidth; i++) {\n\t\tfor (var j = 0; j < this._options.cellHeight; j++)  {\n\t\t\t\t\n\t\t\troom = this.rooms[i][j];\n\t\t\t\n\t\t\tif (room[\"connections\"].length == 0) {\n\t\t\t\tvar directions = [0,2,4,6];\n\t\t\t\tdirections = directions.randomize();\n\t\t\t\t\n\t\t\t\tvar validRoom = false;\n\t\t\t\t\n\t\t\t\tdo {\n\t\t\t\t\t\n\t\t\t\t\tvar dirIdx = directions.pop();\n\t\t\t\t\tvar newI = i + ROT.DIRS[8][dirIdx][0];\n\t\t\t\t\tvar newJ = j + ROT.DIRS[8][dirIdx][1];\n\t\t\t\t\t\n\t\t\t\t\tif (newI < 0 || newI >= cw || \n\t\t\t\t\tnewJ < 0 || newJ >= ch) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\totherRoom = this.rooms[newI][newJ];\n\t\t\t\t\t\n\t\t\t\t\tvalidRoom = true;\n\t\t\t\t\t\n\t\t\t\t\tif (otherRoom[\"connections\"].length == 0) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < otherRoom[\"connections\"].length; k++) {\n\t\t\t\t\t\tif(otherRoom[\"connections\"][k][0] == i && \n\t\t\t\t\t\totherRoom[\"connections\"][k][1] == j) {\n\t\t\t\t\t\t\tvalidRoom = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (validRoom) break;\n\t\t\t\t\t\n\t\t\t\t} while (directions.length)\n\t\t\t\t\n\t\t\t\tif(validRoom) { \n\t\t\t\t\troom[\"connections\"].push( [otherRoom[\"cellx\"], otherRoom[\"celly\"]] );  \n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"-- Unable to connect room.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._createRandomRoomConnections = function(connections) {\n\t// Empty for now. \n}\n\n\nROT.Map.Rogue.prototype._createRooms = function() {\n\t// Create Rooms \n\t\n\tvar w = this._width;\n\tvar h = this._height;\n\t\n\tvar cw = this._options.cellWidth;\n\tvar ch = this._options.cellHeight;\n\t\n\tvar cwp = Math.floor(this._width / cw);\n\tvar chp = Math.floor(this._height / ch);\n\t\n\tvar roomw;\n\tvar roomh;\n\tvar roomWidth = this._options[\"roomWidth\"];\n\tvar roomHeight = this._options[\"roomHeight\"];\n\tvar sx;\n\tvar sy;\n\tvar tx;\n\tvar ty;\n\tvar otherRoom;\n\t\n\tfor (var i = 0; i < cw; i++) {\n\t\tfor (var j = 0; j < ch; j++) {\n\t\t\tsx = cwp * i;\n\t\t\tsy = chp * j;\n\t\t\t\n\t\t\tif (sx == 0) sx = 1;\n\t\t\tif (sy == 0) sy = 1;\n\t\t\t\n\t\t\troomw = ROT.RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n\t\t\troomh = ROT.RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n\t\t\t\n\t\t\tif (j > 0) {\n\t\t\t\totherRoom = this.rooms[i][j-1];\n\t\t\t\twhile (sy - (otherRoom[\"y\"] + otherRoom[\"height\"] ) < 3) {\n\t\t\t\t\tsy++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (i > 0) {\n\t\t\t\totherRoom = this.rooms[i-1][j];\n\t\t\t\twhile(sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n\t\t\t\t\tsx++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar sxOffset = Math.round(ROT.RNG.getUniformInt(0, cwp-roomw)/2);\n\t\t\tvar syOffset = Math.round(ROT.RNG.getUniformInt(0, chp-roomh)/2);\n\t\t\t\n\t\t\twhile (sx + sxOffset + roomw >= w) {\n\t\t\t\tif(sxOffset) {\n\t\t\t\t\tsxOffset--;\n\t\t\t\t} else {\n\t\t\t\t\troomw--; \n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\twhile (sy + syOffset + roomh >= h) { \n\t\t\t\tif(syOffset) {\n\t\t\t\t\tsyOffset--;\n\t\t\t\t} else {\n\t\t\t\t\troomh--; \n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tsx = sx + sxOffset;\n\t\t\tsy = sy + syOffset;\n\t\t\t\n\t\t\tthis.rooms[i][j][\"x\"] = sx;\n\t\t\tthis.rooms[i][j][\"y\"] = sy;\n\t\t\tthis.rooms[i][j][\"width\"] = roomw;\n\t\t\tthis.rooms[i][j][\"height\"] = roomh;  \n\t\t\t\n\t\t\tfor (var ii = sx; ii < sx + roomw; ii++) {\n\t\t\t\tfor (var jj = sy; jj < sy + roomh; jj++) {\n\t\t\t\t\tthis.map[ii][jj] = 0;\n\t\t\t\t}\n\t\t\t}  \n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._getWallPosition = function(aRoom, aDirection) {\n\tvar rx;\n\tvar ry;\n\tvar door;\n\t\n\tif (aDirection == 1 || aDirection == 3) {\n\t\trx = ROT.RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n\t\tif (aDirection == 1) {\n\t\t\try = aRoom[\"y\"] - 2;\n\t\t\tdoor = ry + 1;\n\t\t} else {\n\t\t\try = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n\t\t\tdoor = ry -1;\n\t\t}\n\t\t\n\t\tthis.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space. \n\t\t\n\t} else if (aDirection == 2 || aDirection == 4) {\n\t\try = ROT.RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n\t\tif(aDirection == 2) {\n\t\t\trx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n\t\t\tdoor = rx - 1;\n\t\t} else {\n\t\t\trx = aRoom[\"x\"] - 2;\n\t\t\tdoor = rx + 1;\n\t\t}\n\t\t\n\t\tthis.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space. \n\t\t\n\t}\n\treturn [rx, ry];\n}\n\n/***\n* @param startPosition a 2 element array\n* @param endPosition a 2 element array\n*/\nROT.Map.Rogue.prototype._drawCorridore = function (startPosition, endPosition) {\n\tvar xOffset = endPosition[0] - startPosition[0];\n\tvar yOffset = endPosition[1] - startPosition[1];\n\t\n\tvar xpos = startPosition[0];\n\tvar ypos = startPosition[1];\n\t\n\tvar tempDist;\n\tvar xDir;\n\tvar yDir;\n\t\n\tvar move; // 2 element array, element 0 is the direction, element 1 is the total value to move. \n\tvar moves = []; // a list of 2 element arrays\n\t\n\tvar xAbs = Math.abs(xOffset);\n\tvar yAbs = Math.abs(yOffset);\n\t\n\tvar percent = ROT.RNG.getUniform(); // used to split the move at different places along the long axis\n\tvar firstHalf = percent;\n\tvar secondHalf = 1 - percent;\n\t\n\txDir = xOffset > 0 ? 2 : 6;\n\tyDir = yOffset > 0 ? 4 : 0;\n\t\n\tif (xAbs < yAbs) {\n\t\t// move firstHalf of the y offset\n\t\ttempDist = Math.ceil(yAbs * firstHalf);\n\t\tmoves.push([yDir, tempDist]);\n\t\t// move all the x offset\n\t\tmoves.push([xDir, xAbs]);\n\t\t// move sendHalf of the  y offset\n\t\ttempDist = Math.floor(yAbs * secondHalf);\n\t\tmoves.push([yDir, tempDist]);\n\t} else {\n\t\t//  move firstHalf of the x offset\n\t\ttempDist = Math.ceil(xAbs * firstHalf);\n\t\tmoves.push([xDir, tempDist]);\n\t\t// move all the y offset\n\t\tmoves.push([yDir, yAbs]);\n\t\t// move secondHalf of the x offset.\n\t\ttempDist = Math.floor(xAbs * secondHalf);\n\t\tmoves.push([xDir, tempDist]);  \n\t}\n\t\n\tthis.map[xpos][ypos] = 0;\n\t\n\twhile (moves.length > 0) {\n\t\tmove = moves.pop();\n\t\twhile (move[1] > 0) {\n\t\t\txpos += ROT.DIRS[8][move[0]][0];\n\t\t\typos += ROT.DIRS[8][move[0]][1];\n\t\t\tthis.map[xpos][ypos] = 0;\n\t\t\tmove[1] = move[1] - 1;\n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._createCorridors = function () {\n\t// Draw Corridors between connected rooms\n\t\n\tvar cw = this._options.cellWidth;\n\tvar ch = this._options.cellHeight;\n\tvar room;\n\tvar connection;\n\tvar otherRoom;\n\tvar wall;\n\tvar otherWall;\n\t\n\tfor (var i = 0; i < cw; i++) {\n\t\tfor (var j = 0; j < ch; j++) {\n\t\t\troom = this.rooms[i][j];\n\t\t\t\n\t\t\tfor (var k = 0; k < room[\"connections\"].length; k++) {\n\t\t\t\t\t\n\t\t\t\tconnection = room[\"connections\"][k]; \n\t\t\t\t\n\t\t\t\totherRoom = this.rooms[connection[0]][connection[1]];\n\t\t\t\t\n\t\t\t\t// figure out what wall our corridor will start one.\n\t\t\t\t// figure out what wall our corridor will end on. \n\t\t\t\tif (otherRoom[\"cellx\"] > room[\"cellx\"] ) {\n\t\t\t\t\twall = 2;\n\t\t\t\t\totherWall = 4;\n\t\t\t\t} else if (otherRoom[\"cellx\"] < room[\"cellx\"] ) {\n\t\t\t\t\twall = 4;\n\t\t\t\t\totherWall = 2;\n\t\t\t\t} else if(otherRoom[\"celly\"] > room[\"celly\"]) {\n\t\t\t\t\twall = 3;\n\t\t\t\t\totherWall = 1;\n\t\t\t\t} else if(otherRoom[\"celly\"] < room[\"celly\"]) {\n\t\t\t\t\twall = 1;\n\t\t\t\t\totherWall = 3;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis._drawCorridore(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n\t\t\t}\n\t\t}\n\t}\n}\n/**\n * @class Dungeon feature; has own .create() method\n */\nROT.Map.Feature = function() {}\nROT.Map.Feature.prototype.isValid = function(canBeDugCallback) {}\nROT.Map.Feature.prototype.create = function(digCallback) {}\nROT.Map.Feature.prototype.debug = function() {}\nROT.Map.Feature.createRandomAt = function(x, y, dx, dy, options) {}\n\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nROT.Map.Feature.Room = function(x1, y1, x2, y2, doorX, doorY) {\n\tthis._x1 = x1;\n\tthis._y1 = y1;\n\tthis._x2 = x2;\n\tthis._y2 = y2;\n\tthis._doors = {};\n\tif (arguments.length > 4) { this.addDoor(doorX, doorY); }\n}\nROT.Map.Feature.Room.extend(ROT.Map.Feature);\n\n/**\n * Room of random size, with a given doors and direction\n */\nROT.Map.Feature.Room.createRandomAt = function(x, y, dx, dy, options) {\n\tvar min = options.roomWidth[0];\n\tvar max = options.roomWidth[1];\n\tvar width = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar min = options.roomHeight[0];\n\tvar max = options.roomHeight[1];\n\tvar height = ROT.RNG.getUniformInt(min, max);\n\t\n\tif (dx == 1) { /* to the right */\n\t\tvar y2 = y - Math.floor(ROT.RNG.getUniform() * height);\n\t\treturn new this(x+1, y2, x+width, y2+height-1, x, y);\n\t}\n\t\n\tif (dx == -1) { /* to the left */\n\t\tvar y2 = y - Math.floor(ROT.RNG.getUniform() * height);\n\t\treturn new this(x-width, y2, x-1, y2+height-1, x, y);\n\t}\n\n\tif (dy == 1) { /* to the bottom */\n\t\tvar x2 = x - Math.floor(ROT.RNG.getUniform() * width);\n\t\treturn new this(x2, y+1, x2+width-1, y+height, x, y);\n\t}\n\n\tif (dy == -1) { /* to the top */\n\t\tvar x2 = x - Math.floor(ROT.RNG.getUniform() * width);\n\t\treturn new this(x2, y-height, x2+width-1, y-1, x, y);\n\t}\n\n        throw new Error(\"dx or dy must be 1 or -1\");\n}\n\n/**\n * Room of random size, positioned around center coords\n */\nROT.Map.Feature.Room.createRandomCenter = function(cx, cy, options) {\n\tvar min = options.roomWidth[0];\n\tvar max = options.roomWidth[1];\n\tvar width = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar min = options.roomHeight[0];\n\tvar max = options.roomHeight[1];\n\tvar height = ROT.RNG.getUniformInt(min, max);\n\n\tvar x1 = cx - Math.floor(ROT.RNG.getUniform()*width);\n\tvar y1 = cy - Math.floor(ROT.RNG.getUniform()*height);\n\tvar x2 = x1 + width - 1;\n\tvar y2 = y1 + height - 1;\n\n\treturn new this(x1, y1, x2, y2);\n}\n\n/**\n * Room of random size within a given dimensions\n */\nROT.Map.Feature.Room.createRandom = function(availWidth, availHeight, options) {\n\tvar min = options.roomWidth[0];\n\tvar max = options.roomWidth[1];\n\tvar width = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar min = options.roomHeight[0];\n\tvar max = options.roomHeight[1];\n\tvar height = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar left = availWidth - width - 1;\n\tvar top = availHeight - height - 1;\n\n\tvar x1 = 1 + Math.floor(ROT.RNG.getUniform()*left);\n\tvar y1 = 1 + Math.floor(ROT.RNG.getUniform()*top);\n\tvar x2 = x1 + width - 1;\n\tvar y2 = y1 + height - 1;\n\n\treturn new this(x1, y1, x2, y2);\n}\n\nROT.Map.Feature.Room.prototype.addDoor = function(x, y) {\n\tthis._doors[x+\",\"+y] = 1;\n\treturn this;\n}\n\n/**\n * @param {function}\n */\nROT.Map.Feature.Room.prototype.getDoors = function(callback) {\n\tfor (var key in this._doors) {\n\t\tvar parts = key.split(\",\");\n\t\tcallback(parseInt(parts[0]), parseInt(parts[1]));\n\t}\n\treturn this;\n}\n\nROT.Map.Feature.Room.prototype.clearDoors = function() {\n\tthis._doors = {};\n\treturn this;\n}\n\nROT.Map.Feature.Room.prototype.addDoors = function(isWallCallback) {\n\tvar left = this._x1-1;\n\tvar right = this._x2+1;\n\tvar top = this._y1-1;\n\tvar bottom = this._y2+1;\n\n\tfor (var x=left; x<=right; x++) {\n\t\tfor (var y=top; y<=bottom; y++) {\n\t\t\tif (x != left && x != right && y != top && y != bottom) { continue; }\n\t\t\tif (isWallCallback(x, y)) { continue; }\n\n\t\t\tthis.addDoor(x, y);\n\t\t}\n\t}\n\n\treturn this;\n}\n\nROT.Map.Feature.Room.prototype.debug = function() {\n\tconsole.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n}\n\nROT.Map.Feature.Room.prototype.isValid = function(isWallCallback, canBeDugCallback) { \n\tvar left = this._x1-1;\n\tvar right = this._x2+1;\n\tvar top = this._y1-1;\n\tvar bottom = this._y2+1;\n\t\n\tfor (var x=left; x<=right; x++) {\n\t\tfor (var y=top; y<=bottom; y++) {\n\t\t\tif (x == left || x == right || y == top || y == bottom) {\n\t\t\t\tif (!isWallCallback(x, y)) { return false; }\n\t\t\t} else {\n\t\t\t\tif (!canBeDugCallback(x, y)) { return false; }\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n */\nROT.Map.Feature.Room.prototype.create = function(digCallback) { \n\tvar left = this._x1-1;\n\tvar right = this._x2+1;\n\tvar top = this._y1-1;\n\tvar bottom = this._y2+1;\n\t\n\tvar value = 0;\n\tfor (var x=left; x<=right; x++) {\n\t\tfor (var y=top; y<=bottom; y++) {\n\t\t\tif (x+\",\"+y in this._doors) {\n\t\t\t\tvalue = 2;\n\t\t\t} else if (x == left || x == right || y == top || y == bottom) {\n\t\t\t\tvalue = 1;\n\t\t\t} else {\n\t\t\t\tvalue = 0;\n\t\t\t}\n\t\t\tdigCallback(x, y, value);\n\t\t}\n\t}\n}\n\nROT.Map.Feature.Room.prototype.getCenter = function() {\n\treturn [Math.round((this._x1 + this._x2)/2), Math.round((this._y1 + this._y2)/2)];\n}\n\nROT.Map.Feature.Room.prototype.getLeft = function() {\n\treturn this._x1;\n}\n\nROT.Map.Feature.Room.prototype.getRight = function() {\n\treturn this._x2;\n}\n\nROT.Map.Feature.Room.prototype.getTop = function() {\n\treturn this._y1;\n}\n\nROT.Map.Feature.Room.prototype.getBottom = function() {\n\treturn this._y2;\n}\n\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nROT.Map.Feature.Corridor = function(startX, startY, endX, endY) {\n\tthis._startX = startX;\n\tthis._startY = startY;\n\tthis._endX = endX; \n\tthis._endY = endY;\n\tthis._endsWithAWall = true;\n}\nROT.Map.Feature.Corridor.extend(ROT.Map.Feature);\n\nROT.Map.Feature.Corridor.createRandomAt = function(x, y, dx, dy, options) {\n\tvar min = options.corridorLength[0];\n\tvar max = options.corridorLength[1];\n\tvar length = ROT.RNG.getUniformInt(min, max);\n\t\n\treturn new this(x, y, x + dx*length, y + dy*length);\n}\n\nROT.Map.Feature.Corridor.prototype.debug = function() {\n\tconsole.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n}\n\nROT.Map.Feature.Corridor.prototype.isValid = function(isWallCallback, canBeDugCallback){ \n\tvar sx = this._startX;\n\tvar sy = this._startY;\n\tvar dx = this._endX-sx;\n\tvar dy = this._endY-sy;\n\tvar length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n\t\n\tif (dx) { dx = dx/Math.abs(dx); }\n\tif (dy) { dy = dy/Math.abs(dy); }\n\tvar nx = dy;\n\tvar ny = -dx;\n\t\n\tvar ok = true;\n\tfor (var i=0; i<length; i++) {\n\t\tvar x = sx + i*dx;\n\t\tvar y = sy + i*dy;\n\n\t\tif (!canBeDugCallback(     x,      y)) { ok = false; }\n\t\tif (!isWallCallback  (x + nx, y + ny)) { ok = false; }\n\t\tif (!isWallCallback  (x - nx, y - ny)) { ok = false; }\n\t\t\n\t\tif (!ok) {\n\t\t\tlength = i;\n\t\t\tthis._endX = x-dx;\n\t\t\tthis._endY = y-dy;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\t/**\n\t * If the length degenerated, this corridor might be invalid\n\t */\n\t \n\t/* not supported */\n\tif (length == 0) { return false; } \n\t\n\t /* length 1 allowed only if the next space is empty */\n\tif (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) { return false; }\n\t\n\t/**\n\t * We do not want the corridor to crash into a corner of a room;\n\t * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n\t * \n\t * Situation:\n\t * #######1\n\t * .......?\n\t * #######2\n\t * \n\t * The corridor was dug from left to right.\n\t * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n\t */\n\tvar firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n\tvar secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n\tthis._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n\tif ((firstCornerBad || secondCornerBad) && this._endsWithAWall) { return false; }\n\n\treturn true;\n}\n\n/**\n * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n */\nROT.Map.Feature.Corridor.prototype.create = function(digCallback) { \n\tvar sx = this._startX;\n\tvar sy = this._startY;\n\tvar dx = this._endX-sx;\n\tvar dy = this._endY-sy;\n\tvar length = 1+Math.max(Math.abs(dx), Math.abs(dy));\n\t\n\tif (dx) { dx = dx/Math.abs(dx); }\n\tif (dy) { dy = dy/Math.abs(dy); }\n\tvar nx = dy;\n\tvar ny = -dx;\n\t\n\tfor (var i=0; i<length; i++) {\n\t\tvar x = sx + i*dx;\n\t\tvar y = sy + i*dy;\n\t\tdigCallback(x, y, 0);\n\t}\n\t\n\treturn true;\n}\n\nROT.Map.Feature.Corridor.prototype.createPriorityWalls = function(priorityWallCallback) {\n\tif (!this._endsWithAWall) { return; }\n\n\tvar sx = this._startX;\n\tvar sy = this._startY;\n\n\tvar dx = this._endX-sx;\n\tvar dy = this._endY-sy;\n\tif (dx) { dx = dx/Math.abs(dx); }\n\tif (dy) { dy = dy/Math.abs(dy); }\n\tvar nx = dy;\n\tvar ny = -dx;\n\n\tpriorityWallCallback(this._endX + dx, this._endY + dy);\n\tpriorityWallCallback(this._endX + nx, this._endY + ny);\n\tpriorityWallCallback(this._endX - nx, this._endY - ny);\n}\n/**\n * @class Base noise generator\n */\nROT.Noise = function() {\n};\n\nROT.Noise.prototype.get = function(x, y) {}\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\n\n/**\n * @class 2D simplex noise generator\n * @param {int} [gradients=256] Random gradients\n */\nROT.Noise.Simplex = function(gradients) {\n\tROT.Noise.call(this);\n\n\tthis._F2 = 0.5 * (Math.sqrt(3) - 1);\n\tthis._G2 = (3 - Math.sqrt(3)) / 6;\n\n\tthis._gradients = [\n\t\t[ 0, -1],\n\t\t[ 1, -1],\n\t\t[ 1,  0],\n\t\t[ 1,  1],\n\t\t[ 0,  1],\n\t\t[-1,  1],\n\t\t[-1,  0],\n\t\t[-1, -1]\n\t];\n\n\tvar permutations = [];\n\tvar count = gradients || 256;\n\tfor (var i=0;i<count;i++) { permutations.push(i); }\n\tpermutations = permutations.randomize();\n\n\tthis._perms = [];\n\tthis._indexes = [];\n\n\tfor (var i=0;i<2*count;i++) {\n\t\tthis._perms.push(permutations[i % count]);\n\t\tthis._indexes.push(this._perms[i] % this._gradients.length);\n\t}\n\n};\nROT.Noise.Simplex.extend(ROT.Noise);\n\nROT.Noise.Simplex.prototype.get = function(xin, yin) {\n\tvar perms = this._perms;\n\tvar indexes = this._indexes;\n\tvar count = perms.length/2;\n\tvar G2 = this._G2;\n\n\tvar n0 =0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n\n\t// Skew the input space to determine which simplex cell we're in\n\tvar s = (xin + yin) * this._F2; // Hairy factor for 2D\n\tvar i = Math.floor(xin + s);\n\tvar j = Math.floor(yin + s);\n\tvar t = (i + j) * G2;\n\tvar X0 = i - t; // Unskew the cell origin back to (x,y) space\n\tvar Y0 = j - t;\n\tvar x0 = xin - X0; // The x,y distances from the cell origin\n\tvar y0 = yin - Y0;\n\n\t// For the 2D case, the simplex shape is an equilateral triangle.\n\t// Determine which simplex we are in.\n\tvar i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n\tif (x0 > y0) {\n\t\ti1 = 1;\n\t\tj1 = 0;\n\t} else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n\t\ti1 = 0;\n\t\tj1 = 1;\n\t} // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n\n\t// A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n\t// a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n\t// c = (3-sqrt(3))/6\n\tvar x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n\tvar y1 = y0 - j1 + G2;\n\tvar x2 = x0 - 1 + 2*G2; // Offsets for last corner in (x,y) unskewed coords\n\tvar y2 = y0 - 1 + 2*G2;\n\n\t// Work out the hashed gradient indices of the three simplex corners\n\tvar ii = i.mod(count);\n\tvar jj = j.mod(count);\n\n\t// Calculate the contribution from the three corners\n\tvar t0 = 0.5 - x0*x0 - y0*y0;\n\tif (t0 >= 0) {\n\t\tt0 *= t0;\n\t\tgi = indexes[ii+perms[jj]];\n\t\tvar grad = this._gradients[gi];\n\t\tn0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n\t}\n\t\n\tvar t1 = 0.5 - x1*x1 - y1*y1;\n\tif (t1 >= 0) {\n\t\tt1 *= t1;\n\t\tgi = indexes[ii+i1+perms[jj+j1]];\n\t\tvar grad = this._gradients[gi];\n\t\tn1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n\t}\n\t\n\tvar t2 = 0.5 - x2*x2 - y2*y2;\n\tif (t2 >= 0) {\n\t\tt2 *= t2;\n\t\tgi = indexes[ii+1+perms[jj+1]];\n\t\tvar grad = this._gradients[gi];\n\t\tn2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n\t}\n\n\t// Add contributions from each corner to get the final noise value.\n\t// The result is scaled to return values in the interval [-1,1].\n\treturn 70 * (n0 + n1 + n2);\n}\n/**\n * @class Abstract FOV algorithm\n * @param {function} lightPassesCallback Does the light pass through x,y?\n * @param {object} [options]\n * @param {int} [options.topology=8] 4/6/8\n */\nROT.FOV = function(lightPassesCallback, options) {\n\tthis._lightPasses = lightPassesCallback;\n\tthis._options = {\n\t\ttopology: 8\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n};\n\n/**\n * Compute visibility for a 360-degree circle\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {function} callback\n */\nROT.FOV.prototype.compute = function(x, y, R, callback) {}\n\n/**\n * Return all neighbors in a concentric ring\n * @param {int} cx center-x\n * @param {int} cy center-y\n * @param {int} r range\n */\nROT.FOV.prototype._getCircle = function(cx, cy, r) {\n\tvar result = [];\n\tvar dirs, countFactor, startOffset;\n\n\tswitch (this._options.topology) {\n\t\tcase 4:\n\t\t\tcountFactor = 1;\n\t\t\tstartOffset = [0, 1];\n\t\t\tdirs = [\n\t\t\t\tROT.DIRS[8][7],\n\t\t\t\tROT.DIRS[8][1],\n\t\t\t\tROT.DIRS[8][3],\n\t\t\t\tROT.DIRS[8][5]\n\t\t\t]\n\t\tbreak;\n\n\t\tcase 6:\n\t\t\tdirs = ROT.DIRS[6];\n\t\t\tcountFactor = 1;\n\t\t\tstartOffset = [-1, 1];\n\t\tbreak;\n\n\t\tcase 8:\n\t\t\tdirs = ROT.DIRS[4];\n\t\t\tcountFactor = 2;\n\t\t\tstartOffset = [-1, 1];\n\t\tbreak;\n\t}\n\n\t/* starting neighbor */\n\tvar x = cx + startOffset[0]*r;\n\tvar y = cy + startOffset[1]*r;\n\n\t/* circle */\n\tfor (var i=0;i<dirs.length;i++) {\n\t\tfor (var j=0;j<r*countFactor;j++) {\n\t\t\tresult.push([x, y]);\n\t\t\tx += dirs[i][0];\n\t\t\ty += dirs[i][1];\n\n\t\t}\n\t}\n\n\treturn result;\n}\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nROT.FOV.DiscreteShadowcasting = function(lightPassesCallback, options) {\n\tROT.FOV.call(this, lightPassesCallback, options);\n}\nROT.FOV.DiscreteShadowcasting.extend(ROT.FOV);\n\n/**\n * @see ROT.FOV#compute\n */\nROT.FOV.DiscreteShadowcasting.prototype.compute = function(x, y, R, callback) {\n\tvar center = this._coords;\n\tvar map = this._map;\n\n\t/* this place is always visible */\n\tcallback(x, y, 0, 1);\n\n\t/* standing in a dark place. FIXME is this a good idea?  */\n\tif (!this._lightPasses(x, y)) { return; }\n\t\n\t/* start and end angles */\n\tvar DATA = [];\n\t\n\tvar A, B, cx, cy, blocks;\n\n\t/* analyze surrounding cells in concentric rings, starting from the center */\n\tfor (var r=1; r<=R; r++) {\n\t\tvar neighbors = this._getCircle(x, y, r);\n\t\tvar angle = 360 / neighbors.length;\n\n\t\tfor (var i=0;i<neighbors.length;i++) {\n\t\t\tcx = neighbors[i][0];\n\t\t\tcy = neighbors[i][1];\n\t\t\tA = angle * (i - 0.5);\n\t\t\tB = A + angle;\n\t\t\t\n\t\t\tblocks = !this._lightPasses(cx, cy);\n\t\t\tif (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) { callback(cx, cy, r, 1); }\n\t\t\t\n\t\t\tif (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) { return; } /* cutoff? */\n\n\t\t} /* for all cells in this ring */\n\t} /* for all rings */\n}\n\n/**\n * @param {int} A start angle\n * @param {int} B end angle\n * @param {bool} blocks Does current cell block visibility?\n * @param {int[][]} DATA shadowed angle pairs\n */\nROT.FOV.DiscreteShadowcasting.prototype._visibleCoords = function(A, B, blocks, DATA) {\n\tif (A < 0) { \n\t\tvar v1 = arguments.callee(0, B, blocks, DATA);\n\t\tvar v2 = arguments.callee(360+A, 360, blocks, DATA);\n\t\treturn v1 || v2;\n\t}\n\t\n\tvar index = 0;\n\twhile (index < DATA.length && DATA[index] < A) { index++; }\n\t\n\tif (index == DATA.length) { /* completely new shadow */\n\t\tif (blocks) { DATA.push(A, B); } \n\t\treturn true;\n\t}\n\t\n\tvar count = 0;\n\t\n\tif (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n\t\twhile (index < DATA.length && DATA[index] < B) {\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\tif (count == 0) { return false; }\n\t\t\n\t\tif (blocks) { \n\t\t\tif (count % 2) {\n\t\t\t\tDATA.splice(index-count, count, B);\n\t\t\t} else {\n\t\t\t\tDATA.splice(index-count, count);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\n\t} else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n\t\twhile (index < DATA.length && DATA[index] < B) {\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\t/* visible when outside an existing shadow, or when overlapping */\n\t\tif (A == DATA[index-count] && count == 1) { return false; }\n\t\t\n\t\tif (blocks) { \n\t\t\tif (count % 2) {\n\t\t\t\tDATA.splice(index-count, count, A);\n\t\t\t} else {\n\t\t\t\tDATA.splice(index-count, count, A, B);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\treturn true;\n\t}\n}\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nROT.FOV.PreciseShadowcasting = function(lightPassesCallback, options) {\n\tROT.FOV.call(this, lightPassesCallback, options);\n}\nROT.FOV.PreciseShadowcasting.extend(ROT.FOV);\n\n/**\n * @see ROT.FOV#compute\n */\nROT.FOV.PreciseShadowcasting.prototype.compute = function(x, y, R, callback) {\n\t/* this place is always visible */\n\tcallback(x, y, 0, 1);\n\n\t/* standing in a dark place. FIXME is this a good idea?  */\n\tif (!this._lightPasses(x, y)) { return; }\n\t\n\t/* list of all shadows */\n\tvar SHADOWS = [];\n\t\n\tvar cx, cy, blocks, A1, A2, visibility;\n\n\t/* analyze surrounding cells in concentric rings, starting from the center */\n\tfor (var r=1; r<=R; r++) {\n\t\tvar neighbors = this._getCircle(x, y, r);\n\t\tvar neighborCount = neighbors.length;\n\n\t\tfor (var i=0;i<neighborCount;i++) {\n\t\t\tcx = neighbors[i][0];\n\t\t\tcy = neighbors[i][1];\n\t\t\t/* shift half-an-angle backwards to maintain consistency of 0-th cells */\n\t\t\tA1 = [i ? 2*i-1 : 2*neighborCount-1, 2*neighborCount];\n\t\t\tA2 = [2*i+1, 2*neighborCount]; \n\t\t\t\n\t\t\tblocks = !this._lightPasses(cx, cy);\n\t\t\tvisibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n\t\t\tif (visibility) { callback(cx, cy, r, visibility); }\n\n\t\t\tif (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) { return; } /* cutoff? */\n\n\t\t} /* for all cells in this ring */\n\t} /* for all rings */\n}\n\n/**\n * @param {int[2]} A1 arc start\n * @param {int[2]} A2 arc end\n * @param {bool} blocks Does current arc block visibility?\n * @param {int[][]} SHADOWS list of active shadows\n */\nROT.FOV.PreciseShadowcasting.prototype._checkVisibility = function(A1, A2, blocks, SHADOWS) {\n\tif (A1[0] > A2[0]) { /* split into two sub-arcs */\n\t\tvar v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n\t\tvar v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n\t\treturn (v1+v2)/2;\n\t}\n\n\t/* index1: first shadow >= A1 */\n\tvar index1 = 0, edge1 = false;\n\twhile (index1 < SHADOWS.length) {\n\t\tvar old = SHADOWS[index1];\n\t\tvar diff = old[0]*A1[1] - A1[0]*old[1];\n\t\tif (diff >= 0) { /* old >= A1 */\n\t\t\tif (diff == 0 && !(index1 % 2)) { edge1 = true; }\n\t\t\tbreak;\n\t\t}\n\t\tindex1++;\n\t}\n\n\t/* index2: last shadow <= A2 */\n\tvar index2 = SHADOWS.length, edge2 = false;\n\twhile (index2--) {\n\t\tvar old = SHADOWS[index2];\n\t\tvar diff = A2[0]*old[1] - old[0]*A2[1];\n\t\tif (diff >= 0) { /* old <= A2 */\n\t\t\tif (diff == 0 && (index2 % 2)) { edge2 = true; }\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tvar visible = true;\n\tif (index1 == index2 && (edge1 || edge2)) {  /* subset of existing shadow, one of the edges match */\n\t\tvisible = false; \n\t} else if (edge1 && edge2 && index1+1==index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n\t\tvisible = false;\n\t} else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n\t\tvisible = false;\n\t}\n\t\n\tif (!visible) { return 0; } /* fast case: not visible */\n\t\n\tvar visibleLength, P;\n\n\t/* compute the length of visible arc, adjust list of shadows (if blocking) */\n\tvar remove = index2-index1+1;\n\tif (remove % 2) {\n\t\tif (index1 % 2) { /* first edge within existing shadow, second outside */\n\t\t\tvar P = SHADOWS[index1];\n\t\t\tvisibleLength = (A2[0]*P[1] - P[0]*A2[1]) / (P[1] * A2[1]);\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove, A2); }\n\t\t} else { /* second edge within existing shadow, first outside */\n\t\t\tvar P = SHADOWS[index2];\n\t\t\tvisibleLength = (P[0]*A1[1] - A1[0]*P[1]) / (A1[1] * P[1]);\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove, A1); }\n\t\t}\n\t} else {\n\t\tif (index1 % 2) { /* both edges within existing shadows */\n\t\t\tvar P1 = SHADOWS[index1];\n\t\t\tvar P2 = SHADOWS[index2];\n\t\t\tvisibleLength = (P2[0]*P1[1] - P1[0]*P2[1]) / (P1[1] * P2[1]);\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove); }\n\t\t} else { /* both edges outside existing shadows */\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove, A1, A2); }\n\t\t\treturn 1; /* whole arc visible! */\n\t\t}\n\t}\n\n\tvar arcLength = (A2[0]*A1[1] - A1[0]*A2[1]) / (A1[1] * A2[1]);\n\n\treturn visibleLength/arcLength;\n}\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nROT.FOV.RecursiveShadowcasting = function(lightPassesCallback, options) {\n\tROT.FOV.call(this, lightPassesCallback, options);\n}\nROT.FOV.RecursiveShadowcasting.extend(ROT.FOV);\n\n/** Octants used for translating recursive shadowcasting offsets */\nROT.FOV.RecursiveShadowcasting.OCTANTS = [\n\t[-1,  0,  0,  1],\n\t[ 0, -1,  1,  0],\n\t[ 0, -1, -1,  0],\n\t[-1,  0,  0, -1],\n\t[ 1,  0,  0, -1],\n\t[ 0,  1, -1,  0],\n\t[ 0,  1,  1,  0],\n\t[ 1,  0,  0,  1]\n];\n\n/**\n * Compute visibility for a 360-degree circle\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype.compute = function(x, y, R, callback) {\n\t//You can always see your own tile\n\tcallback(x, y, 0, 1);\n\tfor(var i = 0; i < ROT.FOV.RecursiveShadowcasting.OCTANTS.length; i++) {\n\t\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[i], R, callback);\n\t}\n}\n\n/**\n * Compute visibility for a 180-degree arc\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype.compute180 = function(x, y, R, dir, callback) {\n\t//You can always see your own tile\n\tcallback(x, y, 0, 1);\n\tvar previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n\tvar nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n\tvar nextOctant = (dir+ 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[nextPreviousOctant], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[previousOctant], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[dir], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[nextOctant], R, callback);\n}\n\n/**\n * Compute visibility for a 90-degree arc\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype.compute90 = function(x, y, R, dir, callback) {\n\t//You can always see your own tile\n\tcallback(x, y, 0, 1);\n\tvar previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[dir], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[previousOctant], R, callback);\n}\n\n/**\n * Render one octant (45-degree arc) of the viewshed\n * @param {int} x\n * @param {int} y\n * @param {int} octant Octant to be rendered\n * @param {int} R Maximum visibility radius\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype._renderOctant = function(x, y, octant, R, callback) {\n\t//Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n\tthis._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n}\n\n/**\n * Actually calculates the visibility\n * @param {int} startX The starting X coordinate\n * @param {int} startY The starting Y coordinate\n * @param {int} row The row to render\n * @param {float} visSlopeStart The slope to start at\n * @param {float} visSlopeEnd The slope to end at\n * @param {int} radius The radius to reach out to\n * @param {int} xx \n * @param {int} xy \n * @param {int} yx \n * @param {int} yy \n * @param {function} callback The callback to use when we hit a block that is visible\n */\nROT.FOV.RecursiveShadowcasting.prototype._castVisibility = function(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n\tif(visSlopeStart < visSlopeEnd) { return; }\n\tfor(var i = row; i <= radius; i++) {\n\t\tvar dx = -i - 1;\n\t\tvar dy = -i;\n\t\tvar blocked = false;\n\t\tvar newStart = 0;\n\n\t\t//'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n\t\twhile(dx <= 0) {\n\t\t\tdx += 1;\n\n\t\t\t//Translate from relative coordinates to map coordinates\n\t\t\tvar mapX = startX + dx * xx + dy * xy;\n\t\t\tvar mapY = startY + dx * yx + dy * yy;\n\n\t\t\t//Range of the row\n\t\t\tvar slopeStart = (dx - 0.5) / (dy + 0.5);\n\t\t\tvar slopeEnd = (dx + 0.5) / (dy - 0.5);\n\t\t\n\t\t\t//Ignore if not yet at left edge of Octant\n\t\t\tif(slopeEnd > visSlopeStart) { continue; }\n\t\t\t\n\t\t\t//Done if past right edge\n\t\t\tif(slopeStart < visSlopeEnd) { break; }\n\t\t\t\t\n\t\t\t//If it's in range, it's visible\n\t\t\tif((dx * dx + dy * dy) < (radius * radius)) {\n\t\t\t\tcallback(mapX, mapY, i, 1);\n\t\t\t}\n\t\n\t\t\tif(!blocked) {\n\t\t\t\t//If tile is a blocking tile, cast around it\n\t\t\t\tif(!this._lightPasses(mapX, mapY) && i < radius) {\n\t\t\t\t\tblocked = true;\n\t\t\t\t\tthis._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n\t\t\t\t\tnewStart = slopeEnd;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//Keep narrowing if scanning across a block\n\t\t\t\tif(!this._lightPasses(mapX, mapY)) {\n\t\t\t\t\tnewStart = slopeEnd;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\n\t\t\t\t//Block has ended\n\t\t\t\tblocked = false;\n\t\t\t\tvisSlopeStart = newStart;\n\t\t\t}\n\t\t}\n\t\tif(blocked) { break; }\n\t}\n}\n/**\n * @namespace Color operations\n */\nROT.Color = {\n\tfromString: function(str) {\n\t\tvar cached, r;\n\t\tif (str in this._cache) {\n\t\t\tcached = this._cache[str];\n\t\t} else {\n\t\t\tif (str.charAt(0) == \"#\") { /* hex rgb */\n\n\t\t\t\tvar values = str.match(/[0-9a-f]/gi).map(function(x) { return parseInt(x, 16); });\n\t\t\t\tif (values.length == 3) {\n\t\t\t\t\tcached = values.map(function(x) { return x*17; });\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i=0;i<3;i++) {\n\t\t\t\t\t\tvalues[i+1] += 16*values[i];\n\t\t\t\t\t\tvalues.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t\tcached = values;\n\t\t\t\t}\n\n\t\t\t} else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { /* decimal rgb */\n\t\t\t\tcached = r[1].split(/\\s*,\\s*/).map(function(x) { return parseInt(x); });\n\t\t\t} else { /* html name */\n\t\t\t\tcached = [0, 0, 0];\n\t\t\t}\n\n\t\t\tthis._cache[str] = cached;\n\t\t}\n\n\t\treturn cached.slice();\n\t},\n\n\t/**\n\t * Add two or more colors\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tadd: function(color1, color2) {\n\t\tvar result = color1.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tresult[i] += arguments[j][i];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Add two or more colors, MODIFIES FIRST ARGUMENT\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tadd_: function(color1, color2) {\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tcolor1[i] += arguments[j][i];\n\t\t\t}\n\t\t}\n\t\treturn color1;\n\t},\n\n\t/**\n\t * Multiply (mix) two or more colors\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tmultiply: function(color1, color2) {\n\t\tvar result = color1.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tresult[i] *= arguments[j][i] / 255;\n\t\t\t}\n\t\t\tresult[i] = Math.round(result[i]);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tmultiply_: function(color1, color2) {\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tcolor1[i] *= arguments[j][i] / 255;\n\t\t\t}\n\t\t\tcolor1[i] = Math.round(color1[i]);\n\t\t}\n\t\treturn color1;\n\t},\n\n\t/**\n\t * Interpolate (blend) two colors with a given factor\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @param {float} [factor=0.5] 0..1\n\t * @returns {number[]}\n\t */\n\tinterpolate: function(color1, color2, factor) {\n\t\tif (arguments.length < 3) { factor = 0.5; }\n\t\tvar result = color1.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tresult[i] = Math.round(result[i] + factor*(color2[i]-color1[i]));\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Interpolate (blend) two colors with a given factor in HSL mode\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @param {float} [factor=0.5] 0..1\n\t * @returns {number[]}\n\t */\n\tinterpolateHSL: function(color1, color2, factor) {\n\t\tif (arguments.length < 3) { factor = 0.5; }\n\t\tvar hsl1 = this.rgb2hsl(color1);\n\t\tvar hsl2 = this.rgb2hsl(color2);\n\t\tfor (var i=0;i<3;i++) {\n\t\t\thsl1[i] += factor*(hsl2[i]-hsl1[i]);\n\t\t}\n\t\treturn this.hsl2rgb(hsl1);\n\t},\n\n\t/**\n\t * Create a new random color based on this one\n\t * @param {number[]} color\n\t * @param {number[]} diff Set of standard deviations\n\t * @returns {number[]}\n\t */\n\trandomize: function(color, diff) {\n\t\tif (!(diff instanceof Array)) { diff = Math.round(ROT.RNG.getNormal(0, diff)); }\n\t\tvar result = color.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tresult[i] += (diff instanceof Array ? Math.round(ROT.RNG.getNormal(0, diff[i])) : diff);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n\t * @param {number[]} color\n\t * @returns {number[]}\n\t */\n\trgb2hsl: function(color) {\n\t\tvar r = color[0]/255;\n\t\tvar g = color[1]/255;\n\t\tvar b = color[2]/255;\n\n\t\tvar max = Math.max(r, g, b), min = Math.min(r, g, b);\n\t\tvar h, s, l = (max + min) / 2;\n\n\t\tif (max == min) {\n\t\t\th = s = 0; // achromatic\n\t\t} else {\n\t\t\tvar d = max - min;\n\t\t\ts = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n\t\t\tswitch(max) {\n\t\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\n\t\t\t\tcase g: h = (b - r) / d + 2; break;\n\t\t\t\tcase b: h = (r - g) / d + 4; break;\n\t\t\t}\n\t\t\th /= 6;\n\t\t}\n\n\t\treturn [h, s, l];\n\t},\n\n\t/**\n\t * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n\t * @param {number[]} color\n\t * @returns {number[]}\n\t */\n\thsl2rgb: function(color) {\n\t\tvar l = color[2];\n\n\t\tif (color[1] == 0) {\n\t\t\tl = Math.round(l*255);\n\t\t\treturn [l, l, l];\n\t\t} else {\n\t\t\tvar hue2rgb = function(p, q, t) {\n\t\t\t\tif (t < 0) t += 1;\n\t\t\t\tif (t > 1) t -= 1;\n\t\t\t\tif (t < 1/6) return p + (q - p) * 6 * t;\n\t\t\t\tif (t < 1/2) return q;\n\t\t\t\tif (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n\t\t\t\treturn p;\n\t\t\t}\n\n\t\t\tvar s = color[1];\n\t\t\tvar q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n\t\t\tvar p = 2 * l - q;\n\t\t\tvar r = hue2rgb(p, q, color[0] + 1/3);\n\t\t\tvar g = hue2rgb(p, q, color[0]);\n\t\t\tvar b = hue2rgb(p, q, color[0] - 1/3);\n\t\t\treturn [Math.round(r*255), Math.round(g*255), Math.round(b*255)];\n\t\t}\n\t},\n\n\ttoRGB: function(color) {\n\t\treturn \"rgb(\" + this._clamp(color[0]) + \",\" + this._clamp(color[1]) + \",\" + this._clamp(color[2]) + \")\";\n\t},\n\n\ttoHex: function(color) {\n\t\tvar parts = [];\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tparts.push(this._clamp(color[i]).toString(16).lpad(\"0\", 2));\n\t\t}\n\t\treturn \"#\" + parts.join(\"\");\n\t},\n\n\t_clamp: function(num) {\n\t\tif (num < 0) {\n\t\t\treturn 0;\n\t\t} else if (num > 255) {\n\t\t\treturn 255;\n\t\t} else {\n\t\t\treturn num;\n\t\t}\n\t},\n\n\t_cache: {\n\t\t\"black\": [0,0,0],\n\t\t\"navy\": [0,0,128],\n\t\t\"darkblue\": [0,0,139],\n\t\t\"mediumblue\": [0,0,205],\n\t\t\"blue\": [0,0,255],\n\t\t\"darkgreen\": [0,100,0],\n\t\t\"green\": [0,128,0],\n\t\t\"teal\": [0,128,128],\n\t\t\"darkcyan\": [0,139,139],\n\t\t\"deepskyblue\": [0,191,255],\n\t\t\"darkturquoise\": [0,206,209],\n\t\t\"mediumspringgreen\": [0,250,154],\n\t\t\"lime\": [0,255,0],\n\t\t\"springgreen\": [0,255,127],\n\t\t\"aqua\": [0,255,255],\n\t\t\"cyan\": [0,255,255],\n\t\t\"midnightblue\": [25,25,112],\n\t\t\"dodgerblue\": [30,144,255],\n\t\t\"forestgreen\": [34,139,34],\n\t\t\"seagreen\": [46,139,87],\n\t\t\"darkslategray\": [47,79,79],\n\t\t\"darkslategrey\": [47,79,79],\n\t\t\"limegreen\": [50,205,50],\n\t\t\"mediumseagreen\": [60,179,113],\n\t\t\"turquoise\": [64,224,208],\n\t\t\"royalblue\": [65,105,225],\n\t\t\"steelblue\": [70,130,180],\n\t\t\"darkslateblue\": [72,61,139],\n\t\t\"mediumturquoise\": [72,209,204],\n\t\t\"indigo\": [75,0,130],\n\t\t\"darkolivegreen\": [85,107,47],\n\t\t\"cadetblue\": [95,158,160],\n\t\t\"cornflowerblue\": [100,149,237],\n\t\t\"mediumaquamarine\": [102,205,170],\n\t\t\"dimgray\": [105,105,105],\n\t\t\"dimgrey\": [105,105,105],\n\t\t\"slateblue\": [106,90,205],\n\t\t\"olivedrab\": [107,142,35],\n\t\t\"slategray\": [112,128,144],\n\t\t\"slategrey\": [112,128,144],\n\t\t\"lightslategray\": [119,136,153],\n\t\t\"lightslategrey\": [119,136,153],\n\t\t\"mediumslateblue\": [123,104,238],\n\t\t\"lawngreen\": [124,252,0],\n\t\t\"chartreuse\": [127,255,0],\n\t\t\"aquamarine\": [127,255,212],\n\t\t\"maroon\": [128,0,0],\n\t\t\"purple\": [128,0,128],\n\t\t\"olive\": [128,128,0],\n\t\t\"gray\": [128,128,128],\n\t\t\"grey\": [128,128,128],\n\t\t\"skyblue\": [135,206,235],\n\t\t\"lightskyblue\": [135,206,250],\n\t\t\"blueviolet\": [138,43,226],\n\t\t\"darkred\": [139,0,0],\n\t\t\"darkmagenta\": [139,0,139],\n\t\t\"saddlebrown\": [139,69,19],\n\t\t\"darkseagreen\": [143,188,143],\n\t\t\"lightgreen\": [144,238,144],\n\t\t\"mediumpurple\": [147,112,216],\n\t\t\"darkviolet\": [148,0,211],\n\t\t\"palegreen\": [152,251,152],\n\t\t\"darkorchid\": [153,50,204],\n\t\t\"yellowgreen\": [154,205,50],\n\t\t\"sienna\": [160,82,45],\n\t\t\"brown\": [165,42,42],\n\t\t\"darkgray\": [169,169,169],\n\t\t\"darkgrey\": [169,169,169],\n\t\t\"lightblue\": [173,216,230],\n\t\t\"greenyellow\": [173,255,47],\n\t\t\"paleturquoise\": [175,238,238],\n\t\t\"lightsteelblue\": [176,196,222],\n\t\t\"powderblue\": [176,224,230],\n\t\t\"firebrick\": [178,34,34],\n\t\t\"darkgoldenrod\": [184,134,11],\n\t\t\"mediumorchid\": [186,85,211],\n\t\t\"rosybrown\": [188,143,143],\n\t\t\"darkkhaki\": [189,183,107],\n\t\t\"silver\": [192,192,192],\n\t\t\"mediumvioletred\": [199,21,133],\n\t\t\"indianred\": [205,92,92],\n\t\t\"peru\": [205,133,63],\n\t\t\"chocolate\": [210,105,30],\n\t\t\"tan\": [210,180,140],\n\t\t\"lightgray\": [211,211,211],\n\t\t\"lightgrey\": [211,211,211],\n\t\t\"palevioletred\": [216,112,147],\n\t\t\"thistle\": [216,191,216],\n\t\t\"orchid\": [218,112,214],\n\t\t\"goldenrod\": [218,165,32],\n\t\t\"crimson\": [220,20,60],\n\t\t\"gainsboro\": [220,220,220],\n\t\t\"plum\": [221,160,221],\n\t\t\"burlywood\": [222,184,135],\n\t\t\"lightcyan\": [224,255,255],\n\t\t\"lavender\": [230,230,250],\n\t\t\"darksalmon\": [233,150,122],\n\t\t\"violet\": [238,130,238],\n\t\t\"palegoldenrod\": [238,232,170],\n\t\t\"lightcoral\": [240,128,128],\n\t\t\"khaki\": [240,230,140],\n\t\t\"aliceblue\": [240,248,255],\n\t\t\"honeydew\": [240,255,240],\n\t\t\"azure\": [240,255,255],\n\t\t\"sandybrown\": [244,164,96],\n\t\t\"wheat\": [245,222,179],\n\t\t\"beige\": [245,245,220],\n\t\t\"whitesmoke\": [245,245,245],\n\t\t\"mintcream\": [245,255,250],\n\t\t\"ghostwhite\": [248,248,255],\n\t\t\"salmon\": [250,128,114],\n\t\t\"antiquewhite\": [250,235,215],\n\t\t\"linen\": [250,240,230],\n\t\t\"lightgoldenrodyellow\": [250,250,210],\n\t\t\"oldlace\": [253,245,230],\n\t\t\"red\": [255,0,0],\n\t\t\"fuchsia\": [255,0,255],\n\t\t\"magenta\": [255,0,255],\n\t\t\"deeppink\": [255,20,147],\n\t\t\"orangered\": [255,69,0],\n\t\t\"tomato\": [255,99,71],\n\t\t\"hotpink\": [255,105,180],\n\t\t\"coral\": [255,127,80],\n\t\t\"darkorange\": [255,140,0],\n\t\t\"lightsalmon\": [255,160,122],\n\t\t\"orange\": [255,165,0],\n\t\t\"lightpink\": [255,182,193],\n\t\t\"pink\": [255,192,203],\n\t\t\"gold\": [255,215,0],\n\t\t\"peachpuff\": [255,218,185],\n\t\t\"navajowhite\": [255,222,173],\n\t\t\"moccasin\": [255,228,181],\n\t\t\"bisque\": [255,228,196],\n\t\t\"mistyrose\": [255,228,225],\n\t\t\"blanchedalmond\": [255,235,205],\n\t\t\"papayawhip\": [255,239,213],\n\t\t\"lavenderblush\": [255,240,245],\n\t\t\"seashell\": [255,245,238],\n\t\t\"cornsilk\": [255,248,220],\n\t\t\"lemonchiffon\": [255,250,205],\n\t\t\"floralwhite\": [255,250,240],\n\t\t\"snow\": [255,250,250],\n\t\t\"yellow\": [255,255,0],\n\t\t\"lightyellow\": [255,255,224],\n\t\t\"ivory\": [255,255,240],\n\t\t\"white\": [255,255,255]\n\t}\n}\n/**\n * @class Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n * @param {function} reflectivityCallback Callback to retrieve cell reflectivity (0..1)\n * @param {object} [options]\n * @param {int} [options.passes=1] Number of passes. 1 equals to simple FOV of all light sources, >1 means a *highly simplified* radiosity-like algorithm.\n * @param {int} [options.emissionThreshold=100] Cells with emissivity > threshold will be treated as light source in the next pass.\n * @param {int} [options.range=10] Max light range\n */\nROT.Lighting = function(reflectivityCallback, options) {\n\tthis._reflectivityCallback = reflectivityCallback;\n\tthis._options = {\n\t\tpasses: 1,\n\t\temissionThreshold: 100,\n\t\trange: 10\n\t};\n\tthis._fov = null;\n\n\tthis._lights = {};\n\tthis._reflectivityCache = {};\n\tthis._fovCache = {};\n\n\tthis.setOptions(options);\n}\n\n/**\n * Adjust options at runtime\n * @see ROT.Lighting\n * @param {object} [options]\n */\nROT.Lighting.prototype.setOptions = function(options) {\n\tfor (var p in options) { this._options[p] = options[p]; }\n\tif (options && options.range) { this.reset(); }\n\treturn this;\n}\n\n/**\n * Set the used Field-Of-View algo\n * @param {ROT.FOV} fov\n */\nROT.Lighting.prototype.setFOV = function(fov) {\n\tthis._fov = fov;\n\tthis._fovCache = {};\n\treturn this;\n}\n\n/**\n * Set (or remove) a light source\n * @param {int} x\n * @param {int} y\n * @param {null || string || number[3]} color\n */\nROT.Lighting.prototype.setLight = function(x, y, color) {\n\tvar key = x+\",\"+y;\n\n\tif (color) {\n\t\tthis._lights[key] = (typeof(color) == \"string\" ? ROT.Color.fromString(color) : color);\n\t} else {\n\t\tdelete this._lights[key];\n\t}\n\treturn this;\n}\n\n/**\n * Remove all light sources\n */\nROT.Lighting.prototype.clearLights = function() {\n    this._lights = {};\n}\n\n/**\n * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n */\nROT.Lighting.prototype.reset = function() {\n\tthis._reflectivityCache = {};\n\tthis._fovCache = {};\n\n\treturn this;\n}\n\n/**\n * Compute the lighting\n * @param {function} lightingCallback Will be called with (x, y, color) for every lit cell\n */\nROT.Lighting.prototype.compute = function(lightingCallback) {\n\tvar doneCells = {};\n\tvar emittingCells = {};\n\tvar litCells = {};\n\n\tfor (var key in this._lights) { /* prepare emitters for first pass */\n\t\tvar light = this._lights[key];\n\t\temittingCells[key] = [0, 0, 0];\n\t\tROT.Color.add_(emittingCells[key], light);\n\t}\n\n\tfor (var i=0;i<this._options.passes;i++) { /* main loop */\n\t\tthis._emitLight(emittingCells, litCells, doneCells);\n\t\tif (i+1 == this._options.passes) { continue; } /* not for the last pass */\n\t\temittingCells = this._computeEmitters(litCells, doneCells);\n\t}\n\n\tfor (var litKey in litCells) { /* let the user know what and how is lit */\n\t\tvar parts = litKey.split(\",\");\n\t\tvar x = parseInt(parts[0]);\n\t\tvar y = parseInt(parts[1]);\n\t\tlightingCallback(x, y, litCells[litKey]);\n\t}\n\n\treturn this;\n}\n\n/**\n * Compute one iteration from all emitting cells\n * @param {object} emittingCells These emit light\n * @param {object} litCells Add projected light to these\n * @param {object} doneCells These already emitted, forbid them from further calculations\n */\nROT.Lighting.prototype._emitLight = function(emittingCells, litCells, doneCells) {\n\tfor (var key in emittingCells) {\n\t\tvar parts = key.split(\",\");\n\t\tvar x = parseInt(parts[0]);\n\t\tvar y = parseInt(parts[1]);\n\t\tthis._emitLightFromCell(x, y, emittingCells[key], litCells);\n\t\tdoneCells[key] = 1;\n\t}\n\treturn this;\n}\n\n/**\n * Prepare a list of emitters for next pass\n * @param {object} litCells\n * @param {object} doneCells\n * @returns {object}\n */\nROT.Lighting.prototype._computeEmitters = function(litCells, doneCells) {\n\tvar result = {};\n\n\tfor (var key in litCells) {\n\t\tif (key in doneCells) { continue; } /* already emitted */\n\n\t\tvar color = litCells[key];\n\n\t\tif (key in this._reflectivityCache) {\n\t\t\tvar reflectivity = this._reflectivityCache[key];\n\t\t} else {\n\t\t\tvar parts = key.split(\",\");\n\t\t\tvar x = parseInt(parts[0]);\n\t\t\tvar y = parseInt(parts[1]);\n\t\t\tvar reflectivity = this._reflectivityCallback(x, y);\n\t\t\tthis._reflectivityCache[key] = reflectivity;\n\t\t}\n\n\t\tif (reflectivity == 0) { continue; } /* will not reflect at all */\n\n\t\t/* compute emission color */\n\t\tvar emission = [];\n\t\tvar intensity = 0;\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tvar part = Math.round(color[i]*reflectivity);\n\t\t\temission[i] = part;\n\t\t\tintensity += part;\n\t\t}\n\t\tif (intensity > this._options.emissionThreshold) { result[key] = emission; }\n\t}\n\n\treturn result;\n}\n\n/**\n * Compute one iteration from one cell\n * @param {int} x\n * @param {int} y\n * @param {number[]} color\n * @param {object} litCells Cell data to by updated\n */\nROT.Lighting.prototype._emitLightFromCell = function(x, y, color, litCells) {\n\tvar key = x+\",\"+y;\n\tif (key in this._fovCache) {\n\t\tvar fov = this._fovCache[key];\n\t} else {\n\t\tvar fov = this._updateFOV(x, y);\n\t}\n\n\tfor (var fovKey in fov) {\n\t\tvar formFactor = fov[fovKey];\n\n\t\tif (fovKey in litCells) { /* already lit */\n\t\t\tvar result = litCells[fovKey];\n\t\t} else { /* newly lit */\n\t\t\tvar result = [0, 0, 0];\n\t\t\tlitCells[fovKey] = result;\n\t\t}\n\n\t\tfor (var i=0;i<3;i++) { result[i] += Math.round(color[i]*formFactor); } /* add light color */\n\t}\n\n\treturn this;\n}\n\n/**\n * Compute FOV (\"form factor\") for a potential light source at [x,y]\n * @param {int} x\n * @param {int} y\n * @returns {object}\n */\nROT.Lighting.prototype._updateFOV = function(x, y) {\n\tvar key1 = x+\",\"+y;\n\tvar cache = {};\n\tthis._fovCache[key1] = cache;\n\tvar range = this._options.range;\n\tvar cb = function(x, y, r, vis) {\n\t\tvar key2 = x+\",\"+y;\n\t\tvar formFactor = vis * (1-r/range);\n\t\tif (formFactor == 0) { return; }\n\t\tcache[key2] = formFactor;\n\t}\n\tthis._fov.compute(x, y, range, cb.bind(this));\n\n\treturn cache;\n}\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nROT.Path = function(toX, toY, passableCallback, options) {\n\tthis._toX = toX;\n\tthis._toY = toY;\n\tthis._fromX = null;\n\tthis._fromY = null;\n\tthis._passableCallback = passableCallback;\n\tthis._options = {\n\t\ttopology: 8\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\n\tthis._dirs = ROT.DIRS[this._options.topology];\n\tif (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n\t\tthis._dirs = [\n\t\t\tthis._dirs[0],\n\t\t\tthis._dirs[2],\n\t\t\tthis._dirs[4],\n\t\t\tthis._dirs[6],\n\t\t\tthis._dirs[1],\n\t\t\tthis._dirs[3],\n\t\t\tthis._dirs[5],\n\t\t\tthis._dirs[7]\n\t\t]\n\t}\n}\n\n/**\n * Compute a path from a given point\n * @param {int} fromX\n * @param {int} fromY\n * @param {function} callback Will be called for every path item with arguments \"x\" and \"y\"\n */\nROT.Path.prototype.compute = function(fromX, fromY, callback) {\n}\n\nROT.Path.prototype._getNeighbors = function(cx, cy) {\n\tvar result = [];\n\tfor (var i=0;i<this._dirs.length;i++) {\n\t\tvar dir = this._dirs[i];\n\t\tvar x = cx + dir[0];\n\t\tvar y = cy + dir[1];\n\t\t\n\t\tif (!this._passableCallback(x, y)) { continue; }\n\t\tresult.push([x, y]);\n\t}\n\t\n\treturn result;\n}\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nROT.Path.Dijkstra = function(toX, toY, passableCallback, options) {\n\tROT.Path.call(this, toX, toY, passableCallback, options);\n\n\tthis._computed = {};\n\tthis._todo = [];\n\tthis._add(toX, toY, null);\n}\nROT.Path.Dijkstra.extend(ROT.Path);\n\n/**\n * Compute a path from a given point\n * @see ROT.Path#compute\n */\nROT.Path.Dijkstra.prototype.compute = function(fromX, fromY, callback) {\n\tvar key = fromX+\",\"+fromY;\n\tif (!(key in this._computed)) { this._compute(fromX, fromY); }\n\tif (!(key in this._computed)) { return; }\n\t\n\tvar item = this._computed[key];\n\twhile (item) {\n\t\tcallback(item.x, item.y);\n\t\titem = item.prev;\n\t}\n}\n\n/**\n * Compute a non-cached value\n */\nROT.Path.Dijkstra.prototype._compute = function(fromX, fromY) {\n\twhile (this._todo.length) {\n\t\tvar item = this._todo.shift();\n\t\tif (item.x == fromX && item.y == fromY) { return; }\n\t\t\n\t\tvar neighbors = this._getNeighbors(item.x, item.y);\n\t\t\n\t\tfor (var i=0;i<neighbors.length;i++) {\n\t\t\tvar neighbor = neighbors[i];\n\t\t\tvar x = neighbor[0];\n\t\t\tvar y = neighbor[1];\n\t\t\tvar id = x+\",\"+y;\n\t\t\tif (id in this._computed) { continue; } /* already done */\t\n\t\t\tthis._add(x, y, item); \n\t\t}\n\t}\n}\n\nROT.Path.Dijkstra.prototype._add = function(x, y, prev) {\n\tvar obj = {\n\t\tx: x,\n\t\ty: y,\n\t\tprev: prev\n\t}\n\tthis._computed[x+\",\"+y] = obj;\n\tthis._todo.push(obj);\n}\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nROT.Path.AStar = function(toX, toY, passableCallback, options) {\n\tROT.Path.call(this, toX, toY, passableCallback, options);\n\n\tthis._todo = [];\n\tthis._done = {};\n\tthis._fromX = null;\n\tthis._fromY = null;\n}\nROT.Path.AStar.extend(ROT.Path);\n\n/**\n * Compute a path from a given point\n * @see ROT.Path#compute\n */\nROT.Path.AStar.prototype.compute = function(fromX, fromY, callback) {\n\tthis._todo = [];\n\tthis._done = {};\n\tthis._fromX = fromX;\n\tthis._fromY = fromY;\n\tthis._add(this._toX, this._toY, null);\n\n\twhile (this._todo.length) {\n\t\tvar item = this._todo.shift();\n\t\tif (item.x == fromX && item.y == fromY) { break; }\n\t\tvar neighbors = this._getNeighbors(item.x, item.y);\n\n\t\tfor (var i=0;i<neighbors.length;i++) {\n\t\t\tvar neighbor = neighbors[i];\n\t\t\tvar x = neighbor[0];\n\t\t\tvar y = neighbor[1];\n\t\t\tvar id = x+\",\"+y;\n\t\t\tif (id in this._done) { continue; }\n\t\t\tthis._add(x, y, item); \n\t\t}\n\t}\n\t\n\tvar item = this._done[fromX+\",\"+fromY];\n\tif (!item) { return; }\n\t\n\twhile (item) {\n\t\tcallback(item.x, item.y);\n\t\titem = item.prev;\n\t}\n}\n\nROT.Path.AStar.prototype._add = function(x, y, prev) {\n\tvar obj = {\n\t\tx: x,\n\t\ty: y,\n\t\tprev: prev,\n\t\tg: (prev ? prev.g+1 : 0),\n\t\th: this._distance(x, y)\n\t}\n\tthis._done[x+\",\"+y] = obj;\n\t\n\t/* insert into priority queue */\n\t\n\tvar f = obj.g + obj.h;\n\tfor (var i=0;i<this._todo.length;i++) {\n\t\tvar item = this._todo[i];\n\t\tif (f < item.g + item.h) {\n\t\t\tthis._todo.splice(i, 0, obj);\n\t\t\treturn;\n\t\t}\n\t}\n\t\n\tthis._todo.push(obj);\n}\n\nROT.Path.AStar.prototype._distance = function(x, y) {\n\tswitch (this._options.topology) {\n\t\tcase 4:\n\t\t\treturn (Math.abs(x-this._fromX) + Math.abs(y-this._fromY));\n\t\tbreak;\n\n\t\tcase 6:\n\t\t\tvar dx = Math.abs(x - this._fromX);\n\t\t\tvar dy = Math.abs(y - this._fromY);\n\t\t\treturn dy + Math.max(0, (dx-dy)/2);\n\t\tbreak;\n\n\t\tcase 8: \n\t\t\treturn Math.max(Math.abs(x-this._fromX), Math.abs(y-this._fromY));\n\t\tbreak;\n\t}\n\n        throw new Error(\"Illegal topology\");\n}\n/**\n * @class Terminal backend\n * @private\n */\nROT.Display.Term = function(context) {\n\tROT.Display.Backend.call(this, context);\n\tthis._cx = -1;\n\tthis._cy = -1;\n\tthis._lastColor = \"\";\n\tthis._options = {};\n\tthis._ox = 0;\n\tthis._oy = 0;\n\tthis._termcolor = {};\n}\nROT.Display.Term.extend(ROT.Display.Backend);\n\nROT.Display.Term.prototype.compute = function(options) {\n\tthis._options = options;\n\tthis._ox = Math.floor((process.stdout.columns - options.width) / 2);\n\tthis._oy = Math.floor((process.stdout.rows - options.height) / 2);\n\tthis._termcolor = new ROT.Display.Term[options.termColor.capitalize()](this._context);\n\tthis._context._termcolor = this._termcolor;\n}\n\nROT.Display.Term.prototype.draw = function(data, clearBefore) {\n\t// determine where to draw what with what colors\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\t// determine if we need to move the terminal cursor\n\tvar dx = this._ox + x;\n\tvar dy = this._oy + y;\n\tif (dx < 0 || dx >= process.stdout.columns) { return; }\n\tif (dy < 0 || dy >= process.stdout.rows) { return; }\n\tif (dx !== this._cx || dy !== this._cy) {\n\t\tprocess.stdout.write(this._termcolor.positionToAnsi(dx,dy));\n\t\tthis._cx = dx;\n\t\tthis._cy = dy;\n\t}\n\n\t// terminals automatically clear, but if we're clearing when we're\n\t// not otherwise provided with a character, just use a space instead\n\tif (clearBefore) {\n\t\tif (!ch) {\n\t\t\tch = \" \";\n\t\t}\n\t}\n\t\t\n\t// if we're not clearing and not provided with a character, do nothing\n\tif (!ch) { return; }\n\n\t// determine if we need to change colors\n\tvar newColor = this._termcolor.colorToAnsi(fg,bg);\n\tif (newColor !== this._lastColor) {\n\t\tprocess.stdout.write(newColor);\n\t\tthis._lastColor = newColor;\n\t}\n\n\t// write the provided symbol to the display\n\tvar chars = [].concat(ch);\n\tprocess.stdout.write(chars[0]);\n\n\t// update our position, given that we wrote a character\n\tthis._cx++;\n\tif (this._cx >= process.stdout.columns) {\n\t\tthis._cx = 0;\n\t\tthis._cy++;\n\t}\n}\n\nROT.Display.Term.prototype.computeSize = function(availWidth, availHeight) {\n\treturn [process.stdout.columns, process.stdout.rows];\n}\n\nROT.Display.Term.prototype.computeFontSize = function(availWidth, availHeight) {\n\treturn 12;\n}\n\nROT.Display.Term.prototype.eventToPosition = function(x, y) {\n\treturn [x,y]\n}\n/**\n * @class Abstract terminal code module\n * @private\n */\nROT.Display.Term.Color = function(context) {\n\tthis._context = context;\n}\n\nROT.Display.Term.Color.prototype.clearToAnsi = function(bg) {\n}\n\nROT.Display.Term.Color.prototype.colorToAnsi = function(fg, bg) {\n}\n\nROT.Display.Term.Color.prototype.positionToAnsi = function(x, y) {\n}\n/**\n * @class xterm terminal code module\n * @private\n */\nROT.Display.Term.Xterm = function(context) {\n\tROT.Display.Term.Color.call(this, context);\n}\nROT.Display.Term.Xterm.extend(ROT.Display.Term.Color);\n\nROT.Display.Term.Xterm.prototype.clearToAnsi = function(bg) {\n\treturn \"\\x1b[0;48;5;\"\n\t\t+ this._termcolor(bg)\n\t\t+ \"m\\x1b[2J\";\n}\n\nROT.Display.Term.Xterm.prototype.colorToAnsi = function(fg, bg) {\n\treturn \"\\x1b[0;38;5;\"\n\t\t+ this._termcolor(fg)\n\t\t+ \";48;5;\"\n\t\t+ this._termcolor(bg)\n\t\t+ \"m\";\n}\n\nROT.Display.Term.Xterm.prototype.positionToAnsi = function(x, y) {\n\treturn \"\\x1b[\" + (y+1) + \";\" + (x+1) + \"H\";\n}\n\nROT.Display.Term.Xterm.prototype._termcolor = function(color) {\n\tvar SRC_COLORS = 256.0;\n\tvar DST_COLORS = 6.0;\n\tvar COLOR_RATIO = DST_COLORS / SRC_COLORS;\n\tvar rgb = ROT.Color.fromString(color);\n\tvar r = Math.floor(rgb[0] * COLOR_RATIO);\n\tvar g = Math.floor(rgb[1] * COLOR_RATIO);\n\tvar b = Math.floor(rgb[2] * COLOR_RATIO);\n\treturn r*36 + g*6 + b*1 + 16;\n}\n/**\n * Export to Node.js module\n */\nfor (var p in ROT) {\n\texports[p] = ROT[p];\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6), __webpack_require__(17)))\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__entity__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__game__ = __webpack_require__(0);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\nvar Being = function (_Entity) {\n\t_inherits(Being, _Entity);\n\n\tfunction Being(visual) {\n\t\t_classCallCheck(this, Being);\n\n\t\tvar _this = _possibleConstructorReturn(this, (Being.__proto__ || Object.getPrototypeOf(Being)).call(this, visual));\n\n\t\t_this.setPosition = function (xy, level) {\n\t\t\t// came to a currently active level; add self to the scheduler\n\t\t\tif (level !== this._level && level === __WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].level) {\n\t\t\t\t__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].scheduler.add(this, true);\n\t\t\t}\n\n\t\t\tif (level.getTileAt(xy).passable) {\n\t\t\t\treturn __WEBPACK_IMPORTED_MODULE_0__entity__[\"a\" /* default */].prototype.setPosition.call(this, xy, level);\n\t\t\t} else {\n\t\t\t\tif (typeof level.getTileAt(xy).bump === \"function\") {\n\t\t\t\t\tlevel.getTileAt(xy).bump();\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\t\t_this._speed = 100;\n\t\t_this._hp = 10;\n\t\treturn _this;\n\t}\n\n\t_createClass(Being, [{\n\t\tkey: 'getSpeed',\n\t\tvalue: function getSpeed() {\n\t\t\t// Called by the Scheduler\n\t\t\treturn this._speed;\n\t\t}\n\t}, {\n\t\tkey: 'damage',\n\t\tvalue: function damage(_damage) {\n\t\t\tthis._hp -= _damage;\n\t\t\tif (this._hp <= 0) {\n\t\t\t\tthis.die();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'act',\n\t\tvalue: function act() {\n\t\t\t// FIXME\n\t\t}\n\t}, {\n\t\tkey: 'die',\n\t\tvalue: function die() {\n\t\t\t__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].scheduler.remove(this);\n\t\t}\n\t}]);\n\n\treturn Being;\n}(__WEBPACK_IMPORTED_MODULE_0__entity__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Being);\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar asap = __webpack_require__(9);\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nif (typeof Promise === 'undefined') {\r\n  // Rejection tracking prevents a common issue where React gets into an\r\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\r\n  // and the user has no idea what causes React's erratic future behavior.\r\n  __webpack_require__(19).enable();\r\n  window.Promise = __webpack_require__(18);\r\n}\r\n\r\n// fetch() polyfill for making API calls.\r\n__webpack_require__(20);\r\n\r\n// Object.assign() is commonly used with React.\r\n// It will use the native implementation if it's present and isn't buggy.\r\nObject.assign = __webpack_require__(16);\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rot_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__game__ = __webpack_require__(0);\n\n\n\nif (!__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.isSupported()) {\n    alert(\"The rot.js library isn't supported by your browser.\");\n} else {\n    // Initialize the game\n    __WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].init();\n}\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__entity__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__game__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__xy__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__map__ = __webpack_require__(11);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\nvar Level = function () {\n\tfunction Level() {\n\t\t_classCallCheck(this, Level);\n\n\t\t// FIXME data structure for storing entities\n\t\tthis._beings = {};\n\n\t\t// FIXME map data\n\t\tthis._size = new __WEBPACK_IMPORTED_MODULE_2__xy__[\"a\" /* default */](80, 25);\n\t\tvar mapData = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__map__[\"a\" /* default */])(80, 25);\n\t\tthis._map = mapData.map;\n\t\tthis._freeCells = mapData.freeCells;\n\n\t\tthis._empty = new __WEBPACK_IMPORTED_MODULE_0__entity__[\"a\" /* default */]({ ch: \".\", fg: \"#888\", bg: null });\n\t}\n\n\t_createClass(Level, [{\n\t\tkey: 'getSize',\n\t\tvalue: function getSize() {\n\t\t\treturn this._size;\n\t\t}\n\t}, {\n\t\tkey: 'setEntity',\n\t\tvalue: function setEntity(entity, xy) {\n\t\t\t// FIXME remove from old position, draw\n\t\t\tvar oldXY = entity.getXY();\n\t\t\tif (entity.getLevel() === this) {\n\t\t\t\tdelete this._beings[oldXY];\n\t\t\t\tif (__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].level === this) {\n\t\t\t\t\t__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].draw(oldXY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (entity.setPosition(xy, this)) {\n\t\t\t\tentity.setPosition(xy, this); // propagate position data to the entity itself\n\t\t\t\t// FIXME set new position, draw\n\t\t\t\tthis._beings[xy] = entity;\n\t\t\t\tif (__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].level === this) {\n\t\t\t\t\t__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].draw(xy);\n\t\t\t\t\t__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].textBuffer.write(\"An entity moves to \" + xy + \".\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (entity.getLevel() === this) {\n\t\t\t\t\tentity.setPosition(oldXY, this);\n\t\t\t\t\tthis._beings[oldXY] = entity;\n\t\t\t\t\tif (__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].level === this) {\n\t\t\t\t\t\t__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].draw(oldXY);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'getEntityAt',\n\t\tvalue: function getEntityAt(xy) {\n\t\t\treturn this._beings[xy] || this._map[xy] || this._empty;\n\t\t}\n\t}, {\n\t\tkey: 'getTileAt',\n\t\tvalue: function getTileAt(xy) {\n\t\t\treturn this._map[xy] || this._empty;\n\t\t}\n\t}, {\n\t\tkey: 'getBeings',\n\t\tvalue: function getBeings() {\n\t\t\t// FIXME list of all beings\n\t\t\treturn this._beings;\n\t\t}\n\t}, {\n\t\tkey: 'getFreeCells',\n\t\tvalue: function getFreeCells() {\n\t\t\treturn this._freeCells;\n\t\t}\n\t}]);\n\n\treturn Level;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Level);\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = generateMap;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rot_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__entity__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tile__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__xy__ = __webpack_require__(2);\n\n\n\n\n\nfunction generateMap(w, h) {\n    var digger = new __WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.Map.Digger(w, h);\n    var map = {};\n    var freeCells = [];\n\n    var digCallback = function digCallback(x, y, value) {\n        var key = new __WEBPACK_IMPORTED_MODULE_3__xy__[\"a\" /* default */](x, y);\n        if (value) {\n            map[key] = new __WEBPACK_IMPORTED_MODULE_2__tile__[\"a\" /* default */](\"wall\");\n        } else {\n            map[key] = new __WEBPACK_IMPORTED_MODULE_2__tile__[\"a\" /* default */](\"floor\");\n            freeCells.push(key);\n        }\n    };\n    digger.create(digCallback.bind(this));\n    var rooms = digger.getRooms();\n    var corridors = digger.getCorridors();\n    return { map: map, freeCells: freeCells };\n}\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rot_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__being__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__game__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__xy__ = __webpack_require__(2);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\nvar Player = function (_Being) {\n\t_inherits(Player, _Being);\n\n\tfunction Player() {\n\t\t_classCallCheck(this, Player);\n\n\t\tvar _this = _possibleConstructorReturn(this, (Player.__proto__ || Object.getPrototypeOf(Player)).call(this, { ch: \"@\", fg: \"#fff\" }));\n\n\t\t_this._handleKey = function (code) {\n\t\t\tif (code in this._keys) {\n\t\t\t\t__WEBPACK_IMPORTED_MODULE_2__game__[\"a\" /* default */].textBuffer.clear();\n\n\t\t\t\tvar direction = this._keys[code];\n\t\t\t\tif (direction === -1) {\n\t\t\t\t\t// noop\n\t\t\t\t\t// FIXME show something?\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tvar dir = __WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.DIRS[8][direction];\n\t\t\t\tvar xy = this._xy.plus(new __WEBPACK_IMPORTED_MODULE_3__xy__[\"a\" /* default */](dir[0], dir[1]));\n\n\t\t\t\tthis._level.setEntity(this, xy);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false; // unknown key\n\t\t};\n\n\t\t_this._keys = {};\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_K] = 0;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_UP] = 0;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD8] = 0;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_U] = 1;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD9] = 1;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_PAGE_UP] = 1;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_L] = 2;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_RIGHT] = 2;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD6] = 2;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_N] = 3;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD3] = 3;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_PAGE_DOWN] = 3;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_J] = 4;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_DOWN] = 4;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD2] = 4;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_B] = 5;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD1] = 5;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_END] = 5;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_H] = 6;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_LEFT] = 6;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD4] = 6;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_Y] = 7;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD7] = 7;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_HOME] = 7;\n\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_PERIOD] = -1;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_CLEAR] = -1;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD5] = -1;\n\t\treturn _this;\n\t}\n\n\t_createClass(Player, [{\n\t\tkey: 'act',\n\t\tvalue: function act() {\n\t\t\t__WEBPACK_IMPORTED_MODULE_2__game__[\"a\" /* default */].textBuffer.write(\"It is your turn, press any relevant key.\");\n\t\t\t__WEBPACK_IMPORTED_MODULE_2__game__[\"a\" /* default */].textBuffer.flush();\n\t\t\t__WEBPACK_IMPORTED_MODULE_2__game__[\"a\" /* default */].engine.lock();\n\t\t\twindow.addEventListener(\"keydown\", this);\n\t\t}\n\t}, {\n\t\tkey: 'die',\n\t\tvalue: function die() {\n\t\t\t_get(Player.prototype.__proto__ || Object.getPrototypeOf(Player.prototype), 'die', this).call(this);\n\t\t\t__WEBPACK_IMPORTED_MODULE_2__game__[\"a\" /* default */].over();\n\t\t}\n\t}, {\n\t\tkey: 'handleEvent',\n\t\tvalue: function handleEvent(e) {\n\t\t\tvar code = e.keyCode;\n\n\t\t\tvar keyHandled = this._handleKey(e.keyCode);\n\n\t\t\tif (keyHandled) {\n\t\t\t\twindow.removeEventListener(\"keydown\", this);\n\t\t\t\t__WEBPACK_IMPORTED_MODULE_2__game__[\"a\" /* default */].engine.unlock();\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn Player;\n}(__WEBPACK_IMPORTED_MODULE_1__being__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Player);\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rot_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__game__ = __webpack_require__(0);\n\n\n\nvar Screen = {};\n\n// Define our initial start screen\nScreen.startScreen = {\n    enter: function enter() {\n        console.log(\"Entered start screen.\");\n    },\n    exit: function exit() {\n        console.log(\"Exited start screen.\");\n    },\n    render: function render(display) {\n        // Render our prompt to the screen\n        display.drawText(1, 1, \"%c{yellow}Javascript Roguelike\");\n        display.drawText(1, 2, \"Press [Enter] to start!\");\n    },\n    handleInput: function handleInput(inputType, inputData) {\n        // When [Enter] is pressed, go to the play screen\n        if (inputType === 'keydown') {\n            if (inputData.keyCode === __WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_RETURN) {\n                __WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].startGame();\n            }\n        }\n    }\n};\n\n// Define our winning screen\nScreen.winScreen = {\n    enter: function enter() {\n        console.log(\"Entered win screen.\");\n    },\n    exit: function exit() {\n        console.log(\"Exited win screen.\");\n    },\n    render: function render(display) {\n        // Render our prompt to the screen\n        for (var i = 0; i < 22; i++) {\n            // Generate random background colors\n            var r = Math.round(Math.random() * 255);\n            var g = Math.round(Math.random() * 255);\n            var b = Math.round(Math.random() * 255);\n            var background = __WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.Color.toRGB([r, g, b]);\n            display.drawText(2, i + 1, \"%b{\" + background + \"}You win!\");\n        }\n    },\n    handleInput: function handleInput(inputType, inputData) {\n        // Nothing to do here\n    }\n};\n\n// Define our losing screen\nScreen.loseScreen = {\n    enter: function enter() {\n        console.log(\"Entered lose screen.\");\n    },\n    exit: function exit() {\n        console.log(\"Exited lose screen.\");\n    },\n    render: function render(display) {\n        // Render our prompt to the screen\n        for (var i = 0; i < 22; i++) {\n            display.drawText(2, i + 1, \"%b{red}You lose! :(\");\n        }\n    },\n    handleInput: function handleInput(inputType, inputData) {\n        // Nothing to do here\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Screen);\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__xy__ = __webpack_require__(2);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar TextBuffer = function () {\n\tfunction TextBuffer() {\n\t\t_classCallCheck(this, TextBuffer);\n\n\t\tthis._data = [];\n\t\tthis._options = {\n\t\t\tdisplay: null,\n\t\t\tposition: new __WEBPACK_IMPORTED_MODULE_0__xy__[\"a\" /* default */](),\n\t\t\tsize: new __WEBPACK_IMPORTED_MODULE_0__xy__[\"a\" /* default */]()\n\t\t};\n\t}\n\n\t_createClass(TextBuffer, [{\n\t\tkey: \"configure\",\n\t\tvalue: function configure(options) {\n\t\t\tfor (var p in options) {\n\t\t\t\tthis._options[p] = options[p];\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"clear\",\n\t\tvalue: function clear() {\n\t\t\tthis._data = [];\n\t\t}\n\t}, {\n\t\tkey: \"write\",\n\t\tvalue: function write(text) {\n\t\t\tthis._data.push(text);\n\t\t}\n\t}, {\n\t\tkey: \"flush\",\n\t\tvalue: function flush() {\n\t\t\tvar options = this._options;\n\t\t\tvar display = options.display;\n\t\t\tvar pos = options.position;\n\t\t\tvar size = options.size;\n\n\t\t\t// clear\n\t\t\tfor (var i = 0; i < size.x; i++) {\n\t\t\t\tfor (var j = 0; j < size.y; j++) {\n\t\t\t\t\tdisplay.draw(pos.x + i, pos.y + j);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar text = this._data.join(\" \");\n\t\t\tdisplay.drawText(pos.x, pos.y, text, size.x);\n\t\t}\n\t}]);\n\n\treturn TextBuffer;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (TextBuffer);\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__entity__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__game__ = __webpack_require__(0);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\nvar Tile = function (_Entity) {\n    _inherits(Tile, _Entity);\n\n    function Tile(type) {\n        _classCallCheck(this, Tile);\n\n        // FIXME\n        var tile = Tile.Types[type];\n\n        var _this = _possibleConstructorReturn(this, (Tile.__proto__ || Object.getPrototypeOf(Tile)).call(this, tile.visual));\n\n        _this.name = tile.name;\n        _this.passable = tile.passable;\n        _this.blocksLos = tile.blocksLos;\n        _this.bump = tile.bump ? tile.bump : _this.bump;\n        return _this;\n    }\n\n    _createClass(Tile, [{\n        key: 'bump',\n        value: function bump() {\n            if (!this.passable) {\n                __WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].textBuffer.write('You cannot move through this ' + this.name + ' no matter how hard you try.');\n                return false;\n            }\n            return true;\n        }\n    }]);\n\n    return Tile;\n}(__WEBPACK_IMPORTED_MODULE_0__entity__[\"a\" /* default */]);\n\nTile.Types = {\n    floor: {\n        name: 'Floor',\n        visual: { ch: '.', fg: '#444', bg: '#222' },\n        passable: true,\n        blocksLos: false\n    },\n    wall: {\n        name: 'Wall',\n        visual: { ch: '#', fg: '#777', bg: '#2e2e2e' },\n        passable: false,\n        blocksLos: true\n    },\n    door: {\n        name: 'Door',\n        visual: { ch: '+', fg: 'yellow', bg: '#222' },\n        passable: false,\n        blocksLos: true,\n        bump: function bump(entity) {\n            if (!this.passable) {\n                this.passable = true;\n                this.blocksLos = false;\n                this.visual.ch = \"'\";\n                __WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].textBuffer.write('You open the ' + this.name + '.');\n                return false;\n            }\n            return true;\n        }\n    }\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = (Tile);\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = __webpack_require__(5);\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Promise = __webpack_require__(5);\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._10 = null;\n  Promise._97 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._10 = function (promise) {\n    if (\n      promise._81 === 2 && // IS REJECTED\n      rejections[promise._72]\n    ) {\n      if (rejections[promise._72].logged) {\n        onHandled(promise._72);\n      } else {\n        clearTimeout(rejections[promise._72].timeout);\n      }\n      delete rejections[promise._72];\n    }\n  };\n  Promise._97 = function (promise, err) {\n    if (promise._45 === 0) { // not yet handled\n      promise._72 = id++;\n      rejections[promise._72] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._72),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(7);\nmodule.exports = __webpack_require__(8);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// static/js/main.1fa08d07.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dung/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2a42e7069df4f809317f","import ROT from 'rot-js'\r\nimport Being from './being'\r\nimport Entity from './entity'\r\nimport Level from './level'\r\nimport Player from './player'\r\nimport Screen from './screens'\r\nimport TextBuffer from './textbuffer'\r\nimport XY from './xy'\r\n\r\nclass Game {\r\n\tstatic scheduler = null\r\n\tstatic engine = null\r\n\tstatic player = null\r\n\tstatic level = null\r\n\tstatic display = null\r\n\tstatic textBuffer = null\r\n\tstatic currentScreen = null\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.scheduler = new ROT.Scheduler.Speed();\r\n\t\tthis.engine = new ROT.Engine(this.scheduler);\r\n\t\tthis.display = new ROT.Display({fontSize:16});\r\n\t\tthis.textBuffer = new TextBuffer(this.display);\r\n\t\tdocument.body.appendChild(this.display.getContainer());\r\n\t\tthis.player = new Player();\r\n\r\n\t\t// Create a helper function for binding to an event\r\n\t\t// and making it send it to the screen\r\n\t\tconst game = this; // So that we don't lose this\r\n\t\tconst bindEventToScreen = function(event) {\r\n\t\t\twindow.addEventListener(event, function(e) {\r\n\t\t\t\t// When an event is received, send it to the\r\n\t\t\t\t// screen if there is one\r\n\t\t\t\tif (game.currentScreen !== null) {\r\n\t\t\t\t\t// Send the event type and data to the screen\r\n\t\t\t\t\tgame.currentScreen.handleInput(event, e);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t// Bind keyboard input events\r\n\t\tbindEventToScreen('keydown');\r\n\t\tbindEventToScreen('keyup');\r\n\t\tbindEventToScreen('keypress');\r\n\r\n\t\tthis.switchScreen(Screen.startScreen);\r\n\t}\r\n\r\n\tstartGame() {\r\n\t\t// FIXME build a level and position a player\r\n\t\tconst level = new Level();\r\n\t\tconst size = level.getSize();\r\n\t\tthis._switchLevel(level);\r\n\t\tthis.level.setEntity(this.player, level.getFreeCells().random());\r\n\r\n\t\tthis.engine.start();\r\n\t}\r\n\r\n\tdraw(xy) {\r\n\t\tconst tile = this.level.getTileAt(xy);\r\n\t\tconst tileVisual = tile.getVisual();\r\n\t\tconst entity = this.level.getEntityAt(xy);\r\n\t\tconst visual = entity.getVisual();\r\n\t\tthis.display.draw(xy.x, xy.y, visual.ch, visual.fg, tileVisual.bg);\r\n\t}\r\n\r\n\tover() {\r\n\t\tthis.engine.lock();\r\n\t\t// FIXME show something\r\n\t\tthis.switchScreen(Screen.loseScreen);\r\n\t}\r\n\r\n\t_switchLevel(level) {\r\n\t\t// remove old beings from the scheduler\r\n\t\tthis.scheduler.clear();\r\n\r\n\t\tthis.level = level;\r\n\t\tconst size = this.level.getSize();\r\n\r\n\t\tconst bufferSize = 3;\r\n\t\tthis.display.setOptions({width:size.x, height:size.y + bufferSize});\r\n\t\tthis.textBuffer.configure({\r\n\t\t\tdisplay: this.display,\r\n\t\t\tposition: new XY(0, size.y),\r\n\t\t\tsize: new XY(size.x, bufferSize)\r\n\t\t});\r\n\t\tthis.textBuffer.clear();\r\n\r\n\t\t/* FIXME draw a level */\r\n\t\tconst xy = new XY();\r\n\t\tfor (let i = 0; i < size.x; i++) {\r\n\t\t\txy.x = i;\r\n\t\t\tfor (let j = 0; j < size.y; j++) {\r\n\t\t\t\txy.y = j;\r\n\t\t\t\tthis.draw(xy);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// add new beings to the scheduler\r\n\t\tconst beings = this.level.getBeings();\r\n\t\tfor (let p in beings) {\r\n\t\t\tthis.scheduler.add(beings[p], true);\r\n\t\t}\r\n\t}\r\n\r\n\tgetDisplay() {\r\n\t\treturn this.display;\r\n\t}\r\n\r\n\tswitchScreen(screen) {\r\n\t\t// If we had a screen before, notify it that we exited\r\n\t\tif (Game.currentScreen !== null) {\r\n\t\t\tGame.currentScreen.exit();\r\n\t\t}\r\n\t\t// Clear the display\r\n\t\tthis.getDisplay().clear();\r\n\t\t// Update our current screen, notify it we entered\r\n\t\t// and then render it\r\n\t\tthis.currentScreen = screen;\r\n\t\tif (this.currentScreen) {\r\n\t\t\tthis.currentScreen.enter();\r\n\t\t\tthis.currentScreen.render(this.display);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst game = new Game();\r\nexport default game;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game.js","export default class Entity {\r\n\tconstructor(visual) {\r\n\t\tthis._visual = visual;\r\n\t\tthis._xy = null;\r\n\t\tthis._level = null;\r\n\t}\r\n\tgetVisual() {\r\n\t\treturn this._visual;\r\n\t}\r\n\tgetXY() {\r\n\t\treturn this._xy;\r\n\t}\r\n\tgetLevel() {\r\n\t\treturn this._level;\r\n\t}\r\n\tsetPosition(xy, level) {\r\n\t\tthis._xy = xy;\r\n\t\tthis._level = level;\r\n\t\treturn this;\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/entity.js","export default class XY {\r\n\tconstructor(x = 0, y = 0) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\ttoString() {\r\n\t\treturn this.x + \",\" + this.y;\r\n\t}\r\n\tis(xy) {\r\n\t\treturn (this.x === xy.x && this.y === xy.y);\r\n\t}\r\n\tdist8(xy) {\r\n\t\tconst [dx, dy] = [xy.x - this.x, xy.y - this.y];\r\n\t\treturn Math.max(Math.abs(dx), Math.abs(dy));\r\n\t}\r\n\tdist4(xy) {\r\n\t\tconst [dx, dy] = [xy.x - this.x, xy.y - this.y];\r\n\t\treturn Math.abs(dx) + Math.abs(dy);\r\n\t}\r\n\tdist(xy) {\r\n\t\tconst [dx, dy] = [xy.x - this.x, xy.y - this.y];\r\n\t\treturn Math.sqrt(dx*dx+dy*dy);\r\n\t}\r\n\tplus(xy) {\r\n\t\treturn new XY(this.x+xy.x, this.y+xy.y);\r\n\t}\r\n\tminus(xy) {\r\n\t\treturn new XY(this.x-xy.x, this.y-xy.y);\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/xy.js","/*\n\tThis is rot.js, the ROguelike Toolkit in JavaScript.\n\tVersion 0.6~dev, generated on Mon Nov 30 10:34:42 CET 2015.\n*/\n/**\n * Add objects for Node.js environment\n */\nglobal.requestAnimationFrame = function(cb) {\n\treturn setTimeout(cb, 1000/60);\n};\n\nglobal.document = {\n\tbody: {\n\t\tappendChild: function(child) {},\n\t\tscrollLeft: 0,\n\t\tscrollTop: 0\n\t},\n\tcreateElement: function(type) {\n\t\tvar canvas;\n\t\treturn canvas = {\n\t\t\tgetBoundingClientRect: function() {\n\t\t\t\tvar rect;\n\t\t\t\treturn rect = {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\ttop: 0\n\t\t\t\t};\n\t\t\t},\n\t\t\tgetContext: function(type) {\n\t\t\t\tvar context;\n\t\t\t\treturn context = {\n\t\t\t\t\t_termcolor: null,\n\t\t\t\t\tbeginPath: function() {},\n\t\t\t\t\tcanvas: canvas,\n\t\t\t\t\tclearRect: function(x, y, w, h) {\n\t\t\t\t\t\tif(this._termcolor !== null) {\n\t\t\t\t\t\t\tvar clearCmd = this._termcolor.clearToAnsi(this.fillStyle);\n\t\t\t\t\t\t\tprocess.stdout.write(clearCmd);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tdrawImage: function(a, b, c, d, e, f, g, h, i) {},\n\t\t\t\t\tfill: function() {},\n\t\t\t\t\tfillRect: function(x, y, w, h) {\n\t\t\t\t\t\tif(this._termcolor !== null) {\n\t\t\t\t\t\t\tvar clearCmd = this._termcolor.clearToAnsi(this.fillStyle);\n\t\t\t\t\t\t\tprocess.stdout.write(clearCmd);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfillStyle: \"#000\",\n\t\t\t\t\tfillText: function(chs, x, y) {},\n\t\t\t\t\tfont: \"monospace\",\n\t\t\t\t\tlineTo: function(x, y) {},\n\t\t\t\t\tmeasureText: function(ch) {\n\t\t\t\t\t\tvar result;\n\t\t\t\t\t\treturn result = {\n\t\t\t\t\t\t\twidth: 12\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\tmoveTo: function(x, y) {},\n\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\ttextBaseline: \"middle\"\n\t\t\t\t};\n\t\t\t},\n\t\t\theight: 0,\n\t\t\tstyle: {\n\t\t\t\tleft: \"100px\",\n\t\t\t\tposition: \"absolute\",\n\t\t\t\ttop: \"100px\",\n\t\t\t\tvisibility: \"hidden\"\n\t\t\t},\n\t\t\twidth: 0\n\t\t};\n\t},\n\tdocumentElement: {\n\t\tscrollLeft: 0,\n\t\tscrollTop: 0\n\t}\n};\n/**\n * @namespace Top-level ROT namespace\n */\nvar ROT = {\n\t/**\n\t * @returns {bool} Is rot.js supported by this browser?\n\t */\n\tisSupported: function() {\n\t\treturn !!(document.createElement(\"canvas\").getContext && Function.prototype.bind);\n\t},\n\n\t/** Default with for display and map generators */\n\tDEFAULT_WIDTH: 80,\n\t/** Default height for display and map generators */\n\tDEFAULT_HEIGHT: 25,\n\n\t/** Directional constants. Ordering is important! */\n\tDIRS: {\n\t\t\"4\": [\n\t\t\t[ 0, -1],\n\t\t\t[ 1,  0],\n\t\t\t[ 0,  1],\n\t\t\t[-1,  0]\n\t\t],\n\t\t\"8\": [\n\t\t\t[ 0, -1],\n\t\t\t[ 1, -1],\n\t\t\t[ 1,  0],\n\t\t\t[ 1,  1],\n\t\t\t[ 0,  1],\n\t\t\t[-1,  1],\n\t\t\t[-1,  0],\n\t\t\t[-1, -1]\n\t\t],\n\t\t\"6\": [\n\t\t\t[-1, -1],\n\t\t\t[ 1, -1],\n\t\t\t[ 2,  0],\n\t\t\t[ 1,  1],\n\t\t\t[-1,  1],\n\t\t\t[-2,  0]\n\t\t]\n\t},\n\n\t/** Cancel key. */\n\tVK_CANCEL: 3, \n\t/** Help key. */\n\tVK_HELP: 6, \n\t/** Backspace key. */\n\tVK_BACK_SPACE: 8, \n\t/** Tab key. */\n\tVK_TAB: 9, \n\t/** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n\tVK_CLEAR: 12, \n\t/** Return/enter key on the main keyboard. */\n\tVK_RETURN: 13, \n\t/** Reserved, but not used. */\n\tVK_ENTER: 14, \n\t/** Shift key. */\n\tVK_SHIFT: 16, \n\t/** Control key. */\n\tVK_CONTROL: 17, \n\t/** Alt (Option on Mac) key. */\n\tVK_ALT: 18, \n\t/** Pause key. */\n\tVK_PAUSE: 19, \n\t/** Caps lock. */\n\tVK_CAPS_LOCK: 20, \n\t/** Escape key. */\n\tVK_ESCAPE: 27, \n\t/** Space bar. */\n\tVK_SPACE: 32, \n\t/** Page Up key. */\n\tVK_PAGE_UP: 33, \n\t/** Page Down key. */\n\tVK_PAGE_DOWN: 34, \n\t/** End key. */\n\tVK_END: 35, \n\t/** Home key. */\n\tVK_HOME: 36, \n\t/** Left arrow. */\n\tVK_LEFT: 37, \n\t/** Up arrow. */\n\tVK_UP: 38, \n\t/** Right arrow. */\n\tVK_RIGHT: 39, \n\t/** Down arrow. */\n\tVK_DOWN: 40, \n\t/** Print Screen key. */\n\tVK_PRINTSCREEN: 44, \n\t/** Ins(ert) key. */\n\tVK_INSERT: 45, \n\t/** Del(ete) key. */\n\tVK_DELETE: 46, \n\t/***/\n\tVK_0: 48,\n\t/***/\n\tVK_1: 49,\n\t/***/\n\tVK_2: 50,\n\t/***/\n\tVK_3: 51,\n\t/***/\n\tVK_4: 52,\n\t/***/\n\tVK_5: 53,\n\t/***/\n\tVK_6: 54,\n\t/***/\n\tVK_7: 55,\n\t/***/\n\tVK_8: 56,\n\t/***/\n\tVK_9: 57,\n\t/** Colon (:) key. Requires Gecko 15.0 */\n\tVK_COLON: 58, \n\t/** Semicolon (;) key. */\n\tVK_SEMICOLON: 59, \n\t/** Less-than (<) key. Requires Gecko 15.0 */\n\tVK_LESS_THAN: 60, \n\t/** Equals (=) key. */\n\tVK_EQUALS: 61, \n\t/** Greater-than (>) key. Requires Gecko 15.0 */\n\tVK_GREATER_THAN: 62, \n\t/** Question mark (?) key. Requires Gecko 15.0 */\n\tVK_QUESTION_MARK: 63, \n\t/** Atmark (@) key. Requires Gecko 15.0 */\n\tVK_AT: 64, \n\t/***/\n\tVK_A: 65,\n\t/***/\n\tVK_B: 66,\n\t/***/\n\tVK_C: 67,\n\t/***/\n\tVK_D: 68,\n\t/***/\n\tVK_E: 69,\n\t/***/\n\tVK_F: 70,\n\t/***/\n\tVK_G: 71,\n\t/***/\n\tVK_H: 72,\n\t/***/\n\tVK_I: 73,\n\t/***/\n\tVK_J: 74,\n\t/***/\n\tVK_K: 75,\n\t/***/\n\tVK_L: 76,\n\t/***/\n\tVK_M: 77,\n\t/***/\n\tVK_N: 78,\n\t/***/\n\tVK_O: 79,\n\t/***/\n\tVK_P: 80,\n\t/***/\n\tVK_Q: 81,\n\t/***/\n\tVK_R: 82,\n\t/***/\n\tVK_S: 83,\n\t/***/\n\tVK_T: 84,\n\t/***/\n\tVK_U: 85,\n\t/***/\n\tVK_V: 86,\n\t/***/\n\tVK_W: 87,\n\t/***/\n\tVK_X: 88,\n\t/***/\n\tVK_Y: 89,\n\t/***/\n\tVK_Z: 90,\n\t/***/\n\tVK_CONTEXT_MENU: 93,\n\t/** 0 on the numeric keypad. */\n\tVK_NUMPAD0: 96, \n\t/** 1 on the numeric keypad. */\n\tVK_NUMPAD1: 97, \n\t/** 2 on the numeric keypad. */\n\tVK_NUMPAD2: 98, \n\t/** 3 on the numeric keypad. */\n\tVK_NUMPAD3: 99, \n\t/** 4 on the numeric keypad. */\n\tVK_NUMPAD4: 100, \n\t/** 5 on the numeric keypad. */\n\tVK_NUMPAD5: 101, \n\t/** 6 on the numeric keypad. */\n\tVK_NUMPAD6: 102, \n\t/** 7 on the numeric keypad. */\n\tVK_NUMPAD7: 103, \n\t/** 8 on the numeric keypad. */\n\tVK_NUMPAD8: 104, \n\t/** 9 on the numeric keypad. */\n\tVK_NUMPAD9: 105, \n\t/** * on the numeric keypad. */\n\tVK_MULTIPLY: 106,\n\t/** + on the numeric keypad. */\n\tVK_ADD: 107, \n\t/***/\n\tVK_SEPARATOR: 108,\n\t/** - on the numeric keypad. */\n\tVK_SUBTRACT: 109, \n\t/** Decimal point on the numeric keypad. */\n\tVK_DECIMAL: 110, \n\t/** / on the numeric keypad. */\n\tVK_DIVIDE: 111, \n\t/** F1 key. */\n\tVK_F1: 112, \n\t/** F2 key. */\n\tVK_F2: 113, \n\t/** F3 key. */\n\tVK_F3: 114, \n\t/** F4 key. */\n\tVK_F4: 115, \n\t/** F5 key. */\n\tVK_F5: 116, \n\t/** F6 key. */\n\tVK_F6: 117, \n\t/** F7 key. */\n\tVK_F7: 118, \n\t/** F8 key. */\n\tVK_F8: 119, \n\t/** F9 key. */\n\tVK_F9: 120, \n\t/** F10 key. */\n\tVK_F10: 121, \n\t/** F11 key. */\n\tVK_F11: 122, \n\t/** F12 key. */\n\tVK_F12: 123, \n\t/** F13 key. */\n\tVK_F13: 124, \n\t/** F14 key. */\n\tVK_F14: 125, \n\t/** F15 key. */\n\tVK_F15: 126, \n\t/** F16 key. */\n\tVK_F16: 127, \n\t/** F17 key. */\n\tVK_F17: 128, \n\t/** F18 key. */\n\tVK_F18: 129, \n\t/** F19 key. */\n\tVK_F19: 130, \n\t/** F20 key. */\n\tVK_F20: 131, \n\t/** F21 key. */\n\tVK_F21: 132, \n\t/** F22 key. */\n\tVK_F22: 133, \n\t/** F23 key. */\n\tVK_F23: 134, \n\t/** F24 key. */\n\tVK_F24: 135, \n\t/** Num Lock key. */\n\tVK_NUM_LOCK: 144, \n\t/** Scroll Lock key. */\n\tVK_SCROLL_LOCK: 145, \n\t/** Circumflex (^) key. Requires Gecko 15.0 */\n\tVK_CIRCUMFLEX: 160, \n\t/** Exclamation (!) key. Requires Gecko 15.0 */\n\tVK_EXCLAMATION: 161, \n\t/** Double quote () key. Requires Gecko 15.0 */\n\tVK_DOUBLE_QUOTE: 162, \n\t/** Hash (#) key. Requires Gecko 15.0 */\n\tVK_HASH: 163, \n\t/** Dollar sign ($) key. Requires Gecko 15.0 */\n\tVK_DOLLAR: 164, \n\t/** Percent (%) key. Requires Gecko 15.0 */\n\tVK_PERCENT: 165, \n\t/** Ampersand (&) key. Requires Gecko 15.0 */\n\tVK_AMPERSAND: 166, \n\t/** Underscore (_) key. Requires Gecko 15.0 */\n\tVK_UNDERSCORE: 167, \n\t/** Open parenthesis (() key. Requires Gecko 15.0 */\n\tVK_OPEN_PAREN: 168, \n\t/** Close parenthesis ()) key. Requires Gecko 15.0 */\n\tVK_CLOSE_PAREN: 169, \n\t/* Asterisk (*) key. Requires Gecko 15.0 */\n\tVK_ASTERISK: 170,\n\t/** Plus (+) key. Requires Gecko 15.0 */\n\tVK_PLUS: 171, \n\t/** Pipe (|) key. Requires Gecko 15.0 */\n\tVK_PIPE: 172, \n\t/** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n\tVK_HYPHEN_MINUS: 173, \n\t/** Open curly bracket ({) key. Requires Gecko 15.0 */\n\tVK_OPEN_CURLY_BRACKET: 174, \n\t/** Close curly bracket (}) key. Requires Gecko 15.0 */\n\tVK_CLOSE_CURLY_BRACKET: 175, \n\t/** Tilde (~) key. Requires Gecko 15.0 */\n\tVK_TILDE: 176, \n\t/** Comma (,) key. */\n\tVK_COMMA: 188, \n\t/** Period (.) key. */\n\tVK_PERIOD: 190, \n\t/** Slash (/) key. */\n\tVK_SLASH: 191, \n\t/** Back tick (`) key. */\n\tVK_BACK_QUOTE: 192, \n\t/** Open square bracket ([) key. */\n\tVK_OPEN_BRACKET: 219, \n\t/** Back slash (\\) key. */\n\tVK_BACK_SLASH: 220, \n\t/** Close square bracket (]) key. */\n\tVK_CLOSE_BRACKET: 221, \n\t/** Quote (''') key. */\n\tVK_QUOTE: 222, \n\t/** Meta key on Linux, Command key on Mac. */\n\tVK_META: 224, \n\t/** AltGr key on Linux. Requires Gecko 15.0 */\n\tVK_ALTGR: 225, \n\t/** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n\tVK_WIN: 91, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_KANA: 21, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_HANGUL: 21, \n\t/** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n\tVK_EISU: 22, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_JUNJA: 23, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_FINAL: 24, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_HANJA: 25, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_KANJI: 25, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_CONVERT: 28, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_NONCONVERT: 29, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_ACCEPT: 30, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_MODECHANGE: 31, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_SELECT: 41, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_PRINT: 42, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_EXECUTE: 43, \n\t/** Linux support for this keycode was added in Gecko 4.0.\t */\n\tVK_SLEEP: 95 \n};\n/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nROT.Text = {\n\tRE_COLORS: /%([bc]){([^}]*)}/g,\n\n\t/* token types */\n\tTYPE_TEXT:\t\t0,\n\tTYPE_NEWLINE:\t1,\n\tTYPE_FG:\t\t2,\n\tTYPE_BG:\t\t3,\n\n\t/**\n\t * Measure size of a resulting text block\n\t */\n\tmeasure: function(str, maxWidth) {\n\t\tvar result = {width:0, height:1};\n\t\tvar tokens = this.tokenize(str, maxWidth);\n\t\tvar lineWidth = 0;\n\n\t\tfor (var i=0;i<tokens.length;i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tswitch (token.type) {\n\t\t\t\tcase this.TYPE_TEXT:\n\t\t\t\t\tlineWidth += token.value.length;\n\t\t\t\tbreak;\n\n\t\t\t\tcase this.TYPE_NEWLINE:\n\t\t\t\t\tresult.height++;\n\t\t\t\t\tresult.width = Math.max(result.width, lineWidth);\n\t\t\t\t\tlineWidth = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tresult.width = Math.max(result.width, lineWidth);\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * Convert string to a series of a formatting commands\n\t */\n\ttokenize: function(str, maxWidth) {\n\t\tvar result = [];\n\n\t\t/* first tokenization pass - split texts and color formatting commands */\n\t\tvar offset = 0;\n\t\tstr.replace(this.RE_COLORS, function(match, type, name, index) {\n\t\t\t/* string before */\n\t\t\tvar part = str.substring(offset, index);\n\t\t\tif (part.length) {\n\t\t\t\tresult.push({\n\t\t\t\t\ttype: ROT.Text.TYPE_TEXT,\n\t\t\t\t\tvalue: part\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/* color command */\n\t\t\tresult.push({\n\t\t\t\ttype: (type == \"c\" ? ROT.Text.TYPE_FG : ROT.Text.TYPE_BG),\n\t\t\t\tvalue: name.trim()\n\t\t\t});\n\n\t\t\toffset = index + match.length;\n\t\t\treturn \"\";\n\t\t});\n\n\t\t/* last remaining part */\n\t\tvar part = str.substring(offset);\n\t\tif (part.length) {\n\t\t\tresult.push({\n\t\t\t\ttype: ROT.Text.TYPE_TEXT,\n\t\t\t\tvalue: part\n\t\t\t});\n\t\t}\n\n\t\treturn this._breakLines(result, maxWidth);\n\t},\n\n\t/* insert line breaks into first-pass tokenized data */\n\t_breakLines: function(tokens, maxWidth) {\n\t\tif (!maxWidth) { maxWidth = Infinity; };\n\n\t\tvar i = 0;\n\t\tvar lineLength = 0;\n\t\tvar lastTokenWithSpace = -1;\n\n\t\twhile (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n\t\t\tvar token = tokens[i];\n\t\t\tif (token.type == ROT.Text.TYPE_NEWLINE) { /* reset */\n\t\t\t\tlineLength = 0; \n\t\t\t\tlastTokenWithSpace = -1;\n\t\t\t}\n\t\t\tif (token.type != ROT.Text.TYPE_TEXT) { /* skip non-text tokens */\n\t\t\t\ti++;\n\t\t\t\tcontinue; \n\t\t\t}\n\n\t\t\t/* remove spaces at the beginning of line */\n\t\t\twhile (lineLength == 0 && token.value.charAt(0) == \" \") { token.value = token.value.substring(1); }\n\n\t\t\t/* forced newline? insert two new tokens after this one */\n\t\t\tvar index = token.value.indexOf(\"\\n\");\n\t\t\tif (index != -1) { \n\t\t\t\ttoken.value = this._breakInsideToken(tokens, i, index, true); \n\n\t\t\t\t/* if there are spaces at the end, we must remove them (we do not want the line too long) */\n\t\t\t\tvar arr = token.value.split(\"\");\n\t\t\t\twhile (arr.length && arr[arr.length-1] == \" \") { arr.pop(); }\n\t\t\t\ttoken.value = arr.join(\"\");\n\t\t\t}\n\n\t\t\t/* token degenerated? */\n\t\t\tif (!token.value.length) {\n\t\t\t\ttokens.splice(i, 1);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n\n\t\t\t\t/* is it possible to break within this token? */\n\t\t\t\tvar index = -1;\n\t\t\t\twhile (1) {\n\t\t\t\t\tvar nextIndex = token.value.indexOf(\" \", index+1);\n\t\t\t\t\tif (nextIndex == -1) { break; }\n\t\t\t\t\tif (lineLength + nextIndex > maxWidth) { break; }\n\t\t\t\t\tindex = nextIndex;\n\t\t\t\t}\n\n\t\t\t\tif (index != -1) { /* break at space within this one */\n\t\t\t\t\ttoken.value = this._breakInsideToken(tokens, i, index, true);\n\t\t\t\t} else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n\t\t\t\t\tvar token = tokens[lastTokenWithSpace];\n\t\t\t\t\tvar breakIndex = token.value.lastIndexOf(\" \");\n\t\t\t\t\ttoken.value = this._breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n\t\t\t\t\ti = lastTokenWithSpace;\n\t\t\t\t} else { /* force break in this token */\n\t\t\t\t\ttoken.value = this._breakInsideToken(tokens, i, maxWidth-lineLength, false);\n\t\t\t\t}\n\n\t\t\t} else { /* line not long, continue */\n\t\t\t\tlineLength += token.value.length;\n\t\t\t\tif (token.value.indexOf(\" \") != -1) { lastTokenWithSpace = i; }\n\t\t\t}\n\t\t\t\n\t\t\ti++; /* advance to next token */\n\t\t}\n\n\n\t\ttokens.push({type: ROT.Text.TYPE_NEWLINE}); /* insert fake newline to fix the last text line */\n\n\t\t/* remove trailing space from text tokens before newlines */\n\t\tvar lastTextToken = null;\n\t\tfor (var i=0;i<tokens.length;i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tswitch (token.type) {\n\t\t\t\tcase ROT.Text.TYPE_TEXT: lastTextToken = token; break;\n\t\t\t\tcase ROT.Text.TYPE_NEWLINE: \n\t\t\t\t\tif (lastTextToken) { /* remove trailing space */\n\t\t\t\t\t\tvar arr = lastTextToken.value.split(\"\");\n\t\t\t\t\t\twhile (arr.length && arr[arr.length-1] == \" \") { arr.pop(); }\n\t\t\t\t\t\tlastTextToken.value = arr.join(\"\");\n\t\t\t\t\t}\n\t\t\t\t\tlastTextToken = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\ttokens.pop(); /* remove fake token */\n\n\t\treturn tokens;\n\t},\n\n\t/**\n\t * Create new tokens and insert them into the stream\n\t * @param {object[]} tokens\n\t * @param {int} tokenIndex Token being processed\n\t * @param {int} breakIndex Index within current token's value\n\t * @param {bool} removeBreakChar Do we want to remove the breaking character?\n\t * @returns {string} remaining unbroken token value\n\t */\n\t_breakInsideToken: function(tokens, tokenIndex, breakIndex, removeBreakChar) {\n\t\tvar newBreakToken = {\n\t\t\ttype: ROT.Text.TYPE_NEWLINE\n\t\t}\n\t\tvar newTextToken = {\n\t\t\ttype: ROT.Text.TYPE_TEXT,\n\t\t\tvalue: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n\t\t}\n\t\ttokens.splice(tokenIndex+1, 0, newBreakToken, newTextToken);\n\t\treturn tokens[tokenIndex].value.substring(0, breakIndex);\n\t}\n}\n/**\n * @returns {any} Randomly picked item, null when length=0\n */\nArray.prototype.random = Array.prototype.random || function() {\n\tif (!this.length) { return null; }\n\treturn this[Math.floor(ROT.RNG.getUniform() * this.length)];\n}\n\n/**\n * @returns {array} New array with randomized items\n * FIXME destroys this!\n */\nArray.prototype.randomize = Array.prototype.randomize || function() {\n\tvar result = [];\n\twhile (this.length) {\n\t\tvar index = this.indexOf(this.random());\n\t\tresult.push(this.splice(index, 1)[0]);\n\t}\n\treturn result;\n}\n/**\n * Always positive modulus\n * @param {int} n Modulus\n * @returns {int} this modulo n\n */\nNumber.prototype.mod = Number.prototype.mod || function(n) {\n\treturn ((this%n)+n)%n;\n}\n/**\n * @returns {string} First letter capitalized\n */\nString.prototype.capitalize = String.prototype.capitalize || function() {\n\treturn this.charAt(0).toUpperCase() + this.substring(1);\n}\n\n/** \n * Left pad\n * @param {string} [character=\"0\"]\n * @param {int} [count=2]\n */\nString.prototype.lpad = String.prototype.lpad || function(character, count) {\n\tvar ch = character || \"0\";\n\tvar cnt = count || 2;\n\n\tvar s = \"\";\n\twhile (s.length < (cnt - this.length)) { s += ch; }\n\ts = s.substring(0, cnt-this.length);\n\treturn s+this;\n}\n\n/** \n * Right pad\n * @param {string} [character=\"0\"]\n * @param {int} [count=2]\n */\nString.prototype.rpad = String.prototype.rpad || function(character, count) {\n\tvar ch = character || \"0\";\n\tvar cnt = count || 2;\n\n\tvar s = \"\";\n\twhile (s.length < (cnt - this.length)) { s += ch; }\n\ts = s.substring(0, cnt-this.length);\n\treturn this+s;\n}\n\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nString.format = String.format || function(template) {\n\tvar map = String.format.map;\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\n\tvar replacer = function(match, group1, group2, index) {\n\t\tif (template.charAt(index-1) == \"%\") { return match.substring(1); }\n\t\tif (!args.length) { return match; }\n\t\tvar obj = args[0];\n\n\t\tvar group = group1 || group2;\n\t\tvar parts = group.split(\",\");\n\t\tvar name = parts.shift();\n\t\tvar method = map[name.toLowerCase()];\n\t\tif (!method) { return match; }\n\n\t\tvar obj = args.shift();\n\t\tvar replaced = obj[method].apply(obj, parts);\n\n\t\tvar first = name.charAt(0);\n\t\tif (first != first.toLowerCase()) { replaced = replaced.capitalize(); }\n\n\t\treturn replaced;\n\t}\n\treturn template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\n\nString.format.map = String.format.map || {\n\t\"s\": \"toString\"\n}\n\n/**\n * Convenience shortcut to String.format(this)\n */\nString.prototype.format = String.prototype.format || function() {\n\tvar args = Array.prototype.slice.call(arguments);\n\targs.unshift(this);\n\treturn String.format.apply(String, args);\n}\n\nif (!Object.create) {  \n\t/**\n\t * ES5 Object.create\n\t */\n\tObject.create = function(o) {  \n\t\tvar tmp = function() {};\n\t\ttmp.prototype = o;\n\t\treturn new tmp();\n\t};  \n}  \n/**\n * Sets prototype of this function to an instance of parent function\n * @param {function} parent\n */\nFunction.prototype.extend = Function.prototype.extend || function(parent) {\n\tthis.prototype = Object.create(parent.prototype);\n\tthis.prototype.constructor = this;\n\treturn this;\n}\nif (typeof window != \"undefined\") {\n\twindow.requestAnimationFrame =\n\t\twindow.requestAnimationFrame\n\t\t|| window.mozRequestAnimationFrame\n\t\t|| window.webkitRequestAnimationFrame\n\t\t|| window.oRequestAnimationFrame\n\t\t|| window.msRequestAnimationFrame\n\t\t|| function(cb) { return setTimeout(cb, 1000/60); };\n\n\twindow.cancelAnimationFrame =\n\t\twindow.cancelAnimationFrame\n\t\t|| window.mozCancelAnimationFrame\n\t\t|| window.webkitCancelAnimationFrame\n\t\t|| window.oCancelAnimationFrame\n\t\t|| window.msCancelAnimationFrame\n\t\t|| function(id) { return clearTimeout(id); };\n}\n/**\n * @class Visual map display\n * @param {object} [options]\n * @param {int} [options.width=ROT.DEFAULT_WIDTH]\n * @param {int} [options.height=ROT.DEFAULT_HEIGHT]\n * @param {int} [options.fontSize=15]\n * @param {string} [options.fontFamily=\"monospace\"]\n * @param {string} [options.fontStyle=\"\"] bold/italic/none/both\n * @param {string} [options.fg=\"#ccc\"]\n * @param {string} [options.bg=\"#000\"]\n * @param {float} [options.spacing=1]\n * @param {float} [options.border=0]\n * @param {string} [options.layout=\"rect\"]\n * @param {bool} [options.forceSquareRatio=false]\n * @param {int} [options.tileWidth=32]\n * @param {int} [options.tileHeight=32]\n * @param {object} [options.tileMap={}]\n * @param {image} [options.tileSet=null]\n * @param {image} [options.tileColorize=false]\n */\nROT.Display = function(options) {\n\tvar canvas = document.createElement(\"canvas\");\n\tthis._context = canvas.getContext(\"2d\");\n\tthis._data = {};\n\tthis._dirty = false; /* false = nothing, true = all, object = dirty cells */\n\tthis._options = {};\n\tthis._backend = null;\n\t\n\tvar defaultOptions = {\n\t\twidth: ROT.DEFAULT_WIDTH,\n\t\theight: ROT.DEFAULT_HEIGHT,\n\t\ttranspose: false,\n\t\tlayout: \"rect\",\n\t\tfontSize: 15,\n\t\tspacing: 1,\n\t\tborder: 0,\n\t\tforceSquareRatio: false,\n\t\tfontFamily: \"monospace\",\n\t\tfontStyle: \"\",\n\t\tfg: \"#ccc\",\n\t\tbg: \"#000\",\n\t\ttileWidth: 32,\n\t\ttileHeight: 32,\n\t\ttileMap: {},\n\t\ttileSet: null,\n\t\ttileColorize: false,\n\t\ttermColor: \"xterm\"\n\t};\n\tfor (var p in options) { defaultOptions[p] = options[p]; }\n\tthis.setOptions(defaultOptions);\n\tthis.DEBUG = this.DEBUG.bind(this);\n\n\tthis._tick = this._tick.bind(this);\n\trequestAnimationFrame(this._tick);\n}\n\n/**\n * Debug helper, ideal as a map generator callback. Always bound to this.\n * @param {int} x\n * @param {int} y\n * @param {int} what\n */\nROT.Display.prototype.DEBUG = function(x, y, what) {\n\tvar colors = [this._options.bg, this._options.fg];\n\tthis.draw(x, y, null, null, colors[what % colors.length]);\n}\n\n/**\n * Clear the whole display (cover it with background color)\n */\nROT.Display.prototype.clear = function() {\n\tthis._data = {};\n\tthis._dirty = true;\n}\n\n/**\n * @see ROT.Display\n */\nROT.Display.prototype.setOptions = function(options) {\n\tfor (var p in options) { this._options[p] = options[p]; }\n\tif (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n\t\tif (options.layout) { \n\t\t\tthis._backend = new ROT.Display[options.layout.capitalize()](this._context);\n\t\t}\n\n\t\tvar font = (this._options.fontStyle ? this._options.fontStyle + \" \" : \"\") + this._options.fontSize + \"px \" + this._options.fontFamily;\n\t\tthis._context.font = font;\n\t\tthis._backend.compute(this._options);\n\t\tthis._context.font = font;\n\t\tthis._context.textAlign = \"center\";\n\t\tthis._context.textBaseline = \"middle\";\n\t\tthis._dirty = true;\n\t}\n\treturn this;\n}\n\n/**\n * Returns currently set options\n * @returns {object} Current options object \n */\nROT.Display.prototype.getOptions = function() {\n\treturn this._options;\n}\n\n/**\n * Returns the DOM node of this display\n * @returns {node} DOM node\n */\nROT.Display.prototype.getContainer = function() {\n\treturn this._context.canvas;\n}\n\n/**\n * Compute the maximum width/height to fit into a set of given constraints\n * @param {int} availWidth Maximum allowed pixel width\n * @param {int} availHeight Maximum allowed pixel height\n * @returns {int[2]} cellWidth,cellHeight\n */\nROT.Display.prototype.computeSize = function(availWidth, availHeight) {\n\treturn this._backend.computeSize(availWidth, availHeight, this._options);\n}\n\n/**\n * Compute the maximum font size to fit into a set of given constraints\n * @param {int} availWidth Maximum allowed pixel width\n * @param {int} availHeight Maximum allowed pixel height\n * @returns {int} fontSize\n */\nROT.Display.prototype.computeFontSize = function(availWidth, availHeight) {\n\treturn this._backend.computeFontSize(availWidth, availHeight, this._options);\n}\n\n/**\n * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n * @param {Event} e event\n * @returns {int[2]} -1 for values outside of the canvas\n */\nROT.Display.prototype.eventToPosition = function(e) {\n\tif (e.touches) {\n\t\tvar x = e.touches[0].clientX;\n\t\tvar y = e.touches[0].clientY;\n\t} else {\n\t\tvar x = e.clientX;\n\t\tvar y = e.clientY;\n\t}\n\n\tvar rect = this._context.canvas.getBoundingClientRect();\n\tx -= rect.left;\n\ty -= rect.top;\n\t\n\tif (x < 0 || y < 0 || x >= this._context.canvas.width || y >= this._context.canvas.height) { return [-1, -1]; }\n\n\treturn this._backend.eventToPosition(x, y);\n}\n\n/**\n * @param {int} x\n * @param {int} y\n * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n * @param {string} [fg] foreground color\n * @param {string} [bg] background color\n */\nROT.Display.prototype.draw = function(x, y, ch, fg, bg) {\n\tif (!fg) { fg = this._options.fg; }\n\tif (!bg) { bg = this._options.bg; }\n\tthis._data[x+\",\"+y] = [x, y, ch, fg, bg];\n\t\n\tif (this._dirty === true) { return; } /* will already redraw everything */\n\tif (!this._dirty) { this._dirty = {}; } /* first! */\n\tthis._dirty[x+\",\"+y] = true;\n}\n\n/**\n * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n * @param {int} x\n * @param {int} y\n * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n * @param {int} [maxWidth] wrap at what width?\n * @returns {int} lines drawn\n */\nROT.Display.prototype.drawText = function(x, y, text, maxWidth) {\n\tvar fg = null;\n\tvar bg = null;\n\tvar cx = x;\n\tvar cy = y;\n\tvar lines = 1;\n\tif (!maxWidth) { maxWidth = this._options.width-x; }\n\n\tvar tokens = ROT.Text.tokenize(text, maxWidth);\n\n\twhile (tokens.length) { /* interpret tokenized opcode stream */\n\t\tvar token = tokens.shift();\n\t\tswitch (token.type) {\n\t\t\tcase ROT.Text.TYPE_TEXT:\n\t\t\t\tvar isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n\t\t\t\tfor (var i=0;i<token.value.length;i++) {\n\t\t\t\t\tvar cc = token.value.charCodeAt(i);\n\t\t\t\t\tvar c = token.value.charAt(i);\n\t\t\t\t\t// Assign to `true` when the current char is full-width.\n\t\t\t\t\tisFullWidth = (cc > 0xff && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) && cc > 0xffee;\n\t\t\t\t\t// Current char is space, whatever full-width or half-width both are OK.\n\t\t\t\t\tisSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n\t\t\t\t\t// The previous char is full-width and\n\t\t\t\t\t// current char is nether half-width nor a space.\n\t\t\t\t\tif (isPrevFullWidth && !isFullWidth && !isSpace) { cx++; } // add an extra position\n\t\t\t\t\t// The current char is full-width and\n\t\t\t\t\t// the previous char is not a space.\n\t\t\t\t\tif(isFullWidth && !isPrevSpace) { cx++; } // add an extra position\n\t\t\t\t\tthis.draw(cx++, cy, c, fg, bg);\n\t\t\t\t\tisPrevSpace = isSpace;\n\t\t\t\t\tisPrevFullWidth = isFullWidth;\n\t\t\t\t}\n\t\t\tbreak;\n\n\t\t\tcase ROT.Text.TYPE_FG:\n\t\t\t\tfg = token.value || null;\n\t\t\tbreak;\n\n\t\t\tcase ROT.Text.TYPE_BG:\n\t\t\t\tbg = token.value || null;\n\t\t\tbreak;\n\n\t\t\tcase ROT.Text.TYPE_NEWLINE:\n\t\t\t\tcx = x;\n\t\t\t\tcy++;\n\t\t\t\tlines++\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn lines;\n}\n\n/**\n * Timer tick: update dirty parts\n */\nROT.Display.prototype._tick = function() {\n\trequestAnimationFrame(this._tick);\n\n\tif (!this._dirty) { return; }\n\n\tif (this._dirty === true) { /* draw all */\n\t\tthis._context.fillStyle = this._options.bg;\n\t\tthis._context.fillRect(0, 0, this._context.canvas.width, this._context.canvas.height);\n\n\t\tfor (var id in this._data) { /* redraw cached data */\n\t\t\tthis._draw(id, false);\n\t\t}\n\n\t} else { /* draw only dirty */\n\t\tfor (var key in this._dirty) {\n\t\t\tthis._draw(key, true);\n\t\t}\n\t}\n\n\tthis._dirty = false;\n}\n\n/**\n * @param {string} key What to draw\n * @param {bool} clearBefore Is it necessary to clean before?\n */\nROT.Display.prototype._draw = function(key, clearBefore) {\n\tvar data = this._data[key];\n\tif (data[4] != this._options.bg) { clearBefore = true; }\n\n\tthis._backend.draw(data, clearBefore);\n}\n/**\n * @class Abstract display backend module\n * @private\n */\nROT.Display.Backend = function(context) {\n\tthis._context = context;\n}\n\nROT.Display.Backend.prototype.compute = function(options) {\n}\n\nROT.Display.Backend.prototype.draw = function(data, clearBefore) {\n}\n\nROT.Display.Backend.prototype.computeSize = function(availWidth, availHeight) {\n}\n\nROT.Display.Backend.prototype.computeFontSize = function(availWidth, availHeight) {\n}\n\nROT.Display.Backend.prototype.eventToPosition = function(x, y) {\n}\n/**\n * @class Rectangular backend\n * @private\n */\nROT.Display.Rect = function(context) {\n\tROT.Display.Backend.call(this, context);\n\t\n\tthis._spacingX = 0;\n\tthis._spacingY = 0;\n\tthis._canvasCache = {};\n\tthis._options = {};\n}\nROT.Display.Rect.extend(ROT.Display.Backend);\n\nROT.Display.Rect.cache = false;\n\nROT.Display.Rect.prototype.compute = function(options) {\n\tthis._canvasCache = {};\n\tthis._options = options;\n\n\tvar charWidth = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._spacingX = Math.ceil(options.spacing * charWidth);\n\tthis._spacingY = Math.ceil(options.spacing * options.fontSize);\n\n\tif (this._options.forceSquareRatio) {\n\t\tthis._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n\t}\n\n\tthis._context.canvas.width = options.width * this._spacingX;\n\tthis._context.canvas.height = options.height * this._spacingY;\n}\n\nROT.Display.Rect.prototype.draw = function(data, clearBefore) {\n\tif (this.constructor.cache) {\n\t\tthis._drawWithCache(data, clearBefore);\n\t} else {\n\t\tthis._drawNoCache(data, clearBefore);\n\t}\n}\n\nROT.Display.Rect.prototype._drawWithCache = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tvar hash = \"\"+ch+fg+bg;\n\tif (hash in this._canvasCache) {\n\t\tvar canvas = this._canvasCache[hash];\n\t} else {\n\t\tvar b = this._options.border;\n\t\tvar canvas = document.createElement(\"canvas\");\n\t\tvar ctx = canvas.getContext(\"2d\");\n\t\tcanvas.width = this._spacingX;\n\t\tcanvas.height = this._spacingY;\n\t\tctx.fillStyle = bg;\n\t\tctx.fillRect(b, b, canvas.width-b, canvas.height-b);\n\t\t\n\t\tif (ch) {\n\t\t\tctx.fillStyle = fg;\n\t\t\tctx.font = this._context.font;\n\t\t\tctx.textAlign = \"center\";\n\t\t\tctx.textBaseline = \"middle\";\n\n\t\t\tvar chars = [].concat(ch);\n\t\t\tfor (var i=0;i<chars.length;i++) {\n\t\t\t\tctx.fillText(chars[i], this._spacingX/2, Math.ceil(this._spacingY/2));\n\t\t\t}\n\t\t}\n\t\tthis._canvasCache[hash] = canvas;\n\t}\n\t\n\tthis._context.drawImage(canvas, x*this._spacingX, y*this._spacingY);\n}\n\nROT.Display.Rect.prototype._drawNoCache = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tif (clearBefore) { \n\t\tvar b = this._options.border;\n\t\tthis._context.fillStyle = bg;\n\t\tthis._context.fillRect(x*this._spacingX + b, y*this._spacingY + b, this._spacingX - b, this._spacingY - b);\n\t}\n\t\n\tif (!ch) { return; }\n\n\tthis._context.fillStyle = fg;\n\n\tvar chars = [].concat(ch);\n\tfor (var i=0;i<chars.length;i++) {\n\t\tthis._context.fillText(chars[i], (x+0.5) * this._spacingX, Math.ceil((y+0.5) * this._spacingY));\n\t}\n}\n\nROT.Display.Rect.prototype.computeSize = function(availWidth, availHeight) {\n\tvar width = Math.floor(availWidth / this._spacingX);\n\tvar height = Math.floor(availHeight / this._spacingY);\n\treturn [width, height];\n}\n\nROT.Display.Rect.prototype.computeFontSize = function(availWidth, availHeight) {\n\tvar boxWidth = Math.floor(availWidth / this._options.width);\n\tvar boxHeight = Math.floor(availHeight / this._options.height);\n\n\t/* compute char ratio */\n\tvar oldFont = this._context.font;\n\tthis._context.font = \"100px \" + this._options.fontFamily;\n\tvar width = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._context.font = oldFont;\n\tvar ratio = width / 100;\n\t\t\n\tvar widthFraction = ratio * boxHeight / boxWidth;\n\tif (widthFraction > 1) { /* too wide with current aspect ratio */\n\t\tboxHeight = Math.floor(boxHeight / widthFraction);\n\t}\n\treturn Math.floor(boxHeight / this._options.spacing);\n}\n\nROT.Display.Rect.prototype.eventToPosition = function(x, y) {\n\treturn [Math.floor(x/this._spacingX), Math.floor(y/this._spacingY)];\n}\n/**\n * @class Hexagonal backend\n * @private\n */\nROT.Display.Hex = function(context) {\n\tROT.Display.Backend.call(this, context);\n\n\tthis._spacingX = 0;\n\tthis._spacingY = 0;\n\tthis._hexSize = 0;\n\tthis._options = {};\n}\nROT.Display.Hex.extend(ROT.Display.Backend);\n\nROT.Display.Hex.prototype.compute = function(options) {\n\tthis._options = options;\n\n\t/* FIXME char size computation does not respect transposed hexes */\n\tvar charWidth = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._hexSize = Math.floor(options.spacing * (options.fontSize + charWidth/Math.sqrt(3)) / 2);\n\tthis._spacingX = this._hexSize * Math.sqrt(3) / 2;\n\tthis._spacingY = this._hexSize * 1.5;\n\n\tif (options.transpose) {\n\t\tvar xprop = \"height\";\n\t\tvar yprop = \"width\";\n\t} else {\n\t\tvar xprop = \"width\";\n\t\tvar yprop = \"height\";\n\t}\n\tthis._context.canvas[xprop] = Math.ceil( (options.width + 1) * this._spacingX );\n\tthis._context.canvas[yprop] = Math.ceil( (options.height - 1) * this._spacingY + 2*this._hexSize );\n}\n\nROT.Display.Hex.prototype.draw = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tvar px = [\n\t\t(x+1) * this._spacingX,\n\t\ty * this._spacingY + this._hexSize\n\t];\n\tif (this._options.transpose) { px.reverse(); }\n\n\tif (clearBefore) { \n\t\tthis._context.fillStyle = bg;\n\t\tthis._fill(px[0], px[1]);\n\t}\n\t\n\tif (!ch) { return; }\n\n\tthis._context.fillStyle = fg;\n\n\tvar chars = [].concat(ch);\n\tfor (var i=0;i<chars.length;i++) {\n\t\tthis._context.fillText(chars[i], px[0], Math.ceil(px[1]));\n\t}\n}\n\nROT.Display.Hex.prototype.computeSize = function(availWidth, availHeight) {\n\tif (this._options.transpose) {\n\t\tavailWidth += availHeight;\n\t\tavailHeight = availWidth - availHeight;\n\t\tavailWidth -= availHeight;\n\t}\n\n\tvar width = Math.floor(availWidth / this._spacingX) - 1;\n\tvar height = Math.floor((availHeight - 2*this._hexSize) / this._spacingY + 1);\n\treturn [width, height];\n}\n\nROT.Display.Hex.prototype.computeFontSize = function(availWidth, availHeight) {\n\tif (this._options.transpose) {\n\t\tavailWidth += availHeight;\n\t\tavailHeight = availWidth - availHeight;\n\t\tavailWidth -= availHeight;\n\t}\n\n\tvar hexSizeWidth = 2*availWidth / ((this._options.width+1) * Math.sqrt(3)) - 1;\n\tvar hexSizeHeight = availHeight / (2 + 1.5*(this._options.height-1));\n\tvar hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n\n\t/* compute char ratio */\n\tvar oldFont = this._context.font;\n\tthis._context.font = \"100px \" + this._options.fontFamily;\n\tvar width = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._context.font = oldFont;\n\tvar ratio = width / 100;\n\n\thexSize = Math.floor(hexSize)+1; /* closest larger hexSize */\n\n\t/* FIXME char size computation does not respect transposed hexes */\n\tvar fontSize = 2*hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n\n\t/* closest smaller fontSize */\n\treturn Math.ceil(fontSize)-1;\n}\n\nROT.Display.Hex.prototype.eventToPosition = function(x, y) {\n\tif (this._options.transpose) {\n\t\tx += y;\n\t\ty = x-y;\n\t\tx -= y;\n\t\tvar prop = \"width\";\n\t} else {\n\t\tvar prop = \"height\";\n\t}\n\tvar size = this._context.canvas[prop] / this._options[prop];\n\ty = Math.floor(y/size);\n\n\tif (y.mod(2)) { /* odd row */\n\t\tx -= this._spacingX;\n\t\tx = 1 + 2*Math.floor(x/(2*this._spacingX));\n\t} else {\n\t\tx = 2*Math.floor(x/(2*this._spacingX));\n\t}\n\t\n\treturn [x, y];\n}\n\n/**\n * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n */\nROT.Display.Hex.prototype._fill = function(cx, cy) {\n\tvar a = this._hexSize;\n\tvar b = this._options.border;\n\t\n\tthis._context.beginPath();\n\n\tif (this._options.transpose) {\n\t\tthis._context.moveTo(cx-a+b,\tcy);\n\t\tthis._context.lineTo(cx-a/2+b,\tcy+this._spacingX-b);\n\t\tthis._context.lineTo(cx+a/2-b,\tcy+this._spacingX-b);\n\t\tthis._context.lineTo(cx+a-b,\tcy);\n\t\tthis._context.lineTo(cx+a/2-b,\tcy-this._spacingX+b);\n\t\tthis._context.lineTo(cx-a/2+b,\tcy-this._spacingX+b);\n\t\tthis._context.lineTo(cx-a+b,\tcy);\n\t} else {\n\t\tthis._context.moveTo(cx,\t\t\t\t\tcy-a+b);\n\t\tthis._context.lineTo(cx+this._spacingX-b,\tcy-a/2+b);\n\t\tthis._context.lineTo(cx+this._spacingX-b,\tcy+a/2-b);\n\t\tthis._context.lineTo(cx,\t\t\t\t\tcy+a-b);\n\t\tthis._context.lineTo(cx-this._spacingX+b,\tcy+a/2-b);\n\t\tthis._context.lineTo(cx-this._spacingX+b,\tcy-a/2+b);\n\t\tthis._context.lineTo(cx,\t\t\t\t\tcy-a+b);\n\t}\n\tthis._context.fill();\n}\n/**\n * @class Tile backend\n * @private\n */\nROT.Display.Tile = function(context) {\n\tROT.Display.Rect.call(this, context);\n\t\n\tthis._options = {};\n\tthis._colorCanvas = document.createElement(\"canvas\");\n}\nROT.Display.Tile.extend(ROT.Display.Rect);\n\nROT.Display.Tile.prototype.compute = function(options) {\n\tthis._options = options;\n\tthis._context.canvas.width = options.width * options.tileWidth;\n\tthis._context.canvas.height = options.height * options.tileHeight;\n\tthis._colorCanvas.width = options.tileWidth;\n\tthis._colorCanvas.height = options.tileHeight;\n}\n\nROT.Display.Tile.prototype.draw = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tvar tileWidth = this._options.tileWidth;\n\tvar tileHeight = this._options.tileHeight;\n\n\tif (clearBefore) {\n\t\tif (this._options.tileColorize) {\n\t\t\tthis._context.clearRect(x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n\t\t} else {\n\t\t\tthis._context.fillStyle = bg;\n\t\t\tthis._context.fillRect(x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n\t\t}\n\t}\n\n\tif (!ch) { return; }\n\n\tvar chars = [].concat(ch);\n\tfor (var i=0;i<chars.length;i++) {\n\t\tvar tile = this._options.tileMap[chars[i]];\n\t\tif (!tile) { throw new Error(\"Char '\" + chars[i] + \"' not found in tileMap\"); }\n\t\t\n\t\tif (this._options.tileColorize) { /* apply colorization */\n\t\t\tvar canvas = this._colorCanvas;\n\t\t\tvar context = canvas.getContext(\"2d\");\n\t\t\tcontext.clearRect(0, 0, tileWidth, tileHeight);\n\n\t\t\tcontext.drawImage(\n\t\t\t\tthis._options.tileSet,\n\t\t\t\ttile[0], tile[1], tileWidth, tileHeight,\n\t\t\t\t0, 0, tileWidth, tileHeight\n\t\t\t);\n\n\t\t\tif (fg != \"transparent\") {\n\t\t\t\tcontext.fillStyle = fg;\n\t\t\t\tcontext.globalCompositeOperation = \"source-atop\";\n\t\t\t\tcontext.fillRect(0, 0, tileWidth, tileHeight);\n\t\t\t}\n\n\t\t\tif (bg != \"transparent\") {\n\t\t\t\tcontext.fillStyle = bg;\n\t\t\t\tcontext.globalCompositeOperation = \"destination-over\";\n\t\t\t\tcontext.fillRect(0, 0, tileWidth, tileHeight);\n\t\t\t}\n\n\t\t\tthis._context.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n\n\t\t} else { /* no colorizing, easy */\n\t\t\tthis._context.drawImage(\n\t\t\t\tthis._options.tileSet,\n\t\t\t\ttile[0], tile[1], tileWidth, tileHeight,\n\t\t\t\tx*tileWidth, y*tileHeight, tileWidth, tileHeight\n\t\t\t);\n\t\t}\n\t}\n}\n\nROT.Display.Tile.prototype.computeSize = function(availWidth, availHeight) {\n\tvar width = Math.floor(availWidth / this._options.tileWidth);\n\tvar height = Math.floor(availHeight / this._options.tileHeight);\n\treturn [width, height];\n}\n\nROT.Display.Tile.prototype.computeFontSize = function(availWidth, availHeight) {\n\tvar width = Math.floor(availWidth / this._options.width);\n\tvar height = Math.floor(availHeight / this._options.height);\n\treturn [width, height];\n}\n\nROT.Display.Tile.prototype.eventToPosition = function(x, y) {\n\treturn [Math.floor(x/this._options.tileWidth), Math.floor(y/this._options.tileHeight)];\n}\n/**\n * @namespace\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nROT.RNG = {\n\t/**\n\t * @returns {number} \n\t */\n\tgetSeed: function() {\n\t\treturn this._seed;\n\t},\n\n\t/**\n\t * @param {number} seed Seed the number generator\n\t */\n\tsetSeed: function(seed) {\n\t\tseed = (seed < 1 ? 1/seed : seed);\n\n\t\tthis._seed = seed;\n\t\tthis._s0 = (seed >>> 0) * this._frac;\n\n\t\tseed = (seed*69069 + 1) >>> 0;\n\t\tthis._s1 = seed * this._frac;\n\n\t\tseed = (seed*69069 + 1) >>> 0;\n\t\tthis._s2 = seed * this._frac;\n\n\t\tthis._c = 1;\n\t\treturn this;\n\t},\n\n\t/**\n\t * @returns {float} Pseudorandom value [0,1), uniformly distributed\n\t */\n\tgetUniform: function() {\n\t\tvar t = 2091639 * this._s0 + this._c * this._frac;\n\t\tthis._s0 = this._s1;\n\t\tthis._s1 = this._s2;\n\t\tthis._c = t | 0;\n\t\tthis._s2 = t - this._c;\n\t\treturn this._s2;\n\t},\n\n\t/**\n\t * @param {int} lowerBound The lower end of the range to return a value from, inclusive\n\t * @param {int} upperBound The upper end of the range to return a value from, inclusive\n\t * @returns {int} Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n\t */\n\tgetUniformInt: function(lowerBound, upperBound) {\n\t\tvar max = Math.max(lowerBound, upperBound);\n\t\tvar min = Math.min(lowerBound, upperBound);\n\t\treturn Math.floor(this.getUniform() * (max - min + 1)) + min;\n\t},\n\n\t/**\n\t * @param {float} [mean=0] Mean value\n\t * @param {float} [stddev=1] Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n\t * @returns {float} A normally distributed pseudorandom value\n\t */\n\tgetNormal: function(mean, stddev) {\n\t\tdo {\n\t\t\tvar u = 2*this.getUniform()-1;\n\t\t\tvar v = 2*this.getUniform()-1;\n\t\t\tvar r = u*u + v*v;\n\t\t} while (r > 1 || r == 0);\n\n\t\tvar gauss = u * Math.sqrt(-2*Math.log(r)/r);\n\t\treturn (mean || 0) + gauss*(stddev || 1);\n\t},\n\n\t/**\n\t * @returns {int} Pseudorandom value [1,100] inclusive, uniformly distributed\n\t */\n\tgetPercentage: function() {\n\t\treturn 1 + Math.floor(this.getUniform()*100);\n\t},\n\t\n\t/**\n\t * @param {object} data key=whatever, value=weight (relative probability)\n\t * @returns {string} whatever\n\t */\n\tgetWeightedValue: function(data) {\n\t\tvar total = 0;\n\t\t\n\t\tfor (var id in data) {\n\t\t\ttotal += data[id];\n\t\t}\n\t\tvar random = this.getUniform()*total;\n\t\t\n\t\tvar part = 0;\n\t\tfor (var id in data) {\n\t\t\tpart += data[id];\n\t\t\tif (random < part) { return id; }\n\t\t}\n\n\t\t// If by some floating-point annoyance we have\n\t\t// random >= total, just return the last id.\n\t\treturn id;\n\t},\n\n\t/**\n\t * Get RNG state. Useful for storing the state and re-setting it via setState.\n\t * @returns {?} Internal state\n\t */\n\tgetState: function() {\n\t\treturn [this._s0, this._s1, this._s2, this._c];\n\t},\n\n\t/**\n\t * Set a previously retrieved state.\n\t * @param {?} state\n\t */\n\tsetState: function(state) {\n\t\tthis._s0 = state[0];\n\t\tthis._s1 = state[1];\n\t\tthis._s2 = state[2];\n\t\tthis._c  = state[3];\n\t\treturn this;\n\t},\n\n\t/**\n\t * Returns a cloned RNG\n\t */\n\tclone: function() {\n\t\tvar clone = Object.create(this);\n\t\tclone.setState(this.getState());\n\t\treturn clone;\n\t},\n\n\t_s0: 0,\n\t_s1: 0,\n\t_s2: 0,\n\t_c: 0,\n\t_frac: 2.3283064365386963e-10 /* 2^-32 */\n}\n\nROT.RNG.setSeed(Date.now());\n/**\n * @class (Markov process)-based string generator. \n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>. \n * Offers configurable order and prior.\n * @param {object} [options]\n * @param {bool} [options.words=false] Use word mode?\n * @param {int} [options.order=3]\n * @param {float} [options.prior=0.001]\n */\nROT.StringGenerator = function(options) {\n\tthis._options = {\n\t\twords: false,\n\t\torder: 3,\n\t\tprior: 0.001\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\n\tthis._boundary = String.fromCharCode(0);\n\tthis._suffix = this._boundary;\n\tthis._prefix = [];\n\tfor (var i=0;i<this._options.order;i++) { this._prefix.push(this._boundary); }\n\n\tthis._priorValues = {};\n\tthis._priorValues[this._boundary] = this._options.prior;\n\n\tthis._data = {};\n}\n\n/**\n * Remove all learning data\n */\nROT.StringGenerator.prototype.clear = function() {\n\tthis._data = {};\n\tthis._priorValues = {};\n}\n\n/**\n * @returns {string} Generated string\n */\nROT.StringGenerator.prototype.generate = function() {\n\tvar result = [this._sample(this._prefix)];\n\twhile (result[result.length-1] != this._boundary) {\n\t\tresult.push(this._sample(result));\n\t}\n\treturn this._join(result.slice(0, -1));\n}\n\n/**\n * Observe (learn) a string from a training set\n */\nROT.StringGenerator.prototype.observe = function(string) {\n\tvar tokens = this._split(string);\n\n\tfor (var i=0; i<tokens.length; i++) {\n\t\tthis._priorValues[tokens[i]] = this._options.prior;\n\t}\n\n\ttokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n\n\tfor (var i=this._options.order; i<tokens.length; i++) {\n\t\tvar context = tokens.slice(i-this._options.order, i);\n\t\tvar event = tokens[i];\n\t\tfor (var j=0; j<context.length; j++) {\n\t\t\tvar subcontext = context.slice(j);\n\t\t\tthis._observeEvent(subcontext, event);\n\t\t}\n\t}\n}\n\nROT.StringGenerator.prototype.getStats = function() {\n\tvar parts = [];\n\n\tvar priorCount = 0;\n\tfor (var p in this._priorValues) { priorCount++; }\n\tpriorCount--; /* boundary */\n\tparts.push(\"distinct samples: \" + priorCount);\n\n\tvar dataCount = 0;\n\tvar eventCount = 0;\n\tfor (var p in this._data) { \n\t\tdataCount++; \n\t\tfor (var key in this._data[p]) {\n\t\t\teventCount++;\n\t\t}\n\t}\n\tparts.push(\"dictionary size (contexts): \" + dataCount);\n\tparts.push(\"dictionary size (events): \" + eventCount);\n\n\treturn parts.join(\", \");\n}\n\n/**\n * @param {string}\n * @returns {string[]}\n */\nROT.StringGenerator.prototype._split = function(str) {\n\treturn str.split(this._options.words ? /\\s+/ : \"\");\n}\n\n/**\n * @param {string[]}\n * @returns {string} \n */\nROT.StringGenerator.prototype._join = function(arr) {\n\treturn arr.join(this._options.words ? \" \" : \"\");\n}\n\n/**\n * @param {string[]} context\n * @param {string} event\n */\nROT.StringGenerator.prototype._observeEvent = function(context, event) {\n\tvar key = this._join(context);\n\tif (!(key in this._data)) { this._data[key] = {}; }\n\tvar data = this._data[key];\n\n\tif (!(event in data)) { data[event] = 0; }\n\tdata[event]++;\n}\n\n/**\n * @param {string[]}\n * @returns {string}\n */\nROT.StringGenerator.prototype._sample = function(context) {\n\tcontext = this._backoff(context);\n\tvar key = this._join(context);\n\tvar data = this._data[key];\n\n\tvar available = {};\n\n\tif (this._options.prior) {\n\t\tfor (var event in this._priorValues) { available[event] = this._priorValues[event]; }\n\t\tfor (var event in data) { available[event] += data[event]; }\n\t} else { \n\t\tavailable = data;\n\t}\n\n\treturn ROT.RNG.getWeightedValue(available);\n}\n\n/**\n * @param {string[]}\n * @returns {string[]}\n */\nROT.StringGenerator.prototype._backoff = function(context) {\n\tif (context.length > this._options.order) {\n\t\tcontext = context.slice(-this._options.order);\n\t} else if (context.length < this._options.order) {\n\t\tcontext = this._prefix.slice(0, this._options.order - context.length).concat(context);\n\t}\n\n\twhile (!(this._join(context) in this._data) && context.length > 0) { context = context.slice(1); }\n\n\treturn context;\n}\n/**\n * @class Generic event queue: stores events and retrieves them based on their time\n */\nROT.EventQueue = function() {\n\tthis._time = 0;\n\tthis._events = [];\n\tthis._eventTimes = [];\n}\n\n/**\n * @returns {number} Elapsed time\n */\nROT.EventQueue.prototype.getTime = function() {\n\treturn this._time;\n}\n\n/**\n * Clear all scheduled events\n */\nROT.EventQueue.prototype.clear = function() {\n\tthis._events = [];\n\tthis._eventTimes = [];\n\treturn this;\n}\n\n/**\n * @param {?} event\n * @param {number} time\n */\nROT.EventQueue.prototype.add = function(event, time) {\n\tvar index = this._events.length;\n\tfor (var i=0;i<this._eventTimes.length;i++) {\n\t\tif (this._eventTimes[i] > time) {\n\t\t\tindex = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tthis._events.splice(index, 0, event);\n\tthis._eventTimes.splice(index, 0, time);\n}\n\n/**\n * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n * @returns {? || null} The event previously added by addEvent, null if no event available\n */\nROT.EventQueue.prototype.get = function() {\n\tif (!this._events.length) { return null; }\n\n\tvar time = this._eventTimes.splice(0, 1)[0];\n\tif (time > 0) { /* advance */\n\t\tthis._time += time;\n\t\tfor (var i=0;i<this._eventTimes.length;i++) { this._eventTimes[i] -= time; }\n\t}\n\n\treturn this._events.splice(0, 1)[0];\n}\n\n/**\n * Remove an event from the queue\n * @param {?} event\n * @returns {bool} success?\n */\nROT.EventQueue.prototype.remove = function(event) {\n\tvar index = this._events.indexOf(event);\n\tif (index == -1) { return false }\n\tthis._remove(index);\n\treturn true;\n}\n\n/**\n * Remove an event from the queue\n * @param {int} index\n */\nROT.EventQueue.prototype._remove = function(index) {\n\tthis._events.splice(index, 1);\n\tthis._eventTimes.splice(index, 1);\n}\n/**\n * @class Abstract scheduler\n */\nROT.Scheduler = function() {\n\tthis._queue = new ROT.EventQueue();\n\tthis._repeat = [];\n\tthis._current = null;\n}\n\n/**\n * @see ROT.EventQueue#getTime\n */\nROT.Scheduler.prototype.getTime = function() {\n\treturn this._queue.getTime();\n}\n\n/**\n * @param {?} item\n * @param {bool} repeat\n */\nROT.Scheduler.prototype.add = function(item, repeat) {\n\tif (repeat) { this._repeat.push(item); }\n\treturn this;\n}\n\n/**\n * Clear all items\n */\nROT.Scheduler.prototype.clear = function() {\n\tthis._queue.clear();\n\tthis._repeat = [];\n\tthis._current = null;\n\treturn this;\n}\n\n/**\n * Remove a previously added item\n * @param {?} item\n * @returns {bool} successful?\n */\nROT.Scheduler.prototype.remove = function(item) {\n\tvar result = this._queue.remove(item);\n\n\tvar index = this._repeat.indexOf(item);\n\tif (index != -1) { this._repeat.splice(index, 1); }\n\n\tif (this._current == item) { this._current = null; }\n\n\treturn result;\n}\n\n/**\n * Schedule next item\n * @returns {?}\n */\nROT.Scheduler.prototype.next = function() {\n\tthis._current = this._queue.get();\n\treturn this._current;\n}\n/**\n * @class Simple fair scheduler (round-robin style)\n * @augments ROT.Scheduler\n */\nROT.Scheduler.Simple = function() {\n\tROT.Scheduler.call(this);\n}\nROT.Scheduler.Simple.extend(ROT.Scheduler);\n\n/**\n * @see ROT.Scheduler#add\n */\nROT.Scheduler.Simple.prototype.add = function(item, repeat) {\n\tthis._queue.add(item, 0);\n\treturn ROT.Scheduler.prototype.add.call(this, item, repeat);\n}\n\n/**\n * @see ROT.Scheduler#next\n */\nROT.Scheduler.Simple.prototype.next = function() {\n\tif (this._current && this._repeat.indexOf(this._current) != -1) {\n\t\tthis._queue.add(this._current, 0);\n\t}\n\treturn ROT.Scheduler.prototype.next.call(this);\n}\n/**\n * @class Speed-based scheduler\n * @augments ROT.Scheduler\n */\nROT.Scheduler.Speed = function() {\n\tROT.Scheduler.call(this);\n}\nROT.Scheduler.Speed.extend(ROT.Scheduler);\n\n/**\n * @param {object} item anything with \"getSpeed\" method\n * @param {bool} repeat\n * @see ROT.Scheduler#add\n */\nROT.Scheduler.Speed.prototype.add = function(item, repeat) {\n\tthis._queue.add(item, 1/item.getSpeed());\n\treturn ROT.Scheduler.prototype.add.call(this, item, repeat);\n}\n\n/**\n * @see ROT.Scheduler#next\n */\nROT.Scheduler.Speed.prototype.next = function() {\n\tif (this._current && this._repeat.indexOf(this._current) != -1) {\n\t\tthis._queue.add(this._current, 1/this._current.getSpeed());\n\t}\n\treturn ROT.Scheduler.prototype.next.call(this);\n}\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nROT.Scheduler.Action = function() {\n\tROT.Scheduler.call(this);\n\tthis._defaultDuration = 1; /* for newly added */\n\tthis._duration = this._defaultDuration; /* for this._current */\n}\nROT.Scheduler.Action.extend(ROT.Scheduler);\n\n/**\n * @param {object} item\n * @param {bool} repeat\n * @param {number} [time=1]\n * @see ROT.Scheduler#add\n */\nROT.Scheduler.Action.prototype.add = function(item, repeat, time) {\n\tthis._queue.add(item, time || this._defaultDuration);\n\treturn ROT.Scheduler.prototype.add.call(this, item, repeat);\n}\n\nROT.Scheduler.Action.prototype.clear = function() {\n\tthis._duration = this._defaultDuration;\n\treturn ROT.Scheduler.prototype.clear.call(this);\n}\n\nROT.Scheduler.Action.prototype.remove = function(item) {\n\tif (item == this._current) { this._duration = this._defaultDuration; }\n\treturn ROT.Scheduler.prototype.remove.call(this, item);\n}\n\n/**\n * @see ROT.Scheduler#next\n */\nROT.Scheduler.Action.prototype.next = function() {\n\tif (this._current && this._repeat.indexOf(this._current) != -1) {\n\t\tthis._queue.add(this._current, this._duration || this._defaultDuration);\n\t\tthis._duration = this._defaultDuration;\n\t}\n\treturn ROT.Scheduler.prototype.next.call(this);\n}\n\n/**\n * Set duration for the active item\n */\nROT.Scheduler.Action.prototype.setDuration = function(time) {\n\tif (this._current) { this._duration = time; }\n\treturn this;\n}\n/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nROT.Engine = function(scheduler) {\n\tthis._scheduler = scheduler;\n\tthis._lock = 1;\n}\n\n/**\n * Start the main loop. When this call returns, the loop is locked.\n */\nROT.Engine.prototype.start = function() {\n\treturn this.unlock();\n}\n\n/**\n * Interrupt the engine by an asynchronous action\n */\nROT.Engine.prototype.lock = function() {\n\tthis._lock++;\n\treturn this;\n}\n\n/**\n * Resume execution (paused by a previous lock)\n */\nROT.Engine.prototype.unlock = function() {\n\tif (!this._lock) { throw new Error(\"Cannot unlock unlocked engine\"); }\n\tthis._lock--;\n\n\twhile (!this._lock) {\n\t\tvar actor = this._scheduler.next();\n\t\tif (!actor) { return this.lock(); } /* no actors */\n\t\tvar result = actor.act();\n\t\tif (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n\t\t\tthis.lock();\n\t\t\tresult.then(this.unlock.bind(this));\n\t\t}\n\t}\n\n\treturn this;\n}\n/**\n * @class Base map generator\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n */\nROT.Map = function(width, height) {\n\tthis._width = width || ROT.DEFAULT_WIDTH;\n\tthis._height = height || ROT.DEFAULT_HEIGHT;\n};\n\nROT.Map.prototype.create = function(callback) {}\n\nROT.Map.prototype._fillMap = function(value) {\n\tvar map = [];\n\tfor (var i=0;i<this._width;i++) {\n\t\tmap.push([]);\n\t\tfor (var j=0;j<this._height;j++) { map[i].push(value); }\n\t}\n\treturn map;\n}\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nROT.Map.Arena = function(width, height) {\n\tROT.Map.call(this, width, height);\n}\nROT.Map.Arena.extend(ROT.Map);\n\nROT.Map.Arena.prototype.create = function(callback) {\n\tvar w = this._width-1;\n\tvar h = this._height-1;\n\tfor (var i=0;i<=w;i++) {\n\t\tfor (var j=0;j<=h;j++) {\n\t\t\tvar empty = (i && j && i<w && j<h);\n\t\t\tcallback(i, j, empty ? 0 : 1);\n\t\t}\n\t}\n\treturn this;\n}\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nROT.Map.DividedMaze = function(width, height) {\n\tROT.Map.call(this, width, height);\n\tthis._stack = [];\n}\nROT.Map.DividedMaze.extend(ROT.Map);\n\nROT.Map.DividedMaze.prototype.create = function(callback) {\n\tvar w = this._width;\n\tvar h = this._height;\n\t\n\tthis._map = [];\n\t\n\tfor (var i=0;i<w;i++) {\n\t\tthis._map.push([]);\n\t\tfor (var j=0;j<h;j++) {\n\t\t\tvar border = (i == 0 || j == 0 || i+1 == w || j+1 == h);\n\t\t\tthis._map[i].push(border ? 1 : 0);\n\t\t}\n\t}\n\t\n\tthis._stack = [\n\t\t[1, 1, w-2, h-2]\n\t];\n\tthis._process();\n\t\n\tfor (var i=0;i<w;i++) {\n\t\tfor (var j=0;j<h;j++) {\n\t\t\tcallback(i, j, this._map[i][j]);\n\t\t}\n\t}\n\tthis._map = null;\n\treturn this;\n}\n\nROT.Map.DividedMaze.prototype._process = function() {\n\twhile (this._stack.length) {\n\t\tvar room = this._stack.shift(); /* [left, top, right, bottom] */\n\t\tthis._partitionRoom(room);\n\t}\n}\n\nROT.Map.DividedMaze.prototype._partitionRoom = function(room) {\n\tvar availX = [];\n\tvar availY = [];\n\t\n\tfor (var i=room[0]+1;i<room[2];i++) {\n\t\tvar top = this._map[i][room[1]-1];\n\t\tvar bottom = this._map[i][room[3]+1];\n\t\tif (top && bottom && !(i % 2)) { availX.push(i); }\n\t}\n\t\n\tfor (var j=room[1]+1;j<room[3];j++) {\n\t\tvar left = this._map[room[0]-1][j];\n\t\tvar right = this._map[room[2]+1][j];\n\t\tif (left && right && !(j % 2)) { availY.push(j); }\n\t}\n\n\tif (!availX.length || !availY.length) { return; }\n\n\tvar x = availX.random();\n\tvar y = availY.random();\n\t\n\tthis._map[x][y] = 1;\n\t\n\tvar walls = [];\n\t\n\tvar w = []; walls.push(w); /* left part */\n\tfor (var i=room[0]; i<x; i++) { \n\t\tthis._map[i][y] = 1;\n\t\tw.push([i, y]); \n\t}\n\t\n\tvar w = []; walls.push(w); /* right part */\n\tfor (var i=x+1; i<=room[2]; i++) { \n\t\tthis._map[i][y] = 1;\n\t\tw.push([i, y]); \n\t}\n\n\tvar w = []; walls.push(w); /* top part */\n\tfor (var j=room[1]; j<y; j++) { \n\t\tthis._map[x][j] = 1;\n\t\tw.push([x, j]); \n\t}\n\t\n\tvar w = []; walls.push(w); /* bottom part */\n\tfor (var j=y+1; j<=room[3]; j++) { \n\t\tthis._map[x][j] = 1;\n\t\tw.push([x, j]); \n\t}\n\t\t\n\tvar solid = walls.random();\n\tfor (var i=0;i<walls.length;i++) {\n\t\tvar w = walls[i];\n\t\tif (w == solid) { continue; }\n\t\t\n\t\tvar hole = w.random();\n\t\tthis._map[hole[0]][hole[1]] = 0;\n\t}\n\n\tthis._stack.push([room[0], room[1], x-1, y-1]); /* left top */\n\tthis._stack.push([x+1, room[1], room[2], y-1]); /* right top */\n\tthis._stack.push([room[0], y+1, x-1, room[3]]); /* left bottom */\n\tthis._stack.push([x+1, y+1, room[2], room[3]]); /* right bottom */\n}\n/**\n * @class Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n * @augments ROT.Map\n */\nROT.Map.IceyMaze = function(width, height, regularity) {\n\tROT.Map.call(this, width, height);\n\tthis._regularity = regularity || 0;\n}\nROT.Map.IceyMaze.extend(ROT.Map);\n\nROT.Map.IceyMaze.prototype.create = function(callback) {\n\tvar width = this._width;\n\tvar height = this._height;\n\t\n\tvar map = this._fillMap(1);\n\t\n\twidth -= (width % 2 ? 1 : 2);\n\theight -= (height % 2 ? 1 : 2);\n\n\tvar cx = 0;\n\tvar cy = 0;\n\tvar nx = 0;\n\tvar ny = 0;\n\n\tvar done = 0;\n\tvar blocked = false;\n\tvar dirs = [\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0]\n\t];\n\tdo {\n\t\tcx = 1 + 2*Math.floor(ROT.RNG.getUniform()*(width-1) / 2);\n\t\tcy = 1 + 2*Math.floor(ROT.RNG.getUniform()*(height-1) / 2);\n\n\t\tif (!done) { map[cx][cy] = 0; }\n\t\t\n\t\tif (!map[cx][cy]) {\n\t\t\tthis._randomize(dirs);\n\t\t\tdo {\n\t\t\t\tif (Math.floor(ROT.RNG.getUniform()*(this._regularity+1)) == 0) { this._randomize(dirs); }\n\t\t\t\tblocked = true;\n\t\t\t\tfor (var i=0;i<4;i++) {\n\t\t\t\t\tnx = cx + dirs[i][0]*2;\n\t\t\t\t\tny = cy + dirs[i][1]*2;\n\t\t\t\t\tif (this._isFree(map, nx, ny, width, height)) {\n\t\t\t\t\t\tmap[nx][ny] = 0;\n\t\t\t\t\t\tmap[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcx = nx;\n\t\t\t\t\t\tcy = ny;\n\t\t\t\t\t\tblocked = false;\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} while (!blocked);\n\t\t}\n\t} while (done+1 < width*height/4);\n\t\n\tfor (var i=0;i<this._width;i++) {\n\t\tfor (var j=0;j<this._height;j++) {\n\t\t\tcallback(i, j, map[i][j]);\n\t\t}\n\t}\n\tthis._map = null;\n\treturn this;\n}\n\nROT.Map.IceyMaze.prototype._randomize = function(dirs) {\n\tfor (var i=0;i<4;i++) {\n\t\tdirs[i][0] = 0;\n\t\tdirs[i][1] = 0;\n\t}\n\t\n\tswitch (Math.floor(ROT.RNG.getUniform()*4)) {\n\t\tcase 0:\n\t\t\tdirs[0][0] = -1; dirs[1][0] = 1;\n\t\t\tdirs[2][1] = -1; dirs[3][1] = 1;\n\t\tbreak;\n\t\tcase 1:\n\t\t\tdirs[3][0] = -1; dirs[2][0] = 1;\n\t\t\tdirs[1][1] = -1; dirs[0][1] = 1;\n\t\tbreak;\n\t\tcase 2:\n\t\t\tdirs[2][0] = -1; dirs[3][0] = 1;\n\t\t\tdirs[0][1] = -1; dirs[1][1] = 1;\n\t\tbreak;\n\t\tcase 3:\n\t\t\tdirs[1][0] = -1; dirs[0][0] = 1;\n\t\t\tdirs[3][1] = -1; dirs[2][1] = 1;\n\t\tbreak;\n\t}\n}\n\nROT.Map.IceyMaze.prototype._isFree = function(map, x, y, width, height) {\n\tif (x < 1 || y < 1 || x >= width || y >= height) { return false; }\n\treturn map[x][y];\n}\n/**\n * @class Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n * @augments ROT.Map\n */\nROT.Map.EllerMaze = function(width, height) {\n\tROT.Map.call(this, width, height);\n}\nROT.Map.EllerMaze.extend(ROT.Map);\n\nROT.Map.EllerMaze.prototype.create = function(callback) {\n\tvar map = this._fillMap(1);\n\tvar w = Math.ceil((this._width-2)/2);\n\t\n\tvar rand = 9/24;\n\t\n\tvar L = [];\n\tvar R = [];\n\t\n\tfor (var i=0;i<w;i++) {\n\t\tL.push(i);\n\t\tR.push(i);\n\t}\n\tL.push(w-1); /* fake stop-block at the right side */\n\n\tfor (var j=1;j+3<this._height;j+=2) {\n\t\t/* one row */\n\t\tfor (var i=0;i<w;i++) {\n\t\t\t/* cell coords (will be always empty) */\n\t\t\tvar x = 2*i+1;\n\t\t\tvar y = j;\n\t\t\tmap[x][y] = 0;\n\t\t\t\n\t\t\t/* right connection */\n\t\t\tif (i != L[i+1] && ROT.RNG.getUniform() > rand) {\n\t\t\t\tthis._addToList(i, L, R);\n\t\t\t\tmap[x+1][y] = 0;\n\t\t\t}\n\t\t\t\n\t\t\t/* bottom connection */\n\t\t\tif (i != L[i] && ROT.RNG.getUniform() > rand) {\n\t\t\t\t/* remove connection */\n\t\t\t\tthis._removeFromList(i, L, R);\n\t\t\t} else {\n\t\t\t\t/* create connection */\n\t\t\t\tmap[x][y+1] = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t/* last row */\n\tfor (var i=0;i<w;i++) {\n\t\t/* cell coords (will be always empty) */\n\t\tvar x = 2*i+1;\n\t\tvar y = j;\n\t\tmap[x][y] = 0;\n\t\t\n\t\t/* right connection */\n\t\tif (i != L[i+1] && (i == L[i] || ROT.RNG.getUniform() > rand)) {\n\t\t\t/* dig right also if the cell is separated, so it gets connected to the rest of maze */\n\t\t\tthis._addToList(i, L, R);\n\t\t\tmap[x+1][y] = 0;\n\t\t}\n\t\t\n\t\tthis._removeFromList(i, L, R);\n\t}\n\t\n\tfor (var i=0;i<this._width;i++) {\n\t\tfor (var j=0;j<this._height;j++) {\n\t\t\tcallback(i, j, map[i][j]);\n\t\t}\n\t}\n\t\n\treturn this;\n}\n\n/**\n * Remove \"i\" from its list\n */\nROT.Map.EllerMaze.prototype._removeFromList = function(i, L, R) {\n\tR[L[i]] = R[i];\n\tL[R[i]] = L[i];\n\tR[i] = i;\n\tL[i] = i;\n}\n\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nROT.Map.EllerMaze.prototype._addToList = function(i, L, R) {\n\tR[L[i+1]] = R[i];\n\tL[R[i]] = L[i+1];\n\tR[i] = i+1;\n\tL[i+1] = i;\n}\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nROT.Map.Cellular = function(width, height, options) {\n\tROT.Map.call(this, width, height);\n\tthis._options = {\n\t\tborn: [5, 6, 7, 8],\n\t\tsurvive: [4, 5, 6, 7, 8],\n\t\ttopology: 8,\n\t\tconnected: false\n\t};\n\tthis.setOptions(options);\n\t\n\tthis._dirs = ROT.DIRS[this._options.topology];\n\tthis._map = this._fillMap(0);\n}\nROT.Map.Cellular.extend(ROT.Map);\n\n/**\n * Fill the map with random values\n * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n */\nROT.Map.Cellular.prototype.randomize = function(probability) {\n\tfor (var i=0;i<this._width;i++) {\n\t\tfor (var j=0;j<this._height;j++) {\n\t\t\tthis._map[i][j] = (ROT.RNG.getUniform() < probability ? 1 : 0);\n\t\t}\n\t}\n\treturn this;\n}\n\n/**\n * Change options.\n * @see ROT.Map.Cellular\n */\nROT.Map.Cellular.prototype.setOptions = function(options) {\n\tfor (var p in options) { this._options[p] = options[p]; }\n}\n\nROT.Map.Cellular.prototype.set = function(x, y, value) {\n\tthis._map[x][y] = value;\n}\n\nROT.Map.Cellular.prototype.create = function(callback) {\n\tvar newMap = this._fillMap(0);\n\tvar born = this._options.born;\n\tvar survive = this._options.survive;\n\n\n\tfor (var j=0;j<this._height;j++) {\n\t\tvar widthStep = 1;\n\t\tvar widthStart = 0;\n\t\tif (this._options.topology == 6) { \n\t\t\twidthStep = 2;\n\t\t\twidthStart = j%2;\n\t\t}\n\n\t\tfor (var i=widthStart; i<this._width; i+=widthStep) {\n\n\t\t\tvar cur = this._map[i][j];\n\t\t\tvar ncount = this._getNeighbors(i, j);\n\t\t\t\n\t\t\tif (cur && survive.indexOf(ncount) != -1) { /* survive */\n\t\t\t\tnewMap[i][j] = 1;\n\t\t\t} else if (!cur && born.indexOf(ncount) != -1) { /* born */\n\t\t\t\tnewMap[i][j] = 1;\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\t\n\tthis._map = newMap;\n\n\tif (this._options.connected) { this._completeMaze(); } // optionally connect every space\n\n\tif (!callback) { return; }\n\n\tfor (var j=0;j<this._height;j++) {\n\t\tvar widthStep = 1;\n\t\tvar widthStart = 0;\n\t\tif (this._options.topology == 6) { \n\t\t\twidthStep = 2;\n\t\t\twidthStart = j%2;\n\t\t}\n\t\tfor (var i=widthStart; i<this._width; i+=widthStep) {\n\t\t\tcallback(i, j, newMap[i][j]);\n\t\t}\n\t}\n}\n\n/**\n * Get neighbor count at [i,j] in this._map\n */\nROT.Map.Cellular.prototype._getNeighbors = function(cx, cy) {\n\tvar result = 0;\n\tfor (var i=0;i<this._dirs.length;i++) {\n\t\tvar dir = this._dirs[i];\n\t\tvar x = cx + dir[0];\n\t\tvar y = cy + dir[1];\n\t\t\n\t\tif (x < 0 || x >= this._width || x < 0 || y >= this._width) { continue; }\n\t\tresult += (this._map[x][y] == 1 ? 1 : 0);\n\t}\n\t\n\treturn result;\n}\n\n/**\n * Make sure every non-wall space is accessible.\n */\nROT.Map.Cellular.prototype._completeMaze = function() {\n\tvar allFreeSpace = [];\n\tvar notConnected = {};\n\t// find all free space\n\tfor (var x = 0; x < this._width; x++) {\n\t\tfor (var y = 0; y < this._height; y++) {\n\t\t\tif (this._freeSpace(x, y)) {\n\t\t\t\tvar p = [x, y];\n\t\t\t\tnotConnected[this._pointKey(p)] = p;\n\t\t\t\tallFreeSpace.push([x, y]);\n\t\t\t}\n\t\t}\n\t}\n\tvar start = allFreeSpace[ROT.RNG.getUniformInt(0, allFreeSpace.length - 1)];\n\n\tvar key = this._pointKey(start);\n\tvar connected = {};\n\tconnected[key] = start;\n\tdelete notConnected[key]\n\n\t// find what's connected to the starting point\n\tthis._findConnected(connected, notConnected, [start]);\n\n\twhile (Object.keys(notConnected).length > 0) {\n\n\t\t// find two points from notConnected to connected\n\t\tvar p = this._getFromTo(connected, notConnected);\n\t\tvar from = p[0]; // notConnected\n\t\tvar to = p[1]; // connected\n\n\t\t// find everything connected to the starting point\n\t\tvar local = {};\n\t\tlocal[this._pointKey(from)] = from;\n\t\tthis._findConnected(local, notConnected, [from], true);\n\n\t\t// connect to a connected square\n\t\tthis._tunnelToConnected(to, from, connected, notConnected);\n\n\t\t// now all of local is connected\n\t\tfor (var k in local) {\n\t\t\tvar pp = local[k];\n\t\t\tthis._map[pp[0]][pp[1]] = 0;\n\t\t\tconnected[k] = pp;\n\t\t\tdelete notConnected[k];\n\t\t}\n\t}\n}\n\n/**\n * Find random points to connect. Search for the closest point in the larger space. \n * This is to minimize the length of the passage while maintaining good performance.\n */\nROT.Map.Cellular.prototype._getFromTo = function(connected, notConnected) {\n\tvar from, to, d;\n\tvar connectedKeys = Object.keys(connected);\n\tvar notConnectedKeys = Object.keys(notConnected);\n\tfor (var i = 0; i < 5; i++) {\n\t\tif (connectedKeys.length < notConnectedKeys.length) {\n\t\t\tvar keys = connectedKeys;\n\t\t\tto = connected[keys[ROT.RNG.getUniformInt(0, keys.length - 1)]]\n\t\t\tfrom = this._getClosest(to, notConnected);\n\t\t} else {\n\t\t\tvar keys = notConnectedKeys;\n\t\t\tfrom = notConnected[keys[ROT.RNG.getUniformInt(0, keys.length - 1)]]\n\t\t\tto = this._getClosest(from, connected);\n\t\t}\n\t\td = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n\t\tif (d < 64) {\n\t\t\tbreak;\n\t\t}\n\t}\n\t// console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n\treturn [from, to];\n}\n\nROT.Map.Cellular.prototype._getClosest = function(point, space) {\n\tvar minPoint = null;\n\tvar minDist = null;\n\tfor (k in space) {\n\t\tvar p = space[k];\n\t\tvar d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n\t\tif (minDist == null || d < minDist) {\n\t\t\tminDist = d;\n\t\t\tminPoint = p;\n\t\t}\n\t}\n\treturn minPoint;\n}\n\nROT.Map.Cellular.prototype._findConnected = function(connected, notConnected, stack, keepNotConnected) {\n\twhile(stack.length > 0) {\n\t\tvar p = stack.splice(0, 1)[0];\n\t\tvar tests = [\n\t\t\t[p[0] + 1, p[1]],\n\t\t\t[p[0] - 1, p[1]],\n\t\t\t[p[0],     p[1] + 1],\n\t\t\t[p[0],     p[1] - 1]\n\t\t];\n\t\tfor (var i = 0; i < tests.length; i++) {\n\t\t\tvar key = this._pointKey(tests[i]);\n\t\t\tif (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1])) {\n\t\t\t\tconnected[key] = tests[i];\n\t\t\t\tif (!keepNotConnected) {\n\t\t\t\t\tdelete notConnected[key];\n\t\t\t\t}\n\t\t\t\tstack.push(tests[i]);\n\t\t\t}\n\t\t}\n\t}\n}\n\nROT.Map.Cellular.prototype._tunnelToConnected = function(to, from, connected, notConnected) {\n\tvar key = this._pointKey(from);\n\tvar a, b;\n\tif (from[0] < to[0]) {\n\t\ta = from;\n\t\tb = to;\n\t} else {\n\t\ta = to;\n\t\tb = from;\n\t}\n\tfor (var xx = a[0]; xx <= b[0]; xx++) {\n\t\tthis._map[xx][a[1]] = 0;\n\t\tvar p = [xx, a[1]];\n\t\tvar pkey = this._pointKey(p);\n\t\tconnected[pkey] = p;\n\t\tdelete notConnected[pkey];\n\t}\n\n\t// x is now fixed\n\tvar x = b[0];\n\n\tif (from[1] < to[1]) {\n\t\ta = from;\n\t\tb = to;\n\t} else {\n\t\ta = to;\n\t\tb = from;\n\t}\n\tfor (var yy = a[1]; yy < b[1]; yy++) {\n\t\tthis._map[x][yy] = 0;\n\t\tvar p = [x, yy];\n\t\tvar pkey = this._pointKey(p);\n\t\tconnected[pkey] = p;\n\t\tdelete notConnected[pkey];\n\t}\n}\n\nROT.Map.Cellular.prototype._freeSpace = function(x, y) {\n\treturn x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] != 1;\n}\n\nROT.Map.Cellular.prototype._pointKey = function(p) {\n\treturn p[0] + \".\" + p[1];\n}\n\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nROT.Map.Dungeon = function(width, height) {\n\tROT.Map.call(this, width, height);\n\tthis._rooms = []; /* list of all rooms */\n\tthis._corridors = [];\n}\nROT.Map.Dungeon.extend(ROT.Map);\n\n/**\n * Get all generated rooms\n * @returns {ROT.Map.Feature.Room[]}\n */\nROT.Map.Dungeon.prototype.getRooms = function() {\n\treturn this._rooms;\n}\n\n/**\n * Get all generated corridors\n * @returns {ROT.Map.Feature.Corridor[]}\n */\nROT.Map.Dungeon.prototype.getCorridors = function() {\n\treturn this._corridors;\n}\n/**\n * @class Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at \n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n * @augments ROT.Map.Dungeon\n */\nROT.Map.Digger = function(width, height, options) {\n\tROT.Map.Dungeon.call(this, width, height);\n\t\n\tthis._options = {\n\t\troomWidth: [3, 9], /* room minimum and maximum width */\n\t\troomHeight: [3, 5], /* room minimum and maximum height */\n\t\tcorridorLength: [3, 10], /* corridor minimum and maximum length */\n\t\tdugPercentage: 0.2, /* we stop after this percentage of level area has been dug out */\n\t\ttimeLimit: 1000 /* we stop after this much time has passed (msec) */\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\t\n\tthis._features = {\n\t\t\"Room\": 4,\n\t\t\"Corridor\": 4\n\t}\n\tthis._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n\tthis._walls = {}; /* these are available for digging */\n\t\n\tthis._digCallback = this._digCallback.bind(this);\n\tthis._canBeDugCallback = this._canBeDugCallback.bind(this);\n\tthis._isWallCallback = this._isWallCallback.bind(this);\n\tthis._priorityWallCallback = this._priorityWallCallback.bind(this);\n}\nROT.Map.Digger.extend(ROT.Map.Dungeon);\n\n/**\n * Create a map\n * @see ROT.Map#create\n */\nROT.Map.Digger.prototype.create = function(callback) {\n\tthis._rooms = [];\n\tthis._corridors = [];\n\tthis._map = this._fillMap(1);\n\tthis._walls = {};\n\tthis._dug = 0;\n\tvar area = (this._width-2) * (this._height-2);\n\n\tthis._firstRoom();\n\t\n\tvar t1 = Date.now();\n\n\tdo {\n\t\tvar t2 = Date.now();\n\t\tif (t2 - t1 > this._options.timeLimit) { break; }\n\n\t\t/* find a good wall */\n\t\tvar wall = this._findWall();\n\t\tif (!wall) { break; } /* no more walls */\n\t\t\n\t\tvar parts = wall.split(\",\");\n\t\tvar x = parseInt(parts[0]);\n\t\tvar y = parseInt(parts[1]);\n\t\tvar dir = this._getDiggingDirection(x, y);\n\t\tif (!dir) { continue; } /* this wall is not suitable */\n\t\t\n//\t\tconsole.log(\"wall\", x, y);\n\n\t\t/* try adding a feature */\n\t\tvar featureAttempts = 0;\n\t\tdo {\n\t\t\tfeatureAttempts++;\n\t\t\tif (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n\t\t\t\t//if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n\t\t\t\tthis._removeSurroundingWalls(x, y);\n\t\t\t\tthis._removeSurroundingWalls(x-dir[0], y-dir[1]);\n\t\t\t\tbreak; \n\t\t\t}\n\t\t} while (featureAttempts < this._featureAttempts);\n\t\t\n\t\tvar priorityWalls = 0;\n\t\tfor (var id in this._walls) { \n\t\t\tif (this._walls[id] > 1) { priorityWalls++; }\n\t\t}\n\n\t} while (this._dug/area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n\n\tthis._addDoors();\n\n\tif (callback) {\n\t\tfor (var i=0;i<this._width;i++) {\n\t\t\tfor (var j=0;j<this._height;j++) {\n\t\t\t\tcallback(i, j, this._map[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis._walls = {};\n\tthis._map = null;\n\n\treturn this;\n}\n\nROT.Map.Digger.prototype._digCallback = function(x, y, value) {\n\tif (value == 0 || value == 2) { /* empty */\n\t\tthis._map[x][y] = 0;\n\t\tthis._dug++;\n\t} else { /* wall */\n\t\tthis._walls[x+\",\"+y] = 1;\n\t}\n}\n\nROT.Map.Digger.prototype._isWallCallback = function(x, y) {\n\tif (x < 0 || y < 0 || x >= this._width || y >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\nROT.Map.Digger.prototype._canBeDugCallback = function(x, y) {\n\tif (x < 1 || y < 1 || x+1 >= this._width || y+1 >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\nROT.Map.Digger.prototype._priorityWallCallback = function(x, y) {\n\tthis._walls[x+\",\"+y] = 2;\n}\n\nROT.Map.Digger.prototype._firstRoom = function() {\n\tvar cx = Math.floor(this._width/2);\n\tvar cy = Math.floor(this._height/2);\n\tvar room = ROT.Map.Feature.Room.createRandomCenter(cx, cy, this._options);\n\tthis._rooms.push(room);\n\troom.create(this._digCallback);\n}\n\n/**\n * Get a suitable wall\n */\nROT.Map.Digger.prototype._findWall = function() {\n\tvar prio1 = [];\n\tvar prio2 = [];\n\tfor (var id in this._walls) {\n\t\tvar prio = this._walls[id];\n\t\tif (prio == 2) { \n\t\t\tprio2.push(id); \n\t\t} else {\n\t\t\tprio1.push(id);\n\t\t}\n\t}\n\t\n\tvar arr = (prio2.length ? prio2 : prio1);\n\tif (!arr.length) { return null; } /* no walls :/ */\n\t\n\tvar id = arr.random();\n\tdelete this._walls[id];\n\n\treturn id;\n}\n\n/**\n * Tries adding a feature\n * @returns {bool} was this a successful try?\n */\nROT.Map.Digger.prototype._tryFeature = function(x, y, dx, dy) {\n\tvar feature = ROT.RNG.getWeightedValue(this._features);\n\tfeature = ROT.Map.Feature[feature].createRandomAt(x, y, dx, dy, this._options);\n\t\n\tif (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n//\t\tconsole.log(\"not valid\");\n//\t\tfeature.debug();\n\t\treturn false;\n\t}\n\t\n\tfeature.create(this._digCallback);\n//\tfeature.debug();\n\n\tif (feature instanceof ROT.Map.Feature.Room) { this._rooms.push(feature); }\n\tif (feature instanceof ROT.Map.Feature.Corridor) { \n\t\tfeature.createPriorityWalls(this._priorityWallCallback);\n\t\tthis._corridors.push(feature); \n\t}\n\t\n\treturn true;\n}\n\nROT.Map.Digger.prototype._removeSurroundingWalls = function(cx, cy) {\n\tvar deltas = ROT.DIRS[4];\n\n\tfor (var i=0;i<deltas.length;i++) {\n\t\tvar delta = deltas[i];\n\t\tvar x = cx + delta[0];\n\t\tvar y = cy + delta[1];\n\t\tdelete this._walls[x+\",\"+y];\n\t\tvar x = cx + 2*delta[0];\n\t\tvar y = cy + 2*delta[1];\n\t\tdelete this._walls[x+\",\"+y];\n\t}\n}\n\n/**\n * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n */\nROT.Map.Digger.prototype._getDiggingDirection = function(cx, cy) {\n\tif (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) { return null; }\n\n\tvar result = null;\n\tvar deltas = ROT.DIRS[4];\n\t\n\tfor (var i=0;i<deltas.length;i++) {\n\t\tvar delta = deltas[i];\n\t\tvar x = cx + delta[0];\n\t\tvar y = cy + delta[1];\n\t\t\n\t\tif (!this._map[x][y]) { /* there already is another empty neighbor! */\n\t\t\tif (result) { return null; }\n\t\t\tresult = delta;\n\t\t}\n\t}\n\t\n\t/* no empty neighbor */\n\tif (!result) { return null; }\n\t\n\treturn [-result[0], -result[1]];\n}\n\n/**\n * Find empty spaces surrounding rooms, and apply doors.\n */\nROT.Map.Digger.prototype._addDoors = function() {\n\tvar data = this._map;\n\tvar isWallCallback = function(x, y) {\n\t\treturn (data[x][y] == 1);\n\t}\n\tfor (var i = 0; i < this._rooms.length; i++ ) {\n\t\tvar room = this._rooms[i];\n\t\troom.clearDoors();\n\t\troom.addDoors(isWallCallback);\n\t}\n}\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nROT.Map.Uniform = function(width, height, options) {\n\tROT.Map.Dungeon.call(this, width, height);\n\n\tthis._options = {\n\t\troomWidth: [3, 9], /* room minimum and maximum width */\n\t\troomHeight: [3, 5], /* room minimum and maximum height */\n\t\troomDugPercentage: 0.1, /* we stop after this percentage of level area has been dug out by rooms */\n\t\ttimeLimit: 1000 /* we stop after this much time has passed (msec) */\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\n\tthis._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n\tthis._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n\n\tthis._connected = []; /* list of already connected rooms */\n\tthis._unconnected = []; /* list of remaining unconnected rooms */\n\t\n\tthis._digCallback = this._digCallback.bind(this);\n\tthis._canBeDugCallback = this._canBeDugCallback.bind(this);\n\tthis._isWallCallback = this._isWallCallback.bind(this);\n}\nROT.Map.Uniform.extend(ROT.Map.Dungeon);\n\n/**\n * Create a map. If the time limit has been hit, returns null.\n * @see ROT.Map#create\n */\nROT.Map.Uniform.prototype.create = function(callback) {\n\tvar t1 = Date.now();\n\twhile (1) {\n\t\tvar t2 = Date.now();\n\t\tif (t2 - t1 > this._options.timeLimit) { return null; } /* time limit! */\n\t\n\t\tthis._map = this._fillMap(1);\n\t\tthis._dug = 0;\n\t\tthis._rooms = [];\n\t\tthis._unconnected = [];\n\t\tthis._generateRooms();\n\t\tif (this._rooms.length < 2) { continue; }\n\t\tif (this._generateCorridors()) { break; }\n\t}\n\t\n\tif (callback) {\n\t\tfor (var i=0;i<this._width;i++) {\n\t\t\tfor (var j=0;j<this._height;j++) {\n\t\t\t\tcallback(i, j, this._map[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn this;\n}\n\n/**\n * Generates a suitable amount of rooms\n */\nROT.Map.Uniform.prototype._generateRooms = function() {\n\tvar w = this._width-2;\n\tvar h = this._height-2;\n\n\tdo {\n\t\tvar room = this._generateRoom();\n\t\tif (this._dug/(w*h) > this._options.roomDugPercentage) { break; } /* achieved requested amount of free space */\n\t} while (room);\n\n\t/* either enough rooms, or not able to generate more of them :) */\n}\n\n/**\n * Try to generate one room\n */\nROT.Map.Uniform.prototype._generateRoom = function() {\n\tvar count = 0;\n\twhile (count < this._roomAttempts) {\n\t\tcount++;\n\t\t\n\t\tvar room = ROT.Map.Feature.Room.createRandom(this._width, this._height, this._options);\n\t\tif (!room.isValid(this._isWallCallback, this._canBeDugCallback)) { continue; }\n\t\t\n\t\troom.create(this._digCallback);\n\t\tthis._rooms.push(room);\n\t\treturn room;\n\t} \n\n\t/* no room was generated in a given number of attempts */\n\treturn null;\n}\n\n/**\n * Generates connectors beween rooms\n * @returns {bool} success Was this attempt successfull?\n */\nROT.Map.Uniform.prototype._generateCorridors = function() {\n\tvar cnt = 0;\n\twhile (cnt < this._corridorAttempts) {\n\t\tcnt++;\n\t\tthis._corridors = [];\n\n\t\t/* dig rooms into a clear map */\n\t\tthis._map = this._fillMap(1);\n\t\tfor (var i=0;i<this._rooms.length;i++) { \n\t\t\tvar room = this._rooms[i];\n\t\t\troom.clearDoors();\n\t\t\troom.create(this._digCallback); \n\t\t}\n\n\t\tthis._unconnected = this._rooms.slice().randomize();\n\t\tthis._connected = [];\n\t\tif (this._unconnected.length) { this._connected.push(this._unconnected.pop()); } /* first one is always connected */\n\t\t\n\t\twhile (1) {\n\t\t\t/* 1. pick random connected room */\n\t\t\tvar connected = this._connected.random();\n\t\t\t\n\t\t\t/* 2. find closest unconnected */\n\t\t\tvar room1 = this._closestRoom(this._unconnected, connected);\n\t\t\t\n\t\t\t/* 3. connect it to closest connected */\n\t\t\tvar room2 = this._closestRoom(this._connected, room1);\n\t\t\t\n\t\t\tvar ok = this._connectRooms(room1, room2);\n\t\t\tif (!ok) { break; } /* stop connecting, re-shuffle */\n\t\t\t\n\t\t\tif (!this._unconnected.length) { return true; } /* done; no rooms remain */\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * For a given room, find the closest one from the list\n */\nROT.Map.Uniform.prototype._closestRoom = function(rooms, room) {\n\tvar dist = Infinity;\n\tvar center = room.getCenter();\n\tvar result = null;\n\t\n\tfor (var i=0;i<rooms.length;i++) {\n\t\tvar r = rooms[i];\n\t\tvar c = r.getCenter();\n\t\tvar dx = c[0]-center[0];\n\t\tvar dy = c[1]-center[1];\n\t\tvar d = dx*dx+dy*dy;\n\t\t\n\t\tif (d < dist) {\n\t\t\tdist = d;\n\t\t\tresult = r;\n\t\t}\n\t}\n\t\n\treturn result;\n}\n\nROT.Map.Uniform.prototype._connectRooms = function(room1, room2) {\n\t/*\n\t\troom1.debug();\n\t\troom2.debug();\n\t*/\n\n\tvar center1 = room1.getCenter();\n\tvar center2 = room2.getCenter();\n\n\tvar diffX = center2[0] - center1[0];\n\tvar diffY = center2[1] - center1[1];\n\n\tif (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n\t\tvar dirIndex1 = (diffY > 0 ? 2 : 0);\n\t\tvar dirIndex2 = (dirIndex1 + 2) % 4;\n\t\tvar min = room2.getLeft();\n\t\tvar max = room2.getRight();\n\t\tvar index = 0;\n\t} else { /* first try connecting east-west walls */\n\t\tvar dirIndex1 = (diffX > 0 ? 1 : 3);\n\t\tvar dirIndex2 = (dirIndex1 + 2) % 4;\n\t\tvar min = room2.getTop();\n\t\tvar max = room2.getBottom();\n\t\tvar index = 1;\n\t}\n\n\tvar start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n\tif (!start) { return false; }\n\n\tif (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n\t\tvar end = start.slice();\n\t\tvar value = null;\n\t\tswitch (dirIndex2) {\n\t\t\tcase 0: value = room2.getTop()-1; break;\n\t\t\tcase 1: value = room2.getRight()+1; break;\n\t\t\tcase 2: value = room2.getBottom()+1; break;\n\t\t\tcase 3: value = room2.getLeft()-1; break;\n\t\t}\n\t\tend[(index+1)%2] = value;\n\t\tthis._digLine([start, end]);\n\t\t\n\t} else if (start[index] < min-1 || start[index] > max+1) { /* need to switch target wall (L-like) */\n\n\t\tvar diff = start[index] - center2[index];\n\t\tswitch (dirIndex2) {\n\t\t\tcase 0:\n\t\t\tcase 1:\tvar rotation = (diff < 0 ? 3 : 1); break;\n\t\t\tcase 2:\n\t\t\tcase 3:\tvar rotation = (diff < 0 ? 1 : 3); break;\n\t\t}\n\t\tdirIndex2 = (dirIndex2 + rotation) % 4;\n\t\t\n\t\tvar end = this._placeInWall(room2, dirIndex2);\n\t\tif (!end) { return false; }\n\n\t\tvar mid = [0, 0];\n\t\tmid[index] = start[index];\n\t\tvar index2 = (index+1)%2;\n\t\tmid[index2] = end[index2];\n\t\tthis._digLine([start, mid, end]);\n\t\t\n\t} else { /* use current wall pair, but adjust the line in the middle (S-like) */\n\t\n\t\tvar index2 = (index+1)%2;\n\t\tvar end = this._placeInWall(room2, dirIndex2);\n\t\tif (!end) { return false; }\n\t\tvar mid = Math.round((end[index2] + start[index2])/2);\n\n\t\tvar mid1 = [0, 0];\n\t\tvar mid2 = [0, 0];\n\t\tmid1[index] = start[index];\n\t\tmid1[index2] = mid;\n\t\tmid2[index] = end[index];\n\t\tmid2[index2] = mid;\n\t\tthis._digLine([start, mid1, mid2, end]);\n\t}\n\n\troom1.addDoor(start[0], start[1]);\n\troom2.addDoor(end[0], end[1]);\n\t\n\tvar index = this._unconnected.indexOf(room1);\n\tif (index != -1) {\n\t\tthis._unconnected.splice(index, 1);\n\t\tthis._connected.push(room1);\n\t}\n\n\tvar index = this._unconnected.indexOf(room2);\n\tif (index != -1) {\n\t\tthis._unconnected.splice(index, 1);\n\t\tthis._connected.push(room2);\n\t}\n\t\n\treturn true;\n}\n\nROT.Map.Uniform.prototype._placeInWall = function(room, dirIndex) {\n\tvar start = [0, 0];\n\tvar dir = [0, 0];\n\tvar length = 0;\n\t\n\tswitch (dirIndex) {\n\t\tcase 0:\n\t\t\tdir = [1, 0];\n\t\t\tstart = [room.getLeft(), room.getTop()-1];\n\t\t\tlength = room.getRight()-room.getLeft()+1;\n\t\tbreak;\n\t\tcase 1:\n\t\t\tdir = [0, 1];\n\t\t\tstart = [room.getRight()+1, room.getTop()];\n\t\t\tlength = room.getBottom()-room.getTop()+1;\n\t\tbreak;\n\t\tcase 2:\n\t\t\tdir = [1, 0];\n\t\t\tstart = [room.getLeft(), room.getBottom()+1];\n\t\t\tlength = room.getRight()-room.getLeft()+1;\n\t\tbreak;\n\t\tcase 3:\n\t\t\tdir = [0, 1];\n\t\t\tstart = [room.getLeft()-1, room.getTop()];\n\t\t\tlength = room.getBottom()-room.getTop()+1;\n\t\tbreak;\n\t}\n\t\n\tvar avail = [];\n\tvar lastBadIndex = -2;\n\n\tfor (var i=0;i<length;i++) {\n\t\tvar x = start[0] + i*dir[0];\n\t\tvar y = start[1] + i*dir[1];\n\t\tavail.push(null);\n\t\t\n\t\tvar isWall = (this._map[x][y] == 1);\n\t\tif (isWall) {\n\t\t\tif (lastBadIndex != i-1) { avail[i] = [x, y]; }\n\t\t} else {\n\t\t\tlastBadIndex = i;\n\t\t\tif (i) { avail[i-1] = null; }\n\t\t}\n\t}\n\t\n\tfor (var i=avail.length-1; i>=0; i--) {\n\t\tif (!avail[i]) { avail.splice(i, 1); }\n\t}\n\treturn (avail.length ? avail.random() : null);\n}\n\n/**\n * Dig a polyline.\n */\nROT.Map.Uniform.prototype._digLine = function(points) {\n\tfor (var i=1;i<points.length;i++) {\n\t\tvar start = points[i-1];\n\t\tvar end = points[i];\n\t\tvar corridor = new ROT.Map.Feature.Corridor(start[0], start[1], end[0], end[1]);\n\t\tcorridor.create(this._digCallback);\n\t\tthis._corridors.push(corridor);\n\t}\n}\n\nROT.Map.Uniform.prototype._digCallback = function(x, y, value) {\n\tthis._map[x][y] = value;\n\tif (value == 0) { this._dug++; }\n}\n\nROT.Map.Uniform.prototype._isWallCallback = function(x, y) {\n\tif (x < 0 || y < 0 || x >= this._width || y >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\nROT.Map.Uniform.prototype._canBeDugCallback = function(x, y) {\n\tif (x < 1 || y < 1 || x+1 >= this._width || y+1 >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\n/**\n * @author hyakugei\n * @class Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.cellWidth=3] Number of cells to create on the horizontal (number of rooms horizontally)\n * @param {int[]} [options.cellHeight=3] Number of cells to create on the vertical (number of rooms vertically) \n * @param {int} [options.roomWidth] Room min and max width - normally set auto-magically via the constructor.\n * @param {int} [options.roomHeight] Room min and max height - normally set auto-magically via the constructor. \n */\nROT.Map.Rogue = function(width, height, options) {\n\tROT.Map.call(this, width, height);\n\t\n\tthis._options = {\n\t\tcellWidth: 3,  // NOTE to self, these could probably work the same as the roomWidth/room Height values\n\t\tcellHeight: 3  //     ie. as an array with min-max values for each direction....\n\t}\n\t\n\tfor (var p in options) { this._options[p] = options[p]; }\n\t\n\t/*\n\tSet the room sizes according to the over-all width of the map, \n\tand the cell sizes. \n\t*/\n\t\n\tif (!this._options.hasOwnProperty(\"roomWidth\")) {\n\t\tthis._options[\"roomWidth\"] = this._calculateRoomSize(this._width, this._options[\"cellWidth\"]);\n\t}\n\tif (!this._options.hasOwnProperty(\"roomHeight\")) {\n\t\tthis._options[\"roomHeight\"] = this._calculateRoomSize(this._height, this._options[\"cellHeight\"]);\n\t}\n\t\n}\n\nROT.Map.Rogue.extend(ROT.Map); \n\n/**\n * @see ROT.Map#create\n */\nROT.Map.Rogue.prototype.create = function(callback) {\n\tthis.map = this._fillMap(1);\n\tthis.rooms = [];\n\tthis.connectedCells = [];\n\t\n\tthis._initRooms();\n\tthis._connectRooms();\n\tthis._connectUnconnectedRooms();\n\tthis._createRandomRoomConnections();\n\tthis._createRooms();\n\tthis._createCorridors();\n\t\n\tif (callback) {\n\t\tfor (var i = 0; i < this._width; i++) {\n\t\t\tfor (var j = 0; j < this._height; j++) {\n\t\t\t\tcallback(i, j, this.map[i][j]);   \n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn this;\n}\n\nROT.Map.Rogue.prototype._calculateRoomSize = function(size, cell) {\n\tvar max = Math.floor((size/cell) * 0.8);\n\tvar min = Math.floor((size/cell) * 0.25);\n\tif (min < 2) min = 2;\n\tif (max < 2) max = 2;\n\treturn [min, max];\n}\n\nROT.Map.Rogue.prototype._initRooms = function () { \n\t// create rooms array. This is the \"grid\" list from the algo.  \n\tfor (var i = 0; i < this._options.cellWidth; i++) {  \n\t\tthis.rooms.push([]);\n\t\tfor(var j = 0; j < this._options.cellHeight; j++) {\n\t\t\tthis.rooms[i].push({\"x\":0, \"y\":0, \"width\":0, \"height\":0, \"connections\":[], \"cellx\":i, \"celly\":j});\n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._connectRooms = function() {\n\t//pick random starting grid\n\tvar cgx = ROT.RNG.getUniformInt(0, this._options.cellWidth-1);\n\tvar cgy = ROT.RNG.getUniformInt(0, this._options.cellHeight-1);\n\t\n\tvar idx;\n\tvar ncgx;\n\tvar ncgy;\n\t\n\tvar found = false;\n\tvar room;\n\tvar otherRoom;\n\t\n\t// find  unconnected neighbour cells\n\tdo {\n\t\n\t\t//var dirToCheck = [0,1,2,3,4,5,6,7];\n\t\tvar dirToCheck = [0,2,4,6];\n\t\tdirToCheck = dirToCheck.randomize();\n\t\t\n\t\tdo {\n\t\t\tfound = false;\n\t\t\tidx = dirToCheck.pop();\n\t\t\t\n\t\t\t\n\t\t\tncgx = cgx + ROT.DIRS[8][idx][0];\n\t\t\tncgy = cgy + ROT.DIRS[8][idx][1];\n\t\t\t\n\t\t\tif(ncgx < 0 || ncgx >= this._options.cellWidth) continue;\n\t\t\tif(ncgy < 0 || ncgy >= this._options.cellHeight) continue;\n\t\t\t\n\t\t\troom = this.rooms[cgx][cgy];\n\t\t\t\n\t\t\tif(room[\"connections\"].length > 0)\n\t\t\t{\n\t\t\t\t// as long as this room doesn't already coonect to me, we are ok with it. \n\t\t\t\tif(room[\"connections\"][0][0] == ncgx &&\n\t\t\t\troom[\"connections\"][0][1] == ncgy)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\totherRoom = this.rooms[ncgx][ncgy];\n\t\t\t\n\t\t\tif (otherRoom[\"connections\"].length == 0) { \n\t\t\t\totherRoom[\"connections\"].push([cgx,cgy]);\n\t\t\t\t\n\t\t\t\tthis.connectedCells.push([ncgx, ncgy]);\n\t\t\t\tcgx = ncgx;\n\t\t\t\tcgy = ncgy;\n\t\t\t\tfound = true;\n\t\t\t}\n\t\t\t\t\t\n\t\t} while (dirToCheck.length > 0 && found == false)\n\t\t\n\t} while (dirToCheck.length > 0)\n\n}\n\nROT.Map.Rogue.prototype._connectUnconnectedRooms = function() {\n\t//While there are unconnected rooms, try to connect them to a random connected neighbor \n\t//(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n\tvar cw = this._options.cellWidth;\n\tvar ch = this._options.cellHeight;\n\t\n\tvar randomConnectedCell;\n\tthis.connectedCells = this.connectedCells.randomize();\n\tvar room;\n\tvar otherRoom;\n\tvar validRoom;\n\t\n\tfor (var i = 0; i < this._options.cellWidth; i++) {\n\t\tfor (var j = 0; j < this._options.cellHeight; j++)  {\n\t\t\t\t\n\t\t\troom = this.rooms[i][j];\n\t\t\t\n\t\t\tif (room[\"connections\"].length == 0) {\n\t\t\t\tvar directions = [0,2,4,6];\n\t\t\t\tdirections = directions.randomize();\n\t\t\t\t\n\t\t\t\tvar validRoom = false;\n\t\t\t\t\n\t\t\t\tdo {\n\t\t\t\t\t\n\t\t\t\t\tvar dirIdx = directions.pop();\n\t\t\t\t\tvar newI = i + ROT.DIRS[8][dirIdx][0];\n\t\t\t\t\tvar newJ = j + ROT.DIRS[8][dirIdx][1];\n\t\t\t\t\t\n\t\t\t\t\tif (newI < 0 || newI >= cw || \n\t\t\t\t\tnewJ < 0 || newJ >= ch) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\totherRoom = this.rooms[newI][newJ];\n\t\t\t\t\t\n\t\t\t\t\tvalidRoom = true;\n\t\t\t\t\t\n\t\t\t\t\tif (otherRoom[\"connections\"].length == 0) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < otherRoom[\"connections\"].length; k++) {\n\t\t\t\t\t\tif(otherRoom[\"connections\"][k][0] == i && \n\t\t\t\t\t\totherRoom[\"connections\"][k][1] == j) {\n\t\t\t\t\t\t\tvalidRoom = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (validRoom) break;\n\t\t\t\t\t\n\t\t\t\t} while (directions.length)\n\t\t\t\t\n\t\t\t\tif(validRoom) { \n\t\t\t\t\troom[\"connections\"].push( [otherRoom[\"cellx\"], otherRoom[\"celly\"]] );  \n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"-- Unable to connect room.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._createRandomRoomConnections = function(connections) {\n\t// Empty for now. \n}\n\n\nROT.Map.Rogue.prototype._createRooms = function() {\n\t// Create Rooms \n\t\n\tvar w = this._width;\n\tvar h = this._height;\n\t\n\tvar cw = this._options.cellWidth;\n\tvar ch = this._options.cellHeight;\n\t\n\tvar cwp = Math.floor(this._width / cw);\n\tvar chp = Math.floor(this._height / ch);\n\t\n\tvar roomw;\n\tvar roomh;\n\tvar roomWidth = this._options[\"roomWidth\"];\n\tvar roomHeight = this._options[\"roomHeight\"];\n\tvar sx;\n\tvar sy;\n\tvar tx;\n\tvar ty;\n\tvar otherRoom;\n\t\n\tfor (var i = 0; i < cw; i++) {\n\t\tfor (var j = 0; j < ch; j++) {\n\t\t\tsx = cwp * i;\n\t\t\tsy = chp * j;\n\t\t\t\n\t\t\tif (sx == 0) sx = 1;\n\t\t\tif (sy == 0) sy = 1;\n\t\t\t\n\t\t\troomw = ROT.RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n\t\t\troomh = ROT.RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n\t\t\t\n\t\t\tif (j > 0) {\n\t\t\t\totherRoom = this.rooms[i][j-1];\n\t\t\t\twhile (sy - (otherRoom[\"y\"] + otherRoom[\"height\"] ) < 3) {\n\t\t\t\t\tsy++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (i > 0) {\n\t\t\t\totherRoom = this.rooms[i-1][j];\n\t\t\t\twhile(sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n\t\t\t\t\tsx++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar sxOffset = Math.round(ROT.RNG.getUniformInt(0, cwp-roomw)/2);\n\t\t\tvar syOffset = Math.round(ROT.RNG.getUniformInt(0, chp-roomh)/2);\n\t\t\t\n\t\t\twhile (sx + sxOffset + roomw >= w) {\n\t\t\t\tif(sxOffset) {\n\t\t\t\t\tsxOffset--;\n\t\t\t\t} else {\n\t\t\t\t\troomw--; \n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\twhile (sy + syOffset + roomh >= h) { \n\t\t\t\tif(syOffset) {\n\t\t\t\t\tsyOffset--;\n\t\t\t\t} else {\n\t\t\t\t\troomh--; \n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tsx = sx + sxOffset;\n\t\t\tsy = sy + syOffset;\n\t\t\t\n\t\t\tthis.rooms[i][j][\"x\"] = sx;\n\t\t\tthis.rooms[i][j][\"y\"] = sy;\n\t\t\tthis.rooms[i][j][\"width\"] = roomw;\n\t\t\tthis.rooms[i][j][\"height\"] = roomh;  \n\t\t\t\n\t\t\tfor (var ii = sx; ii < sx + roomw; ii++) {\n\t\t\t\tfor (var jj = sy; jj < sy + roomh; jj++) {\n\t\t\t\t\tthis.map[ii][jj] = 0;\n\t\t\t\t}\n\t\t\t}  \n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._getWallPosition = function(aRoom, aDirection) {\n\tvar rx;\n\tvar ry;\n\tvar door;\n\t\n\tif (aDirection == 1 || aDirection == 3) {\n\t\trx = ROT.RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n\t\tif (aDirection == 1) {\n\t\t\try = aRoom[\"y\"] - 2;\n\t\t\tdoor = ry + 1;\n\t\t} else {\n\t\t\try = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n\t\t\tdoor = ry -1;\n\t\t}\n\t\t\n\t\tthis.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space. \n\t\t\n\t} else if (aDirection == 2 || aDirection == 4) {\n\t\try = ROT.RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n\t\tif(aDirection == 2) {\n\t\t\trx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n\t\t\tdoor = rx - 1;\n\t\t} else {\n\t\t\trx = aRoom[\"x\"] - 2;\n\t\t\tdoor = rx + 1;\n\t\t}\n\t\t\n\t\tthis.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space. \n\t\t\n\t}\n\treturn [rx, ry];\n}\n\n/***\n* @param startPosition a 2 element array\n* @param endPosition a 2 element array\n*/\nROT.Map.Rogue.prototype._drawCorridore = function (startPosition, endPosition) {\n\tvar xOffset = endPosition[0] - startPosition[0];\n\tvar yOffset = endPosition[1] - startPosition[1];\n\t\n\tvar xpos = startPosition[0];\n\tvar ypos = startPosition[1];\n\t\n\tvar tempDist;\n\tvar xDir;\n\tvar yDir;\n\t\n\tvar move; // 2 element array, element 0 is the direction, element 1 is the total value to move. \n\tvar moves = []; // a list of 2 element arrays\n\t\n\tvar xAbs = Math.abs(xOffset);\n\tvar yAbs = Math.abs(yOffset);\n\t\n\tvar percent = ROT.RNG.getUniform(); // used to split the move at different places along the long axis\n\tvar firstHalf = percent;\n\tvar secondHalf = 1 - percent;\n\t\n\txDir = xOffset > 0 ? 2 : 6;\n\tyDir = yOffset > 0 ? 4 : 0;\n\t\n\tif (xAbs < yAbs) {\n\t\t// move firstHalf of the y offset\n\t\ttempDist = Math.ceil(yAbs * firstHalf);\n\t\tmoves.push([yDir, tempDist]);\n\t\t// move all the x offset\n\t\tmoves.push([xDir, xAbs]);\n\t\t// move sendHalf of the  y offset\n\t\ttempDist = Math.floor(yAbs * secondHalf);\n\t\tmoves.push([yDir, tempDist]);\n\t} else {\n\t\t//  move firstHalf of the x offset\n\t\ttempDist = Math.ceil(xAbs * firstHalf);\n\t\tmoves.push([xDir, tempDist]);\n\t\t// move all the y offset\n\t\tmoves.push([yDir, yAbs]);\n\t\t// move secondHalf of the x offset.\n\t\ttempDist = Math.floor(xAbs * secondHalf);\n\t\tmoves.push([xDir, tempDist]);  \n\t}\n\t\n\tthis.map[xpos][ypos] = 0;\n\t\n\twhile (moves.length > 0) {\n\t\tmove = moves.pop();\n\t\twhile (move[1] > 0) {\n\t\t\txpos += ROT.DIRS[8][move[0]][0];\n\t\t\typos += ROT.DIRS[8][move[0]][1];\n\t\t\tthis.map[xpos][ypos] = 0;\n\t\t\tmove[1] = move[1] - 1;\n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._createCorridors = function () {\n\t// Draw Corridors between connected rooms\n\t\n\tvar cw = this._options.cellWidth;\n\tvar ch = this._options.cellHeight;\n\tvar room;\n\tvar connection;\n\tvar otherRoom;\n\tvar wall;\n\tvar otherWall;\n\t\n\tfor (var i = 0; i < cw; i++) {\n\t\tfor (var j = 0; j < ch; j++) {\n\t\t\troom = this.rooms[i][j];\n\t\t\t\n\t\t\tfor (var k = 0; k < room[\"connections\"].length; k++) {\n\t\t\t\t\t\n\t\t\t\tconnection = room[\"connections\"][k]; \n\t\t\t\t\n\t\t\t\totherRoom = this.rooms[connection[0]][connection[1]];\n\t\t\t\t\n\t\t\t\t// figure out what wall our corridor will start one.\n\t\t\t\t// figure out what wall our corridor will end on. \n\t\t\t\tif (otherRoom[\"cellx\"] > room[\"cellx\"] ) {\n\t\t\t\t\twall = 2;\n\t\t\t\t\totherWall = 4;\n\t\t\t\t} else if (otherRoom[\"cellx\"] < room[\"cellx\"] ) {\n\t\t\t\t\twall = 4;\n\t\t\t\t\totherWall = 2;\n\t\t\t\t} else if(otherRoom[\"celly\"] > room[\"celly\"]) {\n\t\t\t\t\twall = 3;\n\t\t\t\t\totherWall = 1;\n\t\t\t\t} else if(otherRoom[\"celly\"] < room[\"celly\"]) {\n\t\t\t\t\twall = 1;\n\t\t\t\t\totherWall = 3;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis._drawCorridore(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n\t\t\t}\n\t\t}\n\t}\n}\n/**\n * @class Dungeon feature; has own .create() method\n */\nROT.Map.Feature = function() {}\nROT.Map.Feature.prototype.isValid = function(canBeDugCallback) {}\nROT.Map.Feature.prototype.create = function(digCallback) {}\nROT.Map.Feature.prototype.debug = function() {}\nROT.Map.Feature.createRandomAt = function(x, y, dx, dy, options) {}\n\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nROT.Map.Feature.Room = function(x1, y1, x2, y2, doorX, doorY) {\n\tthis._x1 = x1;\n\tthis._y1 = y1;\n\tthis._x2 = x2;\n\tthis._y2 = y2;\n\tthis._doors = {};\n\tif (arguments.length > 4) { this.addDoor(doorX, doorY); }\n}\nROT.Map.Feature.Room.extend(ROT.Map.Feature);\n\n/**\n * Room of random size, with a given doors and direction\n */\nROT.Map.Feature.Room.createRandomAt = function(x, y, dx, dy, options) {\n\tvar min = options.roomWidth[0];\n\tvar max = options.roomWidth[1];\n\tvar width = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar min = options.roomHeight[0];\n\tvar max = options.roomHeight[1];\n\tvar height = ROT.RNG.getUniformInt(min, max);\n\t\n\tif (dx == 1) { /* to the right */\n\t\tvar y2 = y - Math.floor(ROT.RNG.getUniform() * height);\n\t\treturn new this(x+1, y2, x+width, y2+height-1, x, y);\n\t}\n\t\n\tif (dx == -1) { /* to the left */\n\t\tvar y2 = y - Math.floor(ROT.RNG.getUniform() * height);\n\t\treturn new this(x-width, y2, x-1, y2+height-1, x, y);\n\t}\n\n\tif (dy == 1) { /* to the bottom */\n\t\tvar x2 = x - Math.floor(ROT.RNG.getUniform() * width);\n\t\treturn new this(x2, y+1, x2+width-1, y+height, x, y);\n\t}\n\n\tif (dy == -1) { /* to the top */\n\t\tvar x2 = x - Math.floor(ROT.RNG.getUniform() * width);\n\t\treturn new this(x2, y-height, x2+width-1, y-1, x, y);\n\t}\n\n        throw new Error(\"dx or dy must be 1 or -1\");\n}\n\n/**\n * Room of random size, positioned around center coords\n */\nROT.Map.Feature.Room.createRandomCenter = function(cx, cy, options) {\n\tvar min = options.roomWidth[0];\n\tvar max = options.roomWidth[1];\n\tvar width = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar min = options.roomHeight[0];\n\tvar max = options.roomHeight[1];\n\tvar height = ROT.RNG.getUniformInt(min, max);\n\n\tvar x1 = cx - Math.floor(ROT.RNG.getUniform()*width);\n\tvar y1 = cy - Math.floor(ROT.RNG.getUniform()*height);\n\tvar x2 = x1 + width - 1;\n\tvar y2 = y1 + height - 1;\n\n\treturn new this(x1, y1, x2, y2);\n}\n\n/**\n * Room of random size within a given dimensions\n */\nROT.Map.Feature.Room.createRandom = function(availWidth, availHeight, options) {\n\tvar min = options.roomWidth[0];\n\tvar max = options.roomWidth[1];\n\tvar width = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar min = options.roomHeight[0];\n\tvar max = options.roomHeight[1];\n\tvar height = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar left = availWidth - width - 1;\n\tvar top = availHeight - height - 1;\n\n\tvar x1 = 1 + Math.floor(ROT.RNG.getUniform()*left);\n\tvar y1 = 1 + Math.floor(ROT.RNG.getUniform()*top);\n\tvar x2 = x1 + width - 1;\n\tvar y2 = y1 + height - 1;\n\n\treturn new this(x1, y1, x2, y2);\n}\n\nROT.Map.Feature.Room.prototype.addDoor = function(x, y) {\n\tthis._doors[x+\",\"+y] = 1;\n\treturn this;\n}\n\n/**\n * @param {function}\n */\nROT.Map.Feature.Room.prototype.getDoors = function(callback) {\n\tfor (var key in this._doors) {\n\t\tvar parts = key.split(\",\");\n\t\tcallback(parseInt(parts[0]), parseInt(parts[1]));\n\t}\n\treturn this;\n}\n\nROT.Map.Feature.Room.prototype.clearDoors = function() {\n\tthis._doors = {};\n\treturn this;\n}\n\nROT.Map.Feature.Room.prototype.addDoors = function(isWallCallback) {\n\tvar left = this._x1-1;\n\tvar right = this._x2+1;\n\tvar top = this._y1-1;\n\tvar bottom = this._y2+1;\n\n\tfor (var x=left; x<=right; x++) {\n\t\tfor (var y=top; y<=bottom; y++) {\n\t\t\tif (x != left && x != right && y != top && y != bottom) { continue; }\n\t\t\tif (isWallCallback(x, y)) { continue; }\n\n\t\t\tthis.addDoor(x, y);\n\t\t}\n\t}\n\n\treturn this;\n}\n\nROT.Map.Feature.Room.prototype.debug = function() {\n\tconsole.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n}\n\nROT.Map.Feature.Room.prototype.isValid = function(isWallCallback, canBeDugCallback) { \n\tvar left = this._x1-1;\n\tvar right = this._x2+1;\n\tvar top = this._y1-1;\n\tvar bottom = this._y2+1;\n\t\n\tfor (var x=left; x<=right; x++) {\n\t\tfor (var y=top; y<=bottom; y++) {\n\t\t\tif (x == left || x == right || y == top || y == bottom) {\n\t\t\t\tif (!isWallCallback(x, y)) { return false; }\n\t\t\t} else {\n\t\t\t\tif (!canBeDugCallback(x, y)) { return false; }\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n */\nROT.Map.Feature.Room.prototype.create = function(digCallback) { \n\tvar left = this._x1-1;\n\tvar right = this._x2+1;\n\tvar top = this._y1-1;\n\tvar bottom = this._y2+1;\n\t\n\tvar value = 0;\n\tfor (var x=left; x<=right; x++) {\n\t\tfor (var y=top; y<=bottom; y++) {\n\t\t\tif (x+\",\"+y in this._doors) {\n\t\t\t\tvalue = 2;\n\t\t\t} else if (x == left || x == right || y == top || y == bottom) {\n\t\t\t\tvalue = 1;\n\t\t\t} else {\n\t\t\t\tvalue = 0;\n\t\t\t}\n\t\t\tdigCallback(x, y, value);\n\t\t}\n\t}\n}\n\nROT.Map.Feature.Room.prototype.getCenter = function() {\n\treturn [Math.round((this._x1 + this._x2)/2), Math.round((this._y1 + this._y2)/2)];\n}\n\nROT.Map.Feature.Room.prototype.getLeft = function() {\n\treturn this._x1;\n}\n\nROT.Map.Feature.Room.prototype.getRight = function() {\n\treturn this._x2;\n}\n\nROT.Map.Feature.Room.prototype.getTop = function() {\n\treturn this._y1;\n}\n\nROT.Map.Feature.Room.prototype.getBottom = function() {\n\treturn this._y2;\n}\n\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nROT.Map.Feature.Corridor = function(startX, startY, endX, endY) {\n\tthis._startX = startX;\n\tthis._startY = startY;\n\tthis._endX = endX; \n\tthis._endY = endY;\n\tthis._endsWithAWall = true;\n}\nROT.Map.Feature.Corridor.extend(ROT.Map.Feature);\n\nROT.Map.Feature.Corridor.createRandomAt = function(x, y, dx, dy, options) {\n\tvar min = options.corridorLength[0];\n\tvar max = options.corridorLength[1];\n\tvar length = ROT.RNG.getUniformInt(min, max);\n\t\n\treturn new this(x, y, x + dx*length, y + dy*length);\n}\n\nROT.Map.Feature.Corridor.prototype.debug = function() {\n\tconsole.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n}\n\nROT.Map.Feature.Corridor.prototype.isValid = function(isWallCallback, canBeDugCallback){ \n\tvar sx = this._startX;\n\tvar sy = this._startY;\n\tvar dx = this._endX-sx;\n\tvar dy = this._endY-sy;\n\tvar length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n\t\n\tif (dx) { dx = dx/Math.abs(dx); }\n\tif (dy) { dy = dy/Math.abs(dy); }\n\tvar nx = dy;\n\tvar ny = -dx;\n\t\n\tvar ok = true;\n\tfor (var i=0; i<length; i++) {\n\t\tvar x = sx + i*dx;\n\t\tvar y = sy + i*dy;\n\n\t\tif (!canBeDugCallback(     x,      y)) { ok = false; }\n\t\tif (!isWallCallback  (x + nx, y + ny)) { ok = false; }\n\t\tif (!isWallCallback  (x - nx, y - ny)) { ok = false; }\n\t\t\n\t\tif (!ok) {\n\t\t\tlength = i;\n\t\t\tthis._endX = x-dx;\n\t\t\tthis._endY = y-dy;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\t/**\n\t * If the length degenerated, this corridor might be invalid\n\t */\n\t \n\t/* not supported */\n\tif (length == 0) { return false; } \n\t\n\t /* length 1 allowed only if the next space is empty */\n\tif (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) { return false; }\n\t\n\t/**\n\t * We do not want the corridor to crash into a corner of a room;\n\t * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n\t * \n\t * Situation:\n\t * #######1\n\t * .......?\n\t * #######2\n\t * \n\t * The corridor was dug from left to right.\n\t * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n\t */\n\tvar firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n\tvar secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n\tthis._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n\tif ((firstCornerBad || secondCornerBad) && this._endsWithAWall) { return false; }\n\n\treturn true;\n}\n\n/**\n * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n */\nROT.Map.Feature.Corridor.prototype.create = function(digCallback) { \n\tvar sx = this._startX;\n\tvar sy = this._startY;\n\tvar dx = this._endX-sx;\n\tvar dy = this._endY-sy;\n\tvar length = 1+Math.max(Math.abs(dx), Math.abs(dy));\n\t\n\tif (dx) { dx = dx/Math.abs(dx); }\n\tif (dy) { dy = dy/Math.abs(dy); }\n\tvar nx = dy;\n\tvar ny = -dx;\n\t\n\tfor (var i=0; i<length; i++) {\n\t\tvar x = sx + i*dx;\n\t\tvar y = sy + i*dy;\n\t\tdigCallback(x, y, 0);\n\t}\n\t\n\treturn true;\n}\n\nROT.Map.Feature.Corridor.prototype.createPriorityWalls = function(priorityWallCallback) {\n\tif (!this._endsWithAWall) { return; }\n\n\tvar sx = this._startX;\n\tvar sy = this._startY;\n\n\tvar dx = this._endX-sx;\n\tvar dy = this._endY-sy;\n\tif (dx) { dx = dx/Math.abs(dx); }\n\tif (dy) { dy = dy/Math.abs(dy); }\n\tvar nx = dy;\n\tvar ny = -dx;\n\n\tpriorityWallCallback(this._endX + dx, this._endY + dy);\n\tpriorityWallCallback(this._endX + nx, this._endY + ny);\n\tpriorityWallCallback(this._endX - nx, this._endY - ny);\n}\n/**\n * @class Base noise generator\n */\nROT.Noise = function() {\n};\n\nROT.Noise.prototype.get = function(x, y) {}\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\n\n/**\n * @class 2D simplex noise generator\n * @param {int} [gradients=256] Random gradients\n */\nROT.Noise.Simplex = function(gradients) {\n\tROT.Noise.call(this);\n\n\tthis._F2 = 0.5 * (Math.sqrt(3) - 1);\n\tthis._G2 = (3 - Math.sqrt(3)) / 6;\n\n\tthis._gradients = [\n\t\t[ 0, -1],\n\t\t[ 1, -1],\n\t\t[ 1,  0],\n\t\t[ 1,  1],\n\t\t[ 0,  1],\n\t\t[-1,  1],\n\t\t[-1,  0],\n\t\t[-1, -1]\n\t];\n\n\tvar permutations = [];\n\tvar count = gradients || 256;\n\tfor (var i=0;i<count;i++) { permutations.push(i); }\n\tpermutations = permutations.randomize();\n\n\tthis._perms = [];\n\tthis._indexes = [];\n\n\tfor (var i=0;i<2*count;i++) {\n\t\tthis._perms.push(permutations[i % count]);\n\t\tthis._indexes.push(this._perms[i] % this._gradients.length);\n\t}\n\n};\nROT.Noise.Simplex.extend(ROT.Noise);\n\nROT.Noise.Simplex.prototype.get = function(xin, yin) {\n\tvar perms = this._perms;\n\tvar indexes = this._indexes;\n\tvar count = perms.length/2;\n\tvar G2 = this._G2;\n\n\tvar n0 =0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n\n\t// Skew the input space to determine which simplex cell we're in\n\tvar s = (xin + yin) * this._F2; // Hairy factor for 2D\n\tvar i = Math.floor(xin + s);\n\tvar j = Math.floor(yin + s);\n\tvar t = (i + j) * G2;\n\tvar X0 = i - t; // Unskew the cell origin back to (x,y) space\n\tvar Y0 = j - t;\n\tvar x0 = xin - X0; // The x,y distances from the cell origin\n\tvar y0 = yin - Y0;\n\n\t// For the 2D case, the simplex shape is an equilateral triangle.\n\t// Determine which simplex we are in.\n\tvar i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n\tif (x0 > y0) {\n\t\ti1 = 1;\n\t\tj1 = 0;\n\t} else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n\t\ti1 = 0;\n\t\tj1 = 1;\n\t} // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n\n\t// A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n\t// a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n\t// c = (3-sqrt(3))/6\n\tvar x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n\tvar y1 = y0 - j1 + G2;\n\tvar x2 = x0 - 1 + 2*G2; // Offsets for last corner in (x,y) unskewed coords\n\tvar y2 = y0 - 1 + 2*G2;\n\n\t// Work out the hashed gradient indices of the three simplex corners\n\tvar ii = i.mod(count);\n\tvar jj = j.mod(count);\n\n\t// Calculate the contribution from the three corners\n\tvar t0 = 0.5 - x0*x0 - y0*y0;\n\tif (t0 >= 0) {\n\t\tt0 *= t0;\n\t\tgi = indexes[ii+perms[jj]];\n\t\tvar grad = this._gradients[gi];\n\t\tn0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n\t}\n\t\n\tvar t1 = 0.5 - x1*x1 - y1*y1;\n\tif (t1 >= 0) {\n\t\tt1 *= t1;\n\t\tgi = indexes[ii+i1+perms[jj+j1]];\n\t\tvar grad = this._gradients[gi];\n\t\tn1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n\t}\n\t\n\tvar t2 = 0.5 - x2*x2 - y2*y2;\n\tif (t2 >= 0) {\n\t\tt2 *= t2;\n\t\tgi = indexes[ii+1+perms[jj+1]];\n\t\tvar grad = this._gradients[gi];\n\t\tn2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n\t}\n\n\t// Add contributions from each corner to get the final noise value.\n\t// The result is scaled to return values in the interval [-1,1].\n\treturn 70 * (n0 + n1 + n2);\n}\n/**\n * @class Abstract FOV algorithm\n * @param {function} lightPassesCallback Does the light pass through x,y?\n * @param {object} [options]\n * @param {int} [options.topology=8] 4/6/8\n */\nROT.FOV = function(lightPassesCallback, options) {\n\tthis._lightPasses = lightPassesCallback;\n\tthis._options = {\n\t\ttopology: 8\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n};\n\n/**\n * Compute visibility for a 360-degree circle\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {function} callback\n */\nROT.FOV.prototype.compute = function(x, y, R, callback) {}\n\n/**\n * Return all neighbors in a concentric ring\n * @param {int} cx center-x\n * @param {int} cy center-y\n * @param {int} r range\n */\nROT.FOV.prototype._getCircle = function(cx, cy, r) {\n\tvar result = [];\n\tvar dirs, countFactor, startOffset;\n\n\tswitch (this._options.topology) {\n\t\tcase 4:\n\t\t\tcountFactor = 1;\n\t\t\tstartOffset = [0, 1];\n\t\t\tdirs = [\n\t\t\t\tROT.DIRS[8][7],\n\t\t\t\tROT.DIRS[8][1],\n\t\t\t\tROT.DIRS[8][3],\n\t\t\t\tROT.DIRS[8][5]\n\t\t\t]\n\t\tbreak;\n\n\t\tcase 6:\n\t\t\tdirs = ROT.DIRS[6];\n\t\t\tcountFactor = 1;\n\t\t\tstartOffset = [-1, 1];\n\t\tbreak;\n\n\t\tcase 8:\n\t\t\tdirs = ROT.DIRS[4];\n\t\t\tcountFactor = 2;\n\t\t\tstartOffset = [-1, 1];\n\t\tbreak;\n\t}\n\n\t/* starting neighbor */\n\tvar x = cx + startOffset[0]*r;\n\tvar y = cy + startOffset[1]*r;\n\n\t/* circle */\n\tfor (var i=0;i<dirs.length;i++) {\n\t\tfor (var j=0;j<r*countFactor;j++) {\n\t\t\tresult.push([x, y]);\n\t\t\tx += dirs[i][0];\n\t\t\ty += dirs[i][1];\n\n\t\t}\n\t}\n\n\treturn result;\n}\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nROT.FOV.DiscreteShadowcasting = function(lightPassesCallback, options) {\n\tROT.FOV.call(this, lightPassesCallback, options);\n}\nROT.FOV.DiscreteShadowcasting.extend(ROT.FOV);\n\n/**\n * @see ROT.FOV#compute\n */\nROT.FOV.DiscreteShadowcasting.prototype.compute = function(x, y, R, callback) {\n\tvar center = this._coords;\n\tvar map = this._map;\n\n\t/* this place is always visible */\n\tcallback(x, y, 0, 1);\n\n\t/* standing in a dark place. FIXME is this a good idea?  */\n\tif (!this._lightPasses(x, y)) { return; }\n\t\n\t/* start and end angles */\n\tvar DATA = [];\n\t\n\tvar A, B, cx, cy, blocks;\n\n\t/* analyze surrounding cells in concentric rings, starting from the center */\n\tfor (var r=1; r<=R; r++) {\n\t\tvar neighbors = this._getCircle(x, y, r);\n\t\tvar angle = 360 / neighbors.length;\n\n\t\tfor (var i=0;i<neighbors.length;i++) {\n\t\t\tcx = neighbors[i][0];\n\t\t\tcy = neighbors[i][1];\n\t\t\tA = angle * (i - 0.5);\n\t\t\tB = A + angle;\n\t\t\t\n\t\t\tblocks = !this._lightPasses(cx, cy);\n\t\t\tif (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) { callback(cx, cy, r, 1); }\n\t\t\t\n\t\t\tif (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) { return; } /* cutoff? */\n\n\t\t} /* for all cells in this ring */\n\t} /* for all rings */\n}\n\n/**\n * @param {int} A start angle\n * @param {int} B end angle\n * @param {bool} blocks Does current cell block visibility?\n * @param {int[][]} DATA shadowed angle pairs\n */\nROT.FOV.DiscreteShadowcasting.prototype._visibleCoords = function(A, B, blocks, DATA) {\n\tif (A < 0) { \n\t\tvar v1 = arguments.callee(0, B, blocks, DATA);\n\t\tvar v2 = arguments.callee(360+A, 360, blocks, DATA);\n\t\treturn v1 || v2;\n\t}\n\t\n\tvar index = 0;\n\twhile (index < DATA.length && DATA[index] < A) { index++; }\n\t\n\tif (index == DATA.length) { /* completely new shadow */\n\t\tif (blocks) { DATA.push(A, B); } \n\t\treturn true;\n\t}\n\t\n\tvar count = 0;\n\t\n\tif (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n\t\twhile (index < DATA.length && DATA[index] < B) {\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\tif (count == 0) { return false; }\n\t\t\n\t\tif (blocks) { \n\t\t\tif (count % 2) {\n\t\t\t\tDATA.splice(index-count, count, B);\n\t\t\t} else {\n\t\t\t\tDATA.splice(index-count, count);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\n\t} else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n\t\twhile (index < DATA.length && DATA[index] < B) {\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\t/* visible when outside an existing shadow, or when overlapping */\n\t\tif (A == DATA[index-count] && count == 1) { return false; }\n\t\t\n\t\tif (blocks) { \n\t\t\tif (count % 2) {\n\t\t\t\tDATA.splice(index-count, count, A);\n\t\t\t} else {\n\t\t\t\tDATA.splice(index-count, count, A, B);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\treturn true;\n\t}\n}\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nROT.FOV.PreciseShadowcasting = function(lightPassesCallback, options) {\n\tROT.FOV.call(this, lightPassesCallback, options);\n}\nROT.FOV.PreciseShadowcasting.extend(ROT.FOV);\n\n/**\n * @see ROT.FOV#compute\n */\nROT.FOV.PreciseShadowcasting.prototype.compute = function(x, y, R, callback) {\n\t/* this place is always visible */\n\tcallback(x, y, 0, 1);\n\n\t/* standing in a dark place. FIXME is this a good idea?  */\n\tif (!this._lightPasses(x, y)) { return; }\n\t\n\t/* list of all shadows */\n\tvar SHADOWS = [];\n\t\n\tvar cx, cy, blocks, A1, A2, visibility;\n\n\t/* analyze surrounding cells in concentric rings, starting from the center */\n\tfor (var r=1; r<=R; r++) {\n\t\tvar neighbors = this._getCircle(x, y, r);\n\t\tvar neighborCount = neighbors.length;\n\n\t\tfor (var i=0;i<neighborCount;i++) {\n\t\t\tcx = neighbors[i][0];\n\t\t\tcy = neighbors[i][1];\n\t\t\t/* shift half-an-angle backwards to maintain consistency of 0-th cells */\n\t\t\tA1 = [i ? 2*i-1 : 2*neighborCount-1, 2*neighborCount];\n\t\t\tA2 = [2*i+1, 2*neighborCount]; \n\t\t\t\n\t\t\tblocks = !this._lightPasses(cx, cy);\n\t\t\tvisibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n\t\t\tif (visibility) { callback(cx, cy, r, visibility); }\n\n\t\t\tif (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) { return; } /* cutoff? */\n\n\t\t} /* for all cells in this ring */\n\t} /* for all rings */\n}\n\n/**\n * @param {int[2]} A1 arc start\n * @param {int[2]} A2 arc end\n * @param {bool} blocks Does current arc block visibility?\n * @param {int[][]} SHADOWS list of active shadows\n */\nROT.FOV.PreciseShadowcasting.prototype._checkVisibility = function(A1, A2, blocks, SHADOWS) {\n\tif (A1[0] > A2[0]) { /* split into two sub-arcs */\n\t\tvar v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n\t\tvar v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n\t\treturn (v1+v2)/2;\n\t}\n\n\t/* index1: first shadow >= A1 */\n\tvar index1 = 0, edge1 = false;\n\twhile (index1 < SHADOWS.length) {\n\t\tvar old = SHADOWS[index1];\n\t\tvar diff = old[0]*A1[1] - A1[0]*old[1];\n\t\tif (diff >= 0) { /* old >= A1 */\n\t\t\tif (diff == 0 && !(index1 % 2)) { edge1 = true; }\n\t\t\tbreak;\n\t\t}\n\t\tindex1++;\n\t}\n\n\t/* index2: last shadow <= A2 */\n\tvar index2 = SHADOWS.length, edge2 = false;\n\twhile (index2--) {\n\t\tvar old = SHADOWS[index2];\n\t\tvar diff = A2[0]*old[1] - old[0]*A2[1];\n\t\tif (diff >= 0) { /* old <= A2 */\n\t\t\tif (diff == 0 && (index2 % 2)) { edge2 = true; }\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tvar visible = true;\n\tif (index1 == index2 && (edge1 || edge2)) {  /* subset of existing shadow, one of the edges match */\n\t\tvisible = false; \n\t} else if (edge1 && edge2 && index1+1==index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n\t\tvisible = false;\n\t} else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n\t\tvisible = false;\n\t}\n\t\n\tif (!visible) { return 0; } /* fast case: not visible */\n\t\n\tvar visibleLength, P;\n\n\t/* compute the length of visible arc, adjust list of shadows (if blocking) */\n\tvar remove = index2-index1+1;\n\tif (remove % 2) {\n\t\tif (index1 % 2) { /* first edge within existing shadow, second outside */\n\t\t\tvar P = SHADOWS[index1];\n\t\t\tvisibleLength = (A2[0]*P[1] - P[0]*A2[1]) / (P[1] * A2[1]);\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove, A2); }\n\t\t} else { /* second edge within existing shadow, first outside */\n\t\t\tvar P = SHADOWS[index2];\n\t\t\tvisibleLength = (P[0]*A1[1] - A1[0]*P[1]) / (A1[1] * P[1]);\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove, A1); }\n\t\t}\n\t} else {\n\t\tif (index1 % 2) { /* both edges within existing shadows */\n\t\t\tvar P1 = SHADOWS[index1];\n\t\t\tvar P2 = SHADOWS[index2];\n\t\t\tvisibleLength = (P2[0]*P1[1] - P1[0]*P2[1]) / (P1[1] * P2[1]);\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove); }\n\t\t} else { /* both edges outside existing shadows */\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove, A1, A2); }\n\t\t\treturn 1; /* whole arc visible! */\n\t\t}\n\t}\n\n\tvar arcLength = (A2[0]*A1[1] - A1[0]*A2[1]) / (A1[1] * A2[1]);\n\n\treturn visibleLength/arcLength;\n}\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nROT.FOV.RecursiveShadowcasting = function(lightPassesCallback, options) {\n\tROT.FOV.call(this, lightPassesCallback, options);\n}\nROT.FOV.RecursiveShadowcasting.extend(ROT.FOV);\n\n/** Octants used for translating recursive shadowcasting offsets */\nROT.FOV.RecursiveShadowcasting.OCTANTS = [\n\t[-1,  0,  0,  1],\n\t[ 0, -1,  1,  0],\n\t[ 0, -1, -1,  0],\n\t[-1,  0,  0, -1],\n\t[ 1,  0,  0, -1],\n\t[ 0,  1, -1,  0],\n\t[ 0,  1,  1,  0],\n\t[ 1,  0,  0,  1]\n];\n\n/**\n * Compute visibility for a 360-degree circle\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype.compute = function(x, y, R, callback) {\n\t//You can always see your own tile\n\tcallback(x, y, 0, 1);\n\tfor(var i = 0; i < ROT.FOV.RecursiveShadowcasting.OCTANTS.length; i++) {\n\t\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[i], R, callback);\n\t}\n}\n\n/**\n * Compute visibility for a 180-degree arc\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype.compute180 = function(x, y, R, dir, callback) {\n\t//You can always see your own tile\n\tcallback(x, y, 0, 1);\n\tvar previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n\tvar nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n\tvar nextOctant = (dir+ 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[nextPreviousOctant], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[previousOctant], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[dir], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[nextOctant], R, callback);\n}\n\n/**\n * Compute visibility for a 90-degree arc\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype.compute90 = function(x, y, R, dir, callback) {\n\t//You can always see your own tile\n\tcallback(x, y, 0, 1);\n\tvar previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[dir], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[previousOctant], R, callback);\n}\n\n/**\n * Render one octant (45-degree arc) of the viewshed\n * @param {int} x\n * @param {int} y\n * @param {int} octant Octant to be rendered\n * @param {int} R Maximum visibility radius\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype._renderOctant = function(x, y, octant, R, callback) {\n\t//Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n\tthis._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n}\n\n/**\n * Actually calculates the visibility\n * @param {int} startX The starting X coordinate\n * @param {int} startY The starting Y coordinate\n * @param {int} row The row to render\n * @param {float} visSlopeStart The slope to start at\n * @param {float} visSlopeEnd The slope to end at\n * @param {int} radius The radius to reach out to\n * @param {int} xx \n * @param {int} xy \n * @param {int} yx \n * @param {int} yy \n * @param {function} callback The callback to use when we hit a block that is visible\n */\nROT.FOV.RecursiveShadowcasting.prototype._castVisibility = function(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n\tif(visSlopeStart < visSlopeEnd) { return; }\n\tfor(var i = row; i <= radius; i++) {\n\t\tvar dx = -i - 1;\n\t\tvar dy = -i;\n\t\tvar blocked = false;\n\t\tvar newStart = 0;\n\n\t\t//'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n\t\twhile(dx <= 0) {\n\t\t\tdx += 1;\n\n\t\t\t//Translate from relative coordinates to map coordinates\n\t\t\tvar mapX = startX + dx * xx + dy * xy;\n\t\t\tvar mapY = startY + dx * yx + dy * yy;\n\n\t\t\t//Range of the row\n\t\t\tvar slopeStart = (dx - 0.5) / (dy + 0.5);\n\t\t\tvar slopeEnd = (dx + 0.5) / (dy - 0.5);\n\t\t\n\t\t\t//Ignore if not yet at left edge of Octant\n\t\t\tif(slopeEnd > visSlopeStart) { continue; }\n\t\t\t\n\t\t\t//Done if past right edge\n\t\t\tif(slopeStart < visSlopeEnd) { break; }\n\t\t\t\t\n\t\t\t//If it's in range, it's visible\n\t\t\tif((dx * dx + dy * dy) < (radius * radius)) {\n\t\t\t\tcallback(mapX, mapY, i, 1);\n\t\t\t}\n\t\n\t\t\tif(!blocked) {\n\t\t\t\t//If tile is a blocking tile, cast around it\n\t\t\t\tif(!this._lightPasses(mapX, mapY) && i < radius) {\n\t\t\t\t\tblocked = true;\n\t\t\t\t\tthis._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n\t\t\t\t\tnewStart = slopeEnd;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//Keep narrowing if scanning across a block\n\t\t\t\tif(!this._lightPasses(mapX, mapY)) {\n\t\t\t\t\tnewStart = slopeEnd;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\n\t\t\t\t//Block has ended\n\t\t\t\tblocked = false;\n\t\t\t\tvisSlopeStart = newStart;\n\t\t\t}\n\t\t}\n\t\tif(blocked) { break; }\n\t}\n}\n/**\n * @namespace Color operations\n */\nROT.Color = {\n\tfromString: function(str) {\n\t\tvar cached, r;\n\t\tif (str in this._cache) {\n\t\t\tcached = this._cache[str];\n\t\t} else {\n\t\t\tif (str.charAt(0) == \"#\") { /* hex rgb */\n\n\t\t\t\tvar values = str.match(/[0-9a-f]/gi).map(function(x) { return parseInt(x, 16); });\n\t\t\t\tif (values.length == 3) {\n\t\t\t\t\tcached = values.map(function(x) { return x*17; });\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i=0;i<3;i++) {\n\t\t\t\t\t\tvalues[i+1] += 16*values[i];\n\t\t\t\t\t\tvalues.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t\tcached = values;\n\t\t\t\t}\n\n\t\t\t} else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { /* decimal rgb */\n\t\t\t\tcached = r[1].split(/\\s*,\\s*/).map(function(x) { return parseInt(x); });\n\t\t\t} else { /* html name */\n\t\t\t\tcached = [0, 0, 0];\n\t\t\t}\n\n\t\t\tthis._cache[str] = cached;\n\t\t}\n\n\t\treturn cached.slice();\n\t},\n\n\t/**\n\t * Add two or more colors\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tadd: function(color1, color2) {\n\t\tvar result = color1.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tresult[i] += arguments[j][i];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Add two or more colors, MODIFIES FIRST ARGUMENT\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tadd_: function(color1, color2) {\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tcolor1[i] += arguments[j][i];\n\t\t\t}\n\t\t}\n\t\treturn color1;\n\t},\n\n\t/**\n\t * Multiply (mix) two or more colors\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tmultiply: function(color1, color2) {\n\t\tvar result = color1.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tresult[i] *= arguments[j][i] / 255;\n\t\t\t}\n\t\t\tresult[i] = Math.round(result[i]);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tmultiply_: function(color1, color2) {\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tcolor1[i] *= arguments[j][i] / 255;\n\t\t\t}\n\t\t\tcolor1[i] = Math.round(color1[i]);\n\t\t}\n\t\treturn color1;\n\t},\n\n\t/**\n\t * Interpolate (blend) two colors with a given factor\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @param {float} [factor=0.5] 0..1\n\t * @returns {number[]}\n\t */\n\tinterpolate: function(color1, color2, factor) {\n\t\tif (arguments.length < 3) { factor = 0.5; }\n\t\tvar result = color1.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tresult[i] = Math.round(result[i] + factor*(color2[i]-color1[i]));\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Interpolate (blend) two colors with a given factor in HSL mode\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @param {float} [factor=0.5] 0..1\n\t * @returns {number[]}\n\t */\n\tinterpolateHSL: function(color1, color2, factor) {\n\t\tif (arguments.length < 3) { factor = 0.5; }\n\t\tvar hsl1 = this.rgb2hsl(color1);\n\t\tvar hsl2 = this.rgb2hsl(color2);\n\t\tfor (var i=0;i<3;i++) {\n\t\t\thsl1[i] += factor*(hsl2[i]-hsl1[i]);\n\t\t}\n\t\treturn this.hsl2rgb(hsl1);\n\t},\n\n\t/**\n\t * Create a new random color based on this one\n\t * @param {number[]} color\n\t * @param {number[]} diff Set of standard deviations\n\t * @returns {number[]}\n\t */\n\trandomize: function(color, diff) {\n\t\tif (!(diff instanceof Array)) { diff = Math.round(ROT.RNG.getNormal(0, diff)); }\n\t\tvar result = color.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tresult[i] += (diff instanceof Array ? Math.round(ROT.RNG.getNormal(0, diff[i])) : diff);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n\t * @param {number[]} color\n\t * @returns {number[]}\n\t */\n\trgb2hsl: function(color) {\n\t\tvar r = color[0]/255;\n\t\tvar g = color[1]/255;\n\t\tvar b = color[2]/255;\n\n\t\tvar max = Math.max(r, g, b), min = Math.min(r, g, b);\n\t\tvar h, s, l = (max + min) / 2;\n\n\t\tif (max == min) {\n\t\t\th = s = 0; // achromatic\n\t\t} else {\n\t\t\tvar d = max - min;\n\t\t\ts = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n\t\t\tswitch(max) {\n\t\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\n\t\t\t\tcase g: h = (b - r) / d + 2; break;\n\t\t\t\tcase b: h = (r - g) / d + 4; break;\n\t\t\t}\n\t\t\th /= 6;\n\t\t}\n\n\t\treturn [h, s, l];\n\t},\n\n\t/**\n\t * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n\t * @param {number[]} color\n\t * @returns {number[]}\n\t */\n\thsl2rgb: function(color) {\n\t\tvar l = color[2];\n\n\t\tif (color[1] == 0) {\n\t\t\tl = Math.round(l*255);\n\t\t\treturn [l, l, l];\n\t\t} else {\n\t\t\tvar hue2rgb = function(p, q, t) {\n\t\t\t\tif (t < 0) t += 1;\n\t\t\t\tif (t > 1) t -= 1;\n\t\t\t\tif (t < 1/6) return p + (q - p) * 6 * t;\n\t\t\t\tif (t < 1/2) return q;\n\t\t\t\tif (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n\t\t\t\treturn p;\n\t\t\t}\n\n\t\t\tvar s = color[1];\n\t\t\tvar q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n\t\t\tvar p = 2 * l - q;\n\t\t\tvar r = hue2rgb(p, q, color[0] + 1/3);\n\t\t\tvar g = hue2rgb(p, q, color[0]);\n\t\t\tvar b = hue2rgb(p, q, color[0] - 1/3);\n\t\t\treturn [Math.round(r*255), Math.round(g*255), Math.round(b*255)];\n\t\t}\n\t},\n\n\ttoRGB: function(color) {\n\t\treturn \"rgb(\" + this._clamp(color[0]) + \",\" + this._clamp(color[1]) + \",\" + this._clamp(color[2]) + \")\";\n\t},\n\n\ttoHex: function(color) {\n\t\tvar parts = [];\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tparts.push(this._clamp(color[i]).toString(16).lpad(\"0\", 2));\n\t\t}\n\t\treturn \"#\" + parts.join(\"\");\n\t},\n\n\t_clamp: function(num) {\n\t\tif (num < 0) {\n\t\t\treturn 0;\n\t\t} else if (num > 255) {\n\t\t\treturn 255;\n\t\t} else {\n\t\t\treturn num;\n\t\t}\n\t},\n\n\t_cache: {\n\t\t\"black\": [0,0,0],\n\t\t\"navy\": [0,0,128],\n\t\t\"darkblue\": [0,0,139],\n\t\t\"mediumblue\": [0,0,205],\n\t\t\"blue\": [0,0,255],\n\t\t\"darkgreen\": [0,100,0],\n\t\t\"green\": [0,128,0],\n\t\t\"teal\": [0,128,128],\n\t\t\"darkcyan\": [0,139,139],\n\t\t\"deepskyblue\": [0,191,255],\n\t\t\"darkturquoise\": [0,206,209],\n\t\t\"mediumspringgreen\": [0,250,154],\n\t\t\"lime\": [0,255,0],\n\t\t\"springgreen\": [0,255,127],\n\t\t\"aqua\": [0,255,255],\n\t\t\"cyan\": [0,255,255],\n\t\t\"midnightblue\": [25,25,112],\n\t\t\"dodgerblue\": [30,144,255],\n\t\t\"forestgreen\": [34,139,34],\n\t\t\"seagreen\": [46,139,87],\n\t\t\"darkslategray\": [47,79,79],\n\t\t\"darkslategrey\": [47,79,79],\n\t\t\"limegreen\": [50,205,50],\n\t\t\"mediumseagreen\": [60,179,113],\n\t\t\"turquoise\": [64,224,208],\n\t\t\"royalblue\": [65,105,225],\n\t\t\"steelblue\": [70,130,180],\n\t\t\"darkslateblue\": [72,61,139],\n\t\t\"mediumturquoise\": [72,209,204],\n\t\t\"indigo\": [75,0,130],\n\t\t\"darkolivegreen\": [85,107,47],\n\t\t\"cadetblue\": [95,158,160],\n\t\t\"cornflowerblue\": [100,149,237],\n\t\t\"mediumaquamarine\": [102,205,170],\n\t\t\"dimgray\": [105,105,105],\n\t\t\"dimgrey\": [105,105,105],\n\t\t\"slateblue\": [106,90,205],\n\t\t\"olivedrab\": [107,142,35],\n\t\t\"slategray\": [112,128,144],\n\t\t\"slategrey\": [112,128,144],\n\t\t\"lightslategray\": [119,136,153],\n\t\t\"lightslategrey\": [119,136,153],\n\t\t\"mediumslateblue\": [123,104,238],\n\t\t\"lawngreen\": [124,252,0],\n\t\t\"chartreuse\": [127,255,0],\n\t\t\"aquamarine\": [127,255,212],\n\t\t\"maroon\": [128,0,0],\n\t\t\"purple\": [128,0,128],\n\t\t\"olive\": [128,128,0],\n\t\t\"gray\": [128,128,128],\n\t\t\"grey\": [128,128,128],\n\t\t\"skyblue\": [135,206,235],\n\t\t\"lightskyblue\": [135,206,250],\n\t\t\"blueviolet\": [138,43,226],\n\t\t\"darkred\": [139,0,0],\n\t\t\"darkmagenta\": [139,0,139],\n\t\t\"saddlebrown\": [139,69,19],\n\t\t\"darkseagreen\": [143,188,143],\n\t\t\"lightgreen\": [144,238,144],\n\t\t\"mediumpurple\": [147,112,216],\n\t\t\"darkviolet\": [148,0,211],\n\t\t\"palegreen\": [152,251,152],\n\t\t\"darkorchid\": [153,50,204],\n\t\t\"yellowgreen\": [154,205,50],\n\t\t\"sienna\": [160,82,45],\n\t\t\"brown\": [165,42,42],\n\t\t\"darkgray\": [169,169,169],\n\t\t\"darkgrey\": [169,169,169],\n\t\t\"lightblue\": [173,216,230],\n\t\t\"greenyellow\": [173,255,47],\n\t\t\"paleturquoise\": [175,238,238],\n\t\t\"lightsteelblue\": [176,196,222],\n\t\t\"powderblue\": [176,224,230],\n\t\t\"firebrick\": [178,34,34],\n\t\t\"darkgoldenrod\": [184,134,11],\n\t\t\"mediumorchid\": [186,85,211],\n\t\t\"rosybrown\": [188,143,143],\n\t\t\"darkkhaki\": [189,183,107],\n\t\t\"silver\": [192,192,192],\n\t\t\"mediumvioletred\": [199,21,133],\n\t\t\"indianred\": [205,92,92],\n\t\t\"peru\": [205,133,63],\n\t\t\"chocolate\": [210,105,30],\n\t\t\"tan\": [210,180,140],\n\t\t\"lightgray\": [211,211,211],\n\t\t\"lightgrey\": [211,211,211],\n\t\t\"palevioletred\": [216,112,147],\n\t\t\"thistle\": [216,191,216],\n\t\t\"orchid\": [218,112,214],\n\t\t\"goldenrod\": [218,165,32],\n\t\t\"crimson\": [220,20,60],\n\t\t\"gainsboro\": [220,220,220],\n\t\t\"plum\": [221,160,221],\n\t\t\"burlywood\": [222,184,135],\n\t\t\"lightcyan\": [224,255,255],\n\t\t\"lavender\": [230,230,250],\n\t\t\"darksalmon\": [233,150,122],\n\t\t\"violet\": [238,130,238],\n\t\t\"palegoldenrod\": [238,232,170],\n\t\t\"lightcoral\": [240,128,128],\n\t\t\"khaki\": [240,230,140],\n\t\t\"aliceblue\": [240,248,255],\n\t\t\"honeydew\": [240,255,240],\n\t\t\"azure\": [240,255,255],\n\t\t\"sandybrown\": [244,164,96],\n\t\t\"wheat\": [245,222,179],\n\t\t\"beige\": [245,245,220],\n\t\t\"whitesmoke\": [245,245,245],\n\t\t\"mintcream\": [245,255,250],\n\t\t\"ghostwhite\": [248,248,255],\n\t\t\"salmon\": [250,128,114],\n\t\t\"antiquewhite\": [250,235,215],\n\t\t\"linen\": [250,240,230],\n\t\t\"lightgoldenrodyellow\": [250,250,210],\n\t\t\"oldlace\": [253,245,230],\n\t\t\"red\": [255,0,0],\n\t\t\"fuchsia\": [255,0,255],\n\t\t\"magenta\": [255,0,255],\n\t\t\"deeppink\": [255,20,147],\n\t\t\"orangered\": [255,69,0],\n\t\t\"tomato\": [255,99,71],\n\t\t\"hotpink\": [255,105,180],\n\t\t\"coral\": [255,127,80],\n\t\t\"darkorange\": [255,140,0],\n\t\t\"lightsalmon\": [255,160,122],\n\t\t\"orange\": [255,165,0],\n\t\t\"lightpink\": [255,182,193],\n\t\t\"pink\": [255,192,203],\n\t\t\"gold\": [255,215,0],\n\t\t\"peachpuff\": [255,218,185],\n\t\t\"navajowhite\": [255,222,173],\n\t\t\"moccasin\": [255,228,181],\n\t\t\"bisque\": [255,228,196],\n\t\t\"mistyrose\": [255,228,225],\n\t\t\"blanchedalmond\": [255,235,205],\n\t\t\"papayawhip\": [255,239,213],\n\t\t\"lavenderblush\": [255,240,245],\n\t\t\"seashell\": [255,245,238],\n\t\t\"cornsilk\": [255,248,220],\n\t\t\"lemonchiffon\": [255,250,205],\n\t\t\"floralwhite\": [255,250,240],\n\t\t\"snow\": [255,250,250],\n\t\t\"yellow\": [255,255,0],\n\t\t\"lightyellow\": [255,255,224],\n\t\t\"ivory\": [255,255,240],\n\t\t\"white\": [255,255,255]\n\t}\n}\n/**\n * @class Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n * @param {function} reflectivityCallback Callback to retrieve cell reflectivity (0..1)\n * @param {object} [options]\n * @param {int} [options.passes=1] Number of passes. 1 equals to simple FOV of all light sources, >1 means a *highly simplified* radiosity-like algorithm.\n * @param {int} [options.emissionThreshold=100] Cells with emissivity > threshold will be treated as light source in the next pass.\n * @param {int} [options.range=10] Max light range\n */\nROT.Lighting = function(reflectivityCallback, options) {\n\tthis._reflectivityCallback = reflectivityCallback;\n\tthis._options = {\n\t\tpasses: 1,\n\t\temissionThreshold: 100,\n\t\trange: 10\n\t};\n\tthis._fov = null;\n\n\tthis._lights = {};\n\tthis._reflectivityCache = {};\n\tthis._fovCache = {};\n\n\tthis.setOptions(options);\n}\n\n/**\n * Adjust options at runtime\n * @see ROT.Lighting\n * @param {object} [options]\n */\nROT.Lighting.prototype.setOptions = function(options) {\n\tfor (var p in options) { this._options[p] = options[p]; }\n\tif (options && options.range) { this.reset(); }\n\treturn this;\n}\n\n/**\n * Set the used Field-Of-View algo\n * @param {ROT.FOV} fov\n */\nROT.Lighting.prototype.setFOV = function(fov) {\n\tthis._fov = fov;\n\tthis._fovCache = {};\n\treturn this;\n}\n\n/**\n * Set (or remove) a light source\n * @param {int} x\n * @param {int} y\n * @param {null || string || number[3]} color\n */\nROT.Lighting.prototype.setLight = function(x, y, color) {\n\tvar key = x+\",\"+y;\n\n\tif (color) {\n\t\tthis._lights[key] = (typeof(color) == \"string\" ? ROT.Color.fromString(color) : color);\n\t} else {\n\t\tdelete this._lights[key];\n\t}\n\treturn this;\n}\n\n/**\n * Remove all light sources\n */\nROT.Lighting.prototype.clearLights = function() {\n    this._lights = {};\n}\n\n/**\n * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n */\nROT.Lighting.prototype.reset = function() {\n\tthis._reflectivityCache = {};\n\tthis._fovCache = {};\n\n\treturn this;\n}\n\n/**\n * Compute the lighting\n * @param {function} lightingCallback Will be called with (x, y, color) for every lit cell\n */\nROT.Lighting.prototype.compute = function(lightingCallback) {\n\tvar doneCells = {};\n\tvar emittingCells = {};\n\tvar litCells = {};\n\n\tfor (var key in this._lights) { /* prepare emitters for first pass */\n\t\tvar light = this._lights[key];\n\t\temittingCells[key] = [0, 0, 0];\n\t\tROT.Color.add_(emittingCells[key], light);\n\t}\n\n\tfor (var i=0;i<this._options.passes;i++) { /* main loop */\n\t\tthis._emitLight(emittingCells, litCells, doneCells);\n\t\tif (i+1 == this._options.passes) { continue; } /* not for the last pass */\n\t\temittingCells = this._computeEmitters(litCells, doneCells);\n\t}\n\n\tfor (var litKey in litCells) { /* let the user know what and how is lit */\n\t\tvar parts = litKey.split(\",\");\n\t\tvar x = parseInt(parts[0]);\n\t\tvar y = parseInt(parts[1]);\n\t\tlightingCallback(x, y, litCells[litKey]);\n\t}\n\n\treturn this;\n}\n\n/**\n * Compute one iteration from all emitting cells\n * @param {object} emittingCells These emit light\n * @param {object} litCells Add projected light to these\n * @param {object} doneCells These already emitted, forbid them from further calculations\n */\nROT.Lighting.prototype._emitLight = function(emittingCells, litCells, doneCells) {\n\tfor (var key in emittingCells) {\n\t\tvar parts = key.split(\",\");\n\t\tvar x = parseInt(parts[0]);\n\t\tvar y = parseInt(parts[1]);\n\t\tthis._emitLightFromCell(x, y, emittingCells[key], litCells);\n\t\tdoneCells[key] = 1;\n\t}\n\treturn this;\n}\n\n/**\n * Prepare a list of emitters for next pass\n * @param {object} litCells\n * @param {object} doneCells\n * @returns {object}\n */\nROT.Lighting.prototype._computeEmitters = function(litCells, doneCells) {\n\tvar result = {};\n\n\tfor (var key in litCells) {\n\t\tif (key in doneCells) { continue; } /* already emitted */\n\n\t\tvar color = litCells[key];\n\n\t\tif (key in this._reflectivityCache) {\n\t\t\tvar reflectivity = this._reflectivityCache[key];\n\t\t} else {\n\t\t\tvar parts = key.split(\",\");\n\t\t\tvar x = parseInt(parts[0]);\n\t\t\tvar y = parseInt(parts[1]);\n\t\t\tvar reflectivity = this._reflectivityCallback(x, y);\n\t\t\tthis._reflectivityCache[key] = reflectivity;\n\t\t}\n\n\t\tif (reflectivity == 0) { continue; } /* will not reflect at all */\n\n\t\t/* compute emission color */\n\t\tvar emission = [];\n\t\tvar intensity = 0;\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tvar part = Math.round(color[i]*reflectivity);\n\t\t\temission[i] = part;\n\t\t\tintensity += part;\n\t\t}\n\t\tif (intensity > this._options.emissionThreshold) { result[key] = emission; }\n\t}\n\n\treturn result;\n}\n\n/**\n * Compute one iteration from one cell\n * @param {int} x\n * @param {int} y\n * @param {number[]} color\n * @param {object} litCells Cell data to by updated\n */\nROT.Lighting.prototype._emitLightFromCell = function(x, y, color, litCells) {\n\tvar key = x+\",\"+y;\n\tif (key in this._fovCache) {\n\t\tvar fov = this._fovCache[key];\n\t} else {\n\t\tvar fov = this._updateFOV(x, y);\n\t}\n\n\tfor (var fovKey in fov) {\n\t\tvar formFactor = fov[fovKey];\n\n\t\tif (fovKey in litCells) { /* already lit */\n\t\t\tvar result = litCells[fovKey];\n\t\t} else { /* newly lit */\n\t\t\tvar result = [0, 0, 0];\n\t\t\tlitCells[fovKey] = result;\n\t\t}\n\n\t\tfor (var i=0;i<3;i++) { result[i] += Math.round(color[i]*formFactor); } /* add light color */\n\t}\n\n\treturn this;\n}\n\n/**\n * Compute FOV (\"form factor\") for a potential light source at [x,y]\n * @param {int} x\n * @param {int} y\n * @returns {object}\n */\nROT.Lighting.prototype._updateFOV = function(x, y) {\n\tvar key1 = x+\",\"+y;\n\tvar cache = {};\n\tthis._fovCache[key1] = cache;\n\tvar range = this._options.range;\n\tvar cb = function(x, y, r, vis) {\n\t\tvar key2 = x+\",\"+y;\n\t\tvar formFactor = vis * (1-r/range);\n\t\tif (formFactor == 0) { return; }\n\t\tcache[key2] = formFactor;\n\t}\n\tthis._fov.compute(x, y, range, cb.bind(this));\n\n\treturn cache;\n}\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nROT.Path = function(toX, toY, passableCallback, options) {\n\tthis._toX = toX;\n\tthis._toY = toY;\n\tthis._fromX = null;\n\tthis._fromY = null;\n\tthis._passableCallback = passableCallback;\n\tthis._options = {\n\t\ttopology: 8\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\n\tthis._dirs = ROT.DIRS[this._options.topology];\n\tif (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n\t\tthis._dirs = [\n\t\t\tthis._dirs[0],\n\t\t\tthis._dirs[2],\n\t\t\tthis._dirs[4],\n\t\t\tthis._dirs[6],\n\t\t\tthis._dirs[1],\n\t\t\tthis._dirs[3],\n\t\t\tthis._dirs[5],\n\t\t\tthis._dirs[7]\n\t\t]\n\t}\n}\n\n/**\n * Compute a path from a given point\n * @param {int} fromX\n * @param {int} fromY\n * @param {function} callback Will be called for every path item with arguments \"x\" and \"y\"\n */\nROT.Path.prototype.compute = function(fromX, fromY, callback) {\n}\n\nROT.Path.prototype._getNeighbors = function(cx, cy) {\n\tvar result = [];\n\tfor (var i=0;i<this._dirs.length;i++) {\n\t\tvar dir = this._dirs[i];\n\t\tvar x = cx + dir[0];\n\t\tvar y = cy + dir[1];\n\t\t\n\t\tif (!this._passableCallback(x, y)) { continue; }\n\t\tresult.push([x, y]);\n\t}\n\t\n\treturn result;\n}\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nROT.Path.Dijkstra = function(toX, toY, passableCallback, options) {\n\tROT.Path.call(this, toX, toY, passableCallback, options);\n\n\tthis._computed = {};\n\tthis._todo = [];\n\tthis._add(toX, toY, null);\n}\nROT.Path.Dijkstra.extend(ROT.Path);\n\n/**\n * Compute a path from a given point\n * @see ROT.Path#compute\n */\nROT.Path.Dijkstra.prototype.compute = function(fromX, fromY, callback) {\n\tvar key = fromX+\",\"+fromY;\n\tif (!(key in this._computed)) { this._compute(fromX, fromY); }\n\tif (!(key in this._computed)) { return; }\n\t\n\tvar item = this._computed[key];\n\twhile (item) {\n\t\tcallback(item.x, item.y);\n\t\titem = item.prev;\n\t}\n}\n\n/**\n * Compute a non-cached value\n */\nROT.Path.Dijkstra.prototype._compute = function(fromX, fromY) {\n\twhile (this._todo.length) {\n\t\tvar item = this._todo.shift();\n\t\tif (item.x == fromX && item.y == fromY) { return; }\n\t\t\n\t\tvar neighbors = this._getNeighbors(item.x, item.y);\n\t\t\n\t\tfor (var i=0;i<neighbors.length;i++) {\n\t\t\tvar neighbor = neighbors[i];\n\t\t\tvar x = neighbor[0];\n\t\t\tvar y = neighbor[1];\n\t\t\tvar id = x+\",\"+y;\n\t\t\tif (id in this._computed) { continue; } /* already done */\t\n\t\t\tthis._add(x, y, item); \n\t\t}\n\t}\n}\n\nROT.Path.Dijkstra.prototype._add = function(x, y, prev) {\n\tvar obj = {\n\t\tx: x,\n\t\ty: y,\n\t\tprev: prev\n\t}\n\tthis._computed[x+\",\"+y] = obj;\n\tthis._todo.push(obj);\n}\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nROT.Path.AStar = function(toX, toY, passableCallback, options) {\n\tROT.Path.call(this, toX, toY, passableCallback, options);\n\n\tthis._todo = [];\n\tthis._done = {};\n\tthis._fromX = null;\n\tthis._fromY = null;\n}\nROT.Path.AStar.extend(ROT.Path);\n\n/**\n * Compute a path from a given point\n * @see ROT.Path#compute\n */\nROT.Path.AStar.prototype.compute = function(fromX, fromY, callback) {\n\tthis._todo = [];\n\tthis._done = {};\n\tthis._fromX = fromX;\n\tthis._fromY = fromY;\n\tthis._add(this._toX, this._toY, null);\n\n\twhile (this._todo.length) {\n\t\tvar item = this._todo.shift();\n\t\tif (item.x == fromX && item.y == fromY) { break; }\n\t\tvar neighbors = this._getNeighbors(item.x, item.y);\n\n\t\tfor (var i=0;i<neighbors.length;i++) {\n\t\t\tvar neighbor = neighbors[i];\n\t\t\tvar x = neighbor[0];\n\t\t\tvar y = neighbor[1];\n\t\t\tvar id = x+\",\"+y;\n\t\t\tif (id in this._done) { continue; }\n\t\t\tthis._add(x, y, item); \n\t\t}\n\t}\n\t\n\tvar item = this._done[fromX+\",\"+fromY];\n\tif (!item) { return; }\n\t\n\twhile (item) {\n\t\tcallback(item.x, item.y);\n\t\titem = item.prev;\n\t}\n}\n\nROT.Path.AStar.prototype._add = function(x, y, prev) {\n\tvar obj = {\n\t\tx: x,\n\t\ty: y,\n\t\tprev: prev,\n\t\tg: (prev ? prev.g+1 : 0),\n\t\th: this._distance(x, y)\n\t}\n\tthis._done[x+\",\"+y] = obj;\n\t\n\t/* insert into priority queue */\n\t\n\tvar f = obj.g + obj.h;\n\tfor (var i=0;i<this._todo.length;i++) {\n\t\tvar item = this._todo[i];\n\t\tif (f < item.g + item.h) {\n\t\t\tthis._todo.splice(i, 0, obj);\n\t\t\treturn;\n\t\t}\n\t}\n\t\n\tthis._todo.push(obj);\n}\n\nROT.Path.AStar.prototype._distance = function(x, y) {\n\tswitch (this._options.topology) {\n\t\tcase 4:\n\t\t\treturn (Math.abs(x-this._fromX) + Math.abs(y-this._fromY));\n\t\tbreak;\n\n\t\tcase 6:\n\t\t\tvar dx = Math.abs(x - this._fromX);\n\t\t\tvar dy = Math.abs(y - this._fromY);\n\t\t\treturn dy + Math.max(0, (dx-dy)/2);\n\t\tbreak;\n\n\t\tcase 8: \n\t\t\treturn Math.max(Math.abs(x-this._fromX), Math.abs(y-this._fromY));\n\t\tbreak;\n\t}\n\n        throw new Error(\"Illegal topology\");\n}\n/**\n * @class Terminal backend\n * @private\n */\nROT.Display.Term = function(context) {\n\tROT.Display.Backend.call(this, context);\n\tthis._cx = -1;\n\tthis._cy = -1;\n\tthis._lastColor = \"\";\n\tthis._options = {};\n\tthis._ox = 0;\n\tthis._oy = 0;\n\tthis._termcolor = {};\n}\nROT.Display.Term.extend(ROT.Display.Backend);\n\nROT.Display.Term.prototype.compute = function(options) {\n\tthis._options = options;\n\tthis._ox = Math.floor((process.stdout.columns - options.width) / 2);\n\tthis._oy = Math.floor((process.stdout.rows - options.height) / 2);\n\tthis._termcolor = new ROT.Display.Term[options.termColor.capitalize()](this._context);\n\tthis._context._termcolor = this._termcolor;\n}\n\nROT.Display.Term.prototype.draw = function(data, clearBefore) {\n\t// determine where to draw what with what colors\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\t// determine if we need to move the terminal cursor\n\tvar dx = this._ox + x;\n\tvar dy = this._oy + y;\n\tif (dx < 0 || dx >= process.stdout.columns) { return; }\n\tif (dy < 0 || dy >= process.stdout.rows) { return; }\n\tif (dx !== this._cx || dy !== this._cy) {\n\t\tprocess.stdout.write(this._termcolor.positionToAnsi(dx,dy));\n\t\tthis._cx = dx;\n\t\tthis._cy = dy;\n\t}\n\n\t// terminals automatically clear, but if we're clearing when we're\n\t// not otherwise provided with a character, just use a space instead\n\tif (clearBefore) {\n\t\tif (!ch) {\n\t\t\tch = \" \";\n\t\t}\n\t}\n\t\t\n\t// if we're not clearing and not provided with a character, do nothing\n\tif (!ch) { return; }\n\n\t// determine if we need to change colors\n\tvar newColor = this._termcolor.colorToAnsi(fg,bg);\n\tif (newColor !== this._lastColor) {\n\t\tprocess.stdout.write(newColor);\n\t\tthis._lastColor = newColor;\n\t}\n\n\t// write the provided symbol to the display\n\tvar chars = [].concat(ch);\n\tprocess.stdout.write(chars[0]);\n\n\t// update our position, given that we wrote a character\n\tthis._cx++;\n\tif (this._cx >= process.stdout.columns) {\n\t\tthis._cx = 0;\n\t\tthis._cy++;\n\t}\n}\n\nROT.Display.Term.prototype.computeSize = function(availWidth, availHeight) {\n\treturn [process.stdout.columns, process.stdout.rows];\n}\n\nROT.Display.Term.prototype.computeFontSize = function(availWidth, availHeight) {\n\treturn 12;\n}\n\nROT.Display.Term.prototype.eventToPosition = function(x, y) {\n\treturn [x,y]\n}\n/**\n * @class Abstract terminal code module\n * @private\n */\nROT.Display.Term.Color = function(context) {\n\tthis._context = context;\n}\n\nROT.Display.Term.Color.prototype.clearToAnsi = function(bg) {\n}\n\nROT.Display.Term.Color.prototype.colorToAnsi = function(fg, bg) {\n}\n\nROT.Display.Term.Color.prototype.positionToAnsi = function(x, y) {\n}\n/**\n * @class xterm terminal code module\n * @private\n */\nROT.Display.Term.Xterm = function(context) {\n\tROT.Display.Term.Color.call(this, context);\n}\nROT.Display.Term.Xterm.extend(ROT.Display.Term.Color);\n\nROT.Display.Term.Xterm.prototype.clearToAnsi = function(bg) {\n\treturn \"\\x1b[0;48;5;\"\n\t\t+ this._termcolor(bg)\n\t\t+ \"m\\x1b[2J\";\n}\n\nROT.Display.Term.Xterm.prototype.colorToAnsi = function(fg, bg) {\n\treturn \"\\x1b[0;38;5;\"\n\t\t+ this._termcolor(fg)\n\t\t+ \";48;5;\"\n\t\t+ this._termcolor(bg)\n\t\t+ \"m\";\n}\n\nROT.Display.Term.Xterm.prototype.positionToAnsi = function(x, y) {\n\treturn \"\\x1b[\" + (y+1) + \";\" + (x+1) + \"H\";\n}\n\nROT.Display.Term.Xterm.prototype._termcolor = function(color) {\n\tvar SRC_COLORS = 256.0;\n\tvar DST_COLORS = 6.0;\n\tvar COLOR_RATIO = DST_COLORS / SRC_COLORS;\n\tvar rgb = ROT.Color.fromString(color);\n\tvar r = Math.floor(rgb[0] * COLOR_RATIO);\n\tvar g = Math.floor(rgb[1] * COLOR_RATIO);\n\tvar b = Math.floor(rgb[2] * COLOR_RATIO);\n\treturn r*36 + g*6 + b*1 + 16;\n}\n/**\n * Export to Node.js module\n */\nfor (var p in ROT) {\n\texports[p] = ROT[p];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rot-js/lib/rot.js\n// module id = 3\n// module chunks = 0","import Entity from './entity'\r\nimport Game from './game'\r\n\r\nexport default class Being extends Entity {\r\n\tconstructor(visual) {\r\n\t\tsuper(visual);\r\n\t\tthis._speed = 100;\r\n\t\tthis._hp = 10;\r\n\t}\r\n\tgetSpeed() {\r\n\t\t// Called by the Scheduler\r\n\t\treturn this._speed;\r\n\t}\r\n\tdamage(damage) {\r\n\t\tthis._hp -= damage;\r\n\t\tif (this._hp <= 0) { this.die(); }\r\n\t}\r\n\tact() {\r\n\t\t// FIXME\r\n\t}\r\n\tdie() {\r\n\t\tGame.scheduler.remove(this);\r\n\t}\r\n\tsetPosition = function(xy, level) {\r\n\t\t// came to a currently active level; add self to the scheduler\r\n\t\tif (level !== this._level && level === Game.level) {\r\n\t\t\tGame.scheduler.add(this, true);\r\n\t\t}\r\n\r\n\t\tif (level.getTileAt(xy).passable) {\r\n\t\t\treturn Entity.prototype.setPosition.call(this, xy, level);\r\n\t\t} else {\r\n\t\t\tif (typeof level.getTileAt(xy).bump === \"function\") {\r\n\t\t\t\tlevel.getTileAt(xy).bump();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/being.js","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/core.js\n// module id = 5\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 6\n// module chunks = 0","'use strict';\r\n\r\nif (typeof Promise === 'undefined') {\r\n  // Rejection tracking prevents a common issue where React gets into an\r\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\r\n  // and the user has no idea what causes React's erratic future behavior.\r\n  require('promise/lib/rejection-tracking').enable();\r\n  window.Promise = require('promise/lib/es6-extensions.js');\r\n}\r\n\r\n// fetch() polyfill for making API calls.\r\nrequire('whatwg-fetch');\r\n\r\n// Object.assign() is commonly used with React.\r\n// It will use the native implementation if it's present and isn't buggy.\r\nObject.assign = require('object-assign');\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/polyfills.js\n// module id = 7\n// module chunks = 0","import ROT from 'rot-js'\r\nimport game from './game';\r\n\r\nif (!ROT.isSupported()) {\r\n    alert(\"The rot.js library isn't supported by your browser.\");\r\n} else {\r\n    // Initialize the game\r\n    game.init();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/asap/browser-raw.js\n// module id = 9\n// module chunks = 0","import Entity from './entity'\r\nimport Game from './game'\r\nimport XY from './xy'\r\nimport generateMap from './map'\r\n\r\nexport default class Level {\r\n\tconstructor() {\r\n\t\t// FIXME data structure for storing entities\r\n\t\tthis._beings = {};\r\n\r\n\t\t// FIXME map data\r\n\t\tthis._size = new XY(80, 25);\r\n\t\tconst mapData = generateMap(80, 25);\r\n\t\tthis._map = mapData.map;\r\n\t\tthis._freeCells = mapData.freeCells;\r\n\r\n\t\tthis._empty = new Entity({ch:\".\", fg:\"#888\", bg:null});\r\n\t}\r\n\tgetSize() {\r\n\t\treturn this._size;\r\n\t}\r\n\tsetEntity(entity, xy) {\r\n\t\t// FIXME remove from old position, draw\r\n\t\tconst oldXY = entity.getXY();\r\n\t\tif (entity.getLevel() === this) {\r\n\t\t\tdelete this._beings[oldXY];\r\n\t\t\tif (Game.level === this) { Game.draw(oldXY); }\r\n\t\t}\r\n\t\tif (entity.setPosition(xy, this)) {\r\n\t\t\tentity.setPosition(xy, this); // propagate position data to the entity itself\r\n\t\t\t// FIXME set new position, draw\r\n\t\t\tthis._beings[xy] = entity;\r\n\t\t\tif (Game.level === this) {\r\n\t\t\t\tGame.draw(xy);\r\n\t\t\t\tGame.textBuffer.write(\"An entity moves to \" + xy + \".\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (entity.getLevel() === this) {\r\n\t\t\t\tentity.setPosition(oldXY, this);\r\n\t\t\t\tthis._beings[oldXY] = entity;\r\n\t\t\t\tif (Game.level === this) { Game.draw(oldXY); }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tgetEntityAt(xy) {\r\n\t\treturn this._beings[xy] || this._map[xy] || this._empty;\r\n\t}\r\n\tgetTileAt(xy) {\r\n\t\treturn this._map[xy] || this._empty;\r\n\t}\r\n\tgetBeings() {\r\n\t\t// FIXME list of all beings\r\n\t\treturn this._beings;\r\n\t}\r\n\tgetFreeCells() {\r\n\t\treturn this._freeCells;\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/level.js","import ROT from 'rot-js'\r\nimport Entity from './entity'\r\nimport Tile from './tile'\r\nimport XY from './xy'\r\n\r\nexport default function generateMap(w, h) {\r\n    const digger = new ROT.Map.Digger(w, h);\r\n    let map = {};\r\n    let freeCells = [];\r\n\r\n    const digCallback = function(x, y, value) {\r\n        const key = new XY(x, y);\r\n        if (value) {\r\n            map[key] = new Tile(\"wall\");\r\n        } else {\r\n            map[key] = new Tile(\"floor\");\r\n            freeCells.push(key);\r\n        }\r\n    }\r\n    digger.create(digCallback.bind(this));\r\n    const rooms = digger.getRooms();\r\n    const corridors = digger.getCorridors();\r\n    return {map, freeCells};\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/map.js","import ROT from 'rot-js'\r\nimport Being from './being'\r\nimport Game from './game'\r\nimport XY from './xy'\r\n\r\nexport default class Player extends Being {\n\tconstructor() {\n\t\tsuper({ch:\"@\", fg:\"#fff\"});\n\n\t\tthis._keys = {};\r\n\t\tthis._keys[ROT.VK_K] = 0;\r\n\t\tthis._keys[ROT.VK_UP] = 0;\r\n\t\tthis._keys[ROT.VK_NUMPAD8] = 0;\r\n\t\tthis._keys[ROT.VK_U] = 1;\r\n\t\tthis._keys[ROT.VK_NUMPAD9] = 1;\r\n\t\tthis._keys[ROT.VK_PAGE_UP] = 1;\r\n\t\tthis._keys[ROT.VK_L] = 2;\r\n\t\tthis._keys[ROT.VK_RIGHT] = 2;\r\n\t\tthis._keys[ROT.VK_NUMPAD6] = 2;\r\n\t\tthis._keys[ROT.VK_N] = 3;\r\n\t\tthis._keys[ROT.VK_NUMPAD3] = 3;\r\n\t\tthis._keys[ROT.VK_PAGE_DOWN] = 3;\r\n\t\tthis._keys[ROT.VK_J] = 4;\r\n\t\tthis._keys[ROT.VK_DOWN] = 4;\r\n\t\tthis._keys[ROT.VK_NUMPAD2] = 4;\r\n\t\tthis._keys[ROT.VK_B] = 5;\r\n\t\tthis._keys[ROT.VK_NUMPAD1] = 5;\r\n\t\tthis._keys[ROT.VK_END] = 5;\r\n\t\tthis._keys[ROT.VK_H] = 6;\r\n\t\tthis._keys[ROT.VK_LEFT] = 6;\r\n\t\tthis._keys[ROT.VK_NUMPAD4] = 6;\r\n\t\tthis._keys[ROT.VK_Y] = 7;\r\n\t\tthis._keys[ROT.VK_NUMPAD7] = 7;\r\n\t\tthis._keys[ROT.VK_HOME] = 7;\r\n\r\n\t\tthis._keys[ROT.VK_PERIOD] = -1;\r\n\t\tthis._keys[ROT.VK_CLEAR] = -1;\r\n\t\tthis._keys[ROT.VK_NUMPAD5] = -1;\n\t}\n\tact() {\r\n\t\tGame.textBuffer.write(\"It is your turn, press any relevant key.\");\r\n\t\tGame.textBuffer.flush();\r\n\t\tGame.engine.lock();\r\n\t\twindow.addEventListener(\"keydown\", this);\r\n\t}\n\tdie() {\r\n\t\tsuper.die();\r\n\t\tGame.over();\r\n\t}\n\thandleEvent(e) {\r\n\t\tconst code = e.keyCode;\r\n\r\n\t\tconst keyHandled = this._handleKey(e.keyCode);\r\n\r\n\t\tif (keyHandled) {\r\n\t\t\twindow.removeEventListener(\"keydown\", this);\r\n\t\t\tGame.engine.unlock();\r\n\t\t}\r\n\t}\n\t_handleKey = function(code) {\r\n\t\tif (code in this._keys) {\r\n\t\t\tGame.textBuffer.clear();\r\n\r\n\t\t\tconst direction = this._keys[code];\r\n\t\t\tif (direction === -1) { // noop\r\n\t\t\t\t// FIXME show something?\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tconst dir = ROT.DIRS[8][direction];\r\n\t\t\tconst xy = this._xy.plus(new XY(dir[0], dir[1]));\r\n\r\n\t\t\tthis._level.setEntity(this, xy);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false; // unknown key\r\n\t}\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/player.js","import ROT from 'rot-js'\r\nimport Game from './game'\r\n\r\nconst Screen = {};\r\n\r\n// Define our initial start screen\r\nScreen.startScreen = {\r\n    enter: function() {    console.log(\"Entered start screen.\"); },\r\n    exit: function() { console.log(\"Exited start screen.\"); },\r\n    render: function(display) {\r\n        // Render our prompt to the screen\r\n        display.drawText(1,1, \"%c{yellow}Javascript Roguelike\");\r\n        display.drawText(1,2, \"Press [Enter] to start!\");\r\n    },\r\n    handleInput: function(inputType, inputData) {\r\n        // When [Enter] is pressed, go to the play screen\r\n        if (inputType === 'keydown') {\r\n            if (inputData.keyCode === ROT.VK_RETURN) {\r\n                Game.startGame();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// Define our winning screen\r\nScreen.winScreen = {\r\n    enter: function() {    console.log(\"Entered win screen.\"); },\r\n    exit: function() { console.log(\"Exited win screen.\"); },\r\n    render: function(display) {\r\n        // Render our prompt to the screen\r\n        for (var i = 0; i < 22; i++) {\r\n            // Generate random background colors\r\n            var r = Math.round(Math.random() * 255);\r\n            var g = Math.round(Math.random() * 255);\r\n            var b = Math.round(Math.random() * 255);\r\n            var background = ROT.Color.toRGB([r, g, b]);\r\n            display.drawText(2, i + 1, \"%b{\" + background + \"}You win!\");\r\n        }\r\n    },\r\n    handleInput: function(inputType, inputData) {\r\n        // Nothing to do here\r\n    }\r\n}\r\n\r\n// Define our losing screen\r\nScreen.loseScreen = {\r\n    enter: function() {    console.log(\"Entered lose screen.\"); },\r\n    exit: function() { console.log(\"Exited lose screen.\"); },\r\n    render: function(display) {\r\n        // Render our prompt to the screen\r\n        for (var i = 0; i < 22; i++) {\r\n            display.drawText(2, i + 1, \"%b{red}You lose! :(\");\r\n        }\r\n    },\r\n    handleInput: function(inputType, inputData) {\r\n        // Nothing to do here\r\n    }\r\n}\r\n\r\nexport default Screen;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/screens.js","import XY from './xy'\r\n\r\nexport default class TextBuffer {\r\n\tconstructor() {\r\n\t\tthis._data = [];\r\n\t\tthis._options = {\r\n\t\t\tdisplay: null,\r\n\t\t\tposition: new XY(),\r\n\t\t\tsize: new XY()\r\n\t\t}\r\n\t}\r\n\tconfigure(options) {\r\n\t\tfor (var p in options) { this._options[p] = options[p]; }\r\n\t}\r\n\tclear() {\r\n\t\tthis._data = [];\r\n\t}\r\n\twrite(text) {\r\n\t\tthis._data.push(text);\r\n\t}\r\n\tflush() {\r\n\t\tconst options = this._options;\r\n\t\tconst display = options.display;\r\n\t\tconst pos = options.position;\r\n\t\tconst size = options.size;\r\n\r\n\t\t// clear\r\n\t\tfor (let i = 0; i < size.x; i++) {\r\n\t\t\tfor (let j = 0; j < size.y; j++) {\r\n\t\t\t\tdisplay.draw(pos.x + i, pos.y + j);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar text = this._data.join(\" \");\r\n\t\tdisplay.drawText(pos.x, pos.y, text, size.x);\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/textbuffer.js","import Entity from './entity'\r\nimport Game from './game'\r\n\r\nexport default class Tile extends Entity {\r\n    constructor(type) {\r\n        // FIXME\r\n        const tile = Tile.Types[type];\r\n        super(tile.visual);\r\n        this.name = tile.name;\r\n        this.passable = tile.passable;\r\n        this.blocksLos = tile.blocksLos;\r\n        this.bump = tile.bump ? tile.bump : this.bump;\r\n    }\r\n    bump() {\r\n        if(!this.passable){\r\n            Game.textBuffer.write('You cannot move through this ' + this.name + ' no matter how hard you try.');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    static Types = {\r\n        floor: {\r\n            name: 'Floor',\r\n            visual: {ch: '.', fg: '#444', bg: '#222'},\r\n            passable: true,\r\n            blocksLos: false\r\n        },\r\n        wall: {\r\n            name: 'Wall',\r\n            visual: {ch: '#', fg: '#777', bg: '#2e2e2e'},\r\n            passable: false,\r\n            blocksLos: true\r\n        },\r\n        door: {\r\n            name: 'Door',\r\n            visual: {ch: '+', fg: 'yellow', bg: '#222'},\r\n            passable: false,\r\n            blocksLos: true,\r\n            bump: function(entity){\r\n                if(!this.passable){\r\n                    this.passable = true;\r\n                    this.blocksLos = false;\r\n                    this.visual.ch = \"'\";\r\n                    Game.textBuffer.write('You open the ' + this.name + '.');\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/tile.js","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 16\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 17\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/es6-extensions.js\n// module id = 18\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._10 = null;\n  Promise._97 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._10 = function (promise) {\n    if (\n      promise._81 === 2 && // IS REJECTED\n      rejections[promise._72]\n    ) {\n      if (rejections[promise._72].logged) {\n        onHandled(promise._72);\n      } else {\n        clearTimeout(rejections[promise._72].timeout);\n      }\n      delete rejections[promise._72];\n    }\n  };\n  Promise._97 = function (promise, err) {\n    if (promise._45 === 0) { // not yet handled\n      promise._72 = id++;\n      rejections[promise._72] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._72),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/rejection-tracking.js\n// module id = 19\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 20\n// module chunks = 0"],"sourceRoot":""}