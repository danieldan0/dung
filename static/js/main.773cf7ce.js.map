{"version":3,"sources":["..\\static\\js\\main.773cf7ce.js","..\\webpack\\bootstrap 8a57a40870d500098b86","game.js","entity.js","..\\node_modules\\rot-js\\lib\\rot.js","xy.js","being.js","..\\node_modules\\promise\\lib\\core.js","..\\node_modules\\webpack\\buildin\\global.js","..\\config\\polyfills.js","index.js","..\\node_modules\\asap\\browser-raw.js","level.js","map.js","player.js","screens.js","textbuffer.js","tile.js","..\\node_modules\\object-assign\\index.js","..\\node_modules\\process\\browser.js","..\\node_modules\\promise\\lib\\es6-extensions.js","..\\node_modules\\promise\\lib\\rejection-tracking.js","..\\node_modules\\whatwg-fetch\\fetch.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","_classCallCheck","instance","Constructor","TypeError","__WEBPACK_IMPORTED_MODULE_0_rot_js__","__WEBPACK_IMPORTED_MODULE_0_rot_js___default","__WEBPACK_IMPORTED_MODULE_3__level__","__WEBPACK_IMPORTED_MODULE_4__player__","__WEBPACK_IMPORTED_MODULE_5__screens__","__WEBPACK_IMPORTED_MODULE_6__textbuffer__","__WEBPACK_IMPORTED_MODULE_7__xy__","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","Game","this","window","addEventListener","e","type","removeEventListener","scheduler","a","Scheduler","Speed","engine","Engine","display","Display","fontSize","textBuffer","document","body","appendChild","getContainer","player","game","bindEventToScreen","event","currentScreen","handleInput","switchScreen","startScreen","level","size","getSize","_switchLevel","setEntity","Math","round","x","y","start","xy","tile","getTileAt","tileVisual","getVisual","entity","getEntityAt","visual","draw","ch","fg","bg","lock","loseScreen","clear","setOptions","width","height","configure","position","j","beings","getBeings","add","screen","exit","getDisplay","enter","render","Entity","_visual","_xy","_level","global","process","requestAnimationFrame","cb","setTimeout","child","scrollLeft","scrollTop","createElement","canvas","getBoundingClientRect","left","top","getContext","_termcolor","beginPath","clearRect","w","h","clearCmd","clearToAnsi","fillStyle","stdout","write","drawImage","b","f","g","fill","fillRect","fillText","chs","font","lineTo","measureText","moveTo","textAlign","textBaseline","style","visibility","documentElement","ROT","isSupported","Function","bind","DEFAULT_WIDTH","DEFAULT_HEIGHT","DIRS","4","8","6","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","Text","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","str","maxWidth","result","tokens","tokenize","lineWidth","token","max","offset","replace","match","index","part","substring","push","trim","_breakLines","Infinity","lineLength","lastTokenWithSpace","charAt","indexOf","_breakInsideToken","arr","split","pop","join","nextIndex","breakIndex","lastIndexOf","splice","lastTextToken","tokenIndex","removeBreakChar","newBreakToken","newTextToken","Array","random","floor","RNG","getUniform","randomize","Number","mod","String","capitalize","toUpperCase","lpad","character","count","cnt","rpad","format","template","map","args","slice","arguments","replacer","group1","group2","obj","group","parts","shift","method","toLowerCase","replaced","apply","first","unshift","create","tmp","extend","parent","constructor","mozRequestAnimationFrame","webkitRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","options","_context","_data","_dirty","_options","_backend","defaultOptions","transpose","layout","spacing","border","forceSquareRatio","fontFamily","fontStyle","tileWidth","tileHeight","tileMap","tileSet","tileColorize","termColor","DEBUG","_tick","what","colors","compute","getOptions","computeSize","availWidth","availHeight","computeFontSize","eventToPosition","touches","clientX","clientY","rect","drawText","text","cx","cy","lines","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","charCodeAt","_draw","clearBefore","data","Backend","context","Rect","_spacingX","_spacingY","_canvasCache","cache","charWidth","ceil","_drawWithCache","_drawNoCache","hash","ctx","chars","concat","boxWidth","boxHeight","oldFont","ratio","widthFraction","Hex","_hexSize","sqrt","xprop","yprop","px","reverse","_fill","hexSizeWidth","hexSizeHeight","hexSize","min","prop","Tile","_colorCanvas","Error","globalCompositeOperation","getSeed","_seed","setSeed","seed","_s0","_frac","_s1","_s2","_c","t","getUniformInt","lowerBound","upperBound","getNormal","mean","stddev","u","v","r","gauss","log","getPercentage","getWeightedValue","total","getState","setState","state","clone","Date","now","StringGenerator","words","order","prior","_boundary","fromCharCode","_suffix","_prefix","_priorValues","generate","_sample","_join","observe","string","_split","subcontext","_observeEvent","getStats","priorCount","dataCount","eventCount","_backoff","available","EventQueue","_time","_events","_eventTimes","getTime","time","remove","_remove","_queue","_repeat","_current","item","repeat","next","Simple","getSpeed","Action","_defaultDuration","_duration","setDuration","_scheduler","_lock","unlock","actor","act","then","Map","_width","_height","callback","_fillMap","Arena","empty","DividedMaze","_stack","_map","_process","room","_partitionRoom","availX","availY","bottom","right","walls","solid","hole","IceyMaze","regularity","_regularity","nx","ny","done","blocked","dirs","_randomize","_isFree","EllerMaze","L","R","_addToList","_removeFromList","Cellular","born","survive","topology","connected","_dirs","probability","set","newMap","widthStep","widthStart","cur","ncount","_getNeighbors","_completeMaze","dir","allFreeSpace","notConnected","_freeSpace","_pointKey","_findConnected","keys","_getFromTo","from","to","local","_tunnelToConnected","k","pp","connectedKeys","notConnectedKeys","_getClosest","point","space","minPoint","minDist","stack","keepNotConnected","tests","xx","pkey","yy","Dungeon","_rooms","_corridors","getRooms","getCorridors","Digger","roomWidth","roomHeight","corridorLength","dugPercentage","timeLimit","_features","Room","Corridor","_featureAttempts","_walls","_digCallback","_canBeDugCallback","_isWallCallback","_priorityWallCallback","_dug","area","_firstRoom","t1","wall","_findWall","parseInt","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","priorityWalls","_addDoors","Feature","createRandomCenter","prio1","prio2","dx","dy","feature","createRandomAt","isValid","createPriorityWalls","deltas","delta","isWallCallback","clearDoors","addDoors","Uniform","roomDugPercentage","_roomAttempts","_corridorAttempts","_connected","_unconnected","_generateRooms","_generateCorridors","_generateRoom","createRandom","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","center1","center2","diffX","diffY","abs","dirIndex1","dirIndex2","getLeft","getRight","getTop","getBottom","_placeInWall","end","_digLine","diff","rotation","mid","index2","mid1","mid2","addDoor","dirIndex","avail","lastBadIndex","points","corridor","Rogue","cellWidth","cellHeight","_calculateRoomSize","connectedCells","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","cell","connections","cellx","celly","idx","ncgx","ncgy","otherRoom","cgx","cgy","found","dirToCheck","cw","validRoom","directions","dirIdx","newI","newJ","console","roomw","roomh","sx","sy","cwp","chp","sxOffset","syOffset","ii","jj","_getWallPosition","aRoom","aDirection","rx","ry","door","_drawCorridore","startPosition","endPosition","tempDist","xDir","yDir","move","xOffset","yOffset","xpos","ypos","moves","xAbs","yAbs","percent","firstHalf","secondHalf","connection","otherWall","canBeDugCallback","digCallback","debug","x1","y1","x2","y2","doorX","doorY","_x1","_y1","_x2","_y2","_doors","getDoors","startX","startY","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","ok","firstCornerBad","secondCornerBad","priorityWallCallback","Noise","Simplex","gradients","_F2","_G2","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","G2","n0","n1","n2","X0","Y0","x0","y0","t0","grad","t2","FOV","lightPassesCallback","_lightPasses","_getCircle","countFactor","startOffset","DiscreteShadowcasting","_coords","A","B","blocks","DATA","neighbors","angle","_visibleCoords","v1","callee","v2","PreciseShadowcasting","A1","A2","SHADOWS","neighborCount","_checkVisibility","index1","edge1","old","edge2","visible","visibleLength","P","P1","P2","RecursiveShadowcasting","OCTANTS","_renderOctant","compute180","previousOctant","nextPreviousOctant","nextOctant","compute90","octant","_castVisibility","row","visSlopeStart","visSlopeEnd","radius","yx","newStart","mapX","mapY","slopeStart","slopeEnd","Color","fromString","cached","_cache","values","color1","color2","add_","multiply","multiply_","interpolate","factor","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","color","hue2rgb","q","toRGB","_clamp","toHex","toString","num","black","navy","darkblue","mediumblue","blue","darkgreen","green","teal","darkcyan","deepskyblue","darkturquoise","mediumspringgreen","lime","springgreen","aqua","cyan","midnightblue","dodgerblue","forestgreen","seagreen","darkslategray","darkslategrey","limegreen","mediumseagreen","turquoise","royalblue","steelblue","darkslateblue","mediumturquoise","indigo","darkolivegreen","cadetblue","cornflowerblue","mediumaquamarine","dimgray","dimgrey","slateblue","olivedrab","slategray","slategrey","lightslategray","lightslategrey","mediumslateblue","lawngreen","chartreuse","aquamarine","maroon","purple","olive","gray","grey","skyblue","lightskyblue","blueviolet","darkred","darkmagenta","saddlebrown","darkseagreen","lightgreen","mediumpurple","darkviolet","palegreen","darkorchid","yellowgreen","sienna","brown","darkgray","darkgrey","lightblue","greenyellow","paleturquoise","lightsteelblue","powderblue","firebrick","darkgoldenrod","mediumorchid","rosybrown","darkkhaki","silver","mediumvioletred","indianred","peru","chocolate","tan","lightgray","lightgrey","palevioletred","thistle","orchid","goldenrod","crimson","gainsboro","plum","burlywood","lightcyan","lavender","darksalmon","violet","palegoldenrod","lightcoral","khaki","aliceblue","honeydew","azure","sandybrown","wheat","beige","whitesmoke","mintcream","ghostwhite","salmon","antiquewhite","linen","lightgoldenrodyellow","oldlace","red","fuchsia","magenta","deeppink","orangered","tomato","hotpink","coral","darkorange","lightsalmon","orange","lightpink","pink","gold","peachpuff","navajowhite","moccasin","bisque","mistyrose","blanchedalmond","papayawhip","lavenderblush","seashell","cornsilk","lemonchiffon","floralwhite","snow","yellow","lightyellow","ivory","white","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","range","_fov","_lights","_reflectivityCache","_fovCache","reset","setFOV","fov","setLight","clearLights","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","_updateFOV","fovKey","formFactor","key1","vis","key2","Path","toX","toY","passableCallback","_toX","_toY","_fromX","_fromY","_passableCallback","fromX","fromY","Dijkstra","_computed","_todo","_add","_compute","prev","neighbor","AStar","_done","_distance","Term","_cx","_cy","_lastColor","_ox","_oy","columns","rows","positionToAnsi","newColor","colorToAnsi","Xterm","rgb","XY","undefined","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","__WEBPACK_IMPORTED_MODULE_0__entity__","__WEBPACK_IMPORTED_MODULE_1__game__","Being","_Entity","_this","getPrototypeOf","setPosition","passable","bump","_speed","_hp","damage","die","noop","getThen","ex","LAST_ERROR","IS_ERROR","tryCallOne","fn","tryCallTwo","Promise","_45","_81","_65","_54","doResolve","safeThen","onFulfilled","onRejected","resolve","reject","res","handle","Handler","deferred","_10","handleResolved","asap","promise","ret","newValue","finale","_97","reason","_61","eval","enable","assign","init","alert","rawAsap","task","queue","requestFlush","flushing","flush","currentIndex","capacity","scan","newLength","makeRequestCallFromTimer","handleTimer","timeoutHandle","clearInterval","intervalHandle","setInterval","scope","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","toggle","observer","node","createTextNode","characterData","__WEBPACK_IMPORTED_MODULE_2__xy__","__WEBPACK_IMPORTED_MODULE_3__map__","Level","_beings","_size","mapData","_freeCells","freeCells","_empty","oldXY","getXY","getLevel","generateMap","digger","__WEBPACK_IMPORTED_MODULE_2__tile__","__WEBPACK_IMPORTED_MODULE_1__being__","__WEBPACK_IMPORTED_MODULE_2__game__","__WEBPACK_IMPORTED_MODULE_3__xy__","_get","receiver","desc","getOwnPropertyDescriptor","Player","_Being","_handleKey","code","_keys","direction","plus","over","keyCode","Screen","inputType","inputData","startGame","winScreen","background","__WEBPACK_IMPORTED_MODULE_0__xy__","TextBuffer","pos","Types","blocksLos","toObject","val","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","test1","getOwnPropertyNames","test2","test3","forEach","letter","err","source","symbols","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","timeout","len","run","Item","array","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","all","remaining","race","disable","enabled","onUnhandled","allRejections","matchWhitelist","rejections","error","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","warn","_72","line","list","some","cls","RangeError","normalizeName","test","normalizeValue","iteratorFor","items","iterator","support","iterable","Symbol","Headers","headers","append","isArray","header","consumed","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","bufferClone","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","rejected","decode","json","JSON","parse","normalizeMethod","upcased","methods","Request","input","url","credentials","mode","referrer","form","bytes","decodeURIComponent","parseHeaders","rawHeaders","Response","bodyInit","status","statusText","fetch","viewClasses","DataView","isView","oldValue","has","thisArg","entries","response","redirectStatuses","redirect","location","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill"],"mappings":"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","file":"static/js/main.773cf7ce.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dung/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 21);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rot_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__being__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__entity__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__level__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__player__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__screens__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__textbuffer__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__xy__ = __webpack_require__(3);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\n\n\n\n\nvar Game = function () {\n\tfunction Game() {\n\t\t_classCallCheck(this, Game);\n\t}\n\n\t_createClass(Game, [{\n\t\tkey: 'init',\n\t\tvalue: function init() {\n\t\t\twindow.addEventListener(\"load\", this);\n\t\t}\n\t}, {\n\t\tkey: 'handleEvent',\n\t\tvalue: function handleEvent(e) {\n\t\t\tswitch (e.type) {\n\t\t\t\tcase \"load\":\n\t\t\t\t\twindow.removeEventListener(\"load\", this);\n\n\t\t\t\t\tthis.scheduler = new __WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.Scheduler.Speed();\n\t\t\t\t\tthis.engine = new __WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.Engine(this.scheduler);\n\t\t\t\t\tthis.display = new __WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.Display({ fontSize: 16 });\n\t\t\t\t\tthis.textBuffer = new __WEBPACK_IMPORTED_MODULE_6__textbuffer__[\"a\" /* default */](this.display);\n\t\t\t\t\tdocument.body.appendChild(this.display.getContainer());\n\t\t\t\t\tthis.player = new __WEBPACK_IMPORTED_MODULE_4__player__[\"a\" /* default */]();\n\n\t\t\t\t\t// Create a helper function for binding to an event\n\t\t\t\t\t// and making it send it to the screen\n\t\t\t\t\tvar _game = this; // So that we don't lose this\n\t\t\t\t\tvar bindEventToScreen = function bindEventToScreen(event) {\n\t\t\t\t\t\twindow.addEventListener(event, function (e) {\n\t\t\t\t\t\t\t// When an event is received, send it to the\n\t\t\t\t\t\t\t// screen if there is one\n\t\t\t\t\t\t\tif (_game.currentScreen !== null) {\n\t\t\t\t\t\t\t\t// Send the event type and data to the screen\n\t\t\t\t\t\t\t\t_game.currentScreen.handleInput(event, e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\t// Bind keyboard input events\n\t\t\t\t\tbindEventToScreen('keydown');\n\t\t\t\t\tbindEventToScreen('keyup');\n\t\t\t\t\tbindEventToScreen('keypress');\n\n\t\t\t\t\tthis.switchScreen(__WEBPACK_IMPORTED_MODULE_5__screens__[\"a\" /* default */].startScreen);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'startGame',\n\t\tvalue: function startGame() {\n\t\t\t// FIXME build a level and position a player\n\t\t\tvar level = new __WEBPACK_IMPORTED_MODULE_3__level__[\"a\" /* default */]();\n\t\t\tvar size = level.getSize();\n\t\t\tthis._switchLevel(level);\n\t\t\tthis.level.setEntity(this.player, new __WEBPACK_IMPORTED_MODULE_7__xy__[\"a\" /* default */](Math.round(size.x / 2), Math.round(size.y / 2)));\n\n\t\t\tthis.engine.start();\n\t\t}\n\t}, {\n\t\tkey: 'draw',\n\t\tvalue: function draw(xy) {\n\t\t\tvar tile = this.level.getTileAt(xy);\n\t\t\tvar tileVisual = tile.getVisual();\n\t\t\tvar entity = this.level.getEntityAt(xy);\n\t\t\tvar visual = entity.getVisual();\n\t\t\tthis.display.draw(xy.x, xy.y, visual.ch, visual.fg, tileVisual.bg);\n\t\t}\n\t}, {\n\t\tkey: 'over',\n\t\tvalue: function over() {\n\t\t\tthis.engine.lock();\n\t\t\t// FIXME show something\n\t\t\tthis.switchScreen(__WEBPACK_IMPORTED_MODULE_5__screens__[\"a\" /* default */].loseScreen);\n\t\t}\n\t}, {\n\t\tkey: '_switchLevel',\n\t\tvalue: function _switchLevel(level) {\n\t\t\t// remove old beings from the scheduler\n\t\t\tthis.scheduler.clear();\n\n\t\t\tthis.level = level;\n\t\t\tvar size = this.level.getSize();\n\n\t\t\tvar bufferSize = 3;\n\t\t\tthis.display.setOptions({ width: size.x, height: size.y + bufferSize });\n\t\t\tthis.textBuffer.configure({\n\t\t\t\tdisplay: this.display,\n\t\t\t\tposition: new __WEBPACK_IMPORTED_MODULE_7__xy__[\"a\" /* default */](0, size.y),\n\t\t\t\tsize: new __WEBPACK_IMPORTED_MODULE_7__xy__[\"a\" /* default */](size.x, bufferSize)\n\t\t\t});\n\t\t\tthis.textBuffer.clear();\n\n\t\t\t/* FIXME draw a level */\n\t\t\tvar xy = new __WEBPACK_IMPORTED_MODULE_7__xy__[\"a\" /* default */]();\n\t\t\tfor (var i = 0; i < size.x; i++) {\n\t\t\t\txy.x = i;\n\t\t\t\tfor (var j = 0; j < size.y; j++) {\n\t\t\t\t\txy.y = j;\n\t\t\t\t\tthis.draw(xy);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// add new beings to the scheduler\n\t\t\tvar beings = this.level.getBeings();\n\t\t\tfor (var p in beings) {\n\t\t\t\tthis.scheduler.add(beings[p], true);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'getDisplay',\n\t\tvalue: function getDisplay() {\n\t\t\treturn this.display;\n\t\t}\n\t}, {\n\t\tkey: 'switchScreen',\n\t\tvalue: function switchScreen(screen) {\n\t\t\t// If we had a screen before, notify it that we exited\n\t\t\tif (Game.currentScreen !== null) {\n\t\t\t\tGame.currentScreen.exit();\n\t\t\t}\n\t\t\t// Clear the display\n\t\t\tthis.getDisplay().clear();\n\t\t\t// Update our current screen, notify it we entered\n\t\t\t// and then render it\n\t\t\tthis.currentScreen = screen;\n\t\t\tif (this.currentScreen) {\n\t\t\t\tthis.currentScreen.enter();\n\t\t\t\tthis.currentScreen.render(this.display);\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn Game;\n}();\n\nGame.scheduler = null;\nGame.engine = null;\nGame.player = null;\nGame.level = null;\nGame.display = null;\nGame.textBuffer = null;\nGame.currentScreen = null;\n\n\nvar game = new Game();\n/* harmony default export */ __webpack_exports__[\"a\"] = (game);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Entity = function () {\n\tfunction Entity(visual) {\n\t\t_classCallCheck(this, Entity);\n\n\t\tthis._visual = visual;\n\t\tthis._xy = null;\n\t\tthis._level = null;\n\t}\n\n\t_createClass(Entity, [{\n\t\tkey: \"getVisual\",\n\t\tvalue: function getVisual() {\n\t\t\treturn this._visual;\n\t\t}\n\t}, {\n\t\tkey: \"getXY\",\n\t\tvalue: function getXY() {\n\t\t\treturn this._xy;\n\t\t}\n\t}, {\n\t\tkey: \"getLevel\",\n\t\tvalue: function getLevel() {\n\t\t\treturn this._level;\n\t\t}\n\t}, {\n\t\tkey: \"setPosition\",\n\t\tvalue: function setPosition(xy, level) {\n\t\t\tthis._xy = xy;\n\t\t\tthis._level = level;\n\t\t\treturn this;\n\t\t}\n\t}]);\n\n\treturn Entity;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Entity);\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, process) {/*\n\tThis is rot.js, the ROguelike Toolkit in JavaScript.\n\tVersion 0.6~dev, generated on Mon Nov 30 10:34:42 CET 2015.\n*/\n/**\n * Add objects for Node.js environment\n */\nglobal.requestAnimationFrame = function(cb) {\n\treturn setTimeout(cb, 1000/60);\n};\n\nglobal.document = {\n\tbody: {\n\t\tappendChild: function(child) {},\n\t\tscrollLeft: 0,\n\t\tscrollTop: 0\n\t},\n\tcreateElement: function(type) {\n\t\tvar canvas;\n\t\treturn canvas = {\n\t\t\tgetBoundingClientRect: function() {\n\t\t\t\tvar rect;\n\t\t\t\treturn rect = {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\ttop: 0\n\t\t\t\t};\n\t\t\t},\n\t\t\tgetContext: function(type) {\n\t\t\t\tvar context;\n\t\t\t\treturn context = {\n\t\t\t\t\t_termcolor: null,\n\t\t\t\t\tbeginPath: function() {},\n\t\t\t\t\tcanvas: canvas,\n\t\t\t\t\tclearRect: function(x, y, w, h) {\n\t\t\t\t\t\tif(this._termcolor !== null) {\n\t\t\t\t\t\t\tvar clearCmd = this._termcolor.clearToAnsi(this.fillStyle);\n\t\t\t\t\t\t\tprocess.stdout.write(clearCmd);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tdrawImage: function(a, b, c, d, e, f, g, h, i) {},\n\t\t\t\t\tfill: function() {},\n\t\t\t\t\tfillRect: function(x, y, w, h) {\n\t\t\t\t\t\tif(this._termcolor !== null) {\n\t\t\t\t\t\t\tvar clearCmd = this._termcolor.clearToAnsi(this.fillStyle);\n\t\t\t\t\t\t\tprocess.stdout.write(clearCmd);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfillStyle: \"#000\",\n\t\t\t\t\tfillText: function(chs, x, y) {},\n\t\t\t\t\tfont: \"monospace\",\n\t\t\t\t\tlineTo: function(x, y) {},\n\t\t\t\t\tmeasureText: function(ch) {\n\t\t\t\t\t\tvar result;\n\t\t\t\t\t\treturn result = {\n\t\t\t\t\t\t\twidth: 12\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\tmoveTo: function(x, y) {},\n\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\ttextBaseline: \"middle\"\n\t\t\t\t};\n\t\t\t},\n\t\t\theight: 0,\n\t\t\tstyle: {\n\t\t\t\tleft: \"100px\",\n\t\t\t\tposition: \"absolute\",\n\t\t\t\ttop: \"100px\",\n\t\t\t\tvisibility: \"hidden\"\n\t\t\t},\n\t\t\twidth: 0\n\t\t};\n\t},\n\tdocumentElement: {\n\t\tscrollLeft: 0,\n\t\tscrollTop: 0\n\t}\n};\n/**\n * @namespace Top-level ROT namespace\n */\nvar ROT = {\n\t/**\n\t * @returns {bool} Is rot.js supported by this browser?\n\t */\n\tisSupported: function() {\n\t\treturn !!(document.createElement(\"canvas\").getContext && Function.prototype.bind);\n\t},\n\n\t/** Default with for display and map generators */\n\tDEFAULT_WIDTH: 80,\n\t/** Default height for display and map generators */\n\tDEFAULT_HEIGHT: 25,\n\n\t/** Directional constants. Ordering is important! */\n\tDIRS: {\n\t\t\"4\": [\n\t\t\t[ 0, -1],\n\t\t\t[ 1,  0],\n\t\t\t[ 0,  1],\n\t\t\t[-1,  0]\n\t\t],\n\t\t\"8\": [\n\t\t\t[ 0, -1],\n\t\t\t[ 1, -1],\n\t\t\t[ 1,  0],\n\t\t\t[ 1,  1],\n\t\t\t[ 0,  1],\n\t\t\t[-1,  1],\n\t\t\t[-1,  0],\n\t\t\t[-1, -1]\n\t\t],\n\t\t\"6\": [\n\t\t\t[-1, -1],\n\t\t\t[ 1, -1],\n\t\t\t[ 2,  0],\n\t\t\t[ 1,  1],\n\t\t\t[-1,  1],\n\t\t\t[-2,  0]\n\t\t]\n\t},\n\n\t/** Cancel key. */\n\tVK_CANCEL: 3, \n\t/** Help key. */\n\tVK_HELP: 6, \n\t/** Backspace key. */\n\tVK_BACK_SPACE: 8, \n\t/** Tab key. */\n\tVK_TAB: 9, \n\t/** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n\tVK_CLEAR: 12, \n\t/** Return/enter key on the main keyboard. */\n\tVK_RETURN: 13, \n\t/** Reserved, but not used. */\n\tVK_ENTER: 14, \n\t/** Shift key. */\n\tVK_SHIFT: 16, \n\t/** Control key. */\n\tVK_CONTROL: 17, \n\t/** Alt (Option on Mac) key. */\n\tVK_ALT: 18, \n\t/** Pause key. */\n\tVK_PAUSE: 19, \n\t/** Caps lock. */\n\tVK_CAPS_LOCK: 20, \n\t/** Escape key. */\n\tVK_ESCAPE: 27, \n\t/** Space bar. */\n\tVK_SPACE: 32, \n\t/** Page Up key. */\n\tVK_PAGE_UP: 33, \n\t/** Page Down key. */\n\tVK_PAGE_DOWN: 34, \n\t/** End key. */\n\tVK_END: 35, \n\t/** Home key. */\n\tVK_HOME: 36, \n\t/** Left arrow. */\n\tVK_LEFT: 37, \n\t/** Up arrow. */\n\tVK_UP: 38, \n\t/** Right arrow. */\n\tVK_RIGHT: 39, \n\t/** Down arrow. */\n\tVK_DOWN: 40, \n\t/** Print Screen key. */\n\tVK_PRINTSCREEN: 44, \n\t/** Ins(ert) key. */\n\tVK_INSERT: 45, \n\t/** Del(ete) key. */\n\tVK_DELETE: 46, \n\t/***/\n\tVK_0: 48,\n\t/***/\n\tVK_1: 49,\n\t/***/\n\tVK_2: 50,\n\t/***/\n\tVK_3: 51,\n\t/***/\n\tVK_4: 52,\n\t/***/\n\tVK_5: 53,\n\t/***/\n\tVK_6: 54,\n\t/***/\n\tVK_7: 55,\n\t/***/\n\tVK_8: 56,\n\t/***/\n\tVK_9: 57,\n\t/** Colon (:) key. Requires Gecko 15.0 */\n\tVK_COLON: 58, \n\t/** Semicolon (;) key. */\n\tVK_SEMICOLON: 59, \n\t/** Less-than (<) key. Requires Gecko 15.0 */\n\tVK_LESS_THAN: 60, \n\t/** Equals (=) key. */\n\tVK_EQUALS: 61, \n\t/** Greater-than (>) key. Requires Gecko 15.0 */\n\tVK_GREATER_THAN: 62, \n\t/** Question mark (?) key. Requires Gecko 15.0 */\n\tVK_QUESTION_MARK: 63, \n\t/** Atmark (@) key. Requires Gecko 15.0 */\n\tVK_AT: 64, \n\t/***/\n\tVK_A: 65,\n\t/***/\n\tVK_B: 66,\n\t/***/\n\tVK_C: 67,\n\t/***/\n\tVK_D: 68,\n\t/***/\n\tVK_E: 69,\n\t/***/\n\tVK_F: 70,\n\t/***/\n\tVK_G: 71,\n\t/***/\n\tVK_H: 72,\n\t/***/\n\tVK_I: 73,\n\t/***/\n\tVK_J: 74,\n\t/***/\n\tVK_K: 75,\n\t/***/\n\tVK_L: 76,\n\t/***/\n\tVK_M: 77,\n\t/***/\n\tVK_N: 78,\n\t/***/\n\tVK_O: 79,\n\t/***/\n\tVK_P: 80,\n\t/***/\n\tVK_Q: 81,\n\t/***/\n\tVK_R: 82,\n\t/***/\n\tVK_S: 83,\n\t/***/\n\tVK_T: 84,\n\t/***/\n\tVK_U: 85,\n\t/***/\n\tVK_V: 86,\n\t/***/\n\tVK_W: 87,\n\t/***/\n\tVK_X: 88,\n\t/***/\n\tVK_Y: 89,\n\t/***/\n\tVK_Z: 90,\n\t/***/\n\tVK_CONTEXT_MENU: 93,\n\t/** 0 on the numeric keypad. */\n\tVK_NUMPAD0: 96, \n\t/** 1 on the numeric keypad. */\n\tVK_NUMPAD1: 97, \n\t/** 2 on the numeric keypad. */\n\tVK_NUMPAD2: 98, \n\t/** 3 on the numeric keypad. */\n\tVK_NUMPAD3: 99, \n\t/** 4 on the numeric keypad. */\n\tVK_NUMPAD4: 100, \n\t/** 5 on the numeric keypad. */\n\tVK_NUMPAD5: 101, \n\t/** 6 on the numeric keypad. */\n\tVK_NUMPAD6: 102, \n\t/** 7 on the numeric keypad. */\n\tVK_NUMPAD7: 103, \n\t/** 8 on the numeric keypad. */\n\tVK_NUMPAD8: 104, \n\t/** 9 on the numeric keypad. */\n\tVK_NUMPAD9: 105, \n\t/** * on the numeric keypad. */\n\tVK_MULTIPLY: 106,\n\t/** + on the numeric keypad. */\n\tVK_ADD: 107, \n\t/***/\n\tVK_SEPARATOR: 108,\n\t/** - on the numeric keypad. */\n\tVK_SUBTRACT: 109, \n\t/** Decimal point on the numeric keypad. */\n\tVK_DECIMAL: 110, \n\t/** / on the numeric keypad. */\n\tVK_DIVIDE: 111, \n\t/** F1 key. */\n\tVK_F1: 112, \n\t/** F2 key. */\n\tVK_F2: 113, \n\t/** F3 key. */\n\tVK_F3: 114, \n\t/** F4 key. */\n\tVK_F4: 115, \n\t/** F5 key. */\n\tVK_F5: 116, \n\t/** F6 key. */\n\tVK_F6: 117, \n\t/** F7 key. */\n\tVK_F7: 118, \n\t/** F8 key. */\n\tVK_F8: 119, \n\t/** F9 key. */\n\tVK_F9: 120, \n\t/** F10 key. */\n\tVK_F10: 121, \n\t/** F11 key. */\n\tVK_F11: 122, \n\t/** F12 key. */\n\tVK_F12: 123, \n\t/** F13 key. */\n\tVK_F13: 124, \n\t/** F14 key. */\n\tVK_F14: 125, \n\t/** F15 key. */\n\tVK_F15: 126, \n\t/** F16 key. */\n\tVK_F16: 127, \n\t/** F17 key. */\n\tVK_F17: 128, \n\t/** F18 key. */\n\tVK_F18: 129, \n\t/** F19 key. */\n\tVK_F19: 130, \n\t/** F20 key. */\n\tVK_F20: 131, \n\t/** F21 key. */\n\tVK_F21: 132, \n\t/** F22 key. */\n\tVK_F22: 133, \n\t/** F23 key. */\n\tVK_F23: 134, \n\t/** F24 key. */\n\tVK_F24: 135, \n\t/** Num Lock key. */\n\tVK_NUM_LOCK: 144, \n\t/** Scroll Lock key. */\n\tVK_SCROLL_LOCK: 145, \n\t/** Circumflex (^) key. Requires Gecko 15.0 */\n\tVK_CIRCUMFLEX: 160, \n\t/** Exclamation (!) key. Requires Gecko 15.0 */\n\tVK_EXCLAMATION: 161, \n\t/** Double quote () key. Requires Gecko 15.0 */\n\tVK_DOUBLE_QUOTE: 162, \n\t/** Hash (#) key. Requires Gecko 15.0 */\n\tVK_HASH: 163, \n\t/** Dollar sign ($) key. Requires Gecko 15.0 */\n\tVK_DOLLAR: 164, \n\t/** Percent (%) key. Requires Gecko 15.0 */\n\tVK_PERCENT: 165, \n\t/** Ampersand (&) key. Requires Gecko 15.0 */\n\tVK_AMPERSAND: 166, \n\t/** Underscore (_) key. Requires Gecko 15.0 */\n\tVK_UNDERSCORE: 167, \n\t/** Open parenthesis (() key. Requires Gecko 15.0 */\n\tVK_OPEN_PAREN: 168, \n\t/** Close parenthesis ()) key. Requires Gecko 15.0 */\n\tVK_CLOSE_PAREN: 169, \n\t/* Asterisk (*) key. Requires Gecko 15.0 */\n\tVK_ASTERISK: 170,\n\t/** Plus (+) key. Requires Gecko 15.0 */\n\tVK_PLUS: 171, \n\t/** Pipe (|) key. Requires Gecko 15.0 */\n\tVK_PIPE: 172, \n\t/** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n\tVK_HYPHEN_MINUS: 173, \n\t/** Open curly bracket ({) key. Requires Gecko 15.0 */\n\tVK_OPEN_CURLY_BRACKET: 174, \n\t/** Close curly bracket (}) key. Requires Gecko 15.0 */\n\tVK_CLOSE_CURLY_BRACKET: 175, \n\t/** Tilde (~) key. Requires Gecko 15.0 */\n\tVK_TILDE: 176, \n\t/** Comma (,) key. */\n\tVK_COMMA: 188, \n\t/** Period (.) key. */\n\tVK_PERIOD: 190, \n\t/** Slash (/) key. */\n\tVK_SLASH: 191, \n\t/** Back tick (`) key. */\n\tVK_BACK_QUOTE: 192, \n\t/** Open square bracket ([) key. */\n\tVK_OPEN_BRACKET: 219, \n\t/** Back slash (\\) key. */\n\tVK_BACK_SLASH: 220, \n\t/** Close square bracket (]) key. */\n\tVK_CLOSE_BRACKET: 221, \n\t/** Quote (''') key. */\n\tVK_QUOTE: 222, \n\t/** Meta key on Linux, Command key on Mac. */\n\tVK_META: 224, \n\t/** AltGr key on Linux. Requires Gecko 15.0 */\n\tVK_ALTGR: 225, \n\t/** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n\tVK_WIN: 91, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_KANA: 21, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_HANGUL: 21, \n\t/** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n\tVK_EISU: 22, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_JUNJA: 23, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_FINAL: 24, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_HANJA: 25, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_KANJI: 25, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_CONVERT: 28, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_NONCONVERT: 29, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_ACCEPT: 30, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_MODECHANGE: 31, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_SELECT: 41, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_PRINT: 42, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_EXECUTE: 43, \n\t/** Linux support for this keycode was added in Gecko 4.0.\t */\n\tVK_SLEEP: 95 \n};\n/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nROT.Text = {\n\tRE_COLORS: /%([bc]){([^}]*)}/g,\n\n\t/* token types */\n\tTYPE_TEXT:\t\t0,\n\tTYPE_NEWLINE:\t1,\n\tTYPE_FG:\t\t2,\n\tTYPE_BG:\t\t3,\n\n\t/**\n\t * Measure size of a resulting text block\n\t */\n\tmeasure: function(str, maxWidth) {\n\t\tvar result = {width:0, height:1};\n\t\tvar tokens = this.tokenize(str, maxWidth);\n\t\tvar lineWidth = 0;\n\n\t\tfor (var i=0;i<tokens.length;i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tswitch (token.type) {\n\t\t\t\tcase this.TYPE_TEXT:\n\t\t\t\t\tlineWidth += token.value.length;\n\t\t\t\tbreak;\n\n\t\t\t\tcase this.TYPE_NEWLINE:\n\t\t\t\t\tresult.height++;\n\t\t\t\t\tresult.width = Math.max(result.width, lineWidth);\n\t\t\t\t\tlineWidth = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tresult.width = Math.max(result.width, lineWidth);\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * Convert string to a series of a formatting commands\n\t */\n\ttokenize: function(str, maxWidth) {\n\t\tvar result = [];\n\n\t\t/* first tokenization pass - split texts and color formatting commands */\n\t\tvar offset = 0;\n\t\tstr.replace(this.RE_COLORS, function(match, type, name, index) {\n\t\t\t/* string before */\n\t\t\tvar part = str.substring(offset, index);\n\t\t\tif (part.length) {\n\t\t\t\tresult.push({\n\t\t\t\t\ttype: ROT.Text.TYPE_TEXT,\n\t\t\t\t\tvalue: part\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/* color command */\n\t\t\tresult.push({\n\t\t\t\ttype: (type == \"c\" ? ROT.Text.TYPE_FG : ROT.Text.TYPE_BG),\n\t\t\t\tvalue: name.trim()\n\t\t\t});\n\n\t\t\toffset = index + match.length;\n\t\t\treturn \"\";\n\t\t});\n\n\t\t/* last remaining part */\n\t\tvar part = str.substring(offset);\n\t\tif (part.length) {\n\t\t\tresult.push({\n\t\t\t\ttype: ROT.Text.TYPE_TEXT,\n\t\t\t\tvalue: part\n\t\t\t});\n\t\t}\n\n\t\treturn this._breakLines(result, maxWidth);\n\t},\n\n\t/* insert line breaks into first-pass tokenized data */\n\t_breakLines: function(tokens, maxWidth) {\n\t\tif (!maxWidth) { maxWidth = Infinity; };\n\n\t\tvar i = 0;\n\t\tvar lineLength = 0;\n\t\tvar lastTokenWithSpace = -1;\n\n\t\twhile (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n\t\t\tvar token = tokens[i];\n\t\t\tif (token.type == ROT.Text.TYPE_NEWLINE) { /* reset */\n\t\t\t\tlineLength = 0; \n\t\t\t\tlastTokenWithSpace = -1;\n\t\t\t}\n\t\t\tif (token.type != ROT.Text.TYPE_TEXT) { /* skip non-text tokens */\n\t\t\t\ti++;\n\t\t\t\tcontinue; \n\t\t\t}\n\n\t\t\t/* remove spaces at the beginning of line */\n\t\t\twhile (lineLength == 0 && token.value.charAt(0) == \" \") { token.value = token.value.substring(1); }\n\n\t\t\t/* forced newline? insert two new tokens after this one */\n\t\t\tvar index = token.value.indexOf(\"\\n\");\n\t\t\tif (index != -1) { \n\t\t\t\ttoken.value = this._breakInsideToken(tokens, i, index, true); \n\n\t\t\t\t/* if there are spaces at the end, we must remove them (we do not want the line too long) */\n\t\t\t\tvar arr = token.value.split(\"\");\n\t\t\t\twhile (arr.length && arr[arr.length-1] == \" \") { arr.pop(); }\n\t\t\t\ttoken.value = arr.join(\"\");\n\t\t\t}\n\n\t\t\t/* token degenerated? */\n\t\t\tif (!token.value.length) {\n\t\t\t\ttokens.splice(i, 1);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n\n\t\t\t\t/* is it possible to break within this token? */\n\t\t\t\tvar index = -1;\n\t\t\t\twhile (1) {\n\t\t\t\t\tvar nextIndex = token.value.indexOf(\" \", index+1);\n\t\t\t\t\tif (nextIndex == -1) { break; }\n\t\t\t\t\tif (lineLength + nextIndex > maxWidth) { break; }\n\t\t\t\t\tindex = nextIndex;\n\t\t\t\t}\n\n\t\t\t\tif (index != -1) { /* break at space within this one */\n\t\t\t\t\ttoken.value = this._breakInsideToken(tokens, i, index, true);\n\t\t\t\t} else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n\t\t\t\t\tvar token = tokens[lastTokenWithSpace];\n\t\t\t\t\tvar breakIndex = token.value.lastIndexOf(\" \");\n\t\t\t\t\ttoken.value = this._breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n\t\t\t\t\ti = lastTokenWithSpace;\n\t\t\t\t} else { /* force break in this token */\n\t\t\t\t\ttoken.value = this._breakInsideToken(tokens, i, maxWidth-lineLength, false);\n\t\t\t\t}\n\n\t\t\t} else { /* line not long, continue */\n\t\t\t\tlineLength += token.value.length;\n\t\t\t\tif (token.value.indexOf(\" \") != -1) { lastTokenWithSpace = i; }\n\t\t\t}\n\t\t\t\n\t\t\ti++; /* advance to next token */\n\t\t}\n\n\n\t\ttokens.push({type: ROT.Text.TYPE_NEWLINE}); /* insert fake newline to fix the last text line */\n\n\t\t/* remove trailing space from text tokens before newlines */\n\t\tvar lastTextToken = null;\n\t\tfor (var i=0;i<tokens.length;i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tswitch (token.type) {\n\t\t\t\tcase ROT.Text.TYPE_TEXT: lastTextToken = token; break;\n\t\t\t\tcase ROT.Text.TYPE_NEWLINE: \n\t\t\t\t\tif (lastTextToken) { /* remove trailing space */\n\t\t\t\t\t\tvar arr = lastTextToken.value.split(\"\");\n\t\t\t\t\t\twhile (arr.length && arr[arr.length-1] == \" \") { arr.pop(); }\n\t\t\t\t\t\tlastTextToken.value = arr.join(\"\");\n\t\t\t\t\t}\n\t\t\t\t\tlastTextToken = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\ttokens.pop(); /* remove fake token */\n\n\t\treturn tokens;\n\t},\n\n\t/**\n\t * Create new tokens and insert them into the stream\n\t * @param {object[]} tokens\n\t * @param {int} tokenIndex Token being processed\n\t * @param {int} breakIndex Index within current token's value\n\t * @param {bool} removeBreakChar Do we want to remove the breaking character?\n\t * @returns {string} remaining unbroken token value\n\t */\n\t_breakInsideToken: function(tokens, tokenIndex, breakIndex, removeBreakChar) {\n\t\tvar newBreakToken = {\n\t\t\ttype: ROT.Text.TYPE_NEWLINE\n\t\t}\n\t\tvar newTextToken = {\n\t\t\ttype: ROT.Text.TYPE_TEXT,\n\t\t\tvalue: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n\t\t}\n\t\ttokens.splice(tokenIndex+1, 0, newBreakToken, newTextToken);\n\t\treturn tokens[tokenIndex].value.substring(0, breakIndex);\n\t}\n}\n/**\n * @returns {any} Randomly picked item, null when length=0\n */\nArray.prototype.random = Array.prototype.random || function() {\n\tif (!this.length) { return null; }\n\treturn this[Math.floor(ROT.RNG.getUniform() * this.length)];\n}\n\n/**\n * @returns {array} New array with randomized items\n * FIXME destroys this!\n */\nArray.prototype.randomize = Array.prototype.randomize || function() {\n\tvar result = [];\n\twhile (this.length) {\n\t\tvar index = this.indexOf(this.random());\n\t\tresult.push(this.splice(index, 1)[0]);\n\t}\n\treturn result;\n}\n/**\n * Always positive modulus\n * @param {int} n Modulus\n * @returns {int} this modulo n\n */\nNumber.prototype.mod = Number.prototype.mod || function(n) {\n\treturn ((this%n)+n)%n;\n}\n/**\n * @returns {string} First letter capitalized\n */\nString.prototype.capitalize = String.prototype.capitalize || function() {\n\treturn this.charAt(0).toUpperCase() + this.substring(1);\n}\n\n/** \n * Left pad\n * @param {string} [character=\"0\"]\n * @param {int} [count=2]\n */\nString.prototype.lpad = String.prototype.lpad || function(character, count) {\n\tvar ch = character || \"0\";\n\tvar cnt = count || 2;\n\n\tvar s = \"\";\n\twhile (s.length < (cnt - this.length)) { s += ch; }\n\ts = s.substring(0, cnt-this.length);\n\treturn s+this;\n}\n\n/** \n * Right pad\n * @param {string} [character=\"0\"]\n * @param {int} [count=2]\n */\nString.prototype.rpad = String.prototype.rpad || function(character, count) {\n\tvar ch = character || \"0\";\n\tvar cnt = count || 2;\n\n\tvar s = \"\";\n\twhile (s.length < (cnt - this.length)) { s += ch; }\n\ts = s.substring(0, cnt-this.length);\n\treturn this+s;\n}\n\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nString.format = String.format || function(template) {\n\tvar map = String.format.map;\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\n\tvar replacer = function(match, group1, group2, index) {\n\t\tif (template.charAt(index-1) == \"%\") { return match.substring(1); }\n\t\tif (!args.length) { return match; }\n\t\tvar obj = args[0];\n\n\t\tvar group = group1 || group2;\n\t\tvar parts = group.split(\",\");\n\t\tvar name = parts.shift();\n\t\tvar method = map[name.toLowerCase()];\n\t\tif (!method) { return match; }\n\n\t\tvar obj = args.shift();\n\t\tvar replaced = obj[method].apply(obj, parts);\n\n\t\tvar first = name.charAt(0);\n\t\tif (first != first.toLowerCase()) { replaced = replaced.capitalize(); }\n\n\t\treturn replaced;\n\t}\n\treturn template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\n\nString.format.map = String.format.map || {\n\t\"s\": \"toString\"\n}\n\n/**\n * Convenience shortcut to String.format(this)\n */\nString.prototype.format = String.prototype.format || function() {\n\tvar args = Array.prototype.slice.call(arguments);\n\targs.unshift(this);\n\treturn String.format.apply(String, args);\n}\n\nif (!Object.create) {  \n\t/**\n\t * ES5 Object.create\n\t */\n\tObject.create = function(o) {  \n\t\tvar tmp = function() {};\n\t\ttmp.prototype = o;\n\t\treturn new tmp();\n\t};  \n}  \n/**\n * Sets prototype of this function to an instance of parent function\n * @param {function} parent\n */\nFunction.prototype.extend = Function.prototype.extend || function(parent) {\n\tthis.prototype = Object.create(parent.prototype);\n\tthis.prototype.constructor = this;\n\treturn this;\n}\nif (typeof window != \"undefined\") {\n\twindow.requestAnimationFrame =\n\t\twindow.requestAnimationFrame\n\t\t|| window.mozRequestAnimationFrame\n\t\t|| window.webkitRequestAnimationFrame\n\t\t|| window.oRequestAnimationFrame\n\t\t|| window.msRequestAnimationFrame\n\t\t|| function(cb) { return setTimeout(cb, 1000/60); };\n\n\twindow.cancelAnimationFrame =\n\t\twindow.cancelAnimationFrame\n\t\t|| window.mozCancelAnimationFrame\n\t\t|| window.webkitCancelAnimationFrame\n\t\t|| window.oCancelAnimationFrame\n\t\t|| window.msCancelAnimationFrame\n\t\t|| function(id) { return clearTimeout(id); };\n}\n/**\n * @class Visual map display\n * @param {object} [options]\n * @param {int} [options.width=ROT.DEFAULT_WIDTH]\n * @param {int} [options.height=ROT.DEFAULT_HEIGHT]\n * @param {int} [options.fontSize=15]\n * @param {string} [options.fontFamily=\"monospace\"]\n * @param {string} [options.fontStyle=\"\"] bold/italic/none/both\n * @param {string} [options.fg=\"#ccc\"]\n * @param {string} [options.bg=\"#000\"]\n * @param {float} [options.spacing=1]\n * @param {float} [options.border=0]\n * @param {string} [options.layout=\"rect\"]\n * @param {bool} [options.forceSquareRatio=false]\n * @param {int} [options.tileWidth=32]\n * @param {int} [options.tileHeight=32]\n * @param {object} [options.tileMap={}]\n * @param {image} [options.tileSet=null]\n * @param {image} [options.tileColorize=false]\n */\nROT.Display = function(options) {\n\tvar canvas = document.createElement(\"canvas\");\n\tthis._context = canvas.getContext(\"2d\");\n\tthis._data = {};\n\tthis._dirty = false; /* false = nothing, true = all, object = dirty cells */\n\tthis._options = {};\n\tthis._backend = null;\n\t\n\tvar defaultOptions = {\n\t\twidth: ROT.DEFAULT_WIDTH,\n\t\theight: ROT.DEFAULT_HEIGHT,\n\t\ttranspose: false,\n\t\tlayout: \"rect\",\n\t\tfontSize: 15,\n\t\tspacing: 1,\n\t\tborder: 0,\n\t\tforceSquareRatio: false,\n\t\tfontFamily: \"monospace\",\n\t\tfontStyle: \"\",\n\t\tfg: \"#ccc\",\n\t\tbg: \"#000\",\n\t\ttileWidth: 32,\n\t\ttileHeight: 32,\n\t\ttileMap: {},\n\t\ttileSet: null,\n\t\ttileColorize: false,\n\t\ttermColor: \"xterm\"\n\t};\n\tfor (var p in options) { defaultOptions[p] = options[p]; }\n\tthis.setOptions(defaultOptions);\n\tthis.DEBUG = this.DEBUG.bind(this);\n\n\tthis._tick = this._tick.bind(this);\n\trequestAnimationFrame(this._tick);\n}\n\n/**\n * Debug helper, ideal as a map generator callback. Always bound to this.\n * @param {int} x\n * @param {int} y\n * @param {int} what\n */\nROT.Display.prototype.DEBUG = function(x, y, what) {\n\tvar colors = [this._options.bg, this._options.fg];\n\tthis.draw(x, y, null, null, colors[what % colors.length]);\n}\n\n/**\n * Clear the whole display (cover it with background color)\n */\nROT.Display.prototype.clear = function() {\n\tthis._data = {};\n\tthis._dirty = true;\n}\n\n/**\n * @see ROT.Display\n */\nROT.Display.prototype.setOptions = function(options) {\n\tfor (var p in options) { this._options[p] = options[p]; }\n\tif (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n\t\tif (options.layout) { \n\t\t\tthis._backend = new ROT.Display[options.layout.capitalize()](this._context);\n\t\t}\n\n\t\tvar font = (this._options.fontStyle ? this._options.fontStyle + \" \" : \"\") + this._options.fontSize + \"px \" + this._options.fontFamily;\n\t\tthis._context.font = font;\n\t\tthis._backend.compute(this._options);\n\t\tthis._context.font = font;\n\t\tthis._context.textAlign = \"center\";\n\t\tthis._context.textBaseline = \"middle\";\n\t\tthis._dirty = true;\n\t}\n\treturn this;\n}\n\n/**\n * Returns currently set options\n * @returns {object} Current options object \n */\nROT.Display.prototype.getOptions = function() {\n\treturn this._options;\n}\n\n/**\n * Returns the DOM node of this display\n * @returns {node} DOM node\n */\nROT.Display.prototype.getContainer = function() {\n\treturn this._context.canvas;\n}\n\n/**\n * Compute the maximum width/height to fit into a set of given constraints\n * @param {int} availWidth Maximum allowed pixel width\n * @param {int} availHeight Maximum allowed pixel height\n * @returns {int[2]} cellWidth,cellHeight\n */\nROT.Display.prototype.computeSize = function(availWidth, availHeight) {\n\treturn this._backend.computeSize(availWidth, availHeight, this._options);\n}\n\n/**\n * Compute the maximum font size to fit into a set of given constraints\n * @param {int} availWidth Maximum allowed pixel width\n * @param {int} availHeight Maximum allowed pixel height\n * @returns {int} fontSize\n */\nROT.Display.prototype.computeFontSize = function(availWidth, availHeight) {\n\treturn this._backend.computeFontSize(availWidth, availHeight, this._options);\n}\n\n/**\n * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n * @param {Event} e event\n * @returns {int[2]} -1 for values outside of the canvas\n */\nROT.Display.prototype.eventToPosition = function(e) {\n\tif (e.touches) {\n\t\tvar x = e.touches[0].clientX;\n\t\tvar y = e.touches[0].clientY;\n\t} else {\n\t\tvar x = e.clientX;\n\t\tvar y = e.clientY;\n\t}\n\n\tvar rect = this._context.canvas.getBoundingClientRect();\n\tx -= rect.left;\n\ty -= rect.top;\n\t\n\tif (x < 0 || y < 0 || x >= this._context.canvas.width || y >= this._context.canvas.height) { return [-1, -1]; }\n\n\treturn this._backend.eventToPosition(x, y);\n}\n\n/**\n * @param {int} x\n * @param {int} y\n * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n * @param {string} [fg] foreground color\n * @param {string} [bg] background color\n */\nROT.Display.prototype.draw = function(x, y, ch, fg, bg) {\n\tif (!fg) { fg = this._options.fg; }\n\tif (!bg) { bg = this._options.bg; }\n\tthis._data[x+\",\"+y] = [x, y, ch, fg, bg];\n\t\n\tif (this._dirty === true) { return; } /* will already redraw everything */\n\tif (!this._dirty) { this._dirty = {}; } /* first! */\n\tthis._dirty[x+\",\"+y] = true;\n}\n\n/**\n * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n * @param {int} x\n * @param {int} y\n * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n * @param {int} [maxWidth] wrap at what width?\n * @returns {int} lines drawn\n */\nROT.Display.prototype.drawText = function(x, y, text, maxWidth) {\n\tvar fg = null;\n\tvar bg = null;\n\tvar cx = x;\n\tvar cy = y;\n\tvar lines = 1;\n\tif (!maxWidth) { maxWidth = this._options.width-x; }\n\n\tvar tokens = ROT.Text.tokenize(text, maxWidth);\n\n\twhile (tokens.length) { /* interpret tokenized opcode stream */\n\t\tvar token = tokens.shift();\n\t\tswitch (token.type) {\n\t\t\tcase ROT.Text.TYPE_TEXT:\n\t\t\t\tvar isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n\t\t\t\tfor (var i=0;i<token.value.length;i++) {\n\t\t\t\t\tvar cc = token.value.charCodeAt(i);\n\t\t\t\t\tvar c = token.value.charAt(i);\n\t\t\t\t\t// Assign to `true` when the current char is full-width.\n\t\t\t\t\tisFullWidth = (cc > 0xff && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) && cc > 0xffee;\n\t\t\t\t\t// Current char is space, whatever full-width or half-width both are OK.\n\t\t\t\t\tisSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n\t\t\t\t\t// The previous char is full-width and\n\t\t\t\t\t// current char is nether half-width nor a space.\n\t\t\t\t\tif (isPrevFullWidth && !isFullWidth && !isSpace) { cx++; } // add an extra position\n\t\t\t\t\t// The current char is full-width and\n\t\t\t\t\t// the previous char is not a space.\n\t\t\t\t\tif(isFullWidth && !isPrevSpace) { cx++; } // add an extra position\n\t\t\t\t\tthis.draw(cx++, cy, c, fg, bg);\n\t\t\t\t\tisPrevSpace = isSpace;\n\t\t\t\t\tisPrevFullWidth = isFullWidth;\n\t\t\t\t}\n\t\t\tbreak;\n\n\t\t\tcase ROT.Text.TYPE_FG:\n\t\t\t\tfg = token.value || null;\n\t\t\tbreak;\n\n\t\t\tcase ROT.Text.TYPE_BG:\n\t\t\t\tbg = token.value || null;\n\t\t\tbreak;\n\n\t\t\tcase ROT.Text.TYPE_NEWLINE:\n\t\t\t\tcx = x;\n\t\t\t\tcy++;\n\t\t\t\tlines++\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn lines;\n}\n\n/**\n * Timer tick: update dirty parts\n */\nROT.Display.prototype._tick = function() {\n\trequestAnimationFrame(this._tick);\n\n\tif (!this._dirty) { return; }\n\n\tif (this._dirty === true) { /* draw all */\n\t\tthis._context.fillStyle = this._options.bg;\n\t\tthis._context.fillRect(0, 0, this._context.canvas.width, this._context.canvas.height);\n\n\t\tfor (var id in this._data) { /* redraw cached data */\n\t\t\tthis._draw(id, false);\n\t\t}\n\n\t} else { /* draw only dirty */\n\t\tfor (var key in this._dirty) {\n\t\t\tthis._draw(key, true);\n\t\t}\n\t}\n\n\tthis._dirty = false;\n}\n\n/**\n * @param {string} key What to draw\n * @param {bool} clearBefore Is it necessary to clean before?\n */\nROT.Display.prototype._draw = function(key, clearBefore) {\n\tvar data = this._data[key];\n\tif (data[4] != this._options.bg) { clearBefore = true; }\n\n\tthis._backend.draw(data, clearBefore);\n}\n/**\n * @class Abstract display backend module\n * @private\n */\nROT.Display.Backend = function(context) {\n\tthis._context = context;\n}\n\nROT.Display.Backend.prototype.compute = function(options) {\n}\n\nROT.Display.Backend.prototype.draw = function(data, clearBefore) {\n}\n\nROT.Display.Backend.prototype.computeSize = function(availWidth, availHeight) {\n}\n\nROT.Display.Backend.prototype.computeFontSize = function(availWidth, availHeight) {\n}\n\nROT.Display.Backend.prototype.eventToPosition = function(x, y) {\n}\n/**\n * @class Rectangular backend\n * @private\n */\nROT.Display.Rect = function(context) {\n\tROT.Display.Backend.call(this, context);\n\t\n\tthis._spacingX = 0;\n\tthis._spacingY = 0;\n\tthis._canvasCache = {};\n\tthis._options = {};\n}\nROT.Display.Rect.extend(ROT.Display.Backend);\n\nROT.Display.Rect.cache = false;\n\nROT.Display.Rect.prototype.compute = function(options) {\n\tthis._canvasCache = {};\n\tthis._options = options;\n\n\tvar charWidth = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._spacingX = Math.ceil(options.spacing * charWidth);\n\tthis._spacingY = Math.ceil(options.spacing * options.fontSize);\n\n\tif (this._options.forceSquareRatio) {\n\t\tthis._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n\t}\n\n\tthis._context.canvas.width = options.width * this._spacingX;\n\tthis._context.canvas.height = options.height * this._spacingY;\n}\n\nROT.Display.Rect.prototype.draw = function(data, clearBefore) {\n\tif (this.constructor.cache) {\n\t\tthis._drawWithCache(data, clearBefore);\n\t} else {\n\t\tthis._drawNoCache(data, clearBefore);\n\t}\n}\n\nROT.Display.Rect.prototype._drawWithCache = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tvar hash = \"\"+ch+fg+bg;\n\tif (hash in this._canvasCache) {\n\t\tvar canvas = this._canvasCache[hash];\n\t} else {\n\t\tvar b = this._options.border;\n\t\tvar canvas = document.createElement(\"canvas\");\n\t\tvar ctx = canvas.getContext(\"2d\");\n\t\tcanvas.width = this._spacingX;\n\t\tcanvas.height = this._spacingY;\n\t\tctx.fillStyle = bg;\n\t\tctx.fillRect(b, b, canvas.width-b, canvas.height-b);\n\t\t\n\t\tif (ch) {\n\t\t\tctx.fillStyle = fg;\n\t\t\tctx.font = this._context.font;\n\t\t\tctx.textAlign = \"center\";\n\t\t\tctx.textBaseline = \"middle\";\n\n\t\t\tvar chars = [].concat(ch);\n\t\t\tfor (var i=0;i<chars.length;i++) {\n\t\t\t\tctx.fillText(chars[i], this._spacingX/2, Math.ceil(this._spacingY/2));\n\t\t\t}\n\t\t}\n\t\tthis._canvasCache[hash] = canvas;\n\t}\n\t\n\tthis._context.drawImage(canvas, x*this._spacingX, y*this._spacingY);\n}\n\nROT.Display.Rect.prototype._drawNoCache = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tif (clearBefore) { \n\t\tvar b = this._options.border;\n\t\tthis._context.fillStyle = bg;\n\t\tthis._context.fillRect(x*this._spacingX + b, y*this._spacingY + b, this._spacingX - b, this._spacingY - b);\n\t}\n\t\n\tif (!ch) { return; }\n\n\tthis._context.fillStyle = fg;\n\n\tvar chars = [].concat(ch);\n\tfor (var i=0;i<chars.length;i++) {\n\t\tthis._context.fillText(chars[i], (x+0.5) * this._spacingX, Math.ceil((y+0.5) * this._spacingY));\n\t}\n}\n\nROT.Display.Rect.prototype.computeSize = function(availWidth, availHeight) {\n\tvar width = Math.floor(availWidth / this._spacingX);\n\tvar height = Math.floor(availHeight / this._spacingY);\n\treturn [width, height];\n}\n\nROT.Display.Rect.prototype.computeFontSize = function(availWidth, availHeight) {\n\tvar boxWidth = Math.floor(availWidth / this._options.width);\n\tvar boxHeight = Math.floor(availHeight / this._options.height);\n\n\t/* compute char ratio */\n\tvar oldFont = this._context.font;\n\tthis._context.font = \"100px \" + this._options.fontFamily;\n\tvar width = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._context.font = oldFont;\n\tvar ratio = width / 100;\n\t\t\n\tvar widthFraction = ratio * boxHeight / boxWidth;\n\tif (widthFraction > 1) { /* too wide with current aspect ratio */\n\t\tboxHeight = Math.floor(boxHeight / widthFraction);\n\t}\n\treturn Math.floor(boxHeight / this._options.spacing);\n}\n\nROT.Display.Rect.prototype.eventToPosition = function(x, y) {\n\treturn [Math.floor(x/this._spacingX), Math.floor(y/this._spacingY)];\n}\n/**\n * @class Hexagonal backend\n * @private\n */\nROT.Display.Hex = function(context) {\n\tROT.Display.Backend.call(this, context);\n\n\tthis._spacingX = 0;\n\tthis._spacingY = 0;\n\tthis._hexSize = 0;\n\tthis._options = {};\n}\nROT.Display.Hex.extend(ROT.Display.Backend);\n\nROT.Display.Hex.prototype.compute = function(options) {\n\tthis._options = options;\n\n\t/* FIXME char size computation does not respect transposed hexes */\n\tvar charWidth = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._hexSize = Math.floor(options.spacing * (options.fontSize + charWidth/Math.sqrt(3)) / 2);\n\tthis._spacingX = this._hexSize * Math.sqrt(3) / 2;\n\tthis._spacingY = this._hexSize * 1.5;\n\n\tif (options.transpose) {\n\t\tvar xprop = \"height\";\n\t\tvar yprop = \"width\";\n\t} else {\n\t\tvar xprop = \"width\";\n\t\tvar yprop = \"height\";\n\t}\n\tthis._context.canvas[xprop] = Math.ceil( (options.width + 1) * this._spacingX );\n\tthis._context.canvas[yprop] = Math.ceil( (options.height - 1) * this._spacingY + 2*this._hexSize );\n}\n\nROT.Display.Hex.prototype.draw = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tvar px = [\n\t\t(x+1) * this._spacingX,\n\t\ty * this._spacingY + this._hexSize\n\t];\n\tif (this._options.transpose) { px.reverse(); }\n\n\tif (clearBefore) { \n\t\tthis._context.fillStyle = bg;\n\t\tthis._fill(px[0], px[1]);\n\t}\n\t\n\tif (!ch) { return; }\n\n\tthis._context.fillStyle = fg;\n\n\tvar chars = [].concat(ch);\n\tfor (var i=0;i<chars.length;i++) {\n\t\tthis._context.fillText(chars[i], px[0], Math.ceil(px[1]));\n\t}\n}\n\nROT.Display.Hex.prototype.computeSize = function(availWidth, availHeight) {\n\tif (this._options.transpose) {\n\t\tavailWidth += availHeight;\n\t\tavailHeight = availWidth - availHeight;\n\t\tavailWidth -= availHeight;\n\t}\n\n\tvar width = Math.floor(availWidth / this._spacingX) - 1;\n\tvar height = Math.floor((availHeight - 2*this._hexSize) / this._spacingY + 1);\n\treturn [width, height];\n}\n\nROT.Display.Hex.prototype.computeFontSize = function(availWidth, availHeight) {\n\tif (this._options.transpose) {\n\t\tavailWidth += availHeight;\n\t\tavailHeight = availWidth - availHeight;\n\t\tavailWidth -= availHeight;\n\t}\n\n\tvar hexSizeWidth = 2*availWidth / ((this._options.width+1) * Math.sqrt(3)) - 1;\n\tvar hexSizeHeight = availHeight / (2 + 1.5*(this._options.height-1));\n\tvar hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n\n\t/* compute char ratio */\n\tvar oldFont = this._context.font;\n\tthis._context.font = \"100px \" + this._options.fontFamily;\n\tvar width = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._context.font = oldFont;\n\tvar ratio = width / 100;\n\n\thexSize = Math.floor(hexSize)+1; /* closest larger hexSize */\n\n\t/* FIXME char size computation does not respect transposed hexes */\n\tvar fontSize = 2*hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n\n\t/* closest smaller fontSize */\n\treturn Math.ceil(fontSize)-1;\n}\n\nROT.Display.Hex.prototype.eventToPosition = function(x, y) {\n\tif (this._options.transpose) {\n\t\tx += y;\n\t\ty = x-y;\n\t\tx -= y;\n\t\tvar prop = \"width\";\n\t} else {\n\t\tvar prop = \"height\";\n\t}\n\tvar size = this._context.canvas[prop] / this._options[prop];\n\ty = Math.floor(y/size);\n\n\tif (y.mod(2)) { /* odd row */\n\t\tx -= this._spacingX;\n\t\tx = 1 + 2*Math.floor(x/(2*this._spacingX));\n\t} else {\n\t\tx = 2*Math.floor(x/(2*this._spacingX));\n\t}\n\t\n\treturn [x, y];\n}\n\n/**\n * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n */\nROT.Display.Hex.prototype._fill = function(cx, cy) {\n\tvar a = this._hexSize;\n\tvar b = this._options.border;\n\t\n\tthis._context.beginPath();\n\n\tif (this._options.transpose) {\n\t\tthis._context.moveTo(cx-a+b,\tcy);\n\t\tthis._context.lineTo(cx-a/2+b,\tcy+this._spacingX-b);\n\t\tthis._context.lineTo(cx+a/2-b,\tcy+this._spacingX-b);\n\t\tthis._context.lineTo(cx+a-b,\tcy);\n\t\tthis._context.lineTo(cx+a/2-b,\tcy-this._spacingX+b);\n\t\tthis._context.lineTo(cx-a/2+b,\tcy-this._spacingX+b);\n\t\tthis._context.lineTo(cx-a+b,\tcy);\n\t} else {\n\t\tthis._context.moveTo(cx,\t\t\t\t\tcy-a+b);\n\t\tthis._context.lineTo(cx+this._spacingX-b,\tcy-a/2+b);\n\t\tthis._context.lineTo(cx+this._spacingX-b,\tcy+a/2-b);\n\t\tthis._context.lineTo(cx,\t\t\t\t\tcy+a-b);\n\t\tthis._context.lineTo(cx-this._spacingX+b,\tcy+a/2-b);\n\t\tthis._context.lineTo(cx-this._spacingX+b,\tcy-a/2+b);\n\t\tthis._context.lineTo(cx,\t\t\t\t\tcy-a+b);\n\t}\n\tthis._context.fill();\n}\n/**\n * @class Tile backend\n * @private\n */\nROT.Display.Tile = function(context) {\n\tROT.Display.Rect.call(this, context);\n\t\n\tthis._options = {};\n\tthis._colorCanvas = document.createElement(\"canvas\");\n}\nROT.Display.Tile.extend(ROT.Display.Rect);\n\nROT.Display.Tile.prototype.compute = function(options) {\n\tthis._options = options;\n\tthis._context.canvas.width = options.width * options.tileWidth;\n\tthis._context.canvas.height = options.height * options.tileHeight;\n\tthis._colorCanvas.width = options.tileWidth;\n\tthis._colorCanvas.height = options.tileHeight;\n}\n\nROT.Display.Tile.prototype.draw = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tvar tileWidth = this._options.tileWidth;\n\tvar tileHeight = this._options.tileHeight;\n\n\tif (clearBefore) {\n\t\tif (this._options.tileColorize) {\n\t\t\tthis._context.clearRect(x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n\t\t} else {\n\t\t\tthis._context.fillStyle = bg;\n\t\t\tthis._context.fillRect(x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n\t\t}\n\t}\n\n\tif (!ch) { return; }\n\n\tvar chars = [].concat(ch);\n\tfor (var i=0;i<chars.length;i++) {\n\t\tvar tile = this._options.tileMap[chars[i]];\n\t\tif (!tile) { throw new Error(\"Char '\" + chars[i] + \"' not found in tileMap\"); }\n\t\t\n\t\tif (this._options.tileColorize) { /* apply colorization */\n\t\t\tvar canvas = this._colorCanvas;\n\t\t\tvar context = canvas.getContext(\"2d\");\n\t\t\tcontext.clearRect(0, 0, tileWidth, tileHeight);\n\n\t\t\tcontext.drawImage(\n\t\t\t\tthis._options.tileSet,\n\t\t\t\ttile[0], tile[1], tileWidth, tileHeight,\n\t\t\t\t0, 0, tileWidth, tileHeight\n\t\t\t);\n\n\t\t\tif (fg != \"transparent\") {\n\t\t\t\tcontext.fillStyle = fg;\n\t\t\t\tcontext.globalCompositeOperation = \"source-atop\";\n\t\t\t\tcontext.fillRect(0, 0, tileWidth, tileHeight);\n\t\t\t}\n\n\t\t\tif (bg != \"transparent\") {\n\t\t\t\tcontext.fillStyle = bg;\n\t\t\t\tcontext.globalCompositeOperation = \"destination-over\";\n\t\t\t\tcontext.fillRect(0, 0, tileWidth, tileHeight);\n\t\t\t}\n\n\t\t\tthis._context.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n\n\t\t} else { /* no colorizing, easy */\n\t\t\tthis._context.drawImage(\n\t\t\t\tthis._options.tileSet,\n\t\t\t\ttile[0], tile[1], tileWidth, tileHeight,\n\t\t\t\tx*tileWidth, y*tileHeight, tileWidth, tileHeight\n\t\t\t);\n\t\t}\n\t}\n}\n\nROT.Display.Tile.prototype.computeSize = function(availWidth, availHeight) {\n\tvar width = Math.floor(availWidth / this._options.tileWidth);\n\tvar height = Math.floor(availHeight / this._options.tileHeight);\n\treturn [width, height];\n}\n\nROT.Display.Tile.prototype.computeFontSize = function(availWidth, availHeight) {\n\tvar width = Math.floor(availWidth / this._options.width);\n\tvar height = Math.floor(availHeight / this._options.height);\n\treturn [width, height];\n}\n\nROT.Display.Tile.prototype.eventToPosition = function(x, y) {\n\treturn [Math.floor(x/this._options.tileWidth), Math.floor(y/this._options.tileHeight)];\n}\n/**\n * @namespace\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nROT.RNG = {\n\t/**\n\t * @returns {number} \n\t */\n\tgetSeed: function() {\n\t\treturn this._seed;\n\t},\n\n\t/**\n\t * @param {number} seed Seed the number generator\n\t */\n\tsetSeed: function(seed) {\n\t\tseed = (seed < 1 ? 1/seed : seed);\n\n\t\tthis._seed = seed;\n\t\tthis._s0 = (seed >>> 0) * this._frac;\n\n\t\tseed = (seed*69069 + 1) >>> 0;\n\t\tthis._s1 = seed * this._frac;\n\n\t\tseed = (seed*69069 + 1) >>> 0;\n\t\tthis._s2 = seed * this._frac;\n\n\t\tthis._c = 1;\n\t\treturn this;\n\t},\n\n\t/**\n\t * @returns {float} Pseudorandom value [0,1), uniformly distributed\n\t */\n\tgetUniform: function() {\n\t\tvar t = 2091639 * this._s0 + this._c * this._frac;\n\t\tthis._s0 = this._s1;\n\t\tthis._s1 = this._s2;\n\t\tthis._c = t | 0;\n\t\tthis._s2 = t - this._c;\n\t\treturn this._s2;\n\t},\n\n\t/**\n\t * @param {int} lowerBound The lower end of the range to return a value from, inclusive\n\t * @param {int} upperBound The upper end of the range to return a value from, inclusive\n\t * @returns {int} Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n\t */\n\tgetUniformInt: function(lowerBound, upperBound) {\n\t\tvar max = Math.max(lowerBound, upperBound);\n\t\tvar min = Math.min(lowerBound, upperBound);\n\t\treturn Math.floor(this.getUniform() * (max - min + 1)) + min;\n\t},\n\n\t/**\n\t * @param {float} [mean=0] Mean value\n\t * @param {float} [stddev=1] Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n\t * @returns {float} A normally distributed pseudorandom value\n\t */\n\tgetNormal: function(mean, stddev) {\n\t\tdo {\n\t\t\tvar u = 2*this.getUniform()-1;\n\t\t\tvar v = 2*this.getUniform()-1;\n\t\t\tvar r = u*u + v*v;\n\t\t} while (r > 1 || r == 0);\n\n\t\tvar gauss = u * Math.sqrt(-2*Math.log(r)/r);\n\t\treturn (mean || 0) + gauss*(stddev || 1);\n\t},\n\n\t/**\n\t * @returns {int} Pseudorandom value [1,100] inclusive, uniformly distributed\n\t */\n\tgetPercentage: function() {\n\t\treturn 1 + Math.floor(this.getUniform()*100);\n\t},\n\t\n\t/**\n\t * @param {object} data key=whatever, value=weight (relative probability)\n\t * @returns {string} whatever\n\t */\n\tgetWeightedValue: function(data) {\n\t\tvar total = 0;\n\t\t\n\t\tfor (var id in data) {\n\t\t\ttotal += data[id];\n\t\t}\n\t\tvar random = this.getUniform()*total;\n\t\t\n\t\tvar part = 0;\n\t\tfor (var id in data) {\n\t\t\tpart += data[id];\n\t\t\tif (random < part) { return id; }\n\t\t}\n\n\t\t// If by some floating-point annoyance we have\n\t\t// random >= total, just return the last id.\n\t\treturn id;\n\t},\n\n\t/**\n\t * Get RNG state. Useful for storing the state and re-setting it via setState.\n\t * @returns {?} Internal state\n\t */\n\tgetState: function() {\n\t\treturn [this._s0, this._s1, this._s2, this._c];\n\t},\n\n\t/**\n\t * Set a previously retrieved state.\n\t * @param {?} state\n\t */\n\tsetState: function(state) {\n\t\tthis._s0 = state[0];\n\t\tthis._s1 = state[1];\n\t\tthis._s2 = state[2];\n\t\tthis._c  = state[3];\n\t\treturn this;\n\t},\n\n\t/**\n\t * Returns a cloned RNG\n\t */\n\tclone: function() {\n\t\tvar clone = Object.create(this);\n\t\tclone.setState(this.getState());\n\t\treturn clone;\n\t},\n\n\t_s0: 0,\n\t_s1: 0,\n\t_s2: 0,\n\t_c: 0,\n\t_frac: 2.3283064365386963e-10 /* 2^-32 */\n}\n\nROT.RNG.setSeed(Date.now());\n/**\n * @class (Markov process)-based string generator. \n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>. \n * Offers configurable order and prior.\n * @param {object} [options]\n * @param {bool} [options.words=false] Use word mode?\n * @param {int} [options.order=3]\n * @param {float} [options.prior=0.001]\n */\nROT.StringGenerator = function(options) {\n\tthis._options = {\n\t\twords: false,\n\t\torder: 3,\n\t\tprior: 0.001\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\n\tthis._boundary = String.fromCharCode(0);\n\tthis._suffix = this._boundary;\n\tthis._prefix = [];\n\tfor (var i=0;i<this._options.order;i++) { this._prefix.push(this._boundary); }\n\n\tthis._priorValues = {};\n\tthis._priorValues[this._boundary] = this._options.prior;\n\n\tthis._data = {};\n}\n\n/**\n * Remove all learning data\n */\nROT.StringGenerator.prototype.clear = function() {\n\tthis._data = {};\n\tthis._priorValues = {};\n}\n\n/**\n * @returns {string} Generated string\n */\nROT.StringGenerator.prototype.generate = function() {\n\tvar result = [this._sample(this._prefix)];\n\twhile (result[result.length-1] != this._boundary) {\n\t\tresult.push(this._sample(result));\n\t}\n\treturn this._join(result.slice(0, -1));\n}\n\n/**\n * Observe (learn) a string from a training set\n */\nROT.StringGenerator.prototype.observe = function(string) {\n\tvar tokens = this._split(string);\n\n\tfor (var i=0; i<tokens.length; i++) {\n\t\tthis._priorValues[tokens[i]] = this._options.prior;\n\t}\n\n\ttokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n\n\tfor (var i=this._options.order; i<tokens.length; i++) {\n\t\tvar context = tokens.slice(i-this._options.order, i);\n\t\tvar event = tokens[i];\n\t\tfor (var j=0; j<context.length; j++) {\n\t\t\tvar subcontext = context.slice(j);\n\t\t\tthis._observeEvent(subcontext, event);\n\t\t}\n\t}\n}\n\nROT.StringGenerator.prototype.getStats = function() {\n\tvar parts = [];\n\n\tvar priorCount = 0;\n\tfor (var p in this._priorValues) { priorCount++; }\n\tpriorCount--; /* boundary */\n\tparts.push(\"distinct samples: \" + priorCount);\n\n\tvar dataCount = 0;\n\tvar eventCount = 0;\n\tfor (var p in this._data) { \n\t\tdataCount++; \n\t\tfor (var key in this._data[p]) {\n\t\t\teventCount++;\n\t\t}\n\t}\n\tparts.push(\"dictionary size (contexts): \" + dataCount);\n\tparts.push(\"dictionary size (events): \" + eventCount);\n\n\treturn parts.join(\", \");\n}\n\n/**\n * @param {string}\n * @returns {string[]}\n */\nROT.StringGenerator.prototype._split = function(str) {\n\treturn str.split(this._options.words ? /\\s+/ : \"\");\n}\n\n/**\n * @param {string[]}\n * @returns {string} \n */\nROT.StringGenerator.prototype._join = function(arr) {\n\treturn arr.join(this._options.words ? \" \" : \"\");\n}\n\n/**\n * @param {string[]} context\n * @param {string} event\n */\nROT.StringGenerator.prototype._observeEvent = function(context, event) {\n\tvar key = this._join(context);\n\tif (!(key in this._data)) { this._data[key] = {}; }\n\tvar data = this._data[key];\n\n\tif (!(event in data)) { data[event] = 0; }\n\tdata[event]++;\n}\n\n/**\n * @param {string[]}\n * @returns {string}\n */\nROT.StringGenerator.prototype._sample = function(context) {\n\tcontext = this._backoff(context);\n\tvar key = this._join(context);\n\tvar data = this._data[key];\n\n\tvar available = {};\n\n\tif (this._options.prior) {\n\t\tfor (var event in this._priorValues) { available[event] = this._priorValues[event]; }\n\t\tfor (var event in data) { available[event] += data[event]; }\n\t} else { \n\t\tavailable = data;\n\t}\n\n\treturn ROT.RNG.getWeightedValue(available);\n}\n\n/**\n * @param {string[]}\n * @returns {string[]}\n */\nROT.StringGenerator.prototype._backoff = function(context) {\n\tif (context.length > this._options.order) {\n\t\tcontext = context.slice(-this._options.order);\n\t} else if (context.length < this._options.order) {\n\t\tcontext = this._prefix.slice(0, this._options.order - context.length).concat(context);\n\t}\n\n\twhile (!(this._join(context) in this._data) && context.length > 0) { context = context.slice(1); }\n\n\treturn context;\n}\n/**\n * @class Generic event queue: stores events and retrieves them based on their time\n */\nROT.EventQueue = function() {\n\tthis._time = 0;\n\tthis._events = [];\n\tthis._eventTimes = [];\n}\n\n/**\n * @returns {number} Elapsed time\n */\nROT.EventQueue.prototype.getTime = function() {\n\treturn this._time;\n}\n\n/**\n * Clear all scheduled events\n */\nROT.EventQueue.prototype.clear = function() {\n\tthis._events = [];\n\tthis._eventTimes = [];\n\treturn this;\n}\n\n/**\n * @param {?} event\n * @param {number} time\n */\nROT.EventQueue.prototype.add = function(event, time) {\n\tvar index = this._events.length;\n\tfor (var i=0;i<this._eventTimes.length;i++) {\n\t\tif (this._eventTimes[i] > time) {\n\t\t\tindex = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tthis._events.splice(index, 0, event);\n\tthis._eventTimes.splice(index, 0, time);\n}\n\n/**\n * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n * @returns {? || null} The event previously added by addEvent, null if no event available\n */\nROT.EventQueue.prototype.get = function() {\n\tif (!this._events.length) { return null; }\n\n\tvar time = this._eventTimes.splice(0, 1)[0];\n\tif (time > 0) { /* advance */\n\t\tthis._time += time;\n\t\tfor (var i=0;i<this._eventTimes.length;i++) { this._eventTimes[i] -= time; }\n\t}\n\n\treturn this._events.splice(0, 1)[0];\n}\n\n/**\n * Remove an event from the queue\n * @param {?} event\n * @returns {bool} success?\n */\nROT.EventQueue.prototype.remove = function(event) {\n\tvar index = this._events.indexOf(event);\n\tif (index == -1) { return false }\n\tthis._remove(index);\n\treturn true;\n}\n\n/**\n * Remove an event from the queue\n * @param {int} index\n */\nROT.EventQueue.prototype._remove = function(index) {\n\tthis._events.splice(index, 1);\n\tthis._eventTimes.splice(index, 1);\n}\n/**\n * @class Abstract scheduler\n */\nROT.Scheduler = function() {\n\tthis._queue = new ROT.EventQueue();\n\tthis._repeat = [];\n\tthis._current = null;\n}\n\n/**\n * @see ROT.EventQueue#getTime\n */\nROT.Scheduler.prototype.getTime = function() {\n\treturn this._queue.getTime();\n}\n\n/**\n * @param {?} item\n * @param {bool} repeat\n */\nROT.Scheduler.prototype.add = function(item, repeat) {\n\tif (repeat) { this._repeat.push(item); }\n\treturn this;\n}\n\n/**\n * Clear all items\n */\nROT.Scheduler.prototype.clear = function() {\n\tthis._queue.clear();\n\tthis._repeat = [];\n\tthis._current = null;\n\treturn this;\n}\n\n/**\n * Remove a previously added item\n * @param {?} item\n * @returns {bool} successful?\n */\nROT.Scheduler.prototype.remove = function(item) {\n\tvar result = this._queue.remove(item);\n\n\tvar index = this._repeat.indexOf(item);\n\tif (index != -1) { this._repeat.splice(index, 1); }\n\n\tif (this._current == item) { this._current = null; }\n\n\treturn result;\n}\n\n/**\n * Schedule next item\n * @returns {?}\n */\nROT.Scheduler.prototype.next = function() {\n\tthis._current = this._queue.get();\n\treturn this._current;\n}\n/**\n * @class Simple fair scheduler (round-robin style)\n * @augments ROT.Scheduler\n */\nROT.Scheduler.Simple = function() {\n\tROT.Scheduler.call(this);\n}\nROT.Scheduler.Simple.extend(ROT.Scheduler);\n\n/**\n * @see ROT.Scheduler#add\n */\nROT.Scheduler.Simple.prototype.add = function(item, repeat) {\n\tthis._queue.add(item, 0);\n\treturn ROT.Scheduler.prototype.add.call(this, item, repeat);\n}\n\n/**\n * @see ROT.Scheduler#next\n */\nROT.Scheduler.Simple.prototype.next = function() {\n\tif (this._current && this._repeat.indexOf(this._current) != -1) {\n\t\tthis._queue.add(this._current, 0);\n\t}\n\treturn ROT.Scheduler.prototype.next.call(this);\n}\n/**\n * @class Speed-based scheduler\n * @augments ROT.Scheduler\n */\nROT.Scheduler.Speed = function() {\n\tROT.Scheduler.call(this);\n}\nROT.Scheduler.Speed.extend(ROT.Scheduler);\n\n/**\n * @param {object} item anything with \"getSpeed\" method\n * @param {bool} repeat\n * @see ROT.Scheduler#add\n */\nROT.Scheduler.Speed.prototype.add = function(item, repeat) {\n\tthis._queue.add(item, 1/item.getSpeed());\n\treturn ROT.Scheduler.prototype.add.call(this, item, repeat);\n}\n\n/**\n * @see ROT.Scheduler#next\n */\nROT.Scheduler.Speed.prototype.next = function() {\n\tif (this._current && this._repeat.indexOf(this._current) != -1) {\n\t\tthis._queue.add(this._current, 1/this._current.getSpeed());\n\t}\n\treturn ROT.Scheduler.prototype.next.call(this);\n}\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nROT.Scheduler.Action = function() {\n\tROT.Scheduler.call(this);\n\tthis._defaultDuration = 1; /* for newly added */\n\tthis._duration = this._defaultDuration; /* for this._current */\n}\nROT.Scheduler.Action.extend(ROT.Scheduler);\n\n/**\n * @param {object} item\n * @param {bool} repeat\n * @param {number} [time=1]\n * @see ROT.Scheduler#add\n */\nROT.Scheduler.Action.prototype.add = function(item, repeat, time) {\n\tthis._queue.add(item, time || this._defaultDuration);\n\treturn ROT.Scheduler.prototype.add.call(this, item, repeat);\n}\n\nROT.Scheduler.Action.prototype.clear = function() {\n\tthis._duration = this._defaultDuration;\n\treturn ROT.Scheduler.prototype.clear.call(this);\n}\n\nROT.Scheduler.Action.prototype.remove = function(item) {\n\tif (item == this._current) { this._duration = this._defaultDuration; }\n\treturn ROT.Scheduler.prototype.remove.call(this, item);\n}\n\n/**\n * @see ROT.Scheduler#next\n */\nROT.Scheduler.Action.prototype.next = function() {\n\tif (this._current && this._repeat.indexOf(this._current) != -1) {\n\t\tthis._queue.add(this._current, this._duration || this._defaultDuration);\n\t\tthis._duration = this._defaultDuration;\n\t}\n\treturn ROT.Scheduler.prototype.next.call(this);\n}\n\n/**\n * Set duration for the active item\n */\nROT.Scheduler.Action.prototype.setDuration = function(time) {\n\tif (this._current) { this._duration = time; }\n\treturn this;\n}\n/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nROT.Engine = function(scheduler) {\n\tthis._scheduler = scheduler;\n\tthis._lock = 1;\n}\n\n/**\n * Start the main loop. When this call returns, the loop is locked.\n */\nROT.Engine.prototype.start = function() {\n\treturn this.unlock();\n}\n\n/**\n * Interrupt the engine by an asynchronous action\n */\nROT.Engine.prototype.lock = function() {\n\tthis._lock++;\n\treturn this;\n}\n\n/**\n * Resume execution (paused by a previous lock)\n */\nROT.Engine.prototype.unlock = function() {\n\tif (!this._lock) { throw new Error(\"Cannot unlock unlocked engine\"); }\n\tthis._lock--;\n\n\twhile (!this._lock) {\n\t\tvar actor = this._scheduler.next();\n\t\tif (!actor) { return this.lock(); } /* no actors */\n\t\tvar result = actor.act();\n\t\tif (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n\t\t\tthis.lock();\n\t\t\tresult.then(this.unlock.bind(this));\n\t\t}\n\t}\n\n\treturn this;\n}\n/**\n * @class Base map generator\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n */\nROT.Map = function(width, height) {\n\tthis._width = width || ROT.DEFAULT_WIDTH;\n\tthis._height = height || ROT.DEFAULT_HEIGHT;\n};\n\nROT.Map.prototype.create = function(callback) {}\n\nROT.Map.prototype._fillMap = function(value) {\n\tvar map = [];\n\tfor (var i=0;i<this._width;i++) {\n\t\tmap.push([]);\n\t\tfor (var j=0;j<this._height;j++) { map[i].push(value); }\n\t}\n\treturn map;\n}\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nROT.Map.Arena = function(width, height) {\n\tROT.Map.call(this, width, height);\n}\nROT.Map.Arena.extend(ROT.Map);\n\nROT.Map.Arena.prototype.create = function(callback) {\n\tvar w = this._width-1;\n\tvar h = this._height-1;\n\tfor (var i=0;i<=w;i++) {\n\t\tfor (var j=0;j<=h;j++) {\n\t\t\tvar empty = (i && j && i<w && j<h);\n\t\t\tcallback(i, j, empty ? 0 : 1);\n\t\t}\n\t}\n\treturn this;\n}\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nROT.Map.DividedMaze = function(width, height) {\n\tROT.Map.call(this, width, height);\n\tthis._stack = [];\n}\nROT.Map.DividedMaze.extend(ROT.Map);\n\nROT.Map.DividedMaze.prototype.create = function(callback) {\n\tvar w = this._width;\n\tvar h = this._height;\n\t\n\tthis._map = [];\n\t\n\tfor (var i=0;i<w;i++) {\n\t\tthis._map.push([]);\n\t\tfor (var j=0;j<h;j++) {\n\t\t\tvar border = (i == 0 || j == 0 || i+1 == w || j+1 == h);\n\t\t\tthis._map[i].push(border ? 1 : 0);\n\t\t}\n\t}\n\t\n\tthis._stack = [\n\t\t[1, 1, w-2, h-2]\n\t];\n\tthis._process();\n\t\n\tfor (var i=0;i<w;i++) {\n\t\tfor (var j=0;j<h;j++) {\n\t\t\tcallback(i, j, this._map[i][j]);\n\t\t}\n\t}\n\tthis._map = null;\n\treturn this;\n}\n\nROT.Map.DividedMaze.prototype._process = function() {\n\twhile (this._stack.length) {\n\t\tvar room = this._stack.shift(); /* [left, top, right, bottom] */\n\t\tthis._partitionRoom(room);\n\t}\n}\n\nROT.Map.DividedMaze.prototype._partitionRoom = function(room) {\n\tvar availX = [];\n\tvar availY = [];\n\t\n\tfor (var i=room[0]+1;i<room[2];i++) {\n\t\tvar top = this._map[i][room[1]-1];\n\t\tvar bottom = this._map[i][room[3]+1];\n\t\tif (top && bottom && !(i % 2)) { availX.push(i); }\n\t}\n\t\n\tfor (var j=room[1]+1;j<room[3];j++) {\n\t\tvar left = this._map[room[0]-1][j];\n\t\tvar right = this._map[room[2]+1][j];\n\t\tif (left && right && !(j % 2)) { availY.push(j); }\n\t}\n\n\tif (!availX.length || !availY.length) { return; }\n\n\tvar x = availX.random();\n\tvar y = availY.random();\n\t\n\tthis._map[x][y] = 1;\n\t\n\tvar walls = [];\n\t\n\tvar w = []; walls.push(w); /* left part */\n\tfor (var i=room[0]; i<x; i++) { \n\t\tthis._map[i][y] = 1;\n\t\tw.push([i, y]); \n\t}\n\t\n\tvar w = []; walls.push(w); /* right part */\n\tfor (var i=x+1; i<=room[2]; i++) { \n\t\tthis._map[i][y] = 1;\n\t\tw.push([i, y]); \n\t}\n\n\tvar w = []; walls.push(w); /* top part */\n\tfor (var j=room[1]; j<y; j++) { \n\t\tthis._map[x][j] = 1;\n\t\tw.push([x, j]); \n\t}\n\t\n\tvar w = []; walls.push(w); /* bottom part */\n\tfor (var j=y+1; j<=room[3]; j++) { \n\t\tthis._map[x][j] = 1;\n\t\tw.push([x, j]); \n\t}\n\t\t\n\tvar solid = walls.random();\n\tfor (var i=0;i<walls.length;i++) {\n\t\tvar w = walls[i];\n\t\tif (w == solid) { continue; }\n\t\t\n\t\tvar hole = w.random();\n\t\tthis._map[hole[0]][hole[1]] = 0;\n\t}\n\n\tthis._stack.push([room[0], room[1], x-1, y-1]); /* left top */\n\tthis._stack.push([x+1, room[1], room[2], y-1]); /* right top */\n\tthis._stack.push([room[0], y+1, x-1, room[3]]); /* left bottom */\n\tthis._stack.push([x+1, y+1, room[2], room[3]]); /* right bottom */\n}\n/**\n * @class Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n * @augments ROT.Map\n */\nROT.Map.IceyMaze = function(width, height, regularity) {\n\tROT.Map.call(this, width, height);\n\tthis._regularity = regularity || 0;\n}\nROT.Map.IceyMaze.extend(ROT.Map);\n\nROT.Map.IceyMaze.prototype.create = function(callback) {\n\tvar width = this._width;\n\tvar height = this._height;\n\t\n\tvar map = this._fillMap(1);\n\t\n\twidth -= (width % 2 ? 1 : 2);\n\theight -= (height % 2 ? 1 : 2);\n\n\tvar cx = 0;\n\tvar cy = 0;\n\tvar nx = 0;\n\tvar ny = 0;\n\n\tvar done = 0;\n\tvar blocked = false;\n\tvar dirs = [\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0]\n\t];\n\tdo {\n\t\tcx = 1 + 2*Math.floor(ROT.RNG.getUniform()*(width-1) / 2);\n\t\tcy = 1 + 2*Math.floor(ROT.RNG.getUniform()*(height-1) / 2);\n\n\t\tif (!done) { map[cx][cy] = 0; }\n\t\t\n\t\tif (!map[cx][cy]) {\n\t\t\tthis._randomize(dirs);\n\t\t\tdo {\n\t\t\t\tif (Math.floor(ROT.RNG.getUniform()*(this._regularity+1)) == 0) { this._randomize(dirs); }\n\t\t\t\tblocked = true;\n\t\t\t\tfor (var i=0;i<4;i++) {\n\t\t\t\t\tnx = cx + dirs[i][0]*2;\n\t\t\t\t\tny = cy + dirs[i][1]*2;\n\t\t\t\t\tif (this._isFree(map, nx, ny, width, height)) {\n\t\t\t\t\t\tmap[nx][ny] = 0;\n\t\t\t\t\t\tmap[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcx = nx;\n\t\t\t\t\t\tcy = ny;\n\t\t\t\t\t\tblocked = false;\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} while (!blocked);\n\t\t}\n\t} while (done+1 < width*height/4);\n\t\n\tfor (var i=0;i<this._width;i++) {\n\t\tfor (var j=0;j<this._height;j++) {\n\t\t\tcallback(i, j, map[i][j]);\n\t\t}\n\t}\n\tthis._map = null;\n\treturn this;\n}\n\nROT.Map.IceyMaze.prototype._randomize = function(dirs) {\n\tfor (var i=0;i<4;i++) {\n\t\tdirs[i][0] = 0;\n\t\tdirs[i][1] = 0;\n\t}\n\t\n\tswitch (Math.floor(ROT.RNG.getUniform()*4)) {\n\t\tcase 0:\n\t\t\tdirs[0][0] = -1; dirs[1][0] = 1;\n\t\t\tdirs[2][1] = -1; dirs[3][1] = 1;\n\t\tbreak;\n\t\tcase 1:\n\t\t\tdirs[3][0] = -1; dirs[2][0] = 1;\n\t\t\tdirs[1][1] = -1; dirs[0][1] = 1;\n\t\tbreak;\n\t\tcase 2:\n\t\t\tdirs[2][0] = -1; dirs[3][0] = 1;\n\t\t\tdirs[0][1] = -1; dirs[1][1] = 1;\n\t\tbreak;\n\t\tcase 3:\n\t\t\tdirs[1][0] = -1; dirs[0][0] = 1;\n\t\t\tdirs[3][1] = -1; dirs[2][1] = 1;\n\t\tbreak;\n\t}\n}\n\nROT.Map.IceyMaze.prototype._isFree = function(map, x, y, width, height) {\n\tif (x < 1 || y < 1 || x >= width || y >= height) { return false; }\n\treturn map[x][y];\n}\n/**\n * @class Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n * @augments ROT.Map\n */\nROT.Map.EllerMaze = function(width, height) {\n\tROT.Map.call(this, width, height);\n}\nROT.Map.EllerMaze.extend(ROT.Map);\n\nROT.Map.EllerMaze.prototype.create = function(callback) {\n\tvar map = this._fillMap(1);\n\tvar w = Math.ceil((this._width-2)/2);\n\t\n\tvar rand = 9/24;\n\t\n\tvar L = [];\n\tvar R = [];\n\t\n\tfor (var i=0;i<w;i++) {\n\t\tL.push(i);\n\t\tR.push(i);\n\t}\n\tL.push(w-1); /* fake stop-block at the right side */\n\n\tfor (var j=1;j+3<this._height;j+=2) {\n\t\t/* one row */\n\t\tfor (var i=0;i<w;i++) {\n\t\t\t/* cell coords (will be always empty) */\n\t\t\tvar x = 2*i+1;\n\t\t\tvar y = j;\n\t\t\tmap[x][y] = 0;\n\t\t\t\n\t\t\t/* right connection */\n\t\t\tif (i != L[i+1] && ROT.RNG.getUniform() > rand) {\n\t\t\t\tthis._addToList(i, L, R);\n\t\t\t\tmap[x+1][y] = 0;\n\t\t\t}\n\t\t\t\n\t\t\t/* bottom connection */\n\t\t\tif (i != L[i] && ROT.RNG.getUniform() > rand) {\n\t\t\t\t/* remove connection */\n\t\t\t\tthis._removeFromList(i, L, R);\n\t\t\t} else {\n\t\t\t\t/* create connection */\n\t\t\t\tmap[x][y+1] = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t/* last row */\n\tfor (var i=0;i<w;i++) {\n\t\t/* cell coords (will be always empty) */\n\t\tvar x = 2*i+1;\n\t\tvar y = j;\n\t\tmap[x][y] = 0;\n\t\t\n\t\t/* right connection */\n\t\tif (i != L[i+1] && (i == L[i] || ROT.RNG.getUniform() > rand)) {\n\t\t\t/* dig right also if the cell is separated, so it gets connected to the rest of maze */\n\t\t\tthis._addToList(i, L, R);\n\t\t\tmap[x+1][y] = 0;\n\t\t}\n\t\t\n\t\tthis._removeFromList(i, L, R);\n\t}\n\t\n\tfor (var i=0;i<this._width;i++) {\n\t\tfor (var j=0;j<this._height;j++) {\n\t\t\tcallback(i, j, map[i][j]);\n\t\t}\n\t}\n\t\n\treturn this;\n}\n\n/**\n * Remove \"i\" from its list\n */\nROT.Map.EllerMaze.prototype._removeFromList = function(i, L, R) {\n\tR[L[i]] = R[i];\n\tL[R[i]] = L[i];\n\tR[i] = i;\n\tL[i] = i;\n}\n\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nROT.Map.EllerMaze.prototype._addToList = function(i, L, R) {\n\tR[L[i+1]] = R[i];\n\tL[R[i]] = L[i+1];\n\tR[i] = i+1;\n\tL[i+1] = i;\n}\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nROT.Map.Cellular = function(width, height, options) {\n\tROT.Map.call(this, width, height);\n\tthis._options = {\n\t\tborn: [5, 6, 7, 8],\n\t\tsurvive: [4, 5, 6, 7, 8],\n\t\ttopology: 8,\n\t\tconnected: false\n\t};\n\tthis.setOptions(options);\n\t\n\tthis._dirs = ROT.DIRS[this._options.topology];\n\tthis._map = this._fillMap(0);\n}\nROT.Map.Cellular.extend(ROT.Map);\n\n/**\n * Fill the map with random values\n * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n */\nROT.Map.Cellular.prototype.randomize = function(probability) {\n\tfor (var i=0;i<this._width;i++) {\n\t\tfor (var j=0;j<this._height;j++) {\n\t\t\tthis._map[i][j] = (ROT.RNG.getUniform() < probability ? 1 : 0);\n\t\t}\n\t}\n\treturn this;\n}\n\n/**\n * Change options.\n * @see ROT.Map.Cellular\n */\nROT.Map.Cellular.prototype.setOptions = function(options) {\n\tfor (var p in options) { this._options[p] = options[p]; }\n}\n\nROT.Map.Cellular.prototype.set = function(x, y, value) {\n\tthis._map[x][y] = value;\n}\n\nROT.Map.Cellular.prototype.create = function(callback) {\n\tvar newMap = this._fillMap(0);\n\tvar born = this._options.born;\n\tvar survive = this._options.survive;\n\n\n\tfor (var j=0;j<this._height;j++) {\n\t\tvar widthStep = 1;\n\t\tvar widthStart = 0;\n\t\tif (this._options.topology == 6) { \n\t\t\twidthStep = 2;\n\t\t\twidthStart = j%2;\n\t\t}\n\n\t\tfor (var i=widthStart; i<this._width; i+=widthStep) {\n\n\t\t\tvar cur = this._map[i][j];\n\t\t\tvar ncount = this._getNeighbors(i, j);\n\t\t\t\n\t\t\tif (cur && survive.indexOf(ncount) != -1) { /* survive */\n\t\t\t\tnewMap[i][j] = 1;\n\t\t\t} else if (!cur && born.indexOf(ncount) != -1) { /* born */\n\t\t\t\tnewMap[i][j] = 1;\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\t\n\tthis._map = newMap;\n\n\tif (this._options.connected) { this._completeMaze(); } // optionally connect every space\n\n\tif (!callback) { return; }\n\n\tfor (var j=0;j<this._height;j++) {\n\t\tvar widthStep = 1;\n\t\tvar widthStart = 0;\n\t\tif (this._options.topology == 6) { \n\t\t\twidthStep = 2;\n\t\t\twidthStart = j%2;\n\t\t}\n\t\tfor (var i=widthStart; i<this._width; i+=widthStep) {\n\t\t\tcallback(i, j, newMap[i][j]);\n\t\t}\n\t}\n}\n\n/**\n * Get neighbor count at [i,j] in this._map\n */\nROT.Map.Cellular.prototype._getNeighbors = function(cx, cy) {\n\tvar result = 0;\n\tfor (var i=0;i<this._dirs.length;i++) {\n\t\tvar dir = this._dirs[i];\n\t\tvar x = cx + dir[0];\n\t\tvar y = cy + dir[1];\n\t\t\n\t\tif (x < 0 || x >= this._width || x < 0 || y >= this._width) { continue; }\n\t\tresult += (this._map[x][y] == 1 ? 1 : 0);\n\t}\n\t\n\treturn result;\n}\n\n/**\n * Make sure every non-wall space is accessible.\n */\nROT.Map.Cellular.prototype._completeMaze = function() {\n\tvar allFreeSpace = [];\n\tvar notConnected = {};\n\t// find all free space\n\tfor (var x = 0; x < this._width; x++) {\n\t\tfor (var y = 0; y < this._height; y++) {\n\t\t\tif (this._freeSpace(x, y)) {\n\t\t\t\tvar p = [x, y];\n\t\t\t\tnotConnected[this._pointKey(p)] = p;\n\t\t\t\tallFreeSpace.push([x, y]);\n\t\t\t}\n\t\t}\n\t}\n\tvar start = allFreeSpace[ROT.RNG.getUniformInt(0, allFreeSpace.length - 1)];\n\n\tvar key = this._pointKey(start);\n\tvar connected = {};\n\tconnected[key] = start;\n\tdelete notConnected[key]\n\n\t// find what's connected to the starting point\n\tthis._findConnected(connected, notConnected, [start]);\n\n\twhile (Object.keys(notConnected).length > 0) {\n\n\t\t// find two points from notConnected to connected\n\t\tvar p = this._getFromTo(connected, notConnected);\n\t\tvar from = p[0]; // notConnected\n\t\tvar to = p[1]; // connected\n\n\t\t// find everything connected to the starting point\n\t\tvar local = {};\n\t\tlocal[this._pointKey(from)] = from;\n\t\tthis._findConnected(local, notConnected, [from], true);\n\n\t\t// connect to a connected square\n\t\tthis._tunnelToConnected(to, from, connected, notConnected);\n\n\t\t// now all of local is connected\n\t\tfor (var k in local) {\n\t\t\tvar pp = local[k];\n\t\t\tthis._map[pp[0]][pp[1]] = 0;\n\t\t\tconnected[k] = pp;\n\t\t\tdelete notConnected[k];\n\t\t}\n\t}\n}\n\n/**\n * Find random points to connect. Search for the closest point in the larger space. \n * This is to minimize the length of the passage while maintaining good performance.\n */\nROT.Map.Cellular.prototype._getFromTo = function(connected, notConnected) {\n\tvar from, to, d;\n\tvar connectedKeys = Object.keys(connected);\n\tvar notConnectedKeys = Object.keys(notConnected);\n\tfor (var i = 0; i < 5; i++) {\n\t\tif (connectedKeys.length < notConnectedKeys.length) {\n\t\t\tvar keys = connectedKeys;\n\t\t\tto = connected[keys[ROT.RNG.getUniformInt(0, keys.length - 1)]]\n\t\t\tfrom = this._getClosest(to, notConnected);\n\t\t} else {\n\t\t\tvar keys = notConnectedKeys;\n\t\t\tfrom = notConnected[keys[ROT.RNG.getUniformInt(0, keys.length - 1)]]\n\t\t\tto = this._getClosest(from, connected);\n\t\t}\n\t\td = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n\t\tif (d < 64) {\n\t\t\tbreak;\n\t\t}\n\t}\n\t// console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n\treturn [from, to];\n}\n\nROT.Map.Cellular.prototype._getClosest = function(point, space) {\n\tvar minPoint = null;\n\tvar minDist = null;\n\tfor (k in space) {\n\t\tvar p = space[k];\n\t\tvar d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n\t\tif (minDist == null || d < minDist) {\n\t\t\tminDist = d;\n\t\t\tminPoint = p;\n\t\t}\n\t}\n\treturn minPoint;\n}\n\nROT.Map.Cellular.prototype._findConnected = function(connected, notConnected, stack, keepNotConnected) {\n\twhile(stack.length > 0) {\n\t\tvar p = stack.splice(0, 1)[0];\n\t\tvar tests = [\n\t\t\t[p[0] + 1, p[1]],\n\t\t\t[p[0] - 1, p[1]],\n\t\t\t[p[0],     p[1] + 1],\n\t\t\t[p[0],     p[1] - 1]\n\t\t];\n\t\tfor (var i = 0; i < tests.length; i++) {\n\t\t\tvar key = this._pointKey(tests[i]);\n\t\t\tif (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1])) {\n\t\t\t\tconnected[key] = tests[i];\n\t\t\t\tif (!keepNotConnected) {\n\t\t\t\t\tdelete notConnected[key];\n\t\t\t\t}\n\t\t\t\tstack.push(tests[i]);\n\t\t\t}\n\t\t}\n\t}\n}\n\nROT.Map.Cellular.prototype._tunnelToConnected = function(to, from, connected, notConnected) {\n\tvar key = this._pointKey(from);\n\tvar a, b;\n\tif (from[0] < to[0]) {\n\t\ta = from;\n\t\tb = to;\n\t} else {\n\t\ta = to;\n\t\tb = from;\n\t}\n\tfor (var xx = a[0]; xx <= b[0]; xx++) {\n\t\tthis._map[xx][a[1]] = 0;\n\t\tvar p = [xx, a[1]];\n\t\tvar pkey = this._pointKey(p);\n\t\tconnected[pkey] = p;\n\t\tdelete notConnected[pkey];\n\t}\n\n\t// x is now fixed\n\tvar x = b[0];\n\n\tif (from[1] < to[1]) {\n\t\ta = from;\n\t\tb = to;\n\t} else {\n\t\ta = to;\n\t\tb = from;\n\t}\n\tfor (var yy = a[1]; yy < b[1]; yy++) {\n\t\tthis._map[x][yy] = 0;\n\t\tvar p = [x, yy];\n\t\tvar pkey = this._pointKey(p);\n\t\tconnected[pkey] = p;\n\t\tdelete notConnected[pkey];\n\t}\n}\n\nROT.Map.Cellular.prototype._freeSpace = function(x, y) {\n\treturn x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] != 1;\n}\n\nROT.Map.Cellular.prototype._pointKey = function(p) {\n\treturn p[0] + \".\" + p[1];\n}\n\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nROT.Map.Dungeon = function(width, height) {\n\tROT.Map.call(this, width, height);\n\tthis._rooms = []; /* list of all rooms */\n\tthis._corridors = [];\n}\nROT.Map.Dungeon.extend(ROT.Map);\n\n/**\n * Get all generated rooms\n * @returns {ROT.Map.Feature.Room[]}\n */\nROT.Map.Dungeon.prototype.getRooms = function() {\n\treturn this._rooms;\n}\n\n/**\n * Get all generated corridors\n * @returns {ROT.Map.Feature.Corridor[]}\n */\nROT.Map.Dungeon.prototype.getCorridors = function() {\n\treturn this._corridors;\n}\n/**\n * @class Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at \n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n * @augments ROT.Map.Dungeon\n */\nROT.Map.Digger = function(width, height, options) {\n\tROT.Map.Dungeon.call(this, width, height);\n\t\n\tthis._options = {\n\t\troomWidth: [3, 9], /* room minimum and maximum width */\n\t\troomHeight: [3, 5], /* room minimum and maximum height */\n\t\tcorridorLength: [3, 10], /* corridor minimum and maximum length */\n\t\tdugPercentage: 0.2, /* we stop after this percentage of level area has been dug out */\n\t\ttimeLimit: 1000 /* we stop after this much time has passed (msec) */\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\t\n\tthis._features = {\n\t\t\"Room\": 4,\n\t\t\"Corridor\": 4\n\t}\n\tthis._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n\tthis._walls = {}; /* these are available for digging */\n\t\n\tthis._digCallback = this._digCallback.bind(this);\n\tthis._canBeDugCallback = this._canBeDugCallback.bind(this);\n\tthis._isWallCallback = this._isWallCallback.bind(this);\n\tthis._priorityWallCallback = this._priorityWallCallback.bind(this);\n}\nROT.Map.Digger.extend(ROT.Map.Dungeon);\n\n/**\n * Create a map\n * @see ROT.Map#create\n */\nROT.Map.Digger.prototype.create = function(callback) {\n\tthis._rooms = [];\n\tthis._corridors = [];\n\tthis._map = this._fillMap(1);\n\tthis._walls = {};\n\tthis._dug = 0;\n\tvar area = (this._width-2) * (this._height-2);\n\n\tthis._firstRoom();\n\t\n\tvar t1 = Date.now();\n\n\tdo {\n\t\tvar t2 = Date.now();\n\t\tif (t2 - t1 > this._options.timeLimit) { break; }\n\n\t\t/* find a good wall */\n\t\tvar wall = this._findWall();\n\t\tif (!wall) { break; } /* no more walls */\n\t\t\n\t\tvar parts = wall.split(\",\");\n\t\tvar x = parseInt(parts[0]);\n\t\tvar y = parseInt(parts[1]);\n\t\tvar dir = this._getDiggingDirection(x, y);\n\t\tif (!dir) { continue; } /* this wall is not suitable */\n\t\t\n//\t\tconsole.log(\"wall\", x, y);\n\n\t\t/* try adding a feature */\n\t\tvar featureAttempts = 0;\n\t\tdo {\n\t\t\tfeatureAttempts++;\n\t\t\tif (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n\t\t\t\t//if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n\t\t\t\tthis._removeSurroundingWalls(x, y);\n\t\t\t\tthis._removeSurroundingWalls(x-dir[0], y-dir[1]);\n\t\t\t\tbreak; \n\t\t\t}\n\t\t} while (featureAttempts < this._featureAttempts);\n\t\t\n\t\tvar priorityWalls = 0;\n\t\tfor (var id in this._walls) { \n\t\t\tif (this._walls[id] > 1) { priorityWalls++; }\n\t\t}\n\n\t} while (this._dug/area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n\n\tthis._addDoors();\n\n\tif (callback) {\n\t\tfor (var i=0;i<this._width;i++) {\n\t\t\tfor (var j=0;j<this._height;j++) {\n\t\t\t\tcallback(i, j, this._map[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis._walls = {};\n\tthis._map = null;\n\n\treturn this;\n}\n\nROT.Map.Digger.prototype._digCallback = function(x, y, value) {\n\tif (value == 0 || value == 2) { /* empty */\n\t\tthis._map[x][y] = 0;\n\t\tthis._dug++;\n\t} else { /* wall */\n\t\tthis._walls[x+\",\"+y] = 1;\n\t}\n}\n\nROT.Map.Digger.prototype._isWallCallback = function(x, y) {\n\tif (x < 0 || y < 0 || x >= this._width || y >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\nROT.Map.Digger.prototype._canBeDugCallback = function(x, y) {\n\tif (x < 1 || y < 1 || x+1 >= this._width || y+1 >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\nROT.Map.Digger.prototype._priorityWallCallback = function(x, y) {\n\tthis._walls[x+\",\"+y] = 2;\n}\n\nROT.Map.Digger.prototype._firstRoom = function() {\n\tvar cx = Math.floor(this._width/2);\n\tvar cy = Math.floor(this._height/2);\n\tvar room = ROT.Map.Feature.Room.createRandomCenter(cx, cy, this._options);\n\tthis._rooms.push(room);\n\troom.create(this._digCallback);\n}\n\n/**\n * Get a suitable wall\n */\nROT.Map.Digger.prototype._findWall = function() {\n\tvar prio1 = [];\n\tvar prio2 = [];\n\tfor (var id in this._walls) {\n\t\tvar prio = this._walls[id];\n\t\tif (prio == 2) { \n\t\t\tprio2.push(id); \n\t\t} else {\n\t\t\tprio1.push(id);\n\t\t}\n\t}\n\t\n\tvar arr = (prio2.length ? prio2 : prio1);\n\tif (!arr.length) { return null; } /* no walls :/ */\n\t\n\tvar id = arr.random();\n\tdelete this._walls[id];\n\n\treturn id;\n}\n\n/**\n * Tries adding a feature\n * @returns {bool} was this a successful try?\n */\nROT.Map.Digger.prototype._tryFeature = function(x, y, dx, dy) {\n\tvar feature = ROT.RNG.getWeightedValue(this._features);\n\tfeature = ROT.Map.Feature[feature].createRandomAt(x, y, dx, dy, this._options);\n\t\n\tif (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n//\t\tconsole.log(\"not valid\");\n//\t\tfeature.debug();\n\t\treturn false;\n\t}\n\t\n\tfeature.create(this._digCallback);\n//\tfeature.debug();\n\n\tif (feature instanceof ROT.Map.Feature.Room) { this._rooms.push(feature); }\n\tif (feature instanceof ROT.Map.Feature.Corridor) { \n\t\tfeature.createPriorityWalls(this._priorityWallCallback);\n\t\tthis._corridors.push(feature); \n\t}\n\t\n\treturn true;\n}\n\nROT.Map.Digger.prototype._removeSurroundingWalls = function(cx, cy) {\n\tvar deltas = ROT.DIRS[4];\n\n\tfor (var i=0;i<deltas.length;i++) {\n\t\tvar delta = deltas[i];\n\t\tvar x = cx + delta[0];\n\t\tvar y = cy + delta[1];\n\t\tdelete this._walls[x+\",\"+y];\n\t\tvar x = cx + 2*delta[0];\n\t\tvar y = cy + 2*delta[1];\n\t\tdelete this._walls[x+\",\"+y];\n\t}\n}\n\n/**\n * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n */\nROT.Map.Digger.prototype._getDiggingDirection = function(cx, cy) {\n\tif (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) { return null; }\n\n\tvar result = null;\n\tvar deltas = ROT.DIRS[4];\n\t\n\tfor (var i=0;i<deltas.length;i++) {\n\t\tvar delta = deltas[i];\n\t\tvar x = cx + delta[0];\n\t\tvar y = cy + delta[1];\n\t\t\n\t\tif (!this._map[x][y]) { /* there already is another empty neighbor! */\n\t\t\tif (result) { return null; }\n\t\t\tresult = delta;\n\t\t}\n\t}\n\t\n\t/* no empty neighbor */\n\tif (!result) { return null; }\n\t\n\treturn [-result[0], -result[1]];\n}\n\n/**\n * Find empty spaces surrounding rooms, and apply doors.\n */\nROT.Map.Digger.prototype._addDoors = function() {\n\tvar data = this._map;\n\tvar isWallCallback = function(x, y) {\n\t\treturn (data[x][y] == 1);\n\t}\n\tfor (var i = 0; i < this._rooms.length; i++ ) {\n\t\tvar room = this._rooms[i];\n\t\troom.clearDoors();\n\t\troom.addDoors(isWallCallback);\n\t}\n}\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nROT.Map.Uniform = function(width, height, options) {\n\tROT.Map.Dungeon.call(this, width, height);\n\n\tthis._options = {\n\t\troomWidth: [3, 9], /* room minimum and maximum width */\n\t\troomHeight: [3, 5], /* room minimum and maximum height */\n\t\troomDugPercentage: 0.1, /* we stop after this percentage of level area has been dug out by rooms */\n\t\ttimeLimit: 1000 /* we stop after this much time has passed (msec) */\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\n\tthis._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n\tthis._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n\n\tthis._connected = []; /* list of already connected rooms */\n\tthis._unconnected = []; /* list of remaining unconnected rooms */\n\t\n\tthis._digCallback = this._digCallback.bind(this);\n\tthis._canBeDugCallback = this._canBeDugCallback.bind(this);\n\tthis._isWallCallback = this._isWallCallback.bind(this);\n}\nROT.Map.Uniform.extend(ROT.Map.Dungeon);\n\n/**\n * Create a map. If the time limit has been hit, returns null.\n * @see ROT.Map#create\n */\nROT.Map.Uniform.prototype.create = function(callback) {\n\tvar t1 = Date.now();\n\twhile (1) {\n\t\tvar t2 = Date.now();\n\t\tif (t2 - t1 > this._options.timeLimit) { return null; } /* time limit! */\n\t\n\t\tthis._map = this._fillMap(1);\n\t\tthis._dug = 0;\n\t\tthis._rooms = [];\n\t\tthis._unconnected = [];\n\t\tthis._generateRooms();\n\t\tif (this._rooms.length < 2) { continue; }\n\t\tif (this._generateCorridors()) { break; }\n\t}\n\t\n\tif (callback) {\n\t\tfor (var i=0;i<this._width;i++) {\n\t\t\tfor (var j=0;j<this._height;j++) {\n\t\t\t\tcallback(i, j, this._map[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn this;\n}\n\n/**\n * Generates a suitable amount of rooms\n */\nROT.Map.Uniform.prototype._generateRooms = function() {\n\tvar w = this._width-2;\n\tvar h = this._height-2;\n\n\tdo {\n\t\tvar room = this._generateRoom();\n\t\tif (this._dug/(w*h) > this._options.roomDugPercentage) { break; } /* achieved requested amount of free space */\n\t} while (room);\n\n\t/* either enough rooms, or not able to generate more of them :) */\n}\n\n/**\n * Try to generate one room\n */\nROT.Map.Uniform.prototype._generateRoom = function() {\n\tvar count = 0;\n\twhile (count < this._roomAttempts) {\n\t\tcount++;\n\t\t\n\t\tvar room = ROT.Map.Feature.Room.createRandom(this._width, this._height, this._options);\n\t\tif (!room.isValid(this._isWallCallback, this._canBeDugCallback)) { continue; }\n\t\t\n\t\troom.create(this._digCallback);\n\t\tthis._rooms.push(room);\n\t\treturn room;\n\t} \n\n\t/* no room was generated in a given number of attempts */\n\treturn null;\n}\n\n/**\n * Generates connectors beween rooms\n * @returns {bool} success Was this attempt successfull?\n */\nROT.Map.Uniform.prototype._generateCorridors = function() {\n\tvar cnt = 0;\n\twhile (cnt < this._corridorAttempts) {\n\t\tcnt++;\n\t\tthis._corridors = [];\n\n\t\t/* dig rooms into a clear map */\n\t\tthis._map = this._fillMap(1);\n\t\tfor (var i=0;i<this._rooms.length;i++) { \n\t\t\tvar room = this._rooms[i];\n\t\t\troom.clearDoors();\n\t\t\troom.create(this._digCallback); \n\t\t}\n\n\t\tthis._unconnected = this._rooms.slice().randomize();\n\t\tthis._connected = [];\n\t\tif (this._unconnected.length) { this._connected.push(this._unconnected.pop()); } /* first one is always connected */\n\t\t\n\t\twhile (1) {\n\t\t\t/* 1. pick random connected room */\n\t\t\tvar connected = this._connected.random();\n\t\t\t\n\t\t\t/* 2. find closest unconnected */\n\t\t\tvar room1 = this._closestRoom(this._unconnected, connected);\n\t\t\t\n\t\t\t/* 3. connect it to closest connected */\n\t\t\tvar room2 = this._closestRoom(this._connected, room1);\n\t\t\t\n\t\t\tvar ok = this._connectRooms(room1, room2);\n\t\t\tif (!ok) { break; } /* stop connecting, re-shuffle */\n\t\t\t\n\t\t\tif (!this._unconnected.length) { return true; } /* done; no rooms remain */\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * For a given room, find the closest one from the list\n */\nROT.Map.Uniform.prototype._closestRoom = function(rooms, room) {\n\tvar dist = Infinity;\n\tvar center = room.getCenter();\n\tvar result = null;\n\t\n\tfor (var i=0;i<rooms.length;i++) {\n\t\tvar r = rooms[i];\n\t\tvar c = r.getCenter();\n\t\tvar dx = c[0]-center[0];\n\t\tvar dy = c[1]-center[1];\n\t\tvar d = dx*dx+dy*dy;\n\t\t\n\t\tif (d < dist) {\n\t\t\tdist = d;\n\t\t\tresult = r;\n\t\t}\n\t}\n\t\n\treturn result;\n}\n\nROT.Map.Uniform.prototype._connectRooms = function(room1, room2) {\n\t/*\n\t\troom1.debug();\n\t\troom2.debug();\n\t*/\n\n\tvar center1 = room1.getCenter();\n\tvar center2 = room2.getCenter();\n\n\tvar diffX = center2[0] - center1[0];\n\tvar diffY = center2[1] - center1[1];\n\n\tif (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n\t\tvar dirIndex1 = (diffY > 0 ? 2 : 0);\n\t\tvar dirIndex2 = (dirIndex1 + 2) % 4;\n\t\tvar min = room2.getLeft();\n\t\tvar max = room2.getRight();\n\t\tvar index = 0;\n\t} else { /* first try connecting east-west walls */\n\t\tvar dirIndex1 = (diffX > 0 ? 1 : 3);\n\t\tvar dirIndex2 = (dirIndex1 + 2) % 4;\n\t\tvar min = room2.getTop();\n\t\tvar max = room2.getBottom();\n\t\tvar index = 1;\n\t}\n\n\tvar start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n\tif (!start) { return false; }\n\n\tif (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n\t\tvar end = start.slice();\n\t\tvar value = null;\n\t\tswitch (dirIndex2) {\n\t\t\tcase 0: value = room2.getTop()-1; break;\n\t\t\tcase 1: value = room2.getRight()+1; break;\n\t\t\tcase 2: value = room2.getBottom()+1; break;\n\t\t\tcase 3: value = room2.getLeft()-1; break;\n\t\t}\n\t\tend[(index+1)%2] = value;\n\t\tthis._digLine([start, end]);\n\t\t\n\t} else if (start[index] < min-1 || start[index] > max+1) { /* need to switch target wall (L-like) */\n\n\t\tvar diff = start[index] - center2[index];\n\t\tswitch (dirIndex2) {\n\t\t\tcase 0:\n\t\t\tcase 1:\tvar rotation = (diff < 0 ? 3 : 1); break;\n\t\t\tcase 2:\n\t\t\tcase 3:\tvar rotation = (diff < 0 ? 1 : 3); break;\n\t\t}\n\t\tdirIndex2 = (dirIndex2 + rotation) % 4;\n\t\t\n\t\tvar end = this._placeInWall(room2, dirIndex2);\n\t\tif (!end) { return false; }\n\n\t\tvar mid = [0, 0];\n\t\tmid[index] = start[index];\n\t\tvar index2 = (index+1)%2;\n\t\tmid[index2] = end[index2];\n\t\tthis._digLine([start, mid, end]);\n\t\t\n\t} else { /* use current wall pair, but adjust the line in the middle (S-like) */\n\t\n\t\tvar index2 = (index+1)%2;\n\t\tvar end = this._placeInWall(room2, dirIndex2);\n\t\tif (!end) { return false; }\n\t\tvar mid = Math.round((end[index2] + start[index2])/2);\n\n\t\tvar mid1 = [0, 0];\n\t\tvar mid2 = [0, 0];\n\t\tmid1[index] = start[index];\n\t\tmid1[index2] = mid;\n\t\tmid2[index] = end[index];\n\t\tmid2[index2] = mid;\n\t\tthis._digLine([start, mid1, mid2, end]);\n\t}\n\n\troom1.addDoor(start[0], start[1]);\n\troom2.addDoor(end[0], end[1]);\n\t\n\tvar index = this._unconnected.indexOf(room1);\n\tif (index != -1) {\n\t\tthis._unconnected.splice(index, 1);\n\t\tthis._connected.push(room1);\n\t}\n\n\tvar index = this._unconnected.indexOf(room2);\n\tif (index != -1) {\n\t\tthis._unconnected.splice(index, 1);\n\t\tthis._connected.push(room2);\n\t}\n\t\n\treturn true;\n}\n\nROT.Map.Uniform.prototype._placeInWall = function(room, dirIndex) {\n\tvar start = [0, 0];\n\tvar dir = [0, 0];\n\tvar length = 0;\n\t\n\tswitch (dirIndex) {\n\t\tcase 0:\n\t\t\tdir = [1, 0];\n\t\t\tstart = [room.getLeft(), room.getTop()-1];\n\t\t\tlength = room.getRight()-room.getLeft()+1;\n\t\tbreak;\n\t\tcase 1:\n\t\t\tdir = [0, 1];\n\t\t\tstart = [room.getRight()+1, room.getTop()];\n\t\t\tlength = room.getBottom()-room.getTop()+1;\n\t\tbreak;\n\t\tcase 2:\n\t\t\tdir = [1, 0];\n\t\t\tstart = [room.getLeft(), room.getBottom()+1];\n\t\t\tlength = room.getRight()-room.getLeft()+1;\n\t\tbreak;\n\t\tcase 3:\n\t\t\tdir = [0, 1];\n\t\t\tstart = [room.getLeft()-1, room.getTop()];\n\t\t\tlength = room.getBottom()-room.getTop()+1;\n\t\tbreak;\n\t}\n\t\n\tvar avail = [];\n\tvar lastBadIndex = -2;\n\n\tfor (var i=0;i<length;i++) {\n\t\tvar x = start[0] + i*dir[0];\n\t\tvar y = start[1] + i*dir[1];\n\t\tavail.push(null);\n\t\t\n\t\tvar isWall = (this._map[x][y] == 1);\n\t\tif (isWall) {\n\t\t\tif (lastBadIndex != i-1) { avail[i] = [x, y]; }\n\t\t} else {\n\t\t\tlastBadIndex = i;\n\t\t\tif (i) { avail[i-1] = null; }\n\t\t}\n\t}\n\t\n\tfor (var i=avail.length-1; i>=0; i--) {\n\t\tif (!avail[i]) { avail.splice(i, 1); }\n\t}\n\treturn (avail.length ? avail.random() : null);\n}\n\n/**\n * Dig a polyline.\n */\nROT.Map.Uniform.prototype._digLine = function(points) {\n\tfor (var i=1;i<points.length;i++) {\n\t\tvar start = points[i-1];\n\t\tvar end = points[i];\n\t\tvar corridor = new ROT.Map.Feature.Corridor(start[0], start[1], end[0], end[1]);\n\t\tcorridor.create(this._digCallback);\n\t\tthis._corridors.push(corridor);\n\t}\n}\n\nROT.Map.Uniform.prototype._digCallback = function(x, y, value) {\n\tthis._map[x][y] = value;\n\tif (value == 0) { this._dug++; }\n}\n\nROT.Map.Uniform.prototype._isWallCallback = function(x, y) {\n\tif (x < 0 || y < 0 || x >= this._width || y >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\nROT.Map.Uniform.prototype._canBeDugCallback = function(x, y) {\n\tif (x < 1 || y < 1 || x+1 >= this._width || y+1 >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\n/**\n * @author hyakugei\n * @class Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.cellWidth=3] Number of cells to create on the horizontal (number of rooms horizontally)\n * @param {int[]} [options.cellHeight=3] Number of cells to create on the vertical (number of rooms vertically) \n * @param {int} [options.roomWidth] Room min and max width - normally set auto-magically via the constructor.\n * @param {int} [options.roomHeight] Room min and max height - normally set auto-magically via the constructor. \n */\nROT.Map.Rogue = function(width, height, options) {\n\tROT.Map.call(this, width, height);\n\t\n\tthis._options = {\n\t\tcellWidth: 3,  // NOTE to self, these could probably work the same as the roomWidth/room Height values\n\t\tcellHeight: 3  //     ie. as an array with min-max values for each direction....\n\t}\n\t\n\tfor (var p in options) { this._options[p] = options[p]; }\n\t\n\t/*\n\tSet the room sizes according to the over-all width of the map, \n\tand the cell sizes. \n\t*/\n\t\n\tif (!this._options.hasOwnProperty(\"roomWidth\")) {\n\t\tthis._options[\"roomWidth\"] = this._calculateRoomSize(this._width, this._options[\"cellWidth\"]);\n\t}\n\tif (!this._options.hasOwnProperty(\"roomHeight\")) {\n\t\tthis._options[\"roomHeight\"] = this._calculateRoomSize(this._height, this._options[\"cellHeight\"]);\n\t}\n\t\n}\n\nROT.Map.Rogue.extend(ROT.Map); \n\n/**\n * @see ROT.Map#create\n */\nROT.Map.Rogue.prototype.create = function(callback) {\n\tthis.map = this._fillMap(1);\n\tthis.rooms = [];\n\tthis.connectedCells = [];\n\t\n\tthis._initRooms();\n\tthis._connectRooms();\n\tthis._connectUnconnectedRooms();\n\tthis._createRandomRoomConnections();\n\tthis._createRooms();\n\tthis._createCorridors();\n\t\n\tif (callback) {\n\t\tfor (var i = 0; i < this._width; i++) {\n\t\t\tfor (var j = 0; j < this._height; j++) {\n\t\t\t\tcallback(i, j, this.map[i][j]);   \n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn this;\n}\n\nROT.Map.Rogue.prototype._calculateRoomSize = function(size, cell) {\n\tvar max = Math.floor((size/cell) * 0.8);\n\tvar min = Math.floor((size/cell) * 0.25);\n\tif (min < 2) min = 2;\n\tif (max < 2) max = 2;\n\treturn [min, max];\n}\n\nROT.Map.Rogue.prototype._initRooms = function () { \n\t// create rooms array. This is the \"grid\" list from the algo.  \n\tfor (var i = 0; i < this._options.cellWidth; i++) {  \n\t\tthis.rooms.push([]);\n\t\tfor(var j = 0; j < this._options.cellHeight; j++) {\n\t\t\tthis.rooms[i].push({\"x\":0, \"y\":0, \"width\":0, \"height\":0, \"connections\":[], \"cellx\":i, \"celly\":j});\n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._connectRooms = function() {\n\t//pick random starting grid\n\tvar cgx = ROT.RNG.getUniformInt(0, this._options.cellWidth-1);\n\tvar cgy = ROT.RNG.getUniformInt(0, this._options.cellHeight-1);\n\t\n\tvar idx;\n\tvar ncgx;\n\tvar ncgy;\n\t\n\tvar found = false;\n\tvar room;\n\tvar otherRoom;\n\t\n\t// find  unconnected neighbour cells\n\tdo {\n\t\n\t\t//var dirToCheck = [0,1,2,3,4,5,6,7];\n\t\tvar dirToCheck = [0,2,4,6];\n\t\tdirToCheck = dirToCheck.randomize();\n\t\t\n\t\tdo {\n\t\t\tfound = false;\n\t\t\tidx = dirToCheck.pop();\n\t\t\t\n\t\t\t\n\t\t\tncgx = cgx + ROT.DIRS[8][idx][0];\n\t\t\tncgy = cgy + ROT.DIRS[8][idx][1];\n\t\t\t\n\t\t\tif(ncgx < 0 || ncgx >= this._options.cellWidth) continue;\n\t\t\tif(ncgy < 0 || ncgy >= this._options.cellHeight) continue;\n\t\t\t\n\t\t\troom = this.rooms[cgx][cgy];\n\t\t\t\n\t\t\tif(room[\"connections\"].length > 0)\n\t\t\t{\n\t\t\t\t// as long as this room doesn't already coonect to me, we are ok with it. \n\t\t\t\tif(room[\"connections\"][0][0] == ncgx &&\n\t\t\t\troom[\"connections\"][0][1] == ncgy)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\totherRoom = this.rooms[ncgx][ncgy];\n\t\t\t\n\t\t\tif (otherRoom[\"connections\"].length == 0) { \n\t\t\t\totherRoom[\"connections\"].push([cgx,cgy]);\n\t\t\t\t\n\t\t\t\tthis.connectedCells.push([ncgx, ncgy]);\n\t\t\t\tcgx = ncgx;\n\t\t\t\tcgy = ncgy;\n\t\t\t\tfound = true;\n\t\t\t}\n\t\t\t\t\t\n\t\t} while (dirToCheck.length > 0 && found == false)\n\t\t\n\t} while (dirToCheck.length > 0)\n\n}\n\nROT.Map.Rogue.prototype._connectUnconnectedRooms = function() {\n\t//While there are unconnected rooms, try to connect them to a random connected neighbor \n\t//(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n\tvar cw = this._options.cellWidth;\n\tvar ch = this._options.cellHeight;\n\t\n\tvar randomConnectedCell;\n\tthis.connectedCells = this.connectedCells.randomize();\n\tvar room;\n\tvar otherRoom;\n\tvar validRoom;\n\t\n\tfor (var i = 0; i < this._options.cellWidth; i++) {\n\t\tfor (var j = 0; j < this._options.cellHeight; j++)  {\n\t\t\t\t\n\t\t\troom = this.rooms[i][j];\n\t\t\t\n\t\t\tif (room[\"connections\"].length == 0) {\n\t\t\t\tvar directions = [0,2,4,6];\n\t\t\t\tdirections = directions.randomize();\n\t\t\t\t\n\t\t\t\tvar validRoom = false;\n\t\t\t\t\n\t\t\t\tdo {\n\t\t\t\t\t\n\t\t\t\t\tvar dirIdx = directions.pop();\n\t\t\t\t\tvar newI = i + ROT.DIRS[8][dirIdx][0];\n\t\t\t\t\tvar newJ = j + ROT.DIRS[8][dirIdx][1];\n\t\t\t\t\t\n\t\t\t\t\tif (newI < 0 || newI >= cw || \n\t\t\t\t\tnewJ < 0 || newJ >= ch) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\totherRoom = this.rooms[newI][newJ];\n\t\t\t\t\t\n\t\t\t\t\tvalidRoom = true;\n\t\t\t\t\t\n\t\t\t\t\tif (otherRoom[\"connections\"].length == 0) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < otherRoom[\"connections\"].length; k++) {\n\t\t\t\t\t\tif(otherRoom[\"connections\"][k][0] == i && \n\t\t\t\t\t\totherRoom[\"connections\"][k][1] == j) {\n\t\t\t\t\t\t\tvalidRoom = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (validRoom) break;\n\t\t\t\t\t\n\t\t\t\t} while (directions.length)\n\t\t\t\t\n\t\t\t\tif(validRoom) { \n\t\t\t\t\troom[\"connections\"].push( [otherRoom[\"cellx\"], otherRoom[\"celly\"]] );  \n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"-- Unable to connect room.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._createRandomRoomConnections = function(connections) {\n\t// Empty for now. \n}\n\n\nROT.Map.Rogue.prototype._createRooms = function() {\n\t// Create Rooms \n\t\n\tvar w = this._width;\n\tvar h = this._height;\n\t\n\tvar cw = this._options.cellWidth;\n\tvar ch = this._options.cellHeight;\n\t\n\tvar cwp = Math.floor(this._width / cw);\n\tvar chp = Math.floor(this._height / ch);\n\t\n\tvar roomw;\n\tvar roomh;\n\tvar roomWidth = this._options[\"roomWidth\"];\n\tvar roomHeight = this._options[\"roomHeight\"];\n\tvar sx;\n\tvar sy;\n\tvar tx;\n\tvar ty;\n\tvar otherRoom;\n\t\n\tfor (var i = 0; i < cw; i++) {\n\t\tfor (var j = 0; j < ch; j++) {\n\t\t\tsx = cwp * i;\n\t\t\tsy = chp * j;\n\t\t\t\n\t\t\tif (sx == 0) sx = 1;\n\t\t\tif (sy == 0) sy = 1;\n\t\t\t\n\t\t\troomw = ROT.RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n\t\t\troomh = ROT.RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n\t\t\t\n\t\t\tif (j > 0) {\n\t\t\t\totherRoom = this.rooms[i][j-1];\n\t\t\t\twhile (sy - (otherRoom[\"y\"] + otherRoom[\"height\"] ) < 3) {\n\t\t\t\t\tsy++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (i > 0) {\n\t\t\t\totherRoom = this.rooms[i-1][j];\n\t\t\t\twhile(sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n\t\t\t\t\tsx++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar sxOffset = Math.round(ROT.RNG.getUniformInt(0, cwp-roomw)/2);\n\t\t\tvar syOffset = Math.round(ROT.RNG.getUniformInt(0, chp-roomh)/2);\n\t\t\t\n\t\t\twhile (sx + sxOffset + roomw >= w) {\n\t\t\t\tif(sxOffset) {\n\t\t\t\t\tsxOffset--;\n\t\t\t\t} else {\n\t\t\t\t\troomw--; \n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\twhile (sy + syOffset + roomh >= h) { \n\t\t\t\tif(syOffset) {\n\t\t\t\t\tsyOffset--;\n\t\t\t\t} else {\n\t\t\t\t\troomh--; \n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tsx = sx + sxOffset;\n\t\t\tsy = sy + syOffset;\n\t\t\t\n\t\t\tthis.rooms[i][j][\"x\"] = sx;\n\t\t\tthis.rooms[i][j][\"y\"] = sy;\n\t\t\tthis.rooms[i][j][\"width\"] = roomw;\n\t\t\tthis.rooms[i][j][\"height\"] = roomh;  \n\t\t\t\n\t\t\tfor (var ii = sx; ii < sx + roomw; ii++) {\n\t\t\t\tfor (var jj = sy; jj < sy + roomh; jj++) {\n\t\t\t\t\tthis.map[ii][jj] = 0;\n\t\t\t\t}\n\t\t\t}  \n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._getWallPosition = function(aRoom, aDirection) {\n\tvar rx;\n\tvar ry;\n\tvar door;\n\t\n\tif (aDirection == 1 || aDirection == 3) {\n\t\trx = ROT.RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n\t\tif (aDirection == 1) {\n\t\t\try = aRoom[\"y\"] - 2;\n\t\t\tdoor = ry + 1;\n\t\t} else {\n\t\t\try = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n\t\t\tdoor = ry -1;\n\t\t}\n\t\t\n\t\tthis.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space. \n\t\t\n\t} else if (aDirection == 2 || aDirection == 4) {\n\t\try = ROT.RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n\t\tif(aDirection == 2) {\n\t\t\trx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n\t\t\tdoor = rx - 1;\n\t\t} else {\n\t\t\trx = aRoom[\"x\"] - 2;\n\t\t\tdoor = rx + 1;\n\t\t}\n\t\t\n\t\tthis.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space. \n\t\t\n\t}\n\treturn [rx, ry];\n}\n\n/***\n* @param startPosition a 2 element array\n* @param endPosition a 2 element array\n*/\nROT.Map.Rogue.prototype._drawCorridore = function (startPosition, endPosition) {\n\tvar xOffset = endPosition[0] - startPosition[0];\n\tvar yOffset = endPosition[1] - startPosition[1];\n\t\n\tvar xpos = startPosition[0];\n\tvar ypos = startPosition[1];\n\t\n\tvar tempDist;\n\tvar xDir;\n\tvar yDir;\n\t\n\tvar move; // 2 element array, element 0 is the direction, element 1 is the total value to move. \n\tvar moves = []; // a list of 2 element arrays\n\t\n\tvar xAbs = Math.abs(xOffset);\n\tvar yAbs = Math.abs(yOffset);\n\t\n\tvar percent = ROT.RNG.getUniform(); // used to split the move at different places along the long axis\n\tvar firstHalf = percent;\n\tvar secondHalf = 1 - percent;\n\t\n\txDir = xOffset > 0 ? 2 : 6;\n\tyDir = yOffset > 0 ? 4 : 0;\n\t\n\tif (xAbs < yAbs) {\n\t\t// move firstHalf of the y offset\n\t\ttempDist = Math.ceil(yAbs * firstHalf);\n\t\tmoves.push([yDir, tempDist]);\n\t\t// move all the x offset\n\t\tmoves.push([xDir, xAbs]);\n\t\t// move sendHalf of the  y offset\n\t\ttempDist = Math.floor(yAbs * secondHalf);\n\t\tmoves.push([yDir, tempDist]);\n\t} else {\n\t\t//  move firstHalf of the x offset\n\t\ttempDist = Math.ceil(xAbs * firstHalf);\n\t\tmoves.push([xDir, tempDist]);\n\t\t// move all the y offset\n\t\tmoves.push([yDir, yAbs]);\n\t\t// move secondHalf of the x offset.\n\t\ttempDist = Math.floor(xAbs * secondHalf);\n\t\tmoves.push([xDir, tempDist]);  \n\t}\n\t\n\tthis.map[xpos][ypos] = 0;\n\t\n\twhile (moves.length > 0) {\n\t\tmove = moves.pop();\n\t\twhile (move[1] > 0) {\n\t\t\txpos += ROT.DIRS[8][move[0]][0];\n\t\t\typos += ROT.DIRS[8][move[0]][1];\n\t\t\tthis.map[xpos][ypos] = 0;\n\t\t\tmove[1] = move[1] - 1;\n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._createCorridors = function () {\n\t// Draw Corridors between connected rooms\n\t\n\tvar cw = this._options.cellWidth;\n\tvar ch = this._options.cellHeight;\n\tvar room;\n\tvar connection;\n\tvar otherRoom;\n\tvar wall;\n\tvar otherWall;\n\t\n\tfor (var i = 0; i < cw; i++) {\n\t\tfor (var j = 0; j < ch; j++) {\n\t\t\troom = this.rooms[i][j];\n\t\t\t\n\t\t\tfor (var k = 0; k < room[\"connections\"].length; k++) {\n\t\t\t\t\t\n\t\t\t\tconnection = room[\"connections\"][k]; \n\t\t\t\t\n\t\t\t\totherRoom = this.rooms[connection[0]][connection[1]];\n\t\t\t\t\n\t\t\t\t// figure out what wall our corridor will start one.\n\t\t\t\t// figure out what wall our corridor will end on. \n\t\t\t\tif (otherRoom[\"cellx\"] > room[\"cellx\"] ) {\n\t\t\t\t\twall = 2;\n\t\t\t\t\totherWall = 4;\n\t\t\t\t} else if (otherRoom[\"cellx\"] < room[\"cellx\"] ) {\n\t\t\t\t\twall = 4;\n\t\t\t\t\totherWall = 2;\n\t\t\t\t} else if(otherRoom[\"celly\"] > room[\"celly\"]) {\n\t\t\t\t\twall = 3;\n\t\t\t\t\totherWall = 1;\n\t\t\t\t} else if(otherRoom[\"celly\"] < room[\"celly\"]) {\n\t\t\t\t\twall = 1;\n\t\t\t\t\totherWall = 3;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis._drawCorridore(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n\t\t\t}\n\t\t}\n\t}\n}\n/**\n * @class Dungeon feature; has own .create() method\n */\nROT.Map.Feature = function() {}\nROT.Map.Feature.prototype.isValid = function(canBeDugCallback) {}\nROT.Map.Feature.prototype.create = function(digCallback) {}\nROT.Map.Feature.prototype.debug = function() {}\nROT.Map.Feature.createRandomAt = function(x, y, dx, dy, options) {}\n\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nROT.Map.Feature.Room = function(x1, y1, x2, y2, doorX, doorY) {\n\tthis._x1 = x1;\n\tthis._y1 = y1;\n\tthis._x2 = x2;\n\tthis._y2 = y2;\n\tthis._doors = {};\n\tif (arguments.length > 4) { this.addDoor(doorX, doorY); }\n}\nROT.Map.Feature.Room.extend(ROT.Map.Feature);\n\n/**\n * Room of random size, with a given doors and direction\n */\nROT.Map.Feature.Room.createRandomAt = function(x, y, dx, dy, options) {\n\tvar min = options.roomWidth[0];\n\tvar max = options.roomWidth[1];\n\tvar width = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar min = options.roomHeight[0];\n\tvar max = options.roomHeight[1];\n\tvar height = ROT.RNG.getUniformInt(min, max);\n\t\n\tif (dx == 1) { /* to the right */\n\t\tvar y2 = y - Math.floor(ROT.RNG.getUniform() * height);\n\t\treturn new this(x+1, y2, x+width, y2+height-1, x, y);\n\t}\n\t\n\tif (dx == -1) { /* to the left */\n\t\tvar y2 = y - Math.floor(ROT.RNG.getUniform() * height);\n\t\treturn new this(x-width, y2, x-1, y2+height-1, x, y);\n\t}\n\n\tif (dy == 1) { /* to the bottom */\n\t\tvar x2 = x - Math.floor(ROT.RNG.getUniform() * width);\n\t\treturn new this(x2, y+1, x2+width-1, y+height, x, y);\n\t}\n\n\tif (dy == -1) { /* to the top */\n\t\tvar x2 = x - Math.floor(ROT.RNG.getUniform() * width);\n\t\treturn new this(x2, y-height, x2+width-1, y-1, x, y);\n\t}\n\n        throw new Error(\"dx or dy must be 1 or -1\");\n}\n\n/**\n * Room of random size, positioned around center coords\n */\nROT.Map.Feature.Room.createRandomCenter = function(cx, cy, options) {\n\tvar min = options.roomWidth[0];\n\tvar max = options.roomWidth[1];\n\tvar width = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar min = options.roomHeight[0];\n\tvar max = options.roomHeight[1];\n\tvar height = ROT.RNG.getUniformInt(min, max);\n\n\tvar x1 = cx - Math.floor(ROT.RNG.getUniform()*width);\n\tvar y1 = cy - Math.floor(ROT.RNG.getUniform()*height);\n\tvar x2 = x1 + width - 1;\n\tvar y2 = y1 + height - 1;\n\n\treturn new this(x1, y1, x2, y2);\n}\n\n/**\n * Room of random size within a given dimensions\n */\nROT.Map.Feature.Room.createRandom = function(availWidth, availHeight, options) {\n\tvar min = options.roomWidth[0];\n\tvar max = options.roomWidth[1];\n\tvar width = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar min = options.roomHeight[0];\n\tvar max = options.roomHeight[1];\n\tvar height = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar left = availWidth - width - 1;\n\tvar top = availHeight - height - 1;\n\n\tvar x1 = 1 + Math.floor(ROT.RNG.getUniform()*left);\n\tvar y1 = 1 + Math.floor(ROT.RNG.getUniform()*top);\n\tvar x2 = x1 + width - 1;\n\tvar y2 = y1 + height - 1;\n\n\treturn new this(x1, y1, x2, y2);\n}\n\nROT.Map.Feature.Room.prototype.addDoor = function(x, y) {\n\tthis._doors[x+\",\"+y] = 1;\n\treturn this;\n}\n\n/**\n * @param {function}\n */\nROT.Map.Feature.Room.prototype.getDoors = function(callback) {\n\tfor (var key in this._doors) {\n\t\tvar parts = key.split(\",\");\n\t\tcallback(parseInt(parts[0]), parseInt(parts[1]));\n\t}\n\treturn this;\n}\n\nROT.Map.Feature.Room.prototype.clearDoors = function() {\n\tthis._doors = {};\n\treturn this;\n}\n\nROT.Map.Feature.Room.prototype.addDoors = function(isWallCallback) {\n\tvar left = this._x1-1;\n\tvar right = this._x2+1;\n\tvar top = this._y1-1;\n\tvar bottom = this._y2+1;\n\n\tfor (var x=left; x<=right; x++) {\n\t\tfor (var y=top; y<=bottom; y++) {\n\t\t\tif (x != left && x != right && y != top && y != bottom) { continue; }\n\t\t\tif (isWallCallback(x, y)) { continue; }\n\n\t\t\tthis.addDoor(x, y);\n\t\t}\n\t}\n\n\treturn this;\n}\n\nROT.Map.Feature.Room.prototype.debug = function() {\n\tconsole.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n}\n\nROT.Map.Feature.Room.prototype.isValid = function(isWallCallback, canBeDugCallback) { \n\tvar left = this._x1-1;\n\tvar right = this._x2+1;\n\tvar top = this._y1-1;\n\tvar bottom = this._y2+1;\n\t\n\tfor (var x=left; x<=right; x++) {\n\t\tfor (var y=top; y<=bottom; y++) {\n\t\t\tif (x == left || x == right || y == top || y == bottom) {\n\t\t\t\tif (!isWallCallback(x, y)) { return false; }\n\t\t\t} else {\n\t\t\t\tif (!canBeDugCallback(x, y)) { return false; }\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n */\nROT.Map.Feature.Room.prototype.create = function(digCallback) { \n\tvar left = this._x1-1;\n\tvar right = this._x2+1;\n\tvar top = this._y1-1;\n\tvar bottom = this._y2+1;\n\t\n\tvar value = 0;\n\tfor (var x=left; x<=right; x++) {\n\t\tfor (var y=top; y<=bottom; y++) {\n\t\t\tif (x+\",\"+y in this._doors) {\n\t\t\t\tvalue = 2;\n\t\t\t} else if (x == left || x == right || y == top || y == bottom) {\n\t\t\t\tvalue = 1;\n\t\t\t} else {\n\t\t\t\tvalue = 0;\n\t\t\t}\n\t\t\tdigCallback(x, y, value);\n\t\t}\n\t}\n}\n\nROT.Map.Feature.Room.prototype.getCenter = function() {\n\treturn [Math.round((this._x1 + this._x2)/2), Math.round((this._y1 + this._y2)/2)];\n}\n\nROT.Map.Feature.Room.prototype.getLeft = function() {\n\treturn this._x1;\n}\n\nROT.Map.Feature.Room.prototype.getRight = function() {\n\treturn this._x2;\n}\n\nROT.Map.Feature.Room.prototype.getTop = function() {\n\treturn this._y1;\n}\n\nROT.Map.Feature.Room.prototype.getBottom = function() {\n\treturn this._y2;\n}\n\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nROT.Map.Feature.Corridor = function(startX, startY, endX, endY) {\n\tthis._startX = startX;\n\tthis._startY = startY;\n\tthis._endX = endX; \n\tthis._endY = endY;\n\tthis._endsWithAWall = true;\n}\nROT.Map.Feature.Corridor.extend(ROT.Map.Feature);\n\nROT.Map.Feature.Corridor.createRandomAt = function(x, y, dx, dy, options) {\n\tvar min = options.corridorLength[0];\n\tvar max = options.corridorLength[1];\n\tvar length = ROT.RNG.getUniformInt(min, max);\n\t\n\treturn new this(x, y, x + dx*length, y + dy*length);\n}\n\nROT.Map.Feature.Corridor.prototype.debug = function() {\n\tconsole.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n}\n\nROT.Map.Feature.Corridor.prototype.isValid = function(isWallCallback, canBeDugCallback){ \n\tvar sx = this._startX;\n\tvar sy = this._startY;\n\tvar dx = this._endX-sx;\n\tvar dy = this._endY-sy;\n\tvar length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n\t\n\tif (dx) { dx = dx/Math.abs(dx); }\n\tif (dy) { dy = dy/Math.abs(dy); }\n\tvar nx = dy;\n\tvar ny = -dx;\n\t\n\tvar ok = true;\n\tfor (var i=0; i<length; i++) {\n\t\tvar x = sx + i*dx;\n\t\tvar y = sy + i*dy;\n\n\t\tif (!canBeDugCallback(     x,      y)) { ok = false; }\n\t\tif (!isWallCallback  (x + nx, y + ny)) { ok = false; }\n\t\tif (!isWallCallback  (x - nx, y - ny)) { ok = false; }\n\t\t\n\t\tif (!ok) {\n\t\t\tlength = i;\n\t\t\tthis._endX = x-dx;\n\t\t\tthis._endY = y-dy;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\t/**\n\t * If the length degenerated, this corridor might be invalid\n\t */\n\t \n\t/* not supported */\n\tif (length == 0) { return false; } \n\t\n\t /* length 1 allowed only if the next space is empty */\n\tif (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) { return false; }\n\t\n\t/**\n\t * We do not want the corridor to crash into a corner of a room;\n\t * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n\t * \n\t * Situation:\n\t * #######1\n\t * .......?\n\t * #######2\n\t * \n\t * The corridor was dug from left to right.\n\t * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n\t */\n\tvar firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n\tvar secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n\tthis._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n\tif ((firstCornerBad || secondCornerBad) && this._endsWithAWall) { return false; }\n\n\treturn true;\n}\n\n/**\n * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n */\nROT.Map.Feature.Corridor.prototype.create = function(digCallback) { \n\tvar sx = this._startX;\n\tvar sy = this._startY;\n\tvar dx = this._endX-sx;\n\tvar dy = this._endY-sy;\n\tvar length = 1+Math.max(Math.abs(dx), Math.abs(dy));\n\t\n\tif (dx) { dx = dx/Math.abs(dx); }\n\tif (dy) { dy = dy/Math.abs(dy); }\n\tvar nx = dy;\n\tvar ny = -dx;\n\t\n\tfor (var i=0; i<length; i++) {\n\t\tvar x = sx + i*dx;\n\t\tvar y = sy + i*dy;\n\t\tdigCallback(x, y, 0);\n\t}\n\t\n\treturn true;\n}\n\nROT.Map.Feature.Corridor.prototype.createPriorityWalls = function(priorityWallCallback) {\n\tif (!this._endsWithAWall) { return; }\n\n\tvar sx = this._startX;\n\tvar sy = this._startY;\n\n\tvar dx = this._endX-sx;\n\tvar dy = this._endY-sy;\n\tif (dx) { dx = dx/Math.abs(dx); }\n\tif (dy) { dy = dy/Math.abs(dy); }\n\tvar nx = dy;\n\tvar ny = -dx;\n\n\tpriorityWallCallback(this._endX + dx, this._endY + dy);\n\tpriorityWallCallback(this._endX + nx, this._endY + ny);\n\tpriorityWallCallback(this._endX - nx, this._endY - ny);\n}\n/**\n * @class Base noise generator\n */\nROT.Noise = function() {\n};\n\nROT.Noise.prototype.get = function(x, y) {}\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\n\n/**\n * @class 2D simplex noise generator\n * @param {int} [gradients=256] Random gradients\n */\nROT.Noise.Simplex = function(gradients) {\n\tROT.Noise.call(this);\n\n\tthis._F2 = 0.5 * (Math.sqrt(3) - 1);\n\tthis._G2 = (3 - Math.sqrt(3)) / 6;\n\n\tthis._gradients = [\n\t\t[ 0, -1],\n\t\t[ 1, -1],\n\t\t[ 1,  0],\n\t\t[ 1,  1],\n\t\t[ 0,  1],\n\t\t[-1,  1],\n\t\t[-1,  0],\n\t\t[-1, -1]\n\t];\n\n\tvar permutations = [];\n\tvar count = gradients || 256;\n\tfor (var i=0;i<count;i++) { permutations.push(i); }\n\tpermutations = permutations.randomize();\n\n\tthis._perms = [];\n\tthis._indexes = [];\n\n\tfor (var i=0;i<2*count;i++) {\n\t\tthis._perms.push(permutations[i % count]);\n\t\tthis._indexes.push(this._perms[i] % this._gradients.length);\n\t}\n\n};\nROT.Noise.Simplex.extend(ROT.Noise);\n\nROT.Noise.Simplex.prototype.get = function(xin, yin) {\n\tvar perms = this._perms;\n\tvar indexes = this._indexes;\n\tvar count = perms.length/2;\n\tvar G2 = this._G2;\n\n\tvar n0 =0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n\n\t// Skew the input space to determine which simplex cell we're in\n\tvar s = (xin + yin) * this._F2; // Hairy factor for 2D\n\tvar i = Math.floor(xin + s);\n\tvar j = Math.floor(yin + s);\n\tvar t = (i + j) * G2;\n\tvar X0 = i - t; // Unskew the cell origin back to (x,y) space\n\tvar Y0 = j - t;\n\tvar x0 = xin - X0; // The x,y distances from the cell origin\n\tvar y0 = yin - Y0;\n\n\t// For the 2D case, the simplex shape is an equilateral triangle.\n\t// Determine which simplex we are in.\n\tvar i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n\tif (x0 > y0) {\n\t\ti1 = 1;\n\t\tj1 = 0;\n\t} else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n\t\ti1 = 0;\n\t\tj1 = 1;\n\t} // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n\n\t// A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n\t// a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n\t// c = (3-sqrt(3))/6\n\tvar x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n\tvar y1 = y0 - j1 + G2;\n\tvar x2 = x0 - 1 + 2*G2; // Offsets for last corner in (x,y) unskewed coords\n\tvar y2 = y0 - 1 + 2*G2;\n\n\t// Work out the hashed gradient indices of the three simplex corners\n\tvar ii = i.mod(count);\n\tvar jj = j.mod(count);\n\n\t// Calculate the contribution from the three corners\n\tvar t0 = 0.5 - x0*x0 - y0*y0;\n\tif (t0 >= 0) {\n\t\tt0 *= t0;\n\t\tgi = indexes[ii+perms[jj]];\n\t\tvar grad = this._gradients[gi];\n\t\tn0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n\t}\n\t\n\tvar t1 = 0.5 - x1*x1 - y1*y1;\n\tif (t1 >= 0) {\n\t\tt1 *= t1;\n\t\tgi = indexes[ii+i1+perms[jj+j1]];\n\t\tvar grad = this._gradients[gi];\n\t\tn1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n\t}\n\t\n\tvar t2 = 0.5 - x2*x2 - y2*y2;\n\tif (t2 >= 0) {\n\t\tt2 *= t2;\n\t\tgi = indexes[ii+1+perms[jj+1]];\n\t\tvar grad = this._gradients[gi];\n\t\tn2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n\t}\n\n\t// Add contributions from each corner to get the final noise value.\n\t// The result is scaled to return values in the interval [-1,1].\n\treturn 70 * (n0 + n1 + n2);\n}\n/**\n * @class Abstract FOV algorithm\n * @param {function} lightPassesCallback Does the light pass through x,y?\n * @param {object} [options]\n * @param {int} [options.topology=8] 4/6/8\n */\nROT.FOV = function(lightPassesCallback, options) {\n\tthis._lightPasses = lightPassesCallback;\n\tthis._options = {\n\t\ttopology: 8\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n};\n\n/**\n * Compute visibility for a 360-degree circle\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {function} callback\n */\nROT.FOV.prototype.compute = function(x, y, R, callback) {}\n\n/**\n * Return all neighbors in a concentric ring\n * @param {int} cx center-x\n * @param {int} cy center-y\n * @param {int} r range\n */\nROT.FOV.prototype._getCircle = function(cx, cy, r) {\n\tvar result = [];\n\tvar dirs, countFactor, startOffset;\n\n\tswitch (this._options.topology) {\n\t\tcase 4:\n\t\t\tcountFactor = 1;\n\t\t\tstartOffset = [0, 1];\n\t\t\tdirs = [\n\t\t\t\tROT.DIRS[8][7],\n\t\t\t\tROT.DIRS[8][1],\n\t\t\t\tROT.DIRS[8][3],\n\t\t\t\tROT.DIRS[8][5]\n\t\t\t]\n\t\tbreak;\n\n\t\tcase 6:\n\t\t\tdirs = ROT.DIRS[6];\n\t\t\tcountFactor = 1;\n\t\t\tstartOffset = [-1, 1];\n\t\tbreak;\n\n\t\tcase 8:\n\t\t\tdirs = ROT.DIRS[4];\n\t\t\tcountFactor = 2;\n\t\t\tstartOffset = [-1, 1];\n\t\tbreak;\n\t}\n\n\t/* starting neighbor */\n\tvar x = cx + startOffset[0]*r;\n\tvar y = cy + startOffset[1]*r;\n\n\t/* circle */\n\tfor (var i=0;i<dirs.length;i++) {\n\t\tfor (var j=0;j<r*countFactor;j++) {\n\t\t\tresult.push([x, y]);\n\t\t\tx += dirs[i][0];\n\t\t\ty += dirs[i][1];\n\n\t\t}\n\t}\n\n\treturn result;\n}\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nROT.FOV.DiscreteShadowcasting = function(lightPassesCallback, options) {\n\tROT.FOV.call(this, lightPassesCallback, options);\n}\nROT.FOV.DiscreteShadowcasting.extend(ROT.FOV);\n\n/**\n * @see ROT.FOV#compute\n */\nROT.FOV.DiscreteShadowcasting.prototype.compute = function(x, y, R, callback) {\n\tvar center = this._coords;\n\tvar map = this._map;\n\n\t/* this place is always visible */\n\tcallback(x, y, 0, 1);\n\n\t/* standing in a dark place. FIXME is this a good idea?  */\n\tif (!this._lightPasses(x, y)) { return; }\n\t\n\t/* start and end angles */\n\tvar DATA = [];\n\t\n\tvar A, B, cx, cy, blocks;\n\n\t/* analyze surrounding cells in concentric rings, starting from the center */\n\tfor (var r=1; r<=R; r++) {\n\t\tvar neighbors = this._getCircle(x, y, r);\n\t\tvar angle = 360 / neighbors.length;\n\n\t\tfor (var i=0;i<neighbors.length;i++) {\n\t\t\tcx = neighbors[i][0];\n\t\t\tcy = neighbors[i][1];\n\t\t\tA = angle * (i - 0.5);\n\t\t\tB = A + angle;\n\t\t\t\n\t\t\tblocks = !this._lightPasses(cx, cy);\n\t\t\tif (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) { callback(cx, cy, r, 1); }\n\t\t\t\n\t\t\tif (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) { return; } /* cutoff? */\n\n\t\t} /* for all cells in this ring */\n\t} /* for all rings */\n}\n\n/**\n * @param {int} A start angle\n * @param {int} B end angle\n * @param {bool} blocks Does current cell block visibility?\n * @param {int[][]} DATA shadowed angle pairs\n */\nROT.FOV.DiscreteShadowcasting.prototype._visibleCoords = function(A, B, blocks, DATA) {\n\tif (A < 0) { \n\t\tvar v1 = arguments.callee(0, B, blocks, DATA);\n\t\tvar v2 = arguments.callee(360+A, 360, blocks, DATA);\n\t\treturn v1 || v2;\n\t}\n\t\n\tvar index = 0;\n\twhile (index < DATA.length && DATA[index] < A) { index++; }\n\t\n\tif (index == DATA.length) { /* completely new shadow */\n\t\tif (blocks) { DATA.push(A, B); } \n\t\treturn true;\n\t}\n\t\n\tvar count = 0;\n\t\n\tif (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n\t\twhile (index < DATA.length && DATA[index] < B) {\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\tif (count == 0) { return false; }\n\t\t\n\t\tif (blocks) { \n\t\t\tif (count % 2) {\n\t\t\t\tDATA.splice(index-count, count, B);\n\t\t\t} else {\n\t\t\t\tDATA.splice(index-count, count);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\n\t} else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n\t\twhile (index < DATA.length && DATA[index] < B) {\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\t/* visible when outside an existing shadow, or when overlapping */\n\t\tif (A == DATA[index-count] && count == 1) { return false; }\n\t\t\n\t\tif (blocks) { \n\t\t\tif (count % 2) {\n\t\t\t\tDATA.splice(index-count, count, A);\n\t\t\t} else {\n\t\t\t\tDATA.splice(index-count, count, A, B);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\treturn true;\n\t}\n}\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nROT.FOV.PreciseShadowcasting = function(lightPassesCallback, options) {\n\tROT.FOV.call(this, lightPassesCallback, options);\n}\nROT.FOV.PreciseShadowcasting.extend(ROT.FOV);\n\n/**\n * @see ROT.FOV#compute\n */\nROT.FOV.PreciseShadowcasting.prototype.compute = function(x, y, R, callback) {\n\t/* this place is always visible */\n\tcallback(x, y, 0, 1);\n\n\t/* standing in a dark place. FIXME is this a good idea?  */\n\tif (!this._lightPasses(x, y)) { return; }\n\t\n\t/* list of all shadows */\n\tvar SHADOWS = [];\n\t\n\tvar cx, cy, blocks, A1, A2, visibility;\n\n\t/* analyze surrounding cells in concentric rings, starting from the center */\n\tfor (var r=1; r<=R; r++) {\n\t\tvar neighbors = this._getCircle(x, y, r);\n\t\tvar neighborCount = neighbors.length;\n\n\t\tfor (var i=0;i<neighborCount;i++) {\n\t\t\tcx = neighbors[i][0];\n\t\t\tcy = neighbors[i][1];\n\t\t\t/* shift half-an-angle backwards to maintain consistency of 0-th cells */\n\t\t\tA1 = [i ? 2*i-1 : 2*neighborCount-1, 2*neighborCount];\n\t\t\tA2 = [2*i+1, 2*neighborCount]; \n\t\t\t\n\t\t\tblocks = !this._lightPasses(cx, cy);\n\t\t\tvisibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n\t\t\tif (visibility) { callback(cx, cy, r, visibility); }\n\n\t\t\tif (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) { return; } /* cutoff? */\n\n\t\t} /* for all cells in this ring */\n\t} /* for all rings */\n}\n\n/**\n * @param {int[2]} A1 arc start\n * @param {int[2]} A2 arc end\n * @param {bool} blocks Does current arc block visibility?\n * @param {int[][]} SHADOWS list of active shadows\n */\nROT.FOV.PreciseShadowcasting.prototype._checkVisibility = function(A1, A2, blocks, SHADOWS) {\n\tif (A1[0] > A2[0]) { /* split into two sub-arcs */\n\t\tvar v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n\t\tvar v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n\t\treturn (v1+v2)/2;\n\t}\n\n\t/* index1: first shadow >= A1 */\n\tvar index1 = 0, edge1 = false;\n\twhile (index1 < SHADOWS.length) {\n\t\tvar old = SHADOWS[index1];\n\t\tvar diff = old[0]*A1[1] - A1[0]*old[1];\n\t\tif (diff >= 0) { /* old >= A1 */\n\t\t\tif (diff == 0 && !(index1 % 2)) { edge1 = true; }\n\t\t\tbreak;\n\t\t}\n\t\tindex1++;\n\t}\n\n\t/* index2: last shadow <= A2 */\n\tvar index2 = SHADOWS.length, edge2 = false;\n\twhile (index2--) {\n\t\tvar old = SHADOWS[index2];\n\t\tvar diff = A2[0]*old[1] - old[0]*A2[1];\n\t\tif (diff >= 0) { /* old <= A2 */\n\t\t\tif (diff == 0 && (index2 % 2)) { edge2 = true; }\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tvar visible = true;\n\tif (index1 == index2 && (edge1 || edge2)) {  /* subset of existing shadow, one of the edges match */\n\t\tvisible = false; \n\t} else if (edge1 && edge2 && index1+1==index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n\t\tvisible = false;\n\t} else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n\t\tvisible = false;\n\t}\n\t\n\tif (!visible) { return 0; } /* fast case: not visible */\n\t\n\tvar visibleLength, P;\n\n\t/* compute the length of visible arc, adjust list of shadows (if blocking) */\n\tvar remove = index2-index1+1;\n\tif (remove % 2) {\n\t\tif (index1 % 2) { /* first edge within existing shadow, second outside */\n\t\t\tvar P = SHADOWS[index1];\n\t\t\tvisibleLength = (A2[0]*P[1] - P[0]*A2[1]) / (P[1] * A2[1]);\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove, A2); }\n\t\t} else { /* second edge within existing shadow, first outside */\n\t\t\tvar P = SHADOWS[index2];\n\t\t\tvisibleLength = (P[0]*A1[1] - A1[0]*P[1]) / (A1[1] * P[1]);\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove, A1); }\n\t\t}\n\t} else {\n\t\tif (index1 % 2) { /* both edges within existing shadows */\n\t\t\tvar P1 = SHADOWS[index1];\n\t\t\tvar P2 = SHADOWS[index2];\n\t\t\tvisibleLength = (P2[0]*P1[1] - P1[0]*P2[1]) / (P1[1] * P2[1]);\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove); }\n\t\t} else { /* both edges outside existing shadows */\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove, A1, A2); }\n\t\t\treturn 1; /* whole arc visible! */\n\t\t}\n\t}\n\n\tvar arcLength = (A2[0]*A1[1] - A1[0]*A2[1]) / (A1[1] * A2[1]);\n\n\treturn visibleLength/arcLength;\n}\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nROT.FOV.RecursiveShadowcasting = function(lightPassesCallback, options) {\n\tROT.FOV.call(this, lightPassesCallback, options);\n}\nROT.FOV.RecursiveShadowcasting.extend(ROT.FOV);\n\n/** Octants used for translating recursive shadowcasting offsets */\nROT.FOV.RecursiveShadowcasting.OCTANTS = [\n\t[-1,  0,  0,  1],\n\t[ 0, -1,  1,  0],\n\t[ 0, -1, -1,  0],\n\t[-1,  0,  0, -1],\n\t[ 1,  0,  0, -1],\n\t[ 0,  1, -1,  0],\n\t[ 0,  1,  1,  0],\n\t[ 1,  0,  0,  1]\n];\n\n/**\n * Compute visibility for a 360-degree circle\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype.compute = function(x, y, R, callback) {\n\t//You can always see your own tile\n\tcallback(x, y, 0, 1);\n\tfor(var i = 0; i < ROT.FOV.RecursiveShadowcasting.OCTANTS.length; i++) {\n\t\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[i], R, callback);\n\t}\n}\n\n/**\n * Compute visibility for a 180-degree arc\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype.compute180 = function(x, y, R, dir, callback) {\n\t//You can always see your own tile\n\tcallback(x, y, 0, 1);\n\tvar previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n\tvar nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n\tvar nextOctant = (dir+ 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[nextPreviousOctant], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[previousOctant], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[dir], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[nextOctant], R, callback);\n}\n\n/**\n * Compute visibility for a 90-degree arc\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype.compute90 = function(x, y, R, dir, callback) {\n\t//You can always see your own tile\n\tcallback(x, y, 0, 1);\n\tvar previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[dir], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[previousOctant], R, callback);\n}\n\n/**\n * Render one octant (45-degree arc) of the viewshed\n * @param {int} x\n * @param {int} y\n * @param {int} octant Octant to be rendered\n * @param {int} R Maximum visibility radius\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype._renderOctant = function(x, y, octant, R, callback) {\n\t//Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n\tthis._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n}\n\n/**\n * Actually calculates the visibility\n * @param {int} startX The starting X coordinate\n * @param {int} startY The starting Y coordinate\n * @param {int} row The row to render\n * @param {float} visSlopeStart The slope to start at\n * @param {float} visSlopeEnd The slope to end at\n * @param {int} radius The radius to reach out to\n * @param {int} xx \n * @param {int} xy \n * @param {int} yx \n * @param {int} yy \n * @param {function} callback The callback to use when we hit a block that is visible\n */\nROT.FOV.RecursiveShadowcasting.prototype._castVisibility = function(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n\tif(visSlopeStart < visSlopeEnd) { return; }\n\tfor(var i = row; i <= radius; i++) {\n\t\tvar dx = -i - 1;\n\t\tvar dy = -i;\n\t\tvar blocked = false;\n\t\tvar newStart = 0;\n\n\t\t//'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n\t\twhile(dx <= 0) {\n\t\t\tdx += 1;\n\n\t\t\t//Translate from relative coordinates to map coordinates\n\t\t\tvar mapX = startX + dx * xx + dy * xy;\n\t\t\tvar mapY = startY + dx * yx + dy * yy;\n\n\t\t\t//Range of the row\n\t\t\tvar slopeStart = (dx - 0.5) / (dy + 0.5);\n\t\t\tvar slopeEnd = (dx + 0.5) / (dy - 0.5);\n\t\t\n\t\t\t//Ignore if not yet at left edge of Octant\n\t\t\tif(slopeEnd > visSlopeStart) { continue; }\n\t\t\t\n\t\t\t//Done if past right edge\n\t\t\tif(slopeStart < visSlopeEnd) { break; }\n\t\t\t\t\n\t\t\t//If it's in range, it's visible\n\t\t\tif((dx * dx + dy * dy) < (radius * radius)) {\n\t\t\t\tcallback(mapX, mapY, i, 1);\n\t\t\t}\n\t\n\t\t\tif(!blocked) {\n\t\t\t\t//If tile is a blocking tile, cast around it\n\t\t\t\tif(!this._lightPasses(mapX, mapY) && i < radius) {\n\t\t\t\t\tblocked = true;\n\t\t\t\t\tthis._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n\t\t\t\t\tnewStart = slopeEnd;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//Keep narrowing if scanning across a block\n\t\t\t\tif(!this._lightPasses(mapX, mapY)) {\n\t\t\t\t\tnewStart = slopeEnd;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\n\t\t\t\t//Block has ended\n\t\t\t\tblocked = false;\n\t\t\t\tvisSlopeStart = newStart;\n\t\t\t}\n\t\t}\n\t\tif(blocked) { break; }\n\t}\n}\n/**\n * @namespace Color operations\n */\nROT.Color = {\n\tfromString: function(str) {\n\t\tvar cached, r;\n\t\tif (str in this._cache) {\n\t\t\tcached = this._cache[str];\n\t\t} else {\n\t\t\tif (str.charAt(0) == \"#\") { /* hex rgb */\n\n\t\t\t\tvar values = str.match(/[0-9a-f]/gi).map(function(x) { return parseInt(x, 16); });\n\t\t\t\tif (values.length == 3) {\n\t\t\t\t\tcached = values.map(function(x) { return x*17; });\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i=0;i<3;i++) {\n\t\t\t\t\t\tvalues[i+1] += 16*values[i];\n\t\t\t\t\t\tvalues.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t\tcached = values;\n\t\t\t\t}\n\n\t\t\t} else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { /* decimal rgb */\n\t\t\t\tcached = r[1].split(/\\s*,\\s*/).map(function(x) { return parseInt(x); });\n\t\t\t} else { /* html name */\n\t\t\t\tcached = [0, 0, 0];\n\t\t\t}\n\n\t\t\tthis._cache[str] = cached;\n\t\t}\n\n\t\treturn cached.slice();\n\t},\n\n\t/**\n\t * Add two or more colors\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tadd: function(color1, color2) {\n\t\tvar result = color1.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tresult[i] += arguments[j][i];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Add two or more colors, MODIFIES FIRST ARGUMENT\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tadd_: function(color1, color2) {\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tcolor1[i] += arguments[j][i];\n\t\t\t}\n\t\t}\n\t\treturn color1;\n\t},\n\n\t/**\n\t * Multiply (mix) two or more colors\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tmultiply: function(color1, color2) {\n\t\tvar result = color1.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tresult[i] *= arguments[j][i] / 255;\n\t\t\t}\n\t\t\tresult[i] = Math.round(result[i]);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tmultiply_: function(color1, color2) {\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tcolor1[i] *= arguments[j][i] / 255;\n\t\t\t}\n\t\t\tcolor1[i] = Math.round(color1[i]);\n\t\t}\n\t\treturn color1;\n\t},\n\n\t/**\n\t * Interpolate (blend) two colors with a given factor\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @param {float} [factor=0.5] 0..1\n\t * @returns {number[]}\n\t */\n\tinterpolate: function(color1, color2, factor) {\n\t\tif (arguments.length < 3) { factor = 0.5; }\n\t\tvar result = color1.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tresult[i] = Math.round(result[i] + factor*(color2[i]-color1[i]));\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Interpolate (blend) two colors with a given factor in HSL mode\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @param {float} [factor=0.5] 0..1\n\t * @returns {number[]}\n\t */\n\tinterpolateHSL: function(color1, color2, factor) {\n\t\tif (arguments.length < 3) { factor = 0.5; }\n\t\tvar hsl1 = this.rgb2hsl(color1);\n\t\tvar hsl2 = this.rgb2hsl(color2);\n\t\tfor (var i=0;i<3;i++) {\n\t\t\thsl1[i] += factor*(hsl2[i]-hsl1[i]);\n\t\t}\n\t\treturn this.hsl2rgb(hsl1);\n\t},\n\n\t/**\n\t * Create a new random color based on this one\n\t * @param {number[]} color\n\t * @param {number[]} diff Set of standard deviations\n\t * @returns {number[]}\n\t */\n\trandomize: function(color, diff) {\n\t\tif (!(diff instanceof Array)) { diff = Math.round(ROT.RNG.getNormal(0, diff)); }\n\t\tvar result = color.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tresult[i] += (diff instanceof Array ? Math.round(ROT.RNG.getNormal(0, diff[i])) : diff);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n\t * @param {number[]} color\n\t * @returns {number[]}\n\t */\n\trgb2hsl: function(color) {\n\t\tvar r = color[0]/255;\n\t\tvar g = color[1]/255;\n\t\tvar b = color[2]/255;\n\n\t\tvar max = Math.max(r, g, b), min = Math.min(r, g, b);\n\t\tvar h, s, l = (max + min) / 2;\n\n\t\tif (max == min) {\n\t\t\th = s = 0; // achromatic\n\t\t} else {\n\t\t\tvar d = max - min;\n\t\t\ts = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n\t\t\tswitch(max) {\n\t\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\n\t\t\t\tcase g: h = (b - r) / d + 2; break;\n\t\t\t\tcase b: h = (r - g) / d + 4; break;\n\t\t\t}\n\t\t\th /= 6;\n\t\t}\n\n\t\treturn [h, s, l];\n\t},\n\n\t/**\n\t * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n\t * @param {number[]} color\n\t * @returns {number[]}\n\t */\n\thsl2rgb: function(color) {\n\t\tvar l = color[2];\n\n\t\tif (color[1] == 0) {\n\t\t\tl = Math.round(l*255);\n\t\t\treturn [l, l, l];\n\t\t} else {\n\t\t\tvar hue2rgb = function(p, q, t) {\n\t\t\t\tif (t < 0) t += 1;\n\t\t\t\tif (t > 1) t -= 1;\n\t\t\t\tif (t < 1/6) return p + (q - p) * 6 * t;\n\t\t\t\tif (t < 1/2) return q;\n\t\t\t\tif (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n\t\t\t\treturn p;\n\t\t\t}\n\n\t\t\tvar s = color[1];\n\t\t\tvar q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n\t\t\tvar p = 2 * l - q;\n\t\t\tvar r = hue2rgb(p, q, color[0] + 1/3);\n\t\t\tvar g = hue2rgb(p, q, color[0]);\n\t\t\tvar b = hue2rgb(p, q, color[0] - 1/3);\n\t\t\treturn [Math.round(r*255), Math.round(g*255), Math.round(b*255)];\n\t\t}\n\t},\n\n\ttoRGB: function(color) {\n\t\treturn \"rgb(\" + this._clamp(color[0]) + \",\" + this._clamp(color[1]) + \",\" + this._clamp(color[2]) + \")\";\n\t},\n\n\ttoHex: function(color) {\n\t\tvar parts = [];\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tparts.push(this._clamp(color[i]).toString(16).lpad(\"0\", 2));\n\t\t}\n\t\treturn \"#\" + parts.join(\"\");\n\t},\n\n\t_clamp: function(num) {\n\t\tif (num < 0) {\n\t\t\treturn 0;\n\t\t} else if (num > 255) {\n\t\t\treturn 255;\n\t\t} else {\n\t\t\treturn num;\n\t\t}\n\t},\n\n\t_cache: {\n\t\t\"black\": [0,0,0],\n\t\t\"navy\": [0,0,128],\n\t\t\"darkblue\": [0,0,139],\n\t\t\"mediumblue\": [0,0,205],\n\t\t\"blue\": [0,0,255],\n\t\t\"darkgreen\": [0,100,0],\n\t\t\"green\": [0,128,0],\n\t\t\"teal\": [0,128,128],\n\t\t\"darkcyan\": [0,139,139],\n\t\t\"deepskyblue\": [0,191,255],\n\t\t\"darkturquoise\": [0,206,209],\n\t\t\"mediumspringgreen\": [0,250,154],\n\t\t\"lime\": [0,255,0],\n\t\t\"springgreen\": [0,255,127],\n\t\t\"aqua\": [0,255,255],\n\t\t\"cyan\": [0,255,255],\n\t\t\"midnightblue\": [25,25,112],\n\t\t\"dodgerblue\": [30,144,255],\n\t\t\"forestgreen\": [34,139,34],\n\t\t\"seagreen\": [46,139,87],\n\t\t\"darkslategray\": [47,79,79],\n\t\t\"darkslategrey\": [47,79,79],\n\t\t\"limegreen\": [50,205,50],\n\t\t\"mediumseagreen\": [60,179,113],\n\t\t\"turquoise\": [64,224,208],\n\t\t\"royalblue\": [65,105,225],\n\t\t\"steelblue\": [70,130,180],\n\t\t\"darkslateblue\": [72,61,139],\n\t\t\"mediumturquoise\": [72,209,204],\n\t\t\"indigo\": [75,0,130],\n\t\t\"darkolivegreen\": [85,107,47],\n\t\t\"cadetblue\": [95,158,160],\n\t\t\"cornflowerblue\": [100,149,237],\n\t\t\"mediumaquamarine\": [102,205,170],\n\t\t\"dimgray\": [105,105,105],\n\t\t\"dimgrey\": [105,105,105],\n\t\t\"slateblue\": [106,90,205],\n\t\t\"olivedrab\": [107,142,35],\n\t\t\"slategray\": [112,128,144],\n\t\t\"slategrey\": [112,128,144],\n\t\t\"lightslategray\": [119,136,153],\n\t\t\"lightslategrey\": [119,136,153],\n\t\t\"mediumslateblue\": [123,104,238],\n\t\t\"lawngreen\": [124,252,0],\n\t\t\"chartreuse\": [127,255,0],\n\t\t\"aquamarine\": [127,255,212],\n\t\t\"maroon\": [128,0,0],\n\t\t\"purple\": [128,0,128],\n\t\t\"olive\": [128,128,0],\n\t\t\"gray\": [128,128,128],\n\t\t\"grey\": [128,128,128],\n\t\t\"skyblue\": [135,206,235],\n\t\t\"lightskyblue\": [135,206,250],\n\t\t\"blueviolet\": [138,43,226],\n\t\t\"darkred\": [139,0,0],\n\t\t\"darkmagenta\": [139,0,139],\n\t\t\"saddlebrown\": [139,69,19],\n\t\t\"darkseagreen\": [143,188,143],\n\t\t\"lightgreen\": [144,238,144],\n\t\t\"mediumpurple\": [147,112,216],\n\t\t\"darkviolet\": [148,0,211],\n\t\t\"palegreen\": [152,251,152],\n\t\t\"darkorchid\": [153,50,204],\n\t\t\"yellowgreen\": [154,205,50],\n\t\t\"sienna\": [160,82,45],\n\t\t\"brown\": [165,42,42],\n\t\t\"darkgray\": [169,169,169],\n\t\t\"darkgrey\": [169,169,169],\n\t\t\"lightblue\": [173,216,230],\n\t\t\"greenyellow\": [173,255,47],\n\t\t\"paleturquoise\": [175,238,238],\n\t\t\"lightsteelblue\": [176,196,222],\n\t\t\"powderblue\": [176,224,230],\n\t\t\"firebrick\": [178,34,34],\n\t\t\"darkgoldenrod\": [184,134,11],\n\t\t\"mediumorchid\": [186,85,211],\n\t\t\"rosybrown\": [188,143,143],\n\t\t\"darkkhaki\": [189,183,107],\n\t\t\"silver\": [192,192,192],\n\t\t\"mediumvioletred\": [199,21,133],\n\t\t\"indianred\": [205,92,92],\n\t\t\"peru\": [205,133,63],\n\t\t\"chocolate\": [210,105,30],\n\t\t\"tan\": [210,180,140],\n\t\t\"lightgray\": [211,211,211],\n\t\t\"lightgrey\": [211,211,211],\n\t\t\"palevioletred\": [216,112,147],\n\t\t\"thistle\": [216,191,216],\n\t\t\"orchid\": [218,112,214],\n\t\t\"goldenrod\": [218,165,32],\n\t\t\"crimson\": [220,20,60],\n\t\t\"gainsboro\": [220,220,220],\n\t\t\"plum\": [221,160,221],\n\t\t\"burlywood\": [222,184,135],\n\t\t\"lightcyan\": [224,255,255],\n\t\t\"lavender\": [230,230,250],\n\t\t\"darksalmon\": [233,150,122],\n\t\t\"violet\": [238,130,238],\n\t\t\"palegoldenrod\": [238,232,170],\n\t\t\"lightcoral\": [240,128,128],\n\t\t\"khaki\": [240,230,140],\n\t\t\"aliceblue\": [240,248,255],\n\t\t\"honeydew\": [240,255,240],\n\t\t\"azure\": [240,255,255],\n\t\t\"sandybrown\": [244,164,96],\n\t\t\"wheat\": [245,222,179],\n\t\t\"beige\": [245,245,220],\n\t\t\"whitesmoke\": [245,245,245],\n\t\t\"mintcream\": [245,255,250],\n\t\t\"ghostwhite\": [248,248,255],\n\t\t\"salmon\": [250,128,114],\n\t\t\"antiquewhite\": [250,235,215],\n\t\t\"linen\": [250,240,230],\n\t\t\"lightgoldenrodyellow\": [250,250,210],\n\t\t\"oldlace\": [253,245,230],\n\t\t\"red\": [255,0,0],\n\t\t\"fuchsia\": [255,0,255],\n\t\t\"magenta\": [255,0,255],\n\t\t\"deeppink\": [255,20,147],\n\t\t\"orangered\": [255,69,0],\n\t\t\"tomato\": [255,99,71],\n\t\t\"hotpink\": [255,105,180],\n\t\t\"coral\": [255,127,80],\n\t\t\"darkorange\": [255,140,0],\n\t\t\"lightsalmon\": [255,160,122],\n\t\t\"orange\": [255,165,0],\n\t\t\"lightpink\": [255,182,193],\n\t\t\"pink\": [255,192,203],\n\t\t\"gold\": [255,215,0],\n\t\t\"peachpuff\": [255,218,185],\n\t\t\"navajowhite\": [255,222,173],\n\t\t\"moccasin\": [255,228,181],\n\t\t\"bisque\": [255,228,196],\n\t\t\"mistyrose\": [255,228,225],\n\t\t\"blanchedalmond\": [255,235,205],\n\t\t\"papayawhip\": [255,239,213],\n\t\t\"lavenderblush\": [255,240,245],\n\t\t\"seashell\": [255,245,238],\n\t\t\"cornsilk\": [255,248,220],\n\t\t\"lemonchiffon\": [255,250,205],\n\t\t\"floralwhite\": [255,250,240],\n\t\t\"snow\": [255,250,250],\n\t\t\"yellow\": [255,255,0],\n\t\t\"lightyellow\": [255,255,224],\n\t\t\"ivory\": [255,255,240],\n\t\t\"white\": [255,255,255]\n\t}\n}\n/**\n * @class Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n * @param {function} reflectivityCallback Callback to retrieve cell reflectivity (0..1)\n * @param {object} [options]\n * @param {int} [options.passes=1] Number of passes. 1 equals to simple FOV of all light sources, >1 means a *highly simplified* radiosity-like algorithm.\n * @param {int} [options.emissionThreshold=100] Cells with emissivity > threshold will be treated as light source in the next pass.\n * @param {int} [options.range=10] Max light range\n */\nROT.Lighting = function(reflectivityCallback, options) {\n\tthis._reflectivityCallback = reflectivityCallback;\n\tthis._options = {\n\t\tpasses: 1,\n\t\temissionThreshold: 100,\n\t\trange: 10\n\t};\n\tthis._fov = null;\n\n\tthis._lights = {};\n\tthis._reflectivityCache = {};\n\tthis._fovCache = {};\n\n\tthis.setOptions(options);\n}\n\n/**\n * Adjust options at runtime\n * @see ROT.Lighting\n * @param {object} [options]\n */\nROT.Lighting.prototype.setOptions = function(options) {\n\tfor (var p in options) { this._options[p] = options[p]; }\n\tif (options && options.range) { this.reset(); }\n\treturn this;\n}\n\n/**\n * Set the used Field-Of-View algo\n * @param {ROT.FOV} fov\n */\nROT.Lighting.prototype.setFOV = function(fov) {\n\tthis._fov = fov;\n\tthis._fovCache = {};\n\treturn this;\n}\n\n/**\n * Set (or remove) a light source\n * @param {int} x\n * @param {int} y\n * @param {null || string || number[3]} color\n */\nROT.Lighting.prototype.setLight = function(x, y, color) {\n\tvar key = x+\",\"+y;\n\n\tif (color) {\n\t\tthis._lights[key] = (typeof(color) == \"string\" ? ROT.Color.fromString(color) : color);\n\t} else {\n\t\tdelete this._lights[key];\n\t}\n\treturn this;\n}\n\n/**\n * Remove all light sources\n */\nROT.Lighting.prototype.clearLights = function() {\n    this._lights = {};\n}\n\n/**\n * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n */\nROT.Lighting.prototype.reset = function() {\n\tthis._reflectivityCache = {};\n\tthis._fovCache = {};\n\n\treturn this;\n}\n\n/**\n * Compute the lighting\n * @param {function} lightingCallback Will be called with (x, y, color) for every lit cell\n */\nROT.Lighting.prototype.compute = function(lightingCallback) {\n\tvar doneCells = {};\n\tvar emittingCells = {};\n\tvar litCells = {};\n\n\tfor (var key in this._lights) { /* prepare emitters for first pass */\n\t\tvar light = this._lights[key];\n\t\temittingCells[key] = [0, 0, 0];\n\t\tROT.Color.add_(emittingCells[key], light);\n\t}\n\n\tfor (var i=0;i<this._options.passes;i++) { /* main loop */\n\t\tthis._emitLight(emittingCells, litCells, doneCells);\n\t\tif (i+1 == this._options.passes) { continue; } /* not for the last pass */\n\t\temittingCells = this._computeEmitters(litCells, doneCells);\n\t}\n\n\tfor (var litKey in litCells) { /* let the user know what and how is lit */\n\t\tvar parts = litKey.split(\",\");\n\t\tvar x = parseInt(parts[0]);\n\t\tvar y = parseInt(parts[1]);\n\t\tlightingCallback(x, y, litCells[litKey]);\n\t}\n\n\treturn this;\n}\n\n/**\n * Compute one iteration from all emitting cells\n * @param {object} emittingCells These emit light\n * @param {object} litCells Add projected light to these\n * @param {object} doneCells These already emitted, forbid them from further calculations\n */\nROT.Lighting.prototype._emitLight = function(emittingCells, litCells, doneCells) {\n\tfor (var key in emittingCells) {\n\t\tvar parts = key.split(\",\");\n\t\tvar x = parseInt(parts[0]);\n\t\tvar y = parseInt(parts[1]);\n\t\tthis._emitLightFromCell(x, y, emittingCells[key], litCells);\n\t\tdoneCells[key] = 1;\n\t}\n\treturn this;\n}\n\n/**\n * Prepare a list of emitters for next pass\n * @param {object} litCells\n * @param {object} doneCells\n * @returns {object}\n */\nROT.Lighting.prototype._computeEmitters = function(litCells, doneCells) {\n\tvar result = {};\n\n\tfor (var key in litCells) {\n\t\tif (key in doneCells) { continue; } /* already emitted */\n\n\t\tvar color = litCells[key];\n\n\t\tif (key in this._reflectivityCache) {\n\t\t\tvar reflectivity = this._reflectivityCache[key];\n\t\t} else {\n\t\t\tvar parts = key.split(\",\");\n\t\t\tvar x = parseInt(parts[0]);\n\t\t\tvar y = parseInt(parts[1]);\n\t\t\tvar reflectivity = this._reflectivityCallback(x, y);\n\t\t\tthis._reflectivityCache[key] = reflectivity;\n\t\t}\n\n\t\tif (reflectivity == 0) { continue; } /* will not reflect at all */\n\n\t\t/* compute emission color */\n\t\tvar emission = [];\n\t\tvar intensity = 0;\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tvar part = Math.round(color[i]*reflectivity);\n\t\t\temission[i] = part;\n\t\t\tintensity += part;\n\t\t}\n\t\tif (intensity > this._options.emissionThreshold) { result[key] = emission; }\n\t}\n\n\treturn result;\n}\n\n/**\n * Compute one iteration from one cell\n * @param {int} x\n * @param {int} y\n * @param {number[]} color\n * @param {object} litCells Cell data to by updated\n */\nROT.Lighting.prototype._emitLightFromCell = function(x, y, color, litCells) {\n\tvar key = x+\",\"+y;\n\tif (key in this._fovCache) {\n\t\tvar fov = this._fovCache[key];\n\t} else {\n\t\tvar fov = this._updateFOV(x, y);\n\t}\n\n\tfor (var fovKey in fov) {\n\t\tvar formFactor = fov[fovKey];\n\n\t\tif (fovKey in litCells) { /* already lit */\n\t\t\tvar result = litCells[fovKey];\n\t\t} else { /* newly lit */\n\t\t\tvar result = [0, 0, 0];\n\t\t\tlitCells[fovKey] = result;\n\t\t}\n\n\t\tfor (var i=0;i<3;i++) { result[i] += Math.round(color[i]*formFactor); } /* add light color */\n\t}\n\n\treturn this;\n}\n\n/**\n * Compute FOV (\"form factor\") for a potential light source at [x,y]\n * @param {int} x\n * @param {int} y\n * @returns {object}\n */\nROT.Lighting.prototype._updateFOV = function(x, y) {\n\tvar key1 = x+\",\"+y;\n\tvar cache = {};\n\tthis._fovCache[key1] = cache;\n\tvar range = this._options.range;\n\tvar cb = function(x, y, r, vis) {\n\t\tvar key2 = x+\",\"+y;\n\t\tvar formFactor = vis * (1-r/range);\n\t\tif (formFactor == 0) { return; }\n\t\tcache[key2] = formFactor;\n\t}\n\tthis._fov.compute(x, y, range, cb.bind(this));\n\n\treturn cache;\n}\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nROT.Path = function(toX, toY, passableCallback, options) {\n\tthis._toX = toX;\n\tthis._toY = toY;\n\tthis._fromX = null;\n\tthis._fromY = null;\n\tthis._passableCallback = passableCallback;\n\tthis._options = {\n\t\ttopology: 8\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\n\tthis._dirs = ROT.DIRS[this._options.topology];\n\tif (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n\t\tthis._dirs = [\n\t\t\tthis._dirs[0],\n\t\t\tthis._dirs[2],\n\t\t\tthis._dirs[4],\n\t\t\tthis._dirs[6],\n\t\t\tthis._dirs[1],\n\t\t\tthis._dirs[3],\n\t\t\tthis._dirs[5],\n\t\t\tthis._dirs[7]\n\t\t]\n\t}\n}\n\n/**\n * Compute a path from a given point\n * @param {int} fromX\n * @param {int} fromY\n * @param {function} callback Will be called for every path item with arguments \"x\" and \"y\"\n */\nROT.Path.prototype.compute = function(fromX, fromY, callback) {\n}\n\nROT.Path.prototype._getNeighbors = function(cx, cy) {\n\tvar result = [];\n\tfor (var i=0;i<this._dirs.length;i++) {\n\t\tvar dir = this._dirs[i];\n\t\tvar x = cx + dir[0];\n\t\tvar y = cy + dir[1];\n\t\t\n\t\tif (!this._passableCallback(x, y)) { continue; }\n\t\tresult.push([x, y]);\n\t}\n\t\n\treturn result;\n}\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nROT.Path.Dijkstra = function(toX, toY, passableCallback, options) {\n\tROT.Path.call(this, toX, toY, passableCallback, options);\n\n\tthis._computed = {};\n\tthis._todo = [];\n\tthis._add(toX, toY, null);\n}\nROT.Path.Dijkstra.extend(ROT.Path);\n\n/**\n * Compute a path from a given point\n * @see ROT.Path#compute\n */\nROT.Path.Dijkstra.prototype.compute = function(fromX, fromY, callback) {\n\tvar key = fromX+\",\"+fromY;\n\tif (!(key in this._computed)) { this._compute(fromX, fromY); }\n\tif (!(key in this._computed)) { return; }\n\t\n\tvar item = this._computed[key];\n\twhile (item) {\n\t\tcallback(item.x, item.y);\n\t\titem = item.prev;\n\t}\n}\n\n/**\n * Compute a non-cached value\n */\nROT.Path.Dijkstra.prototype._compute = function(fromX, fromY) {\n\twhile (this._todo.length) {\n\t\tvar item = this._todo.shift();\n\t\tif (item.x == fromX && item.y == fromY) { return; }\n\t\t\n\t\tvar neighbors = this._getNeighbors(item.x, item.y);\n\t\t\n\t\tfor (var i=0;i<neighbors.length;i++) {\n\t\t\tvar neighbor = neighbors[i];\n\t\t\tvar x = neighbor[0];\n\t\t\tvar y = neighbor[1];\n\t\t\tvar id = x+\",\"+y;\n\t\t\tif (id in this._computed) { continue; } /* already done */\t\n\t\t\tthis._add(x, y, item); \n\t\t}\n\t}\n}\n\nROT.Path.Dijkstra.prototype._add = function(x, y, prev) {\n\tvar obj = {\n\t\tx: x,\n\t\ty: y,\n\t\tprev: prev\n\t}\n\tthis._computed[x+\",\"+y] = obj;\n\tthis._todo.push(obj);\n}\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nROT.Path.AStar = function(toX, toY, passableCallback, options) {\n\tROT.Path.call(this, toX, toY, passableCallback, options);\n\n\tthis._todo = [];\n\tthis._done = {};\n\tthis._fromX = null;\n\tthis._fromY = null;\n}\nROT.Path.AStar.extend(ROT.Path);\n\n/**\n * Compute a path from a given point\n * @see ROT.Path#compute\n */\nROT.Path.AStar.prototype.compute = function(fromX, fromY, callback) {\n\tthis._todo = [];\n\tthis._done = {};\n\tthis._fromX = fromX;\n\tthis._fromY = fromY;\n\tthis._add(this._toX, this._toY, null);\n\n\twhile (this._todo.length) {\n\t\tvar item = this._todo.shift();\n\t\tif (item.x == fromX && item.y == fromY) { break; }\n\t\tvar neighbors = this._getNeighbors(item.x, item.y);\n\n\t\tfor (var i=0;i<neighbors.length;i++) {\n\t\t\tvar neighbor = neighbors[i];\n\t\t\tvar x = neighbor[0];\n\t\t\tvar y = neighbor[1];\n\t\t\tvar id = x+\",\"+y;\n\t\t\tif (id in this._done) { continue; }\n\t\t\tthis._add(x, y, item); \n\t\t}\n\t}\n\t\n\tvar item = this._done[fromX+\",\"+fromY];\n\tif (!item) { return; }\n\t\n\twhile (item) {\n\t\tcallback(item.x, item.y);\n\t\titem = item.prev;\n\t}\n}\n\nROT.Path.AStar.prototype._add = function(x, y, prev) {\n\tvar obj = {\n\t\tx: x,\n\t\ty: y,\n\t\tprev: prev,\n\t\tg: (prev ? prev.g+1 : 0),\n\t\th: this._distance(x, y)\n\t}\n\tthis._done[x+\",\"+y] = obj;\n\t\n\t/* insert into priority queue */\n\t\n\tvar f = obj.g + obj.h;\n\tfor (var i=0;i<this._todo.length;i++) {\n\t\tvar item = this._todo[i];\n\t\tif (f < item.g + item.h) {\n\t\t\tthis._todo.splice(i, 0, obj);\n\t\t\treturn;\n\t\t}\n\t}\n\t\n\tthis._todo.push(obj);\n}\n\nROT.Path.AStar.prototype._distance = function(x, y) {\n\tswitch (this._options.topology) {\n\t\tcase 4:\n\t\t\treturn (Math.abs(x-this._fromX) + Math.abs(y-this._fromY));\n\t\tbreak;\n\n\t\tcase 6:\n\t\t\tvar dx = Math.abs(x - this._fromX);\n\t\t\tvar dy = Math.abs(y - this._fromY);\n\t\t\treturn dy + Math.max(0, (dx-dy)/2);\n\t\tbreak;\n\n\t\tcase 8: \n\t\t\treturn Math.max(Math.abs(x-this._fromX), Math.abs(y-this._fromY));\n\t\tbreak;\n\t}\n\n        throw new Error(\"Illegal topology\");\n}\n/**\n * @class Terminal backend\n * @private\n */\nROT.Display.Term = function(context) {\n\tROT.Display.Backend.call(this, context);\n\tthis._cx = -1;\n\tthis._cy = -1;\n\tthis._lastColor = \"\";\n\tthis._options = {};\n\tthis._ox = 0;\n\tthis._oy = 0;\n\tthis._termcolor = {};\n}\nROT.Display.Term.extend(ROT.Display.Backend);\n\nROT.Display.Term.prototype.compute = function(options) {\n\tthis._options = options;\n\tthis._ox = Math.floor((process.stdout.columns - options.width) / 2);\n\tthis._oy = Math.floor((process.stdout.rows - options.height) / 2);\n\tthis._termcolor = new ROT.Display.Term[options.termColor.capitalize()](this._context);\n\tthis._context._termcolor = this._termcolor;\n}\n\nROT.Display.Term.prototype.draw = function(data, clearBefore) {\n\t// determine where to draw what with what colors\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\t// determine if we need to move the terminal cursor\n\tvar dx = this._ox + x;\n\tvar dy = this._oy + y;\n\tif (dx < 0 || dx >= process.stdout.columns) { return; }\n\tif (dy < 0 || dy >= process.stdout.rows) { return; }\n\tif (dx !== this._cx || dy !== this._cy) {\n\t\tprocess.stdout.write(this._termcolor.positionToAnsi(dx,dy));\n\t\tthis._cx = dx;\n\t\tthis._cy = dy;\n\t}\n\n\t// terminals automatically clear, but if we're clearing when we're\n\t// not otherwise provided with a character, just use a space instead\n\tif (clearBefore) {\n\t\tif (!ch) {\n\t\t\tch = \" \";\n\t\t}\n\t}\n\t\t\n\t// if we're not clearing and not provided with a character, do nothing\n\tif (!ch) { return; }\n\n\t// determine if we need to change colors\n\tvar newColor = this._termcolor.colorToAnsi(fg,bg);\n\tif (newColor !== this._lastColor) {\n\t\tprocess.stdout.write(newColor);\n\t\tthis._lastColor = newColor;\n\t}\n\n\t// write the provided symbol to the display\n\tvar chars = [].concat(ch);\n\tprocess.stdout.write(chars[0]);\n\n\t// update our position, given that we wrote a character\n\tthis._cx++;\n\tif (this._cx >= process.stdout.columns) {\n\t\tthis._cx = 0;\n\t\tthis._cy++;\n\t}\n}\n\nROT.Display.Term.prototype.computeSize = function(availWidth, availHeight) {\n\treturn [process.stdout.columns, process.stdout.rows];\n}\n\nROT.Display.Term.prototype.computeFontSize = function(availWidth, availHeight) {\n\treturn 12;\n}\n\nROT.Display.Term.prototype.eventToPosition = function(x, y) {\n\treturn [x,y]\n}\n/**\n * @class Abstract terminal code module\n * @private\n */\nROT.Display.Term.Color = function(context) {\n\tthis._context = context;\n}\n\nROT.Display.Term.Color.prototype.clearToAnsi = function(bg) {\n}\n\nROT.Display.Term.Color.prototype.colorToAnsi = function(fg, bg) {\n}\n\nROT.Display.Term.Color.prototype.positionToAnsi = function(x, y) {\n}\n/**\n * @class xterm terminal code module\n * @private\n */\nROT.Display.Term.Xterm = function(context) {\n\tROT.Display.Term.Color.call(this, context);\n}\nROT.Display.Term.Xterm.extend(ROT.Display.Term.Color);\n\nROT.Display.Term.Xterm.prototype.clearToAnsi = function(bg) {\n\treturn \"\\x1b[0;48;5;\"\n\t\t+ this._termcolor(bg)\n\t\t+ \"m\\x1b[2J\";\n}\n\nROT.Display.Term.Xterm.prototype.colorToAnsi = function(fg, bg) {\n\treturn \"\\x1b[0;38;5;\"\n\t\t+ this._termcolor(fg)\n\t\t+ \";48;5;\"\n\t\t+ this._termcolor(bg)\n\t\t+ \"m\";\n}\n\nROT.Display.Term.Xterm.prototype.positionToAnsi = function(x, y) {\n\treturn \"\\x1b[\" + (y+1) + \";\" + (x+1) + \"H\";\n}\n\nROT.Display.Term.Xterm.prototype._termcolor = function(color) {\n\tvar SRC_COLORS = 256.0;\n\tvar DST_COLORS = 6.0;\n\tvar COLOR_RATIO = DST_COLORS / SRC_COLORS;\n\tvar rgb = ROT.Color.fromString(color);\n\tvar r = Math.floor(rgb[0] * COLOR_RATIO);\n\tvar g = Math.floor(rgb[1] * COLOR_RATIO);\n\tvar b = Math.floor(rgb[2] * COLOR_RATIO);\n\treturn r*36 + g*6 + b*1 + 16;\n}\n/**\n * Export to Node.js module\n */\nfor (var p in ROT) {\n\texports[p] = ROT[p];\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6), __webpack_require__(17)))\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar XY = function () {\n\tfunction XY() {\n\t\tvar x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\t\tvar y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n\t\t_classCallCheck(this, XY);\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\t_createClass(XY, [{\n\t\tkey: \"toString\",\n\t\tvalue: function toString() {\n\t\t\treturn this.x + \",\" + this.y;\n\t\t}\n\t}, {\n\t\tkey: \"is\",\n\t\tvalue: function is(xy) {\n\t\t\treturn this.x === xy.x && this.y === xy.y;\n\t\t}\n\t}, {\n\t\tkey: \"dist8\",\n\t\tvalue: function dist8(xy) {\n\t\t\tvar dx = xy.x - this.x,\n\t\t\t    dy = xy.y - this.y;\n\n\t\t\treturn Math.max(Math.abs(dx), Math.abs(dy));\n\t\t}\n\t}, {\n\t\tkey: \"dist4\",\n\t\tvalue: function dist4(xy) {\n\t\t\tvar dx = xy.x - this.x,\n\t\t\t    dy = xy.y - this.y;\n\n\t\t\treturn Math.abs(dx) + Math.abs(dy);\n\t\t}\n\t}, {\n\t\tkey: \"dist\",\n\t\tvalue: function dist(xy) {\n\t\t\tvar dx = xy.x - this.x,\n\t\t\t    dy = xy.y - this.y;\n\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t}\n\t}, {\n\t\tkey: \"plus\",\n\t\tvalue: function plus(xy) {\n\t\t\treturn new XY(this.x + xy.x, this.y + xy.y);\n\t\t}\n\t}, {\n\t\tkey: \"minus\",\n\t\tvalue: function minus(xy) {\n\t\t\treturn new XY(this.x - xy.x, this.y - xy.y);\n\t\t}\n\t}]);\n\n\treturn XY;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (XY);\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__entity__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__game__ = __webpack_require__(0);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\nvar Being = function (_Entity) {\n\t_inherits(Being, _Entity);\n\n\tfunction Being(visual) {\n\t\t_classCallCheck(this, Being);\n\n\t\tvar _this = _possibleConstructorReturn(this, (Being.__proto__ || Object.getPrototypeOf(Being)).call(this, visual));\n\n\t\t_this.setPosition = function (xy, level) {\n\t\t\t// came to a currently active level; add self to the scheduler\n\t\t\tif (level !== this._level && level === __WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].level) {\n\t\t\t\t__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].scheduler.add(this, true);\n\t\t\t}\n\n\t\t\tif (level.getTileAt(xy).passable) {\n\t\t\t\treturn __WEBPACK_IMPORTED_MODULE_0__entity__[\"a\" /* default */].prototype.setPosition.call(this, xy, level);\n\t\t\t} else {\n\t\t\t\tif (typeof level.getTileAt(xy).bump === \"function\") {\n\t\t\t\t\tlevel.getTileAt(xy).bump();\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\t\t_this._speed = 100;\n\t\t_this._hp = 10;\n\t\treturn _this;\n\t}\n\n\t_createClass(Being, [{\n\t\tkey: 'getSpeed',\n\t\tvalue: function getSpeed() {\n\t\t\t// Called by the Scheduler\n\t\t\treturn this._speed;\n\t\t}\n\t}, {\n\t\tkey: 'damage',\n\t\tvalue: function damage(_damage) {\n\t\t\tthis._hp -= _damage;\n\t\t\tif (this._hp <= 0) {\n\t\t\t\tthis.die();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'act',\n\t\tvalue: function act() {\n\t\t\t// FIXME\n\t\t}\n\t}, {\n\t\tkey: 'die',\n\t\tvalue: function die() {\n\t\t\t__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].scheduler.remove(this);\n\t\t}\n\t}]);\n\n\treturn Being;\n}(__WEBPACK_IMPORTED_MODULE_0__entity__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Being);\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar asap = __webpack_require__(9);\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nif (typeof Promise === 'undefined') {\r\n  // Rejection tracking prevents a common issue where React gets into an\r\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\r\n  // and the user has no idea what causes React's erratic future behavior.\r\n  __webpack_require__(19).enable();\r\n  window.Promise = __webpack_require__(18);\r\n}\r\n\r\n// fetch() polyfill for making API calls.\r\n__webpack_require__(20);\r\n\r\n// Object.assign() is commonly used with React.\r\n// It will use the native implementation if it's present and isn't buggy.\r\nObject.assign = __webpack_require__(16);\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rot_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__game__ = __webpack_require__(0);\n\n\n\nif (!__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.isSupported()) {\n    alert(\"The rot.js library isn't supported by your browser.\");\n} else {\n    // Initialize the game\n    __WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].init();\n}\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__entity__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__game__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__xy__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__map__ = __webpack_require__(11);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\nvar Level = function () {\n\tfunction Level() {\n\t\t_classCallCheck(this, Level);\n\n\t\t// FIXME data structure for storing entities\n\t\tthis._beings = {};\n\n\t\t// FIXME map data\n\t\tthis._size = new __WEBPACK_IMPORTED_MODULE_2__xy__[\"a\" /* default */](80, 25);\n\t\tvar mapData = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__map__[\"a\" /* default */])(80, 25);\n\t\tthis._map = mapData.map;\n\t\tthis._freeCells = mapData.freeCells;\n\n\t\tthis._empty = new __WEBPACK_IMPORTED_MODULE_0__entity__[\"a\" /* default */]({ ch: \".\", fg: \"#888\", bg: null });\n\t}\n\n\t_createClass(Level, [{\n\t\tkey: 'getSize',\n\t\tvalue: function getSize() {\n\t\t\treturn this._size;\n\t\t}\n\t}, {\n\t\tkey: 'setEntity',\n\t\tvalue: function setEntity(entity, xy) {\n\t\t\t// FIXME remove from old position, draw\n\t\t\tvar oldXY = entity.getXY();\n\t\t\tif (entity.getLevel() === this) {\n\t\t\t\tdelete this._beings[oldXY];\n\t\t\t\tif (__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].level === this) {\n\t\t\t\t\t__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].draw(oldXY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (entity.setPosition(xy, this)) {\n\t\t\t\tentity.setPosition(xy, this); // propagate position data to the entity itself\n\t\t\t\t// FIXME set new position, draw\n\t\t\t\tthis._beings[xy] = entity;\n\t\t\t\tif (__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].level === this) {\n\t\t\t\t\t__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].draw(xy);\n\t\t\t\t\t__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].textBuffer.write(\"An entity moves to \" + xy + \".\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (entity.getLevel() === this) {\n\t\t\t\t\tentity.setPosition(oldXY, this);\n\t\t\t\t\tthis._beings[oldXY] = entity;\n\t\t\t\t\tif (__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].level === this) {\n\t\t\t\t\t\t__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].draw(oldXY);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'getEntityAt',\n\t\tvalue: function getEntityAt(xy) {\n\t\t\treturn this._beings[xy] || this._map[xy] || this._empty;\n\t\t}\n\t}, {\n\t\tkey: 'getTileAt',\n\t\tvalue: function getTileAt(xy) {\n\t\t\treturn this._map[xy] || this._empty;\n\t\t}\n\t}, {\n\t\tkey: 'getBeings',\n\t\tvalue: function getBeings() {\n\t\t\t// FIXME list of all beings\n\t\t\treturn this._beings;\n\t\t}\n\t}, {\n\t\tkey: 'getFreeCells',\n\t\tvalue: function getFreeCells() {\n\t\t\treturn this._freeCells;\n\t\t}\n\t}]);\n\n\treturn Level;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Level);\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = generateMap;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rot_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__entity__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tile__ = __webpack_require__(15);\n\n\n\n\nfunction generateMap(w, h) {\n    var digger = new __WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.Map.Digger(w, h);\n    var map = {};\n    var freeCells = [];\n\n    var digCallback = function digCallback(x, y, value) {\n        var key = x + \",\" + y;\n        if (value) {\n            map[key] = new __WEBPACK_IMPORTED_MODULE_2__tile__[\"a\" /* default */](\"wall\");\n        } else {\n            map[key] = new __WEBPACK_IMPORTED_MODULE_2__tile__[\"a\" /* default */](\"floor\");\n            freeCells.push(key);\n        }\n    };\n    digger.create(digCallback.bind(this));\n    var rooms = digger.getRooms();\n    var corridors = digger.getCorridors();\n    return { map: map, freeCells: freeCells };\n}\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rot_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__being__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__game__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__xy__ = __webpack_require__(3);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\nvar Player = function (_Being) {\n\t_inherits(Player, _Being);\n\n\tfunction Player() {\n\t\t_classCallCheck(this, Player);\n\n\t\tvar _this = _possibleConstructorReturn(this, (Player.__proto__ || Object.getPrototypeOf(Player)).call(this, { ch: \"@\", fg: \"#fff\" }));\n\n\t\t_this._handleKey = function (code) {\n\t\t\tif (code in this._keys) {\n\t\t\t\t__WEBPACK_IMPORTED_MODULE_2__game__[\"a\" /* default */].textBuffer.clear();\n\n\t\t\t\tvar direction = this._keys[code];\n\t\t\t\tif (direction === -1) {\n\t\t\t\t\t// noop\n\t\t\t\t\t// FIXME show something?\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tvar dir = __WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.DIRS[8][direction];\n\t\t\t\tvar xy = this._xy.plus(new __WEBPACK_IMPORTED_MODULE_3__xy__[\"a\" /* default */](dir[0], dir[1]));\n\n\t\t\t\tthis._level.setEntity(this, xy);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false; // unknown key\n\t\t};\n\n\t\t_this._keys = {};\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_K] = 0;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_UP] = 0;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD8] = 0;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_U] = 1;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD9] = 1;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_L] = 2;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_RIGHT] = 2;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD6] = 2;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_N] = 3;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD3] = 3;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_J] = 4;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_DOWN] = 4;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD2] = 4;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_B] = 5;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD1] = 5;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_H] = 6;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_LEFT] = 6;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD4] = 6;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_Y] = 7;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD7] = 7;\n\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_PERIOD] = -1;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_CLEAR] = -1;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD5] = -1;\n\t\treturn _this;\n\t}\n\n\t_createClass(Player, [{\n\t\tkey: 'act',\n\t\tvalue: function act() {\n\t\t\t__WEBPACK_IMPORTED_MODULE_2__game__[\"a\" /* default */].textBuffer.write(\"It is your turn, press any relevant key.\");\n\t\t\t__WEBPACK_IMPORTED_MODULE_2__game__[\"a\" /* default */].textBuffer.flush();\n\t\t\t__WEBPACK_IMPORTED_MODULE_2__game__[\"a\" /* default */].engine.lock();\n\t\t\twindow.addEventListener(\"keydown\", this);\n\t\t}\n\t}, {\n\t\tkey: 'die',\n\t\tvalue: function die() {\n\t\t\t_get(Player.prototype.__proto__ || Object.getPrototypeOf(Player.prototype), 'die', this).call(this);\n\t\t\t__WEBPACK_IMPORTED_MODULE_2__game__[\"a\" /* default */].over();\n\t\t}\n\t}, {\n\t\tkey: 'handleEvent',\n\t\tvalue: function handleEvent(e) {\n\t\t\tvar code = e.keyCode;\n\n\t\t\tvar keyHandled = this._handleKey(e.keyCode);\n\n\t\t\tif (keyHandled) {\n\t\t\t\twindow.removeEventListener(\"keydown\", this);\n\t\t\t\t__WEBPACK_IMPORTED_MODULE_2__game__[\"a\" /* default */].engine.unlock();\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn Player;\n}(__WEBPACK_IMPORTED_MODULE_1__being__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Player);\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rot_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__game__ = __webpack_require__(0);\n\n\n\nvar Screen = {};\n\n// Define our initial start screen\nScreen.startScreen = {\n    enter: function enter() {\n        console.log(\"Entered start screen.\");\n    },\n    exit: function exit() {\n        console.log(\"Exited start screen.\");\n    },\n    render: function render(display) {\n        // Render our prompt to the screen\n        display.drawText(1, 1, \"%c{yellow}Javascript Roguelike\");\n        display.drawText(1, 2, \"Press [Enter] to start!\");\n    },\n    handleInput: function handleInput(inputType, inputData) {\n        // When [Enter] is pressed, go to the play screen\n        if (inputType === 'keydown') {\n            if (inputData.keyCode === __WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_RETURN) {\n                __WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].startGame();\n            }\n        }\n    }\n};\n\n// Define our winning screen\nScreen.winScreen = {\n    enter: function enter() {\n        console.log(\"Entered win screen.\");\n    },\n    exit: function exit() {\n        console.log(\"Exited win screen.\");\n    },\n    render: function render(display) {\n        // Render our prompt to the screen\n        for (var i = 0; i < 22; i++) {\n            // Generate random background colors\n            var r = Math.round(Math.random() * 255);\n            var g = Math.round(Math.random() * 255);\n            var b = Math.round(Math.random() * 255);\n            var background = __WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.Color.toRGB([r, g, b]);\n            display.drawText(2, i + 1, \"%b{\" + background + \"}You win!\");\n        }\n    },\n    handleInput: function handleInput(inputType, inputData) {\n        // Nothing to do here\n    }\n};\n\n// Define our losing screen\nScreen.loseScreen = {\n    enter: function enter() {\n        console.log(\"Entered lose screen.\");\n    },\n    exit: function exit() {\n        console.log(\"Exited lose screen.\");\n    },\n    render: function render(display) {\n        // Render our prompt to the screen\n        for (var i = 0; i < 22; i++) {\n            display.drawText(2, i + 1, \"%b{red}You lose! :(\");\n        }\n    },\n    handleInput: function handleInput(inputType, inputData) {\n        // Nothing to do here\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Screen);\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__xy__ = __webpack_require__(3);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar TextBuffer = function () {\n\tfunction TextBuffer() {\n\t\t_classCallCheck(this, TextBuffer);\n\n\t\tthis._data = [];\n\t\tthis._options = {\n\t\t\tdisplay: null,\n\t\t\tposition: new __WEBPACK_IMPORTED_MODULE_0__xy__[\"a\" /* default */](),\n\t\t\tsize: new __WEBPACK_IMPORTED_MODULE_0__xy__[\"a\" /* default */]()\n\t\t};\n\t}\n\n\t_createClass(TextBuffer, [{\n\t\tkey: \"configure\",\n\t\tvalue: function configure(options) {\n\t\t\tfor (var p in options) {\n\t\t\t\tthis._options[p] = options[p];\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"clear\",\n\t\tvalue: function clear() {\n\t\t\tthis._data = [];\n\t\t}\n\t}, {\n\t\tkey: \"write\",\n\t\tvalue: function write(text) {\n\t\t\tthis._data.push(text);\n\t\t}\n\t}, {\n\t\tkey: \"flush\",\n\t\tvalue: function flush() {\n\t\t\tvar options = this._options;\n\t\t\tvar display = options.display;\n\t\t\tvar pos = options.position;\n\t\t\tvar size = options.size;\n\n\t\t\t// clear\n\t\t\tfor (var i = 0; i < size.x; i++) {\n\t\t\t\tfor (var j = 0; j < size.y; j++) {\n\t\t\t\t\tdisplay.draw(pos.x + i, pos.y + j);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar text = this._data.join(\" \");\n\t\t\tdisplay.drawText(pos.x, pos.y, text, size.x);\n\t\t}\n\t}]);\n\n\treturn TextBuffer;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (TextBuffer);\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__entity__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__game__ = __webpack_require__(0);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\nvar Tile = function (_Entity) {\n    _inherits(Tile, _Entity);\n\n    function Tile(type) {\n        _classCallCheck(this, Tile);\n\n        // FIXME\n        var tile = Tile.Types[type];\n\n        var _this = _possibleConstructorReturn(this, (Tile.__proto__ || Object.getPrototypeOf(Tile)).call(this, tile.visual));\n\n        _this.name = tile.name;\n        _this.passable = tile.passable;\n        _this.blocksLos = tile.blocksLos;\n        _this.bump = tile.bump ? tile.bump : _this.bump;\n        return _this;\n    }\n\n    _createClass(Tile, [{\n        key: 'bump',\n        value: function bump() {\n            if (!this.passable) {\n                __WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].textBuffer.write('You cannot move through this ' + this.name + ' no matter how hard you try.');\n                return false;\n            }\n            return true;\n        }\n    }]);\n\n    return Tile;\n}(__WEBPACK_IMPORTED_MODULE_0__entity__[\"a\" /* default */]);\n\nTile.Types = {\n    floor: {\n        name: 'Floor',\n        visual: { ch: '.', fg: '#444', bg: '#222' },\n        passable: true,\n        blocksLos: false\n    },\n    wall: {\n        name: 'Wall',\n        visual: { ch: '#', fg: '#777', bg: '#2e2e2e' },\n        passable: false,\n        blocksLos: true\n    },\n    door: {\n        name: 'Door',\n        visual: { ch: '+', fg: 'yellow', bg: '#222' },\n        passable: false,\n        blocksLos: true,\n        bump: function bump(entity) {\n            if (!this.passable) {\n                this.passable = true;\n                this.blocksLos = false;\n                this.visual.ch = \"'\";\n                __WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].textBuffer.write('You open the ' + this.name + '.');\n                return false;\n            }\n            return true;\n        }\n    }\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = (Tile);\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = __webpack_require__(5);\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Promise = __webpack_require__(5);\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._10 = null;\n  Promise._97 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._10 = function (promise) {\n    if (\n      promise._81 === 2 && // IS REJECTED\n      rejections[promise._72]\n    ) {\n      if (rejections[promise._72].logged) {\n        onHandled(promise._72);\n      } else {\n        clearTimeout(rejections[promise._72].timeout);\n      }\n      delete rejections[promise._72];\n    }\n  };\n  Promise._97 = function (promise, err) {\n    if (promise._45 === 0) { // not yet handled\n      promise._72 = id++;\n      rejections[promise._72] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._72),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(7);\nmodule.exports = __webpack_require__(8);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// static/js/main.773cf7ce.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dung/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8a57a40870d500098b86","import ROT from 'rot-js'\r\nimport Being from './being'\r\nimport Entity from './entity'\r\nimport Level from './level'\r\nimport Player from './player'\r\nimport Screen from './screens'\r\nimport TextBuffer from './textbuffer'\r\nimport XY from './xy'\r\n\r\nclass Game {\r\n\tstatic scheduler = null\r\n\tstatic engine = null\r\n\tstatic player = null\r\n\tstatic level = null\r\n\tstatic display = null\r\n\tstatic textBuffer = null\r\n\tstatic currentScreen = null\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\tinit() {\r\n\t\twindow.addEventListener(\"load\", this);\r\n\t}\r\n\r\n\thandleEvent(e) {\r\n\t\tswitch (e.type) {\r\n\t\t\tcase \"load\":\r\n\t\t\t\twindow.removeEventListener(\"load\", this);\r\n\r\n\t\t\t\tthis.scheduler = new ROT.Scheduler.Speed();\r\n\t\t\t\tthis.engine = new ROT.Engine(this.scheduler);\r\n\t\t\t\tthis.display = new ROT.Display({fontSize:16});\r\n\t\t\t\tthis.textBuffer = new TextBuffer(this.display);\r\n\t\t\t\tdocument.body.appendChild(this.display.getContainer());\r\n\t\t\t\tthis.player = new Player();\r\n\r\n\t\t\t\t// Create a helper function for binding to an event\r\n\t\t\t\t// and making it send it to the screen\r\n\t\t\t\tconst game = this; // So that we don't lose this\r\n\t\t\t\tconst bindEventToScreen = function(event) {\r\n\t\t\t\t\twindow.addEventListener(event, function(e) {\r\n\t\t\t\t\t\t// When an event is received, send it to the\r\n\t\t\t\t\t\t// screen if there is one\r\n\t\t\t\t\t\tif (game.currentScreen !== null) {\r\n\t\t\t\t\t\t\t// Send the event type and data to the screen\r\n\t\t\t\t\t\t\tgame.currentScreen.handleInput(event, e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t// Bind keyboard input events\r\n\t\t\t\tbindEventToScreen('keydown');\r\n\t\t\t\tbindEventToScreen('keyup');\r\n\t\t\t\tbindEventToScreen('keypress');\r\n\r\n\t\t\t\tthis.switchScreen(Screen.startScreen);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tstartGame() {\r\n\t\t// FIXME build a level and position a player\r\n\t\tconst level = new Level();\r\n\t\tconst size = level.getSize();\r\n\t\tthis._switchLevel(level);\r\n\t\tthis.level.setEntity(this.player, new XY(Math.round(size.x/2), Math.round(size.y/2)));\r\n\r\n\t\tthis.engine.start();\r\n\t}\r\n\r\n\tdraw(xy) {\r\n\t\tconst tile = this.level.getTileAt(xy);\r\n\t\tconst tileVisual = tile.getVisual();\r\n\t\tconst entity = this.level.getEntityAt(xy);\r\n\t\tconst visual = entity.getVisual();\r\n\t\tthis.display.draw(xy.x, xy.y, visual.ch, visual.fg, tileVisual.bg);\r\n\t}\r\n\r\n\tover() {\r\n\t\tthis.engine.lock();\r\n\t\t// FIXME show something\r\n\t\tthis.switchScreen(Screen.loseScreen);\r\n\t}\r\n\r\n\t_switchLevel(level) {\r\n\t\t// remove old beings from the scheduler\r\n\t\tthis.scheduler.clear();\r\n\r\n\t\tthis.level = level;\r\n\t\tconst size = this.level.getSize();\r\n\r\n\t\tconst bufferSize = 3;\r\n\t\tthis.display.setOptions({width:size.x, height:size.y + bufferSize});\r\n\t\tthis.textBuffer.configure({\r\n\t\t\tdisplay: this.display,\r\n\t\t\tposition: new XY(0, size.y),\r\n\t\t\tsize: new XY(size.x, bufferSize)\r\n\t\t});\r\n\t\tthis.textBuffer.clear();\r\n\r\n\t\t/* FIXME draw a level */\r\n\t\tconst xy = new XY();\r\n\t\tfor (let i = 0; i < size.x; i++) {\r\n\t\t\txy.x = i;\r\n\t\t\tfor (let j = 0; j < size.y; j++) {\r\n\t\t\t\txy.y = j;\r\n\t\t\t\tthis.draw(xy);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// add new beings to the scheduler\r\n\t\tconst beings = this.level.getBeings();\r\n\t\tfor (let p in beings) {\r\n\t\t\tthis.scheduler.add(beings[p], true);\r\n\t\t}\r\n\t}\r\n\r\n\tgetDisplay() {\r\n\t\treturn this.display;\r\n\t}\r\n\r\n\tswitchScreen(screen) {\r\n\t\t// If we had a screen before, notify it that we exited\r\n\t\tif (Game.currentScreen !== null) {\r\n\t\t\tGame.currentScreen.exit();\r\n\t\t}\r\n\t\t// Clear the display\r\n\t\tthis.getDisplay().clear();\r\n\t\t// Update our current screen, notify it we entered\r\n\t\t// and then render it\r\n\t\tthis.currentScreen = screen;\r\n\t\tif (this.currentScreen) {\r\n\t\t\tthis.currentScreen.enter();\r\n\t\t\tthis.currentScreen.render(this.display);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst game = new Game();\r\nexport default game;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game.js","export default class Entity {\r\n\tconstructor(visual) {\r\n\t\tthis._visual = visual;\r\n\t\tthis._xy = null;\r\n\t\tthis._level = null;\r\n\t}\r\n\tgetVisual() {\r\n\t\treturn this._visual;\r\n\t}\r\n\tgetXY() {\r\n\t\treturn this._xy;\r\n\t}\r\n\tgetLevel() {\r\n\t\treturn this._level;\r\n\t}\r\n\tsetPosition(xy, level) {\r\n\t\tthis._xy = xy;\r\n\t\tthis._level = level;\r\n\t\treturn this;\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/entity.js","/*\n\tThis is rot.js, the ROguelike Toolkit in JavaScript.\n\tVersion 0.6~dev, generated on Mon Nov 30 10:34:42 CET 2015.\n*/\n/**\n * Add objects for Node.js environment\n */\nglobal.requestAnimationFrame = function(cb) {\n\treturn setTimeout(cb, 1000/60);\n};\n\nglobal.document = {\n\tbody: {\n\t\tappendChild: function(child) {},\n\t\tscrollLeft: 0,\n\t\tscrollTop: 0\n\t},\n\tcreateElement: function(type) {\n\t\tvar canvas;\n\t\treturn canvas = {\n\t\t\tgetBoundingClientRect: function() {\n\t\t\t\tvar rect;\n\t\t\t\treturn rect = {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\ttop: 0\n\t\t\t\t};\n\t\t\t},\n\t\t\tgetContext: function(type) {\n\t\t\t\tvar context;\n\t\t\t\treturn context = {\n\t\t\t\t\t_termcolor: null,\n\t\t\t\t\tbeginPath: function() {},\n\t\t\t\t\tcanvas: canvas,\n\t\t\t\t\tclearRect: function(x, y, w, h) {\n\t\t\t\t\t\tif(this._termcolor !== null) {\n\t\t\t\t\t\t\tvar clearCmd = this._termcolor.clearToAnsi(this.fillStyle);\n\t\t\t\t\t\t\tprocess.stdout.write(clearCmd);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tdrawImage: function(a, b, c, d, e, f, g, h, i) {},\n\t\t\t\t\tfill: function() {},\n\t\t\t\t\tfillRect: function(x, y, w, h) {\n\t\t\t\t\t\tif(this._termcolor !== null) {\n\t\t\t\t\t\t\tvar clearCmd = this._termcolor.clearToAnsi(this.fillStyle);\n\t\t\t\t\t\t\tprocess.stdout.write(clearCmd);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfillStyle: \"#000\",\n\t\t\t\t\tfillText: function(chs, x, y) {},\n\t\t\t\t\tfont: \"monospace\",\n\t\t\t\t\tlineTo: function(x, y) {},\n\t\t\t\t\tmeasureText: function(ch) {\n\t\t\t\t\t\tvar result;\n\t\t\t\t\t\treturn result = {\n\t\t\t\t\t\t\twidth: 12\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\tmoveTo: function(x, y) {},\n\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\ttextBaseline: \"middle\"\n\t\t\t\t};\n\t\t\t},\n\t\t\theight: 0,\n\t\t\tstyle: {\n\t\t\t\tleft: \"100px\",\n\t\t\t\tposition: \"absolute\",\n\t\t\t\ttop: \"100px\",\n\t\t\t\tvisibility: \"hidden\"\n\t\t\t},\n\t\t\twidth: 0\n\t\t};\n\t},\n\tdocumentElement: {\n\t\tscrollLeft: 0,\n\t\tscrollTop: 0\n\t}\n};\n/**\n * @namespace Top-level ROT namespace\n */\nvar ROT = {\n\t/**\n\t * @returns {bool} Is rot.js supported by this browser?\n\t */\n\tisSupported: function() {\n\t\treturn !!(document.createElement(\"canvas\").getContext && Function.prototype.bind);\n\t},\n\n\t/** Default with for display and map generators */\n\tDEFAULT_WIDTH: 80,\n\t/** Default height for display and map generators */\n\tDEFAULT_HEIGHT: 25,\n\n\t/** Directional constants. Ordering is important! */\n\tDIRS: {\n\t\t\"4\": [\n\t\t\t[ 0, -1],\n\t\t\t[ 1,  0],\n\t\t\t[ 0,  1],\n\t\t\t[-1,  0]\n\t\t],\n\t\t\"8\": [\n\t\t\t[ 0, -1],\n\t\t\t[ 1, -1],\n\t\t\t[ 1,  0],\n\t\t\t[ 1,  1],\n\t\t\t[ 0,  1],\n\t\t\t[-1,  1],\n\t\t\t[-1,  0],\n\t\t\t[-1, -1]\n\t\t],\n\t\t\"6\": [\n\t\t\t[-1, -1],\n\t\t\t[ 1, -1],\n\t\t\t[ 2,  0],\n\t\t\t[ 1,  1],\n\t\t\t[-1,  1],\n\t\t\t[-2,  0]\n\t\t]\n\t},\n\n\t/** Cancel key. */\n\tVK_CANCEL: 3, \n\t/** Help key. */\n\tVK_HELP: 6, \n\t/** Backspace key. */\n\tVK_BACK_SPACE: 8, \n\t/** Tab key. */\n\tVK_TAB: 9, \n\t/** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n\tVK_CLEAR: 12, \n\t/** Return/enter key on the main keyboard. */\n\tVK_RETURN: 13, \n\t/** Reserved, but not used. */\n\tVK_ENTER: 14, \n\t/** Shift key. */\n\tVK_SHIFT: 16, \n\t/** Control key. */\n\tVK_CONTROL: 17, \n\t/** Alt (Option on Mac) key. */\n\tVK_ALT: 18, \n\t/** Pause key. */\n\tVK_PAUSE: 19, \n\t/** Caps lock. */\n\tVK_CAPS_LOCK: 20, \n\t/** Escape key. */\n\tVK_ESCAPE: 27, \n\t/** Space bar. */\n\tVK_SPACE: 32, \n\t/** Page Up key. */\n\tVK_PAGE_UP: 33, \n\t/** Page Down key. */\n\tVK_PAGE_DOWN: 34, \n\t/** End key. */\n\tVK_END: 35, \n\t/** Home key. */\n\tVK_HOME: 36, \n\t/** Left arrow. */\n\tVK_LEFT: 37, \n\t/** Up arrow. */\n\tVK_UP: 38, \n\t/** Right arrow. */\n\tVK_RIGHT: 39, \n\t/** Down arrow. */\n\tVK_DOWN: 40, \n\t/** Print Screen key. */\n\tVK_PRINTSCREEN: 44, \n\t/** Ins(ert) key. */\n\tVK_INSERT: 45, \n\t/** Del(ete) key. */\n\tVK_DELETE: 46, \n\t/***/\n\tVK_0: 48,\n\t/***/\n\tVK_1: 49,\n\t/***/\n\tVK_2: 50,\n\t/***/\n\tVK_3: 51,\n\t/***/\n\tVK_4: 52,\n\t/***/\n\tVK_5: 53,\n\t/***/\n\tVK_6: 54,\n\t/***/\n\tVK_7: 55,\n\t/***/\n\tVK_8: 56,\n\t/***/\n\tVK_9: 57,\n\t/** Colon (:) key. Requires Gecko 15.0 */\n\tVK_COLON: 58, \n\t/** Semicolon (;) key. */\n\tVK_SEMICOLON: 59, \n\t/** Less-than (<) key. Requires Gecko 15.0 */\n\tVK_LESS_THAN: 60, \n\t/** Equals (=) key. */\n\tVK_EQUALS: 61, \n\t/** Greater-than (>) key. Requires Gecko 15.0 */\n\tVK_GREATER_THAN: 62, \n\t/** Question mark (?) key. Requires Gecko 15.0 */\n\tVK_QUESTION_MARK: 63, \n\t/** Atmark (@) key. Requires Gecko 15.0 */\n\tVK_AT: 64, \n\t/***/\n\tVK_A: 65,\n\t/***/\n\tVK_B: 66,\n\t/***/\n\tVK_C: 67,\n\t/***/\n\tVK_D: 68,\n\t/***/\n\tVK_E: 69,\n\t/***/\n\tVK_F: 70,\n\t/***/\n\tVK_G: 71,\n\t/***/\n\tVK_H: 72,\n\t/***/\n\tVK_I: 73,\n\t/***/\n\tVK_J: 74,\n\t/***/\n\tVK_K: 75,\n\t/***/\n\tVK_L: 76,\n\t/***/\n\tVK_M: 77,\n\t/***/\n\tVK_N: 78,\n\t/***/\n\tVK_O: 79,\n\t/***/\n\tVK_P: 80,\n\t/***/\n\tVK_Q: 81,\n\t/***/\n\tVK_R: 82,\n\t/***/\n\tVK_S: 83,\n\t/***/\n\tVK_T: 84,\n\t/***/\n\tVK_U: 85,\n\t/***/\n\tVK_V: 86,\n\t/***/\n\tVK_W: 87,\n\t/***/\n\tVK_X: 88,\n\t/***/\n\tVK_Y: 89,\n\t/***/\n\tVK_Z: 90,\n\t/***/\n\tVK_CONTEXT_MENU: 93,\n\t/** 0 on the numeric keypad. */\n\tVK_NUMPAD0: 96, \n\t/** 1 on the numeric keypad. */\n\tVK_NUMPAD1: 97, \n\t/** 2 on the numeric keypad. */\n\tVK_NUMPAD2: 98, \n\t/** 3 on the numeric keypad. */\n\tVK_NUMPAD3: 99, \n\t/** 4 on the numeric keypad. */\n\tVK_NUMPAD4: 100, \n\t/** 5 on the numeric keypad. */\n\tVK_NUMPAD5: 101, \n\t/** 6 on the numeric keypad. */\n\tVK_NUMPAD6: 102, \n\t/** 7 on the numeric keypad. */\n\tVK_NUMPAD7: 103, \n\t/** 8 on the numeric keypad. */\n\tVK_NUMPAD8: 104, \n\t/** 9 on the numeric keypad. */\n\tVK_NUMPAD9: 105, \n\t/** * on the numeric keypad. */\n\tVK_MULTIPLY: 106,\n\t/** + on the numeric keypad. */\n\tVK_ADD: 107, \n\t/***/\n\tVK_SEPARATOR: 108,\n\t/** - on the numeric keypad. */\n\tVK_SUBTRACT: 109, \n\t/** Decimal point on the numeric keypad. */\n\tVK_DECIMAL: 110, \n\t/** / on the numeric keypad. */\n\tVK_DIVIDE: 111, \n\t/** F1 key. */\n\tVK_F1: 112, \n\t/** F2 key. */\n\tVK_F2: 113, \n\t/** F3 key. */\n\tVK_F3: 114, \n\t/** F4 key. */\n\tVK_F4: 115, \n\t/** F5 key. */\n\tVK_F5: 116, \n\t/** F6 key. */\n\tVK_F6: 117, \n\t/** F7 key. */\n\tVK_F7: 118, \n\t/** F8 key. */\n\tVK_F8: 119, \n\t/** F9 key. */\n\tVK_F9: 120, \n\t/** F10 key. */\n\tVK_F10: 121, \n\t/** F11 key. */\n\tVK_F11: 122, \n\t/** F12 key. */\n\tVK_F12: 123, \n\t/** F13 key. */\n\tVK_F13: 124, \n\t/** F14 key. */\n\tVK_F14: 125, \n\t/** F15 key. */\n\tVK_F15: 126, \n\t/** F16 key. */\n\tVK_F16: 127, \n\t/** F17 key. */\n\tVK_F17: 128, \n\t/** F18 key. */\n\tVK_F18: 129, \n\t/** F19 key. */\n\tVK_F19: 130, \n\t/** F20 key. */\n\tVK_F20: 131, \n\t/** F21 key. */\n\tVK_F21: 132, \n\t/** F22 key. */\n\tVK_F22: 133, \n\t/** F23 key. */\n\tVK_F23: 134, \n\t/** F24 key. */\n\tVK_F24: 135, \n\t/** Num Lock key. */\n\tVK_NUM_LOCK: 144, \n\t/** Scroll Lock key. */\n\tVK_SCROLL_LOCK: 145, \n\t/** Circumflex (^) key. Requires Gecko 15.0 */\n\tVK_CIRCUMFLEX: 160, \n\t/** Exclamation (!) key. Requires Gecko 15.0 */\n\tVK_EXCLAMATION: 161, \n\t/** Double quote () key. Requires Gecko 15.0 */\n\tVK_DOUBLE_QUOTE: 162, \n\t/** Hash (#) key. Requires Gecko 15.0 */\n\tVK_HASH: 163, \n\t/** Dollar sign ($) key. Requires Gecko 15.0 */\n\tVK_DOLLAR: 164, \n\t/** Percent (%) key. Requires Gecko 15.0 */\n\tVK_PERCENT: 165, \n\t/** Ampersand (&) key. Requires Gecko 15.0 */\n\tVK_AMPERSAND: 166, \n\t/** Underscore (_) key. Requires Gecko 15.0 */\n\tVK_UNDERSCORE: 167, \n\t/** Open parenthesis (() key. Requires Gecko 15.0 */\n\tVK_OPEN_PAREN: 168, \n\t/** Close parenthesis ()) key. Requires Gecko 15.0 */\n\tVK_CLOSE_PAREN: 169, \n\t/* Asterisk (*) key. Requires Gecko 15.0 */\n\tVK_ASTERISK: 170,\n\t/** Plus (+) key. Requires Gecko 15.0 */\n\tVK_PLUS: 171, \n\t/** Pipe (|) key. Requires Gecko 15.0 */\n\tVK_PIPE: 172, \n\t/** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n\tVK_HYPHEN_MINUS: 173, \n\t/** Open curly bracket ({) key. Requires Gecko 15.0 */\n\tVK_OPEN_CURLY_BRACKET: 174, \n\t/** Close curly bracket (}) key. Requires Gecko 15.0 */\n\tVK_CLOSE_CURLY_BRACKET: 175, \n\t/** Tilde (~) key. Requires Gecko 15.0 */\n\tVK_TILDE: 176, \n\t/** Comma (,) key. */\n\tVK_COMMA: 188, \n\t/** Period (.) key. */\n\tVK_PERIOD: 190, \n\t/** Slash (/) key. */\n\tVK_SLASH: 191, \n\t/** Back tick (`) key. */\n\tVK_BACK_QUOTE: 192, \n\t/** Open square bracket ([) key. */\n\tVK_OPEN_BRACKET: 219, \n\t/** Back slash (\\) key. */\n\tVK_BACK_SLASH: 220, \n\t/** Close square bracket (]) key. */\n\tVK_CLOSE_BRACKET: 221, \n\t/** Quote (''') key. */\n\tVK_QUOTE: 222, \n\t/** Meta key on Linux, Command key on Mac. */\n\tVK_META: 224, \n\t/** AltGr key on Linux. Requires Gecko 15.0 */\n\tVK_ALTGR: 225, \n\t/** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n\tVK_WIN: 91, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_KANA: 21, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_HANGUL: 21, \n\t/** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n\tVK_EISU: 22, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_JUNJA: 23, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_FINAL: 24, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_HANJA: 25, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_KANJI: 25, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_CONVERT: 28, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_NONCONVERT: 29, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_ACCEPT: 30, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_MODECHANGE: 31, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_SELECT: 41, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_PRINT: 42, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_EXECUTE: 43, \n\t/** Linux support for this keycode was added in Gecko 4.0.\t */\n\tVK_SLEEP: 95 \n};\n/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nROT.Text = {\n\tRE_COLORS: /%([bc]){([^}]*)}/g,\n\n\t/* token types */\n\tTYPE_TEXT:\t\t0,\n\tTYPE_NEWLINE:\t1,\n\tTYPE_FG:\t\t2,\n\tTYPE_BG:\t\t3,\n\n\t/**\n\t * Measure size of a resulting text block\n\t */\n\tmeasure: function(str, maxWidth) {\n\t\tvar result = {width:0, height:1};\n\t\tvar tokens = this.tokenize(str, maxWidth);\n\t\tvar lineWidth = 0;\n\n\t\tfor (var i=0;i<tokens.length;i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tswitch (token.type) {\n\t\t\t\tcase this.TYPE_TEXT:\n\t\t\t\t\tlineWidth += token.value.length;\n\t\t\t\tbreak;\n\n\t\t\t\tcase this.TYPE_NEWLINE:\n\t\t\t\t\tresult.height++;\n\t\t\t\t\tresult.width = Math.max(result.width, lineWidth);\n\t\t\t\t\tlineWidth = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tresult.width = Math.max(result.width, lineWidth);\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * Convert string to a series of a formatting commands\n\t */\n\ttokenize: function(str, maxWidth) {\n\t\tvar result = [];\n\n\t\t/* first tokenization pass - split texts and color formatting commands */\n\t\tvar offset = 0;\n\t\tstr.replace(this.RE_COLORS, function(match, type, name, index) {\n\t\t\t/* string before */\n\t\t\tvar part = str.substring(offset, index);\n\t\t\tif (part.length) {\n\t\t\t\tresult.push({\n\t\t\t\t\ttype: ROT.Text.TYPE_TEXT,\n\t\t\t\t\tvalue: part\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/* color command */\n\t\t\tresult.push({\n\t\t\t\ttype: (type == \"c\" ? ROT.Text.TYPE_FG : ROT.Text.TYPE_BG),\n\t\t\t\tvalue: name.trim()\n\t\t\t});\n\n\t\t\toffset = index + match.length;\n\t\t\treturn \"\";\n\t\t});\n\n\t\t/* last remaining part */\n\t\tvar part = str.substring(offset);\n\t\tif (part.length) {\n\t\t\tresult.push({\n\t\t\t\ttype: ROT.Text.TYPE_TEXT,\n\t\t\t\tvalue: part\n\t\t\t});\n\t\t}\n\n\t\treturn this._breakLines(result, maxWidth);\n\t},\n\n\t/* insert line breaks into first-pass tokenized data */\n\t_breakLines: function(tokens, maxWidth) {\n\t\tif (!maxWidth) { maxWidth = Infinity; };\n\n\t\tvar i = 0;\n\t\tvar lineLength = 0;\n\t\tvar lastTokenWithSpace = -1;\n\n\t\twhile (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n\t\t\tvar token = tokens[i];\n\t\t\tif (token.type == ROT.Text.TYPE_NEWLINE) { /* reset */\n\t\t\t\tlineLength = 0; \n\t\t\t\tlastTokenWithSpace = -1;\n\t\t\t}\n\t\t\tif (token.type != ROT.Text.TYPE_TEXT) { /* skip non-text tokens */\n\t\t\t\ti++;\n\t\t\t\tcontinue; \n\t\t\t}\n\n\t\t\t/* remove spaces at the beginning of line */\n\t\t\twhile (lineLength == 0 && token.value.charAt(0) == \" \") { token.value = token.value.substring(1); }\n\n\t\t\t/* forced newline? insert two new tokens after this one */\n\t\t\tvar index = token.value.indexOf(\"\\n\");\n\t\t\tif (index != -1) { \n\t\t\t\ttoken.value = this._breakInsideToken(tokens, i, index, true); \n\n\t\t\t\t/* if there are spaces at the end, we must remove them (we do not want the line too long) */\n\t\t\t\tvar arr = token.value.split(\"\");\n\t\t\t\twhile (arr.length && arr[arr.length-1] == \" \") { arr.pop(); }\n\t\t\t\ttoken.value = arr.join(\"\");\n\t\t\t}\n\n\t\t\t/* token degenerated? */\n\t\t\tif (!token.value.length) {\n\t\t\t\ttokens.splice(i, 1);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n\n\t\t\t\t/* is it possible to break within this token? */\n\t\t\t\tvar index = -1;\n\t\t\t\twhile (1) {\n\t\t\t\t\tvar nextIndex = token.value.indexOf(\" \", index+1);\n\t\t\t\t\tif (nextIndex == -1) { break; }\n\t\t\t\t\tif (lineLength + nextIndex > maxWidth) { break; }\n\t\t\t\t\tindex = nextIndex;\n\t\t\t\t}\n\n\t\t\t\tif (index != -1) { /* break at space within this one */\n\t\t\t\t\ttoken.value = this._breakInsideToken(tokens, i, index, true);\n\t\t\t\t} else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n\t\t\t\t\tvar token = tokens[lastTokenWithSpace];\n\t\t\t\t\tvar breakIndex = token.value.lastIndexOf(\" \");\n\t\t\t\t\ttoken.value = this._breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n\t\t\t\t\ti = lastTokenWithSpace;\n\t\t\t\t} else { /* force break in this token */\n\t\t\t\t\ttoken.value = this._breakInsideToken(tokens, i, maxWidth-lineLength, false);\n\t\t\t\t}\n\n\t\t\t} else { /* line not long, continue */\n\t\t\t\tlineLength += token.value.length;\n\t\t\t\tif (token.value.indexOf(\" \") != -1) { lastTokenWithSpace = i; }\n\t\t\t}\n\t\t\t\n\t\t\ti++; /* advance to next token */\n\t\t}\n\n\n\t\ttokens.push({type: ROT.Text.TYPE_NEWLINE}); /* insert fake newline to fix the last text line */\n\n\t\t/* remove trailing space from text tokens before newlines */\n\t\tvar lastTextToken = null;\n\t\tfor (var i=0;i<tokens.length;i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tswitch (token.type) {\n\t\t\t\tcase ROT.Text.TYPE_TEXT: lastTextToken = token; break;\n\t\t\t\tcase ROT.Text.TYPE_NEWLINE: \n\t\t\t\t\tif (lastTextToken) { /* remove trailing space */\n\t\t\t\t\t\tvar arr = lastTextToken.value.split(\"\");\n\t\t\t\t\t\twhile (arr.length && arr[arr.length-1] == \" \") { arr.pop(); }\n\t\t\t\t\t\tlastTextToken.value = arr.join(\"\");\n\t\t\t\t\t}\n\t\t\t\t\tlastTextToken = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\ttokens.pop(); /* remove fake token */\n\n\t\treturn tokens;\n\t},\n\n\t/**\n\t * Create new tokens and insert them into the stream\n\t * @param {object[]} tokens\n\t * @param {int} tokenIndex Token being processed\n\t * @param {int} breakIndex Index within current token's value\n\t * @param {bool} removeBreakChar Do we want to remove the breaking character?\n\t * @returns {string} remaining unbroken token value\n\t */\n\t_breakInsideToken: function(tokens, tokenIndex, breakIndex, removeBreakChar) {\n\t\tvar newBreakToken = {\n\t\t\ttype: ROT.Text.TYPE_NEWLINE\n\t\t}\n\t\tvar newTextToken = {\n\t\t\ttype: ROT.Text.TYPE_TEXT,\n\t\t\tvalue: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n\t\t}\n\t\ttokens.splice(tokenIndex+1, 0, newBreakToken, newTextToken);\n\t\treturn tokens[tokenIndex].value.substring(0, breakIndex);\n\t}\n}\n/**\n * @returns {any} Randomly picked item, null when length=0\n */\nArray.prototype.random = Array.prototype.random || function() {\n\tif (!this.length) { return null; }\n\treturn this[Math.floor(ROT.RNG.getUniform() * this.length)];\n}\n\n/**\n * @returns {array} New array with randomized items\n * FIXME destroys this!\n */\nArray.prototype.randomize = Array.prototype.randomize || function() {\n\tvar result = [];\n\twhile (this.length) {\n\t\tvar index = this.indexOf(this.random());\n\t\tresult.push(this.splice(index, 1)[0]);\n\t}\n\treturn result;\n}\n/**\n * Always positive modulus\n * @param {int} n Modulus\n * @returns {int} this modulo n\n */\nNumber.prototype.mod = Number.prototype.mod || function(n) {\n\treturn ((this%n)+n)%n;\n}\n/**\n * @returns {string} First letter capitalized\n */\nString.prototype.capitalize = String.prototype.capitalize || function() {\n\treturn this.charAt(0).toUpperCase() + this.substring(1);\n}\n\n/** \n * Left pad\n * @param {string} [character=\"0\"]\n * @param {int} [count=2]\n */\nString.prototype.lpad = String.prototype.lpad || function(character, count) {\n\tvar ch = character || \"0\";\n\tvar cnt = count || 2;\n\n\tvar s = \"\";\n\twhile (s.length < (cnt - this.length)) { s += ch; }\n\ts = s.substring(0, cnt-this.length);\n\treturn s+this;\n}\n\n/** \n * Right pad\n * @param {string} [character=\"0\"]\n * @param {int} [count=2]\n */\nString.prototype.rpad = String.prototype.rpad || function(character, count) {\n\tvar ch = character || \"0\";\n\tvar cnt = count || 2;\n\n\tvar s = \"\";\n\twhile (s.length < (cnt - this.length)) { s += ch; }\n\ts = s.substring(0, cnt-this.length);\n\treturn this+s;\n}\n\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nString.format = String.format || function(template) {\n\tvar map = String.format.map;\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\n\tvar replacer = function(match, group1, group2, index) {\n\t\tif (template.charAt(index-1) == \"%\") { return match.substring(1); }\n\t\tif (!args.length) { return match; }\n\t\tvar obj = args[0];\n\n\t\tvar group = group1 || group2;\n\t\tvar parts = group.split(\",\");\n\t\tvar name = parts.shift();\n\t\tvar method = map[name.toLowerCase()];\n\t\tif (!method) { return match; }\n\n\t\tvar obj = args.shift();\n\t\tvar replaced = obj[method].apply(obj, parts);\n\n\t\tvar first = name.charAt(0);\n\t\tif (first != first.toLowerCase()) { replaced = replaced.capitalize(); }\n\n\t\treturn replaced;\n\t}\n\treturn template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\n\nString.format.map = String.format.map || {\n\t\"s\": \"toString\"\n}\n\n/**\n * Convenience shortcut to String.format(this)\n */\nString.prototype.format = String.prototype.format || function() {\n\tvar args = Array.prototype.slice.call(arguments);\n\targs.unshift(this);\n\treturn String.format.apply(String, args);\n}\n\nif (!Object.create) {  \n\t/**\n\t * ES5 Object.create\n\t */\n\tObject.create = function(o) {  \n\t\tvar tmp = function() {};\n\t\ttmp.prototype = o;\n\t\treturn new tmp();\n\t};  \n}  \n/**\n * Sets prototype of this function to an instance of parent function\n * @param {function} parent\n */\nFunction.prototype.extend = Function.prototype.extend || function(parent) {\n\tthis.prototype = Object.create(parent.prototype);\n\tthis.prototype.constructor = this;\n\treturn this;\n}\nif (typeof window != \"undefined\") {\n\twindow.requestAnimationFrame =\n\t\twindow.requestAnimationFrame\n\t\t|| window.mozRequestAnimationFrame\n\t\t|| window.webkitRequestAnimationFrame\n\t\t|| window.oRequestAnimationFrame\n\t\t|| window.msRequestAnimationFrame\n\t\t|| function(cb) { return setTimeout(cb, 1000/60); };\n\n\twindow.cancelAnimationFrame =\n\t\twindow.cancelAnimationFrame\n\t\t|| window.mozCancelAnimationFrame\n\t\t|| window.webkitCancelAnimationFrame\n\t\t|| window.oCancelAnimationFrame\n\t\t|| window.msCancelAnimationFrame\n\t\t|| function(id) { return clearTimeout(id); };\n}\n/**\n * @class Visual map display\n * @param {object} [options]\n * @param {int} [options.width=ROT.DEFAULT_WIDTH]\n * @param {int} [options.height=ROT.DEFAULT_HEIGHT]\n * @param {int} [options.fontSize=15]\n * @param {string} [options.fontFamily=\"monospace\"]\n * @param {string} [options.fontStyle=\"\"] bold/italic/none/both\n * @param {string} [options.fg=\"#ccc\"]\n * @param {string} [options.bg=\"#000\"]\n * @param {float} [options.spacing=1]\n * @param {float} [options.border=0]\n * @param {string} [options.layout=\"rect\"]\n * @param {bool} [options.forceSquareRatio=false]\n * @param {int} [options.tileWidth=32]\n * @param {int} [options.tileHeight=32]\n * @param {object} [options.tileMap={}]\n * @param {image} [options.tileSet=null]\n * @param {image} [options.tileColorize=false]\n */\nROT.Display = function(options) {\n\tvar canvas = document.createElement(\"canvas\");\n\tthis._context = canvas.getContext(\"2d\");\n\tthis._data = {};\n\tthis._dirty = false; /* false = nothing, true = all, object = dirty cells */\n\tthis._options = {};\n\tthis._backend = null;\n\t\n\tvar defaultOptions = {\n\t\twidth: ROT.DEFAULT_WIDTH,\n\t\theight: ROT.DEFAULT_HEIGHT,\n\t\ttranspose: false,\n\t\tlayout: \"rect\",\n\t\tfontSize: 15,\n\t\tspacing: 1,\n\t\tborder: 0,\n\t\tforceSquareRatio: false,\n\t\tfontFamily: \"monospace\",\n\t\tfontStyle: \"\",\n\t\tfg: \"#ccc\",\n\t\tbg: \"#000\",\n\t\ttileWidth: 32,\n\t\ttileHeight: 32,\n\t\ttileMap: {},\n\t\ttileSet: null,\n\t\ttileColorize: false,\n\t\ttermColor: \"xterm\"\n\t};\n\tfor (var p in options) { defaultOptions[p] = options[p]; }\n\tthis.setOptions(defaultOptions);\n\tthis.DEBUG = this.DEBUG.bind(this);\n\n\tthis._tick = this._tick.bind(this);\n\trequestAnimationFrame(this._tick);\n}\n\n/**\n * Debug helper, ideal as a map generator callback. Always bound to this.\n * @param {int} x\n * @param {int} y\n * @param {int} what\n */\nROT.Display.prototype.DEBUG = function(x, y, what) {\n\tvar colors = [this._options.bg, this._options.fg];\n\tthis.draw(x, y, null, null, colors[what % colors.length]);\n}\n\n/**\n * Clear the whole display (cover it with background color)\n */\nROT.Display.prototype.clear = function() {\n\tthis._data = {};\n\tthis._dirty = true;\n}\n\n/**\n * @see ROT.Display\n */\nROT.Display.prototype.setOptions = function(options) {\n\tfor (var p in options) { this._options[p] = options[p]; }\n\tif (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n\t\tif (options.layout) { \n\t\t\tthis._backend = new ROT.Display[options.layout.capitalize()](this._context);\n\t\t}\n\n\t\tvar font = (this._options.fontStyle ? this._options.fontStyle + \" \" : \"\") + this._options.fontSize + \"px \" + this._options.fontFamily;\n\t\tthis._context.font = font;\n\t\tthis._backend.compute(this._options);\n\t\tthis._context.font = font;\n\t\tthis._context.textAlign = \"center\";\n\t\tthis._context.textBaseline = \"middle\";\n\t\tthis._dirty = true;\n\t}\n\treturn this;\n}\n\n/**\n * Returns currently set options\n * @returns {object} Current options object \n */\nROT.Display.prototype.getOptions = function() {\n\treturn this._options;\n}\n\n/**\n * Returns the DOM node of this display\n * @returns {node} DOM node\n */\nROT.Display.prototype.getContainer = function() {\n\treturn this._context.canvas;\n}\n\n/**\n * Compute the maximum width/height to fit into a set of given constraints\n * @param {int} availWidth Maximum allowed pixel width\n * @param {int} availHeight Maximum allowed pixel height\n * @returns {int[2]} cellWidth,cellHeight\n */\nROT.Display.prototype.computeSize = function(availWidth, availHeight) {\n\treturn this._backend.computeSize(availWidth, availHeight, this._options);\n}\n\n/**\n * Compute the maximum font size to fit into a set of given constraints\n * @param {int} availWidth Maximum allowed pixel width\n * @param {int} availHeight Maximum allowed pixel height\n * @returns {int} fontSize\n */\nROT.Display.prototype.computeFontSize = function(availWidth, availHeight) {\n\treturn this._backend.computeFontSize(availWidth, availHeight, this._options);\n}\n\n/**\n * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n * @param {Event} e event\n * @returns {int[2]} -1 for values outside of the canvas\n */\nROT.Display.prototype.eventToPosition = function(e) {\n\tif (e.touches) {\n\t\tvar x = e.touches[0].clientX;\n\t\tvar y = e.touches[0].clientY;\n\t} else {\n\t\tvar x = e.clientX;\n\t\tvar y = e.clientY;\n\t}\n\n\tvar rect = this._context.canvas.getBoundingClientRect();\n\tx -= rect.left;\n\ty -= rect.top;\n\t\n\tif (x < 0 || y < 0 || x >= this._context.canvas.width || y >= this._context.canvas.height) { return [-1, -1]; }\n\n\treturn this._backend.eventToPosition(x, y);\n}\n\n/**\n * @param {int} x\n * @param {int} y\n * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n * @param {string} [fg] foreground color\n * @param {string} [bg] background color\n */\nROT.Display.prototype.draw = function(x, y, ch, fg, bg) {\n\tif (!fg) { fg = this._options.fg; }\n\tif (!bg) { bg = this._options.bg; }\n\tthis._data[x+\",\"+y] = [x, y, ch, fg, bg];\n\t\n\tif (this._dirty === true) { return; } /* will already redraw everything */\n\tif (!this._dirty) { this._dirty = {}; } /* first! */\n\tthis._dirty[x+\",\"+y] = true;\n}\n\n/**\n * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n * @param {int} x\n * @param {int} y\n * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n * @param {int} [maxWidth] wrap at what width?\n * @returns {int} lines drawn\n */\nROT.Display.prototype.drawText = function(x, y, text, maxWidth) {\n\tvar fg = null;\n\tvar bg = null;\n\tvar cx = x;\n\tvar cy = y;\n\tvar lines = 1;\n\tif (!maxWidth) { maxWidth = this._options.width-x; }\n\n\tvar tokens = ROT.Text.tokenize(text, maxWidth);\n\n\twhile (tokens.length) { /* interpret tokenized opcode stream */\n\t\tvar token = tokens.shift();\n\t\tswitch (token.type) {\n\t\t\tcase ROT.Text.TYPE_TEXT:\n\t\t\t\tvar isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n\t\t\t\tfor (var i=0;i<token.value.length;i++) {\n\t\t\t\t\tvar cc = token.value.charCodeAt(i);\n\t\t\t\t\tvar c = token.value.charAt(i);\n\t\t\t\t\t// Assign to `true` when the current char is full-width.\n\t\t\t\t\tisFullWidth = (cc > 0xff && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) && cc > 0xffee;\n\t\t\t\t\t// Current char is space, whatever full-width or half-width both are OK.\n\t\t\t\t\tisSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n\t\t\t\t\t// The previous char is full-width and\n\t\t\t\t\t// current char is nether half-width nor a space.\n\t\t\t\t\tif (isPrevFullWidth && !isFullWidth && !isSpace) { cx++; } // add an extra position\n\t\t\t\t\t// The current char is full-width and\n\t\t\t\t\t// the previous char is not a space.\n\t\t\t\t\tif(isFullWidth && !isPrevSpace) { cx++; } // add an extra position\n\t\t\t\t\tthis.draw(cx++, cy, c, fg, bg);\n\t\t\t\t\tisPrevSpace = isSpace;\n\t\t\t\t\tisPrevFullWidth = isFullWidth;\n\t\t\t\t}\n\t\t\tbreak;\n\n\t\t\tcase ROT.Text.TYPE_FG:\n\t\t\t\tfg = token.value || null;\n\t\t\tbreak;\n\n\t\t\tcase ROT.Text.TYPE_BG:\n\t\t\t\tbg = token.value || null;\n\t\t\tbreak;\n\n\t\t\tcase ROT.Text.TYPE_NEWLINE:\n\t\t\t\tcx = x;\n\t\t\t\tcy++;\n\t\t\t\tlines++\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn lines;\n}\n\n/**\n * Timer tick: update dirty parts\n */\nROT.Display.prototype._tick = function() {\n\trequestAnimationFrame(this._tick);\n\n\tif (!this._dirty) { return; }\n\n\tif (this._dirty === true) { /* draw all */\n\t\tthis._context.fillStyle = this._options.bg;\n\t\tthis._context.fillRect(0, 0, this._context.canvas.width, this._context.canvas.height);\n\n\t\tfor (var id in this._data) { /* redraw cached data */\n\t\t\tthis._draw(id, false);\n\t\t}\n\n\t} else { /* draw only dirty */\n\t\tfor (var key in this._dirty) {\n\t\t\tthis._draw(key, true);\n\t\t}\n\t}\n\n\tthis._dirty = false;\n}\n\n/**\n * @param {string} key What to draw\n * @param {bool} clearBefore Is it necessary to clean before?\n */\nROT.Display.prototype._draw = function(key, clearBefore) {\n\tvar data = this._data[key];\n\tif (data[4] != this._options.bg) { clearBefore = true; }\n\n\tthis._backend.draw(data, clearBefore);\n}\n/**\n * @class Abstract display backend module\n * @private\n */\nROT.Display.Backend = function(context) {\n\tthis._context = context;\n}\n\nROT.Display.Backend.prototype.compute = function(options) {\n}\n\nROT.Display.Backend.prototype.draw = function(data, clearBefore) {\n}\n\nROT.Display.Backend.prototype.computeSize = function(availWidth, availHeight) {\n}\n\nROT.Display.Backend.prototype.computeFontSize = function(availWidth, availHeight) {\n}\n\nROT.Display.Backend.prototype.eventToPosition = function(x, y) {\n}\n/**\n * @class Rectangular backend\n * @private\n */\nROT.Display.Rect = function(context) {\n\tROT.Display.Backend.call(this, context);\n\t\n\tthis._spacingX = 0;\n\tthis._spacingY = 0;\n\tthis._canvasCache = {};\n\tthis._options = {};\n}\nROT.Display.Rect.extend(ROT.Display.Backend);\n\nROT.Display.Rect.cache = false;\n\nROT.Display.Rect.prototype.compute = function(options) {\n\tthis._canvasCache = {};\n\tthis._options = options;\n\n\tvar charWidth = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._spacingX = Math.ceil(options.spacing * charWidth);\n\tthis._spacingY = Math.ceil(options.spacing * options.fontSize);\n\n\tif (this._options.forceSquareRatio) {\n\t\tthis._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n\t}\n\n\tthis._context.canvas.width = options.width * this._spacingX;\n\tthis._context.canvas.height = options.height * this._spacingY;\n}\n\nROT.Display.Rect.prototype.draw = function(data, clearBefore) {\n\tif (this.constructor.cache) {\n\t\tthis._drawWithCache(data, clearBefore);\n\t} else {\n\t\tthis._drawNoCache(data, clearBefore);\n\t}\n}\n\nROT.Display.Rect.prototype._drawWithCache = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tvar hash = \"\"+ch+fg+bg;\n\tif (hash in this._canvasCache) {\n\t\tvar canvas = this._canvasCache[hash];\n\t} else {\n\t\tvar b = this._options.border;\n\t\tvar canvas = document.createElement(\"canvas\");\n\t\tvar ctx = canvas.getContext(\"2d\");\n\t\tcanvas.width = this._spacingX;\n\t\tcanvas.height = this._spacingY;\n\t\tctx.fillStyle = bg;\n\t\tctx.fillRect(b, b, canvas.width-b, canvas.height-b);\n\t\t\n\t\tif (ch) {\n\t\t\tctx.fillStyle = fg;\n\t\t\tctx.font = this._context.font;\n\t\t\tctx.textAlign = \"center\";\n\t\t\tctx.textBaseline = \"middle\";\n\n\t\t\tvar chars = [].concat(ch);\n\t\t\tfor (var i=0;i<chars.length;i++) {\n\t\t\t\tctx.fillText(chars[i], this._spacingX/2, Math.ceil(this._spacingY/2));\n\t\t\t}\n\t\t}\n\t\tthis._canvasCache[hash] = canvas;\n\t}\n\t\n\tthis._context.drawImage(canvas, x*this._spacingX, y*this._spacingY);\n}\n\nROT.Display.Rect.prototype._drawNoCache = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tif (clearBefore) { \n\t\tvar b = this._options.border;\n\t\tthis._context.fillStyle = bg;\n\t\tthis._context.fillRect(x*this._spacingX + b, y*this._spacingY + b, this._spacingX - b, this._spacingY - b);\n\t}\n\t\n\tif (!ch) { return; }\n\n\tthis._context.fillStyle = fg;\n\n\tvar chars = [].concat(ch);\n\tfor (var i=0;i<chars.length;i++) {\n\t\tthis._context.fillText(chars[i], (x+0.5) * this._spacingX, Math.ceil((y+0.5) * this._spacingY));\n\t}\n}\n\nROT.Display.Rect.prototype.computeSize = function(availWidth, availHeight) {\n\tvar width = Math.floor(availWidth / this._spacingX);\n\tvar height = Math.floor(availHeight / this._spacingY);\n\treturn [width, height];\n}\n\nROT.Display.Rect.prototype.computeFontSize = function(availWidth, availHeight) {\n\tvar boxWidth = Math.floor(availWidth / this._options.width);\n\tvar boxHeight = Math.floor(availHeight / this._options.height);\n\n\t/* compute char ratio */\n\tvar oldFont = this._context.font;\n\tthis._context.font = \"100px \" + this._options.fontFamily;\n\tvar width = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._context.font = oldFont;\n\tvar ratio = width / 100;\n\t\t\n\tvar widthFraction = ratio * boxHeight / boxWidth;\n\tif (widthFraction > 1) { /* too wide with current aspect ratio */\n\t\tboxHeight = Math.floor(boxHeight / widthFraction);\n\t}\n\treturn Math.floor(boxHeight / this._options.spacing);\n}\n\nROT.Display.Rect.prototype.eventToPosition = function(x, y) {\n\treturn [Math.floor(x/this._spacingX), Math.floor(y/this._spacingY)];\n}\n/**\n * @class Hexagonal backend\n * @private\n */\nROT.Display.Hex = function(context) {\n\tROT.Display.Backend.call(this, context);\n\n\tthis._spacingX = 0;\n\tthis._spacingY = 0;\n\tthis._hexSize = 0;\n\tthis._options = {};\n}\nROT.Display.Hex.extend(ROT.Display.Backend);\n\nROT.Display.Hex.prototype.compute = function(options) {\n\tthis._options = options;\n\n\t/* FIXME char size computation does not respect transposed hexes */\n\tvar charWidth = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._hexSize = Math.floor(options.spacing * (options.fontSize + charWidth/Math.sqrt(3)) / 2);\n\tthis._spacingX = this._hexSize * Math.sqrt(3) / 2;\n\tthis._spacingY = this._hexSize * 1.5;\n\n\tif (options.transpose) {\n\t\tvar xprop = \"height\";\n\t\tvar yprop = \"width\";\n\t} else {\n\t\tvar xprop = \"width\";\n\t\tvar yprop = \"height\";\n\t}\n\tthis._context.canvas[xprop] = Math.ceil( (options.width + 1) * this._spacingX );\n\tthis._context.canvas[yprop] = Math.ceil( (options.height - 1) * this._spacingY + 2*this._hexSize );\n}\n\nROT.Display.Hex.prototype.draw = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tvar px = [\n\t\t(x+1) * this._spacingX,\n\t\ty * this._spacingY + this._hexSize\n\t];\n\tif (this._options.transpose) { px.reverse(); }\n\n\tif (clearBefore) { \n\t\tthis._context.fillStyle = bg;\n\t\tthis._fill(px[0], px[1]);\n\t}\n\t\n\tif (!ch) { return; }\n\n\tthis._context.fillStyle = fg;\n\n\tvar chars = [].concat(ch);\n\tfor (var i=0;i<chars.length;i++) {\n\t\tthis._context.fillText(chars[i], px[0], Math.ceil(px[1]));\n\t}\n}\n\nROT.Display.Hex.prototype.computeSize = function(availWidth, availHeight) {\n\tif (this._options.transpose) {\n\t\tavailWidth += availHeight;\n\t\tavailHeight = availWidth - availHeight;\n\t\tavailWidth -= availHeight;\n\t}\n\n\tvar width = Math.floor(availWidth / this._spacingX) - 1;\n\tvar height = Math.floor((availHeight - 2*this._hexSize) / this._spacingY + 1);\n\treturn [width, height];\n}\n\nROT.Display.Hex.prototype.computeFontSize = function(availWidth, availHeight) {\n\tif (this._options.transpose) {\n\t\tavailWidth += availHeight;\n\t\tavailHeight = availWidth - availHeight;\n\t\tavailWidth -= availHeight;\n\t}\n\n\tvar hexSizeWidth = 2*availWidth / ((this._options.width+1) * Math.sqrt(3)) - 1;\n\tvar hexSizeHeight = availHeight / (2 + 1.5*(this._options.height-1));\n\tvar hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n\n\t/* compute char ratio */\n\tvar oldFont = this._context.font;\n\tthis._context.font = \"100px \" + this._options.fontFamily;\n\tvar width = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._context.font = oldFont;\n\tvar ratio = width / 100;\n\n\thexSize = Math.floor(hexSize)+1; /* closest larger hexSize */\n\n\t/* FIXME char size computation does not respect transposed hexes */\n\tvar fontSize = 2*hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n\n\t/* closest smaller fontSize */\n\treturn Math.ceil(fontSize)-1;\n}\n\nROT.Display.Hex.prototype.eventToPosition = function(x, y) {\n\tif (this._options.transpose) {\n\t\tx += y;\n\t\ty = x-y;\n\t\tx -= y;\n\t\tvar prop = \"width\";\n\t} else {\n\t\tvar prop = \"height\";\n\t}\n\tvar size = this._context.canvas[prop] / this._options[prop];\n\ty = Math.floor(y/size);\n\n\tif (y.mod(2)) { /* odd row */\n\t\tx -= this._spacingX;\n\t\tx = 1 + 2*Math.floor(x/(2*this._spacingX));\n\t} else {\n\t\tx = 2*Math.floor(x/(2*this._spacingX));\n\t}\n\t\n\treturn [x, y];\n}\n\n/**\n * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n */\nROT.Display.Hex.prototype._fill = function(cx, cy) {\n\tvar a = this._hexSize;\n\tvar b = this._options.border;\n\t\n\tthis._context.beginPath();\n\n\tif (this._options.transpose) {\n\t\tthis._context.moveTo(cx-a+b,\tcy);\n\t\tthis._context.lineTo(cx-a/2+b,\tcy+this._spacingX-b);\n\t\tthis._context.lineTo(cx+a/2-b,\tcy+this._spacingX-b);\n\t\tthis._context.lineTo(cx+a-b,\tcy);\n\t\tthis._context.lineTo(cx+a/2-b,\tcy-this._spacingX+b);\n\t\tthis._context.lineTo(cx-a/2+b,\tcy-this._spacingX+b);\n\t\tthis._context.lineTo(cx-a+b,\tcy);\n\t} else {\n\t\tthis._context.moveTo(cx,\t\t\t\t\tcy-a+b);\n\t\tthis._context.lineTo(cx+this._spacingX-b,\tcy-a/2+b);\n\t\tthis._context.lineTo(cx+this._spacingX-b,\tcy+a/2-b);\n\t\tthis._context.lineTo(cx,\t\t\t\t\tcy+a-b);\n\t\tthis._context.lineTo(cx-this._spacingX+b,\tcy+a/2-b);\n\t\tthis._context.lineTo(cx-this._spacingX+b,\tcy-a/2+b);\n\t\tthis._context.lineTo(cx,\t\t\t\t\tcy-a+b);\n\t}\n\tthis._context.fill();\n}\n/**\n * @class Tile backend\n * @private\n */\nROT.Display.Tile = function(context) {\n\tROT.Display.Rect.call(this, context);\n\t\n\tthis._options = {};\n\tthis._colorCanvas = document.createElement(\"canvas\");\n}\nROT.Display.Tile.extend(ROT.Display.Rect);\n\nROT.Display.Tile.prototype.compute = function(options) {\n\tthis._options = options;\n\tthis._context.canvas.width = options.width * options.tileWidth;\n\tthis._context.canvas.height = options.height * options.tileHeight;\n\tthis._colorCanvas.width = options.tileWidth;\n\tthis._colorCanvas.height = options.tileHeight;\n}\n\nROT.Display.Tile.prototype.draw = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tvar tileWidth = this._options.tileWidth;\n\tvar tileHeight = this._options.tileHeight;\n\n\tif (clearBefore) {\n\t\tif (this._options.tileColorize) {\n\t\t\tthis._context.clearRect(x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n\t\t} else {\n\t\t\tthis._context.fillStyle = bg;\n\t\t\tthis._context.fillRect(x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n\t\t}\n\t}\n\n\tif (!ch) { return; }\n\n\tvar chars = [].concat(ch);\n\tfor (var i=0;i<chars.length;i++) {\n\t\tvar tile = this._options.tileMap[chars[i]];\n\t\tif (!tile) { throw new Error(\"Char '\" + chars[i] + \"' not found in tileMap\"); }\n\t\t\n\t\tif (this._options.tileColorize) { /* apply colorization */\n\t\t\tvar canvas = this._colorCanvas;\n\t\t\tvar context = canvas.getContext(\"2d\");\n\t\t\tcontext.clearRect(0, 0, tileWidth, tileHeight);\n\n\t\t\tcontext.drawImage(\n\t\t\t\tthis._options.tileSet,\n\t\t\t\ttile[0], tile[1], tileWidth, tileHeight,\n\t\t\t\t0, 0, tileWidth, tileHeight\n\t\t\t);\n\n\t\t\tif (fg != \"transparent\") {\n\t\t\t\tcontext.fillStyle = fg;\n\t\t\t\tcontext.globalCompositeOperation = \"source-atop\";\n\t\t\t\tcontext.fillRect(0, 0, tileWidth, tileHeight);\n\t\t\t}\n\n\t\t\tif (bg != \"transparent\") {\n\t\t\t\tcontext.fillStyle = bg;\n\t\t\t\tcontext.globalCompositeOperation = \"destination-over\";\n\t\t\t\tcontext.fillRect(0, 0, tileWidth, tileHeight);\n\t\t\t}\n\n\t\t\tthis._context.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n\n\t\t} else { /* no colorizing, easy */\n\t\t\tthis._context.drawImage(\n\t\t\t\tthis._options.tileSet,\n\t\t\t\ttile[0], tile[1], tileWidth, tileHeight,\n\t\t\t\tx*tileWidth, y*tileHeight, tileWidth, tileHeight\n\t\t\t);\n\t\t}\n\t}\n}\n\nROT.Display.Tile.prototype.computeSize = function(availWidth, availHeight) {\n\tvar width = Math.floor(availWidth / this._options.tileWidth);\n\tvar height = Math.floor(availHeight / this._options.tileHeight);\n\treturn [width, height];\n}\n\nROT.Display.Tile.prototype.computeFontSize = function(availWidth, availHeight) {\n\tvar width = Math.floor(availWidth / this._options.width);\n\tvar height = Math.floor(availHeight / this._options.height);\n\treturn [width, height];\n}\n\nROT.Display.Tile.prototype.eventToPosition = function(x, y) {\n\treturn [Math.floor(x/this._options.tileWidth), Math.floor(y/this._options.tileHeight)];\n}\n/**\n * @namespace\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nROT.RNG = {\n\t/**\n\t * @returns {number} \n\t */\n\tgetSeed: function() {\n\t\treturn this._seed;\n\t},\n\n\t/**\n\t * @param {number} seed Seed the number generator\n\t */\n\tsetSeed: function(seed) {\n\t\tseed = (seed < 1 ? 1/seed : seed);\n\n\t\tthis._seed = seed;\n\t\tthis._s0 = (seed >>> 0) * this._frac;\n\n\t\tseed = (seed*69069 + 1) >>> 0;\n\t\tthis._s1 = seed * this._frac;\n\n\t\tseed = (seed*69069 + 1) >>> 0;\n\t\tthis._s2 = seed * this._frac;\n\n\t\tthis._c = 1;\n\t\treturn this;\n\t},\n\n\t/**\n\t * @returns {float} Pseudorandom value [0,1), uniformly distributed\n\t */\n\tgetUniform: function() {\n\t\tvar t = 2091639 * this._s0 + this._c * this._frac;\n\t\tthis._s0 = this._s1;\n\t\tthis._s1 = this._s2;\n\t\tthis._c = t | 0;\n\t\tthis._s2 = t - this._c;\n\t\treturn this._s2;\n\t},\n\n\t/**\n\t * @param {int} lowerBound The lower end of the range to return a value from, inclusive\n\t * @param {int} upperBound The upper end of the range to return a value from, inclusive\n\t * @returns {int} Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n\t */\n\tgetUniformInt: function(lowerBound, upperBound) {\n\t\tvar max = Math.max(lowerBound, upperBound);\n\t\tvar min = Math.min(lowerBound, upperBound);\n\t\treturn Math.floor(this.getUniform() * (max - min + 1)) + min;\n\t},\n\n\t/**\n\t * @param {float} [mean=0] Mean value\n\t * @param {float} [stddev=1] Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n\t * @returns {float} A normally distributed pseudorandom value\n\t */\n\tgetNormal: function(mean, stddev) {\n\t\tdo {\n\t\t\tvar u = 2*this.getUniform()-1;\n\t\t\tvar v = 2*this.getUniform()-1;\n\t\t\tvar r = u*u + v*v;\n\t\t} while (r > 1 || r == 0);\n\n\t\tvar gauss = u * Math.sqrt(-2*Math.log(r)/r);\n\t\treturn (mean || 0) + gauss*(stddev || 1);\n\t},\n\n\t/**\n\t * @returns {int} Pseudorandom value [1,100] inclusive, uniformly distributed\n\t */\n\tgetPercentage: function() {\n\t\treturn 1 + Math.floor(this.getUniform()*100);\n\t},\n\t\n\t/**\n\t * @param {object} data key=whatever, value=weight (relative probability)\n\t * @returns {string} whatever\n\t */\n\tgetWeightedValue: function(data) {\n\t\tvar total = 0;\n\t\t\n\t\tfor (var id in data) {\n\t\t\ttotal += data[id];\n\t\t}\n\t\tvar random = this.getUniform()*total;\n\t\t\n\t\tvar part = 0;\n\t\tfor (var id in data) {\n\t\t\tpart += data[id];\n\t\t\tif (random < part) { return id; }\n\t\t}\n\n\t\t// If by some floating-point annoyance we have\n\t\t// random >= total, just return the last id.\n\t\treturn id;\n\t},\n\n\t/**\n\t * Get RNG state. Useful for storing the state and re-setting it via setState.\n\t * @returns {?} Internal state\n\t */\n\tgetState: function() {\n\t\treturn [this._s0, this._s1, this._s2, this._c];\n\t},\n\n\t/**\n\t * Set a previously retrieved state.\n\t * @param {?} state\n\t */\n\tsetState: function(state) {\n\t\tthis._s0 = state[0];\n\t\tthis._s1 = state[1];\n\t\tthis._s2 = state[2];\n\t\tthis._c  = state[3];\n\t\treturn this;\n\t},\n\n\t/**\n\t * Returns a cloned RNG\n\t */\n\tclone: function() {\n\t\tvar clone = Object.create(this);\n\t\tclone.setState(this.getState());\n\t\treturn clone;\n\t},\n\n\t_s0: 0,\n\t_s1: 0,\n\t_s2: 0,\n\t_c: 0,\n\t_frac: 2.3283064365386963e-10 /* 2^-32 */\n}\n\nROT.RNG.setSeed(Date.now());\n/**\n * @class (Markov process)-based string generator. \n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>. \n * Offers configurable order and prior.\n * @param {object} [options]\n * @param {bool} [options.words=false] Use word mode?\n * @param {int} [options.order=3]\n * @param {float} [options.prior=0.001]\n */\nROT.StringGenerator = function(options) {\n\tthis._options = {\n\t\twords: false,\n\t\torder: 3,\n\t\tprior: 0.001\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\n\tthis._boundary = String.fromCharCode(0);\n\tthis._suffix = this._boundary;\n\tthis._prefix = [];\n\tfor (var i=0;i<this._options.order;i++) { this._prefix.push(this._boundary); }\n\n\tthis._priorValues = {};\n\tthis._priorValues[this._boundary] = this._options.prior;\n\n\tthis._data = {};\n}\n\n/**\n * Remove all learning data\n */\nROT.StringGenerator.prototype.clear = function() {\n\tthis._data = {};\n\tthis._priorValues = {};\n}\n\n/**\n * @returns {string} Generated string\n */\nROT.StringGenerator.prototype.generate = function() {\n\tvar result = [this._sample(this._prefix)];\n\twhile (result[result.length-1] != this._boundary) {\n\t\tresult.push(this._sample(result));\n\t}\n\treturn this._join(result.slice(0, -1));\n}\n\n/**\n * Observe (learn) a string from a training set\n */\nROT.StringGenerator.prototype.observe = function(string) {\n\tvar tokens = this._split(string);\n\n\tfor (var i=0; i<tokens.length; i++) {\n\t\tthis._priorValues[tokens[i]] = this._options.prior;\n\t}\n\n\ttokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n\n\tfor (var i=this._options.order; i<tokens.length; i++) {\n\t\tvar context = tokens.slice(i-this._options.order, i);\n\t\tvar event = tokens[i];\n\t\tfor (var j=0; j<context.length; j++) {\n\t\t\tvar subcontext = context.slice(j);\n\t\t\tthis._observeEvent(subcontext, event);\n\t\t}\n\t}\n}\n\nROT.StringGenerator.prototype.getStats = function() {\n\tvar parts = [];\n\n\tvar priorCount = 0;\n\tfor (var p in this._priorValues) { priorCount++; }\n\tpriorCount--; /* boundary */\n\tparts.push(\"distinct samples: \" + priorCount);\n\n\tvar dataCount = 0;\n\tvar eventCount = 0;\n\tfor (var p in this._data) { \n\t\tdataCount++; \n\t\tfor (var key in this._data[p]) {\n\t\t\teventCount++;\n\t\t}\n\t}\n\tparts.push(\"dictionary size (contexts): \" + dataCount);\n\tparts.push(\"dictionary size (events): \" + eventCount);\n\n\treturn parts.join(\", \");\n}\n\n/**\n * @param {string}\n * @returns {string[]}\n */\nROT.StringGenerator.prototype._split = function(str) {\n\treturn str.split(this._options.words ? /\\s+/ : \"\");\n}\n\n/**\n * @param {string[]}\n * @returns {string} \n */\nROT.StringGenerator.prototype._join = function(arr) {\n\treturn arr.join(this._options.words ? \" \" : \"\");\n}\n\n/**\n * @param {string[]} context\n * @param {string} event\n */\nROT.StringGenerator.prototype._observeEvent = function(context, event) {\n\tvar key = this._join(context);\n\tif (!(key in this._data)) { this._data[key] = {}; }\n\tvar data = this._data[key];\n\n\tif (!(event in data)) { data[event] = 0; }\n\tdata[event]++;\n}\n\n/**\n * @param {string[]}\n * @returns {string}\n */\nROT.StringGenerator.prototype._sample = function(context) {\n\tcontext = this._backoff(context);\n\tvar key = this._join(context);\n\tvar data = this._data[key];\n\n\tvar available = {};\n\n\tif (this._options.prior) {\n\t\tfor (var event in this._priorValues) { available[event] = this._priorValues[event]; }\n\t\tfor (var event in data) { available[event] += data[event]; }\n\t} else { \n\t\tavailable = data;\n\t}\n\n\treturn ROT.RNG.getWeightedValue(available);\n}\n\n/**\n * @param {string[]}\n * @returns {string[]}\n */\nROT.StringGenerator.prototype._backoff = function(context) {\n\tif (context.length > this._options.order) {\n\t\tcontext = context.slice(-this._options.order);\n\t} else if (context.length < this._options.order) {\n\t\tcontext = this._prefix.slice(0, this._options.order - context.length).concat(context);\n\t}\n\n\twhile (!(this._join(context) in this._data) && context.length > 0) { context = context.slice(1); }\n\n\treturn context;\n}\n/**\n * @class Generic event queue: stores events and retrieves them based on their time\n */\nROT.EventQueue = function() {\n\tthis._time = 0;\n\tthis._events = [];\n\tthis._eventTimes = [];\n}\n\n/**\n * @returns {number} Elapsed time\n */\nROT.EventQueue.prototype.getTime = function() {\n\treturn this._time;\n}\n\n/**\n * Clear all scheduled events\n */\nROT.EventQueue.prototype.clear = function() {\n\tthis._events = [];\n\tthis._eventTimes = [];\n\treturn this;\n}\n\n/**\n * @param {?} event\n * @param {number} time\n */\nROT.EventQueue.prototype.add = function(event, time) {\n\tvar index = this._events.length;\n\tfor (var i=0;i<this._eventTimes.length;i++) {\n\t\tif (this._eventTimes[i] > time) {\n\t\t\tindex = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tthis._events.splice(index, 0, event);\n\tthis._eventTimes.splice(index, 0, time);\n}\n\n/**\n * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n * @returns {? || null} The event previously added by addEvent, null if no event available\n */\nROT.EventQueue.prototype.get = function() {\n\tif (!this._events.length) { return null; }\n\n\tvar time = this._eventTimes.splice(0, 1)[0];\n\tif (time > 0) { /* advance */\n\t\tthis._time += time;\n\t\tfor (var i=0;i<this._eventTimes.length;i++) { this._eventTimes[i] -= time; }\n\t}\n\n\treturn this._events.splice(0, 1)[0];\n}\n\n/**\n * Remove an event from the queue\n * @param {?} event\n * @returns {bool} success?\n */\nROT.EventQueue.prototype.remove = function(event) {\n\tvar index = this._events.indexOf(event);\n\tif (index == -1) { return false }\n\tthis._remove(index);\n\treturn true;\n}\n\n/**\n * Remove an event from the queue\n * @param {int} index\n */\nROT.EventQueue.prototype._remove = function(index) {\n\tthis._events.splice(index, 1);\n\tthis._eventTimes.splice(index, 1);\n}\n/**\n * @class Abstract scheduler\n */\nROT.Scheduler = function() {\n\tthis._queue = new ROT.EventQueue();\n\tthis._repeat = [];\n\tthis._current = null;\n}\n\n/**\n * @see ROT.EventQueue#getTime\n */\nROT.Scheduler.prototype.getTime = function() {\n\treturn this._queue.getTime();\n}\n\n/**\n * @param {?} item\n * @param {bool} repeat\n */\nROT.Scheduler.prototype.add = function(item, repeat) {\n\tif (repeat) { this._repeat.push(item); }\n\treturn this;\n}\n\n/**\n * Clear all items\n */\nROT.Scheduler.prototype.clear = function() {\n\tthis._queue.clear();\n\tthis._repeat = [];\n\tthis._current = null;\n\treturn this;\n}\n\n/**\n * Remove a previously added item\n * @param {?} item\n * @returns {bool} successful?\n */\nROT.Scheduler.prototype.remove = function(item) {\n\tvar result = this._queue.remove(item);\n\n\tvar index = this._repeat.indexOf(item);\n\tif (index != -1) { this._repeat.splice(index, 1); }\n\n\tif (this._current == item) { this._current = null; }\n\n\treturn result;\n}\n\n/**\n * Schedule next item\n * @returns {?}\n */\nROT.Scheduler.prototype.next = function() {\n\tthis._current = this._queue.get();\n\treturn this._current;\n}\n/**\n * @class Simple fair scheduler (round-robin style)\n * @augments ROT.Scheduler\n */\nROT.Scheduler.Simple = function() {\n\tROT.Scheduler.call(this);\n}\nROT.Scheduler.Simple.extend(ROT.Scheduler);\n\n/**\n * @see ROT.Scheduler#add\n */\nROT.Scheduler.Simple.prototype.add = function(item, repeat) {\n\tthis._queue.add(item, 0);\n\treturn ROT.Scheduler.prototype.add.call(this, item, repeat);\n}\n\n/**\n * @see ROT.Scheduler#next\n */\nROT.Scheduler.Simple.prototype.next = function() {\n\tif (this._current && this._repeat.indexOf(this._current) != -1) {\n\t\tthis._queue.add(this._current, 0);\n\t}\n\treturn ROT.Scheduler.prototype.next.call(this);\n}\n/**\n * @class Speed-based scheduler\n * @augments ROT.Scheduler\n */\nROT.Scheduler.Speed = function() {\n\tROT.Scheduler.call(this);\n}\nROT.Scheduler.Speed.extend(ROT.Scheduler);\n\n/**\n * @param {object} item anything with \"getSpeed\" method\n * @param {bool} repeat\n * @see ROT.Scheduler#add\n */\nROT.Scheduler.Speed.prototype.add = function(item, repeat) {\n\tthis._queue.add(item, 1/item.getSpeed());\n\treturn ROT.Scheduler.prototype.add.call(this, item, repeat);\n}\n\n/**\n * @see ROT.Scheduler#next\n */\nROT.Scheduler.Speed.prototype.next = function() {\n\tif (this._current && this._repeat.indexOf(this._current) != -1) {\n\t\tthis._queue.add(this._current, 1/this._current.getSpeed());\n\t}\n\treturn ROT.Scheduler.prototype.next.call(this);\n}\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nROT.Scheduler.Action = function() {\n\tROT.Scheduler.call(this);\n\tthis._defaultDuration = 1; /* for newly added */\n\tthis._duration = this._defaultDuration; /* for this._current */\n}\nROT.Scheduler.Action.extend(ROT.Scheduler);\n\n/**\n * @param {object} item\n * @param {bool} repeat\n * @param {number} [time=1]\n * @see ROT.Scheduler#add\n */\nROT.Scheduler.Action.prototype.add = function(item, repeat, time) {\n\tthis._queue.add(item, time || this._defaultDuration);\n\treturn ROT.Scheduler.prototype.add.call(this, item, repeat);\n}\n\nROT.Scheduler.Action.prototype.clear = function() {\n\tthis._duration = this._defaultDuration;\n\treturn ROT.Scheduler.prototype.clear.call(this);\n}\n\nROT.Scheduler.Action.prototype.remove = function(item) {\n\tif (item == this._current) { this._duration = this._defaultDuration; }\n\treturn ROT.Scheduler.prototype.remove.call(this, item);\n}\n\n/**\n * @see ROT.Scheduler#next\n */\nROT.Scheduler.Action.prototype.next = function() {\n\tif (this._current && this._repeat.indexOf(this._current) != -1) {\n\t\tthis._queue.add(this._current, this._duration || this._defaultDuration);\n\t\tthis._duration = this._defaultDuration;\n\t}\n\treturn ROT.Scheduler.prototype.next.call(this);\n}\n\n/**\n * Set duration for the active item\n */\nROT.Scheduler.Action.prototype.setDuration = function(time) {\n\tif (this._current) { this._duration = time; }\n\treturn this;\n}\n/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nROT.Engine = function(scheduler) {\n\tthis._scheduler = scheduler;\n\tthis._lock = 1;\n}\n\n/**\n * Start the main loop. When this call returns, the loop is locked.\n */\nROT.Engine.prototype.start = function() {\n\treturn this.unlock();\n}\n\n/**\n * Interrupt the engine by an asynchronous action\n */\nROT.Engine.prototype.lock = function() {\n\tthis._lock++;\n\treturn this;\n}\n\n/**\n * Resume execution (paused by a previous lock)\n */\nROT.Engine.prototype.unlock = function() {\n\tif (!this._lock) { throw new Error(\"Cannot unlock unlocked engine\"); }\n\tthis._lock--;\n\n\twhile (!this._lock) {\n\t\tvar actor = this._scheduler.next();\n\t\tif (!actor) { return this.lock(); } /* no actors */\n\t\tvar result = actor.act();\n\t\tif (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n\t\t\tthis.lock();\n\t\t\tresult.then(this.unlock.bind(this));\n\t\t}\n\t}\n\n\treturn this;\n}\n/**\n * @class Base map generator\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n */\nROT.Map = function(width, height) {\n\tthis._width = width || ROT.DEFAULT_WIDTH;\n\tthis._height = height || ROT.DEFAULT_HEIGHT;\n};\n\nROT.Map.prototype.create = function(callback) {}\n\nROT.Map.prototype._fillMap = function(value) {\n\tvar map = [];\n\tfor (var i=0;i<this._width;i++) {\n\t\tmap.push([]);\n\t\tfor (var j=0;j<this._height;j++) { map[i].push(value); }\n\t}\n\treturn map;\n}\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nROT.Map.Arena = function(width, height) {\n\tROT.Map.call(this, width, height);\n}\nROT.Map.Arena.extend(ROT.Map);\n\nROT.Map.Arena.prototype.create = function(callback) {\n\tvar w = this._width-1;\n\tvar h = this._height-1;\n\tfor (var i=0;i<=w;i++) {\n\t\tfor (var j=0;j<=h;j++) {\n\t\t\tvar empty = (i && j && i<w && j<h);\n\t\t\tcallback(i, j, empty ? 0 : 1);\n\t\t}\n\t}\n\treturn this;\n}\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nROT.Map.DividedMaze = function(width, height) {\n\tROT.Map.call(this, width, height);\n\tthis._stack = [];\n}\nROT.Map.DividedMaze.extend(ROT.Map);\n\nROT.Map.DividedMaze.prototype.create = function(callback) {\n\tvar w = this._width;\n\tvar h = this._height;\n\t\n\tthis._map = [];\n\t\n\tfor (var i=0;i<w;i++) {\n\t\tthis._map.push([]);\n\t\tfor (var j=0;j<h;j++) {\n\t\t\tvar border = (i == 0 || j == 0 || i+1 == w || j+1 == h);\n\t\t\tthis._map[i].push(border ? 1 : 0);\n\t\t}\n\t}\n\t\n\tthis._stack = [\n\t\t[1, 1, w-2, h-2]\n\t];\n\tthis._process();\n\t\n\tfor (var i=0;i<w;i++) {\n\t\tfor (var j=0;j<h;j++) {\n\t\t\tcallback(i, j, this._map[i][j]);\n\t\t}\n\t}\n\tthis._map = null;\n\treturn this;\n}\n\nROT.Map.DividedMaze.prototype._process = function() {\n\twhile (this._stack.length) {\n\t\tvar room = this._stack.shift(); /* [left, top, right, bottom] */\n\t\tthis._partitionRoom(room);\n\t}\n}\n\nROT.Map.DividedMaze.prototype._partitionRoom = function(room) {\n\tvar availX = [];\n\tvar availY = [];\n\t\n\tfor (var i=room[0]+1;i<room[2];i++) {\n\t\tvar top = this._map[i][room[1]-1];\n\t\tvar bottom = this._map[i][room[3]+1];\n\t\tif (top && bottom && !(i % 2)) { availX.push(i); }\n\t}\n\t\n\tfor (var j=room[1]+1;j<room[3];j++) {\n\t\tvar left = this._map[room[0]-1][j];\n\t\tvar right = this._map[room[2]+1][j];\n\t\tif (left && right && !(j % 2)) { availY.push(j); }\n\t}\n\n\tif (!availX.length || !availY.length) { return; }\n\n\tvar x = availX.random();\n\tvar y = availY.random();\n\t\n\tthis._map[x][y] = 1;\n\t\n\tvar walls = [];\n\t\n\tvar w = []; walls.push(w); /* left part */\n\tfor (var i=room[0]; i<x; i++) { \n\t\tthis._map[i][y] = 1;\n\t\tw.push([i, y]); \n\t}\n\t\n\tvar w = []; walls.push(w); /* right part */\n\tfor (var i=x+1; i<=room[2]; i++) { \n\t\tthis._map[i][y] = 1;\n\t\tw.push([i, y]); \n\t}\n\n\tvar w = []; walls.push(w); /* top part */\n\tfor (var j=room[1]; j<y; j++) { \n\t\tthis._map[x][j] = 1;\n\t\tw.push([x, j]); \n\t}\n\t\n\tvar w = []; walls.push(w); /* bottom part */\n\tfor (var j=y+1; j<=room[3]; j++) { \n\t\tthis._map[x][j] = 1;\n\t\tw.push([x, j]); \n\t}\n\t\t\n\tvar solid = walls.random();\n\tfor (var i=0;i<walls.length;i++) {\n\t\tvar w = walls[i];\n\t\tif (w == solid) { continue; }\n\t\t\n\t\tvar hole = w.random();\n\t\tthis._map[hole[0]][hole[1]] = 0;\n\t}\n\n\tthis._stack.push([room[0], room[1], x-1, y-1]); /* left top */\n\tthis._stack.push([x+1, room[1], room[2], y-1]); /* right top */\n\tthis._stack.push([room[0], y+1, x-1, room[3]]); /* left bottom */\n\tthis._stack.push([x+1, y+1, room[2], room[3]]); /* right bottom */\n}\n/**\n * @class Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n * @augments ROT.Map\n */\nROT.Map.IceyMaze = function(width, height, regularity) {\n\tROT.Map.call(this, width, height);\n\tthis._regularity = regularity || 0;\n}\nROT.Map.IceyMaze.extend(ROT.Map);\n\nROT.Map.IceyMaze.prototype.create = function(callback) {\n\tvar width = this._width;\n\tvar height = this._height;\n\t\n\tvar map = this._fillMap(1);\n\t\n\twidth -= (width % 2 ? 1 : 2);\n\theight -= (height % 2 ? 1 : 2);\n\n\tvar cx = 0;\n\tvar cy = 0;\n\tvar nx = 0;\n\tvar ny = 0;\n\n\tvar done = 0;\n\tvar blocked = false;\n\tvar dirs = [\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0]\n\t];\n\tdo {\n\t\tcx = 1 + 2*Math.floor(ROT.RNG.getUniform()*(width-1) / 2);\n\t\tcy = 1 + 2*Math.floor(ROT.RNG.getUniform()*(height-1) / 2);\n\n\t\tif (!done) { map[cx][cy] = 0; }\n\t\t\n\t\tif (!map[cx][cy]) {\n\t\t\tthis._randomize(dirs);\n\t\t\tdo {\n\t\t\t\tif (Math.floor(ROT.RNG.getUniform()*(this._regularity+1)) == 0) { this._randomize(dirs); }\n\t\t\t\tblocked = true;\n\t\t\t\tfor (var i=0;i<4;i++) {\n\t\t\t\t\tnx = cx + dirs[i][0]*2;\n\t\t\t\t\tny = cy + dirs[i][1]*2;\n\t\t\t\t\tif (this._isFree(map, nx, ny, width, height)) {\n\t\t\t\t\t\tmap[nx][ny] = 0;\n\t\t\t\t\t\tmap[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcx = nx;\n\t\t\t\t\t\tcy = ny;\n\t\t\t\t\t\tblocked = false;\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} while (!blocked);\n\t\t}\n\t} while (done+1 < width*height/4);\n\t\n\tfor (var i=0;i<this._width;i++) {\n\t\tfor (var j=0;j<this._height;j++) {\n\t\t\tcallback(i, j, map[i][j]);\n\t\t}\n\t}\n\tthis._map = null;\n\treturn this;\n}\n\nROT.Map.IceyMaze.prototype._randomize = function(dirs) {\n\tfor (var i=0;i<4;i++) {\n\t\tdirs[i][0] = 0;\n\t\tdirs[i][1] = 0;\n\t}\n\t\n\tswitch (Math.floor(ROT.RNG.getUniform()*4)) {\n\t\tcase 0:\n\t\t\tdirs[0][0] = -1; dirs[1][0] = 1;\n\t\t\tdirs[2][1] = -1; dirs[3][1] = 1;\n\t\tbreak;\n\t\tcase 1:\n\t\t\tdirs[3][0] = -1; dirs[2][0] = 1;\n\t\t\tdirs[1][1] = -1; dirs[0][1] = 1;\n\t\tbreak;\n\t\tcase 2:\n\t\t\tdirs[2][0] = -1; dirs[3][0] = 1;\n\t\t\tdirs[0][1] = -1; dirs[1][1] = 1;\n\t\tbreak;\n\t\tcase 3:\n\t\t\tdirs[1][0] = -1; dirs[0][0] = 1;\n\t\t\tdirs[3][1] = -1; dirs[2][1] = 1;\n\t\tbreak;\n\t}\n}\n\nROT.Map.IceyMaze.prototype._isFree = function(map, x, y, width, height) {\n\tif (x < 1 || y < 1 || x >= width || y >= height) { return false; }\n\treturn map[x][y];\n}\n/**\n * @class Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n * @augments ROT.Map\n */\nROT.Map.EllerMaze = function(width, height) {\n\tROT.Map.call(this, width, height);\n}\nROT.Map.EllerMaze.extend(ROT.Map);\n\nROT.Map.EllerMaze.prototype.create = function(callback) {\n\tvar map = this._fillMap(1);\n\tvar w = Math.ceil((this._width-2)/2);\n\t\n\tvar rand = 9/24;\n\t\n\tvar L = [];\n\tvar R = [];\n\t\n\tfor (var i=0;i<w;i++) {\n\t\tL.push(i);\n\t\tR.push(i);\n\t}\n\tL.push(w-1); /* fake stop-block at the right side */\n\n\tfor (var j=1;j+3<this._height;j+=2) {\n\t\t/* one row */\n\t\tfor (var i=0;i<w;i++) {\n\t\t\t/* cell coords (will be always empty) */\n\t\t\tvar x = 2*i+1;\n\t\t\tvar y = j;\n\t\t\tmap[x][y] = 0;\n\t\t\t\n\t\t\t/* right connection */\n\t\t\tif (i != L[i+1] && ROT.RNG.getUniform() > rand) {\n\t\t\t\tthis._addToList(i, L, R);\n\t\t\t\tmap[x+1][y] = 0;\n\t\t\t}\n\t\t\t\n\t\t\t/* bottom connection */\n\t\t\tif (i != L[i] && ROT.RNG.getUniform() > rand) {\n\t\t\t\t/* remove connection */\n\t\t\t\tthis._removeFromList(i, L, R);\n\t\t\t} else {\n\t\t\t\t/* create connection */\n\t\t\t\tmap[x][y+1] = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t/* last row */\n\tfor (var i=0;i<w;i++) {\n\t\t/* cell coords (will be always empty) */\n\t\tvar x = 2*i+1;\n\t\tvar y = j;\n\t\tmap[x][y] = 0;\n\t\t\n\t\t/* right connection */\n\t\tif (i != L[i+1] && (i == L[i] || ROT.RNG.getUniform() > rand)) {\n\t\t\t/* dig right also if the cell is separated, so it gets connected to the rest of maze */\n\t\t\tthis._addToList(i, L, R);\n\t\t\tmap[x+1][y] = 0;\n\t\t}\n\t\t\n\t\tthis._removeFromList(i, L, R);\n\t}\n\t\n\tfor (var i=0;i<this._width;i++) {\n\t\tfor (var j=0;j<this._height;j++) {\n\t\t\tcallback(i, j, map[i][j]);\n\t\t}\n\t}\n\t\n\treturn this;\n}\n\n/**\n * Remove \"i\" from its list\n */\nROT.Map.EllerMaze.prototype._removeFromList = function(i, L, R) {\n\tR[L[i]] = R[i];\n\tL[R[i]] = L[i];\n\tR[i] = i;\n\tL[i] = i;\n}\n\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nROT.Map.EllerMaze.prototype._addToList = function(i, L, R) {\n\tR[L[i+1]] = R[i];\n\tL[R[i]] = L[i+1];\n\tR[i] = i+1;\n\tL[i+1] = i;\n}\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nROT.Map.Cellular = function(width, height, options) {\n\tROT.Map.call(this, width, height);\n\tthis._options = {\n\t\tborn: [5, 6, 7, 8],\n\t\tsurvive: [4, 5, 6, 7, 8],\n\t\ttopology: 8,\n\t\tconnected: false\n\t};\n\tthis.setOptions(options);\n\t\n\tthis._dirs = ROT.DIRS[this._options.topology];\n\tthis._map = this._fillMap(0);\n}\nROT.Map.Cellular.extend(ROT.Map);\n\n/**\n * Fill the map with random values\n * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n */\nROT.Map.Cellular.prototype.randomize = function(probability) {\n\tfor (var i=0;i<this._width;i++) {\n\t\tfor (var j=0;j<this._height;j++) {\n\t\t\tthis._map[i][j] = (ROT.RNG.getUniform() < probability ? 1 : 0);\n\t\t}\n\t}\n\treturn this;\n}\n\n/**\n * Change options.\n * @see ROT.Map.Cellular\n */\nROT.Map.Cellular.prototype.setOptions = function(options) {\n\tfor (var p in options) { this._options[p] = options[p]; }\n}\n\nROT.Map.Cellular.prototype.set = function(x, y, value) {\n\tthis._map[x][y] = value;\n}\n\nROT.Map.Cellular.prototype.create = function(callback) {\n\tvar newMap = this._fillMap(0);\n\tvar born = this._options.born;\n\tvar survive = this._options.survive;\n\n\n\tfor (var j=0;j<this._height;j++) {\n\t\tvar widthStep = 1;\n\t\tvar widthStart = 0;\n\t\tif (this._options.topology == 6) { \n\t\t\twidthStep = 2;\n\t\t\twidthStart = j%2;\n\t\t}\n\n\t\tfor (var i=widthStart; i<this._width; i+=widthStep) {\n\n\t\t\tvar cur = this._map[i][j];\n\t\t\tvar ncount = this._getNeighbors(i, j);\n\t\t\t\n\t\t\tif (cur && survive.indexOf(ncount) != -1) { /* survive */\n\t\t\t\tnewMap[i][j] = 1;\n\t\t\t} else if (!cur && born.indexOf(ncount) != -1) { /* born */\n\t\t\t\tnewMap[i][j] = 1;\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\t\n\tthis._map = newMap;\n\n\tif (this._options.connected) { this._completeMaze(); } // optionally connect every space\n\n\tif (!callback) { return; }\n\n\tfor (var j=0;j<this._height;j++) {\n\t\tvar widthStep = 1;\n\t\tvar widthStart = 0;\n\t\tif (this._options.topology == 6) { \n\t\t\twidthStep = 2;\n\t\t\twidthStart = j%2;\n\t\t}\n\t\tfor (var i=widthStart; i<this._width; i+=widthStep) {\n\t\t\tcallback(i, j, newMap[i][j]);\n\t\t}\n\t}\n}\n\n/**\n * Get neighbor count at [i,j] in this._map\n */\nROT.Map.Cellular.prototype._getNeighbors = function(cx, cy) {\n\tvar result = 0;\n\tfor (var i=0;i<this._dirs.length;i++) {\n\t\tvar dir = this._dirs[i];\n\t\tvar x = cx + dir[0];\n\t\tvar y = cy + dir[1];\n\t\t\n\t\tif (x < 0 || x >= this._width || x < 0 || y >= this._width) { continue; }\n\t\tresult += (this._map[x][y] == 1 ? 1 : 0);\n\t}\n\t\n\treturn result;\n}\n\n/**\n * Make sure every non-wall space is accessible.\n */\nROT.Map.Cellular.prototype._completeMaze = function() {\n\tvar allFreeSpace = [];\n\tvar notConnected = {};\n\t// find all free space\n\tfor (var x = 0; x < this._width; x++) {\n\t\tfor (var y = 0; y < this._height; y++) {\n\t\t\tif (this._freeSpace(x, y)) {\n\t\t\t\tvar p = [x, y];\n\t\t\t\tnotConnected[this._pointKey(p)] = p;\n\t\t\t\tallFreeSpace.push([x, y]);\n\t\t\t}\n\t\t}\n\t}\n\tvar start = allFreeSpace[ROT.RNG.getUniformInt(0, allFreeSpace.length - 1)];\n\n\tvar key = this._pointKey(start);\n\tvar connected = {};\n\tconnected[key] = start;\n\tdelete notConnected[key]\n\n\t// find what's connected to the starting point\n\tthis._findConnected(connected, notConnected, [start]);\n\n\twhile (Object.keys(notConnected).length > 0) {\n\n\t\t// find two points from notConnected to connected\n\t\tvar p = this._getFromTo(connected, notConnected);\n\t\tvar from = p[0]; // notConnected\n\t\tvar to = p[1]; // connected\n\n\t\t// find everything connected to the starting point\n\t\tvar local = {};\n\t\tlocal[this._pointKey(from)] = from;\n\t\tthis._findConnected(local, notConnected, [from], true);\n\n\t\t// connect to a connected square\n\t\tthis._tunnelToConnected(to, from, connected, notConnected);\n\n\t\t// now all of local is connected\n\t\tfor (var k in local) {\n\t\t\tvar pp = local[k];\n\t\t\tthis._map[pp[0]][pp[1]] = 0;\n\t\t\tconnected[k] = pp;\n\t\t\tdelete notConnected[k];\n\t\t}\n\t}\n}\n\n/**\n * Find random points to connect. Search for the closest point in the larger space. \n * This is to minimize the length of the passage while maintaining good performance.\n */\nROT.Map.Cellular.prototype._getFromTo = function(connected, notConnected) {\n\tvar from, to, d;\n\tvar connectedKeys = Object.keys(connected);\n\tvar notConnectedKeys = Object.keys(notConnected);\n\tfor (var i = 0; i < 5; i++) {\n\t\tif (connectedKeys.length < notConnectedKeys.length) {\n\t\t\tvar keys = connectedKeys;\n\t\t\tto = connected[keys[ROT.RNG.getUniformInt(0, keys.length - 1)]]\n\t\t\tfrom = this._getClosest(to, notConnected);\n\t\t} else {\n\t\t\tvar keys = notConnectedKeys;\n\t\t\tfrom = notConnected[keys[ROT.RNG.getUniformInt(0, keys.length - 1)]]\n\t\t\tto = this._getClosest(from, connected);\n\t\t}\n\t\td = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n\t\tif (d < 64) {\n\t\t\tbreak;\n\t\t}\n\t}\n\t// console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n\treturn [from, to];\n}\n\nROT.Map.Cellular.prototype._getClosest = function(point, space) {\n\tvar minPoint = null;\n\tvar minDist = null;\n\tfor (k in space) {\n\t\tvar p = space[k];\n\t\tvar d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n\t\tif (minDist == null || d < minDist) {\n\t\t\tminDist = d;\n\t\t\tminPoint = p;\n\t\t}\n\t}\n\treturn minPoint;\n}\n\nROT.Map.Cellular.prototype._findConnected = function(connected, notConnected, stack, keepNotConnected) {\n\twhile(stack.length > 0) {\n\t\tvar p = stack.splice(0, 1)[0];\n\t\tvar tests = [\n\t\t\t[p[0] + 1, p[1]],\n\t\t\t[p[0] - 1, p[1]],\n\t\t\t[p[0],     p[1] + 1],\n\t\t\t[p[0],     p[1] - 1]\n\t\t];\n\t\tfor (var i = 0; i < tests.length; i++) {\n\t\t\tvar key = this._pointKey(tests[i]);\n\t\t\tif (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1])) {\n\t\t\t\tconnected[key] = tests[i];\n\t\t\t\tif (!keepNotConnected) {\n\t\t\t\t\tdelete notConnected[key];\n\t\t\t\t}\n\t\t\t\tstack.push(tests[i]);\n\t\t\t}\n\t\t}\n\t}\n}\n\nROT.Map.Cellular.prototype._tunnelToConnected = function(to, from, connected, notConnected) {\n\tvar key = this._pointKey(from);\n\tvar a, b;\n\tif (from[0] < to[0]) {\n\t\ta = from;\n\t\tb = to;\n\t} else {\n\t\ta = to;\n\t\tb = from;\n\t}\n\tfor (var xx = a[0]; xx <= b[0]; xx++) {\n\t\tthis._map[xx][a[1]] = 0;\n\t\tvar p = [xx, a[1]];\n\t\tvar pkey = this._pointKey(p);\n\t\tconnected[pkey] = p;\n\t\tdelete notConnected[pkey];\n\t}\n\n\t// x is now fixed\n\tvar x = b[0];\n\n\tif (from[1] < to[1]) {\n\t\ta = from;\n\t\tb = to;\n\t} else {\n\t\ta = to;\n\t\tb = from;\n\t}\n\tfor (var yy = a[1]; yy < b[1]; yy++) {\n\t\tthis._map[x][yy] = 0;\n\t\tvar p = [x, yy];\n\t\tvar pkey = this._pointKey(p);\n\t\tconnected[pkey] = p;\n\t\tdelete notConnected[pkey];\n\t}\n}\n\nROT.Map.Cellular.prototype._freeSpace = function(x, y) {\n\treturn x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] != 1;\n}\n\nROT.Map.Cellular.prototype._pointKey = function(p) {\n\treturn p[0] + \".\" + p[1];\n}\n\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nROT.Map.Dungeon = function(width, height) {\n\tROT.Map.call(this, width, height);\n\tthis._rooms = []; /* list of all rooms */\n\tthis._corridors = [];\n}\nROT.Map.Dungeon.extend(ROT.Map);\n\n/**\n * Get all generated rooms\n * @returns {ROT.Map.Feature.Room[]}\n */\nROT.Map.Dungeon.prototype.getRooms = function() {\n\treturn this._rooms;\n}\n\n/**\n * Get all generated corridors\n * @returns {ROT.Map.Feature.Corridor[]}\n */\nROT.Map.Dungeon.prototype.getCorridors = function() {\n\treturn this._corridors;\n}\n/**\n * @class Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at \n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n * @augments ROT.Map.Dungeon\n */\nROT.Map.Digger = function(width, height, options) {\n\tROT.Map.Dungeon.call(this, width, height);\n\t\n\tthis._options = {\n\t\troomWidth: [3, 9], /* room minimum and maximum width */\n\t\troomHeight: [3, 5], /* room minimum and maximum height */\n\t\tcorridorLength: [3, 10], /* corridor minimum and maximum length */\n\t\tdugPercentage: 0.2, /* we stop after this percentage of level area has been dug out */\n\t\ttimeLimit: 1000 /* we stop after this much time has passed (msec) */\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\t\n\tthis._features = {\n\t\t\"Room\": 4,\n\t\t\"Corridor\": 4\n\t}\n\tthis._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n\tthis._walls = {}; /* these are available for digging */\n\t\n\tthis._digCallback = this._digCallback.bind(this);\n\tthis._canBeDugCallback = this._canBeDugCallback.bind(this);\n\tthis._isWallCallback = this._isWallCallback.bind(this);\n\tthis._priorityWallCallback = this._priorityWallCallback.bind(this);\n}\nROT.Map.Digger.extend(ROT.Map.Dungeon);\n\n/**\n * Create a map\n * @see ROT.Map#create\n */\nROT.Map.Digger.prototype.create = function(callback) {\n\tthis._rooms = [];\n\tthis._corridors = [];\n\tthis._map = this._fillMap(1);\n\tthis._walls = {};\n\tthis._dug = 0;\n\tvar area = (this._width-2) * (this._height-2);\n\n\tthis._firstRoom();\n\t\n\tvar t1 = Date.now();\n\n\tdo {\n\t\tvar t2 = Date.now();\n\t\tif (t2 - t1 > this._options.timeLimit) { break; }\n\n\t\t/* find a good wall */\n\t\tvar wall = this._findWall();\n\t\tif (!wall) { break; } /* no more walls */\n\t\t\n\t\tvar parts = wall.split(\",\");\n\t\tvar x = parseInt(parts[0]);\n\t\tvar y = parseInt(parts[1]);\n\t\tvar dir = this._getDiggingDirection(x, y);\n\t\tif (!dir) { continue; } /* this wall is not suitable */\n\t\t\n//\t\tconsole.log(\"wall\", x, y);\n\n\t\t/* try adding a feature */\n\t\tvar featureAttempts = 0;\n\t\tdo {\n\t\t\tfeatureAttempts++;\n\t\t\tif (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n\t\t\t\t//if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n\t\t\t\tthis._removeSurroundingWalls(x, y);\n\t\t\t\tthis._removeSurroundingWalls(x-dir[0], y-dir[1]);\n\t\t\t\tbreak; \n\t\t\t}\n\t\t} while (featureAttempts < this._featureAttempts);\n\t\t\n\t\tvar priorityWalls = 0;\n\t\tfor (var id in this._walls) { \n\t\t\tif (this._walls[id] > 1) { priorityWalls++; }\n\t\t}\n\n\t} while (this._dug/area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n\n\tthis._addDoors();\n\n\tif (callback) {\n\t\tfor (var i=0;i<this._width;i++) {\n\t\t\tfor (var j=0;j<this._height;j++) {\n\t\t\t\tcallback(i, j, this._map[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis._walls = {};\n\tthis._map = null;\n\n\treturn this;\n}\n\nROT.Map.Digger.prototype._digCallback = function(x, y, value) {\n\tif (value == 0 || value == 2) { /* empty */\n\t\tthis._map[x][y] = 0;\n\t\tthis._dug++;\n\t} else { /* wall */\n\t\tthis._walls[x+\",\"+y] = 1;\n\t}\n}\n\nROT.Map.Digger.prototype._isWallCallback = function(x, y) {\n\tif (x < 0 || y < 0 || x >= this._width || y >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\nROT.Map.Digger.prototype._canBeDugCallback = function(x, y) {\n\tif (x < 1 || y < 1 || x+1 >= this._width || y+1 >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\nROT.Map.Digger.prototype._priorityWallCallback = function(x, y) {\n\tthis._walls[x+\",\"+y] = 2;\n}\n\nROT.Map.Digger.prototype._firstRoom = function() {\n\tvar cx = Math.floor(this._width/2);\n\tvar cy = Math.floor(this._height/2);\n\tvar room = ROT.Map.Feature.Room.createRandomCenter(cx, cy, this._options);\n\tthis._rooms.push(room);\n\troom.create(this._digCallback);\n}\n\n/**\n * Get a suitable wall\n */\nROT.Map.Digger.prototype._findWall = function() {\n\tvar prio1 = [];\n\tvar prio2 = [];\n\tfor (var id in this._walls) {\n\t\tvar prio = this._walls[id];\n\t\tif (prio == 2) { \n\t\t\tprio2.push(id); \n\t\t} else {\n\t\t\tprio1.push(id);\n\t\t}\n\t}\n\t\n\tvar arr = (prio2.length ? prio2 : prio1);\n\tif (!arr.length) { return null; } /* no walls :/ */\n\t\n\tvar id = arr.random();\n\tdelete this._walls[id];\n\n\treturn id;\n}\n\n/**\n * Tries adding a feature\n * @returns {bool} was this a successful try?\n */\nROT.Map.Digger.prototype._tryFeature = function(x, y, dx, dy) {\n\tvar feature = ROT.RNG.getWeightedValue(this._features);\n\tfeature = ROT.Map.Feature[feature].createRandomAt(x, y, dx, dy, this._options);\n\t\n\tif (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n//\t\tconsole.log(\"not valid\");\n//\t\tfeature.debug();\n\t\treturn false;\n\t}\n\t\n\tfeature.create(this._digCallback);\n//\tfeature.debug();\n\n\tif (feature instanceof ROT.Map.Feature.Room) { this._rooms.push(feature); }\n\tif (feature instanceof ROT.Map.Feature.Corridor) { \n\t\tfeature.createPriorityWalls(this._priorityWallCallback);\n\t\tthis._corridors.push(feature); \n\t}\n\t\n\treturn true;\n}\n\nROT.Map.Digger.prototype._removeSurroundingWalls = function(cx, cy) {\n\tvar deltas = ROT.DIRS[4];\n\n\tfor (var i=0;i<deltas.length;i++) {\n\t\tvar delta = deltas[i];\n\t\tvar x = cx + delta[0];\n\t\tvar y = cy + delta[1];\n\t\tdelete this._walls[x+\",\"+y];\n\t\tvar x = cx + 2*delta[0];\n\t\tvar y = cy + 2*delta[1];\n\t\tdelete this._walls[x+\",\"+y];\n\t}\n}\n\n/**\n * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n */\nROT.Map.Digger.prototype._getDiggingDirection = function(cx, cy) {\n\tif (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) { return null; }\n\n\tvar result = null;\n\tvar deltas = ROT.DIRS[4];\n\t\n\tfor (var i=0;i<deltas.length;i++) {\n\t\tvar delta = deltas[i];\n\t\tvar x = cx + delta[0];\n\t\tvar y = cy + delta[1];\n\t\t\n\t\tif (!this._map[x][y]) { /* there already is another empty neighbor! */\n\t\t\tif (result) { return null; }\n\t\t\tresult = delta;\n\t\t}\n\t}\n\t\n\t/* no empty neighbor */\n\tif (!result) { return null; }\n\t\n\treturn [-result[0], -result[1]];\n}\n\n/**\n * Find empty spaces surrounding rooms, and apply doors.\n */\nROT.Map.Digger.prototype._addDoors = function() {\n\tvar data = this._map;\n\tvar isWallCallback = function(x, y) {\n\t\treturn (data[x][y] == 1);\n\t}\n\tfor (var i = 0; i < this._rooms.length; i++ ) {\n\t\tvar room = this._rooms[i];\n\t\troom.clearDoors();\n\t\troom.addDoors(isWallCallback);\n\t}\n}\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nROT.Map.Uniform = function(width, height, options) {\n\tROT.Map.Dungeon.call(this, width, height);\n\n\tthis._options = {\n\t\troomWidth: [3, 9], /* room minimum and maximum width */\n\t\troomHeight: [3, 5], /* room minimum and maximum height */\n\t\troomDugPercentage: 0.1, /* we stop after this percentage of level area has been dug out by rooms */\n\t\ttimeLimit: 1000 /* we stop after this much time has passed (msec) */\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\n\tthis._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n\tthis._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n\n\tthis._connected = []; /* list of already connected rooms */\n\tthis._unconnected = []; /* list of remaining unconnected rooms */\n\t\n\tthis._digCallback = this._digCallback.bind(this);\n\tthis._canBeDugCallback = this._canBeDugCallback.bind(this);\n\tthis._isWallCallback = this._isWallCallback.bind(this);\n}\nROT.Map.Uniform.extend(ROT.Map.Dungeon);\n\n/**\n * Create a map. If the time limit has been hit, returns null.\n * @see ROT.Map#create\n */\nROT.Map.Uniform.prototype.create = function(callback) {\n\tvar t1 = Date.now();\n\twhile (1) {\n\t\tvar t2 = Date.now();\n\t\tif (t2 - t1 > this._options.timeLimit) { return null; } /* time limit! */\n\t\n\t\tthis._map = this._fillMap(1);\n\t\tthis._dug = 0;\n\t\tthis._rooms = [];\n\t\tthis._unconnected = [];\n\t\tthis._generateRooms();\n\t\tif (this._rooms.length < 2) { continue; }\n\t\tif (this._generateCorridors()) { break; }\n\t}\n\t\n\tif (callback) {\n\t\tfor (var i=0;i<this._width;i++) {\n\t\t\tfor (var j=0;j<this._height;j++) {\n\t\t\t\tcallback(i, j, this._map[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn this;\n}\n\n/**\n * Generates a suitable amount of rooms\n */\nROT.Map.Uniform.prototype._generateRooms = function() {\n\tvar w = this._width-2;\n\tvar h = this._height-2;\n\n\tdo {\n\t\tvar room = this._generateRoom();\n\t\tif (this._dug/(w*h) > this._options.roomDugPercentage) { break; } /* achieved requested amount of free space */\n\t} while (room);\n\n\t/* either enough rooms, or not able to generate more of them :) */\n}\n\n/**\n * Try to generate one room\n */\nROT.Map.Uniform.prototype._generateRoom = function() {\n\tvar count = 0;\n\twhile (count < this._roomAttempts) {\n\t\tcount++;\n\t\t\n\t\tvar room = ROT.Map.Feature.Room.createRandom(this._width, this._height, this._options);\n\t\tif (!room.isValid(this._isWallCallback, this._canBeDugCallback)) { continue; }\n\t\t\n\t\troom.create(this._digCallback);\n\t\tthis._rooms.push(room);\n\t\treturn room;\n\t} \n\n\t/* no room was generated in a given number of attempts */\n\treturn null;\n}\n\n/**\n * Generates connectors beween rooms\n * @returns {bool} success Was this attempt successfull?\n */\nROT.Map.Uniform.prototype._generateCorridors = function() {\n\tvar cnt = 0;\n\twhile (cnt < this._corridorAttempts) {\n\t\tcnt++;\n\t\tthis._corridors = [];\n\n\t\t/* dig rooms into a clear map */\n\t\tthis._map = this._fillMap(1);\n\t\tfor (var i=0;i<this._rooms.length;i++) { \n\t\t\tvar room = this._rooms[i];\n\t\t\troom.clearDoors();\n\t\t\troom.create(this._digCallback); \n\t\t}\n\n\t\tthis._unconnected = this._rooms.slice().randomize();\n\t\tthis._connected = [];\n\t\tif (this._unconnected.length) { this._connected.push(this._unconnected.pop()); } /* first one is always connected */\n\t\t\n\t\twhile (1) {\n\t\t\t/* 1. pick random connected room */\n\t\t\tvar connected = this._connected.random();\n\t\t\t\n\t\t\t/* 2. find closest unconnected */\n\t\t\tvar room1 = this._closestRoom(this._unconnected, connected);\n\t\t\t\n\t\t\t/* 3. connect it to closest connected */\n\t\t\tvar room2 = this._closestRoom(this._connected, room1);\n\t\t\t\n\t\t\tvar ok = this._connectRooms(room1, room2);\n\t\t\tif (!ok) { break; } /* stop connecting, re-shuffle */\n\t\t\t\n\t\t\tif (!this._unconnected.length) { return true; } /* done; no rooms remain */\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * For a given room, find the closest one from the list\n */\nROT.Map.Uniform.prototype._closestRoom = function(rooms, room) {\n\tvar dist = Infinity;\n\tvar center = room.getCenter();\n\tvar result = null;\n\t\n\tfor (var i=0;i<rooms.length;i++) {\n\t\tvar r = rooms[i];\n\t\tvar c = r.getCenter();\n\t\tvar dx = c[0]-center[0];\n\t\tvar dy = c[1]-center[1];\n\t\tvar d = dx*dx+dy*dy;\n\t\t\n\t\tif (d < dist) {\n\t\t\tdist = d;\n\t\t\tresult = r;\n\t\t}\n\t}\n\t\n\treturn result;\n}\n\nROT.Map.Uniform.prototype._connectRooms = function(room1, room2) {\n\t/*\n\t\troom1.debug();\n\t\troom2.debug();\n\t*/\n\n\tvar center1 = room1.getCenter();\n\tvar center2 = room2.getCenter();\n\n\tvar diffX = center2[0] - center1[0];\n\tvar diffY = center2[1] - center1[1];\n\n\tif (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n\t\tvar dirIndex1 = (diffY > 0 ? 2 : 0);\n\t\tvar dirIndex2 = (dirIndex1 + 2) % 4;\n\t\tvar min = room2.getLeft();\n\t\tvar max = room2.getRight();\n\t\tvar index = 0;\n\t} else { /* first try connecting east-west walls */\n\t\tvar dirIndex1 = (diffX > 0 ? 1 : 3);\n\t\tvar dirIndex2 = (dirIndex1 + 2) % 4;\n\t\tvar min = room2.getTop();\n\t\tvar max = room2.getBottom();\n\t\tvar index = 1;\n\t}\n\n\tvar start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n\tif (!start) { return false; }\n\n\tif (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n\t\tvar end = start.slice();\n\t\tvar value = null;\n\t\tswitch (dirIndex2) {\n\t\t\tcase 0: value = room2.getTop()-1; break;\n\t\t\tcase 1: value = room2.getRight()+1; break;\n\t\t\tcase 2: value = room2.getBottom()+1; break;\n\t\t\tcase 3: value = room2.getLeft()-1; break;\n\t\t}\n\t\tend[(index+1)%2] = value;\n\t\tthis._digLine([start, end]);\n\t\t\n\t} else if (start[index] < min-1 || start[index] > max+1) { /* need to switch target wall (L-like) */\n\n\t\tvar diff = start[index] - center2[index];\n\t\tswitch (dirIndex2) {\n\t\t\tcase 0:\n\t\t\tcase 1:\tvar rotation = (diff < 0 ? 3 : 1); break;\n\t\t\tcase 2:\n\t\t\tcase 3:\tvar rotation = (diff < 0 ? 1 : 3); break;\n\t\t}\n\t\tdirIndex2 = (dirIndex2 + rotation) % 4;\n\t\t\n\t\tvar end = this._placeInWall(room2, dirIndex2);\n\t\tif (!end) { return false; }\n\n\t\tvar mid = [0, 0];\n\t\tmid[index] = start[index];\n\t\tvar index2 = (index+1)%2;\n\t\tmid[index2] = end[index2];\n\t\tthis._digLine([start, mid, end]);\n\t\t\n\t} else { /* use current wall pair, but adjust the line in the middle (S-like) */\n\t\n\t\tvar index2 = (index+1)%2;\n\t\tvar end = this._placeInWall(room2, dirIndex2);\n\t\tif (!end) { return false; }\n\t\tvar mid = Math.round((end[index2] + start[index2])/2);\n\n\t\tvar mid1 = [0, 0];\n\t\tvar mid2 = [0, 0];\n\t\tmid1[index] = start[index];\n\t\tmid1[index2] = mid;\n\t\tmid2[index] = end[index];\n\t\tmid2[index2] = mid;\n\t\tthis._digLine([start, mid1, mid2, end]);\n\t}\n\n\troom1.addDoor(start[0], start[1]);\n\troom2.addDoor(end[0], end[1]);\n\t\n\tvar index = this._unconnected.indexOf(room1);\n\tif (index != -1) {\n\t\tthis._unconnected.splice(index, 1);\n\t\tthis._connected.push(room1);\n\t}\n\n\tvar index = this._unconnected.indexOf(room2);\n\tif (index != -1) {\n\t\tthis._unconnected.splice(index, 1);\n\t\tthis._connected.push(room2);\n\t}\n\t\n\treturn true;\n}\n\nROT.Map.Uniform.prototype._placeInWall = function(room, dirIndex) {\n\tvar start = [0, 0];\n\tvar dir = [0, 0];\n\tvar length = 0;\n\t\n\tswitch (dirIndex) {\n\t\tcase 0:\n\t\t\tdir = [1, 0];\n\t\t\tstart = [room.getLeft(), room.getTop()-1];\n\t\t\tlength = room.getRight()-room.getLeft()+1;\n\t\tbreak;\n\t\tcase 1:\n\t\t\tdir = [0, 1];\n\t\t\tstart = [room.getRight()+1, room.getTop()];\n\t\t\tlength = room.getBottom()-room.getTop()+1;\n\t\tbreak;\n\t\tcase 2:\n\t\t\tdir = [1, 0];\n\t\t\tstart = [room.getLeft(), room.getBottom()+1];\n\t\t\tlength = room.getRight()-room.getLeft()+1;\n\t\tbreak;\n\t\tcase 3:\n\t\t\tdir = [0, 1];\n\t\t\tstart = [room.getLeft()-1, room.getTop()];\n\t\t\tlength = room.getBottom()-room.getTop()+1;\n\t\tbreak;\n\t}\n\t\n\tvar avail = [];\n\tvar lastBadIndex = -2;\n\n\tfor (var i=0;i<length;i++) {\n\t\tvar x = start[0] + i*dir[0];\n\t\tvar y = start[1] + i*dir[1];\n\t\tavail.push(null);\n\t\t\n\t\tvar isWall = (this._map[x][y] == 1);\n\t\tif (isWall) {\n\t\t\tif (lastBadIndex != i-1) { avail[i] = [x, y]; }\n\t\t} else {\n\t\t\tlastBadIndex = i;\n\t\t\tif (i) { avail[i-1] = null; }\n\t\t}\n\t}\n\t\n\tfor (var i=avail.length-1; i>=0; i--) {\n\t\tif (!avail[i]) { avail.splice(i, 1); }\n\t}\n\treturn (avail.length ? avail.random() : null);\n}\n\n/**\n * Dig a polyline.\n */\nROT.Map.Uniform.prototype._digLine = function(points) {\n\tfor (var i=1;i<points.length;i++) {\n\t\tvar start = points[i-1];\n\t\tvar end = points[i];\n\t\tvar corridor = new ROT.Map.Feature.Corridor(start[0], start[1], end[0], end[1]);\n\t\tcorridor.create(this._digCallback);\n\t\tthis._corridors.push(corridor);\n\t}\n}\n\nROT.Map.Uniform.prototype._digCallback = function(x, y, value) {\n\tthis._map[x][y] = value;\n\tif (value == 0) { this._dug++; }\n}\n\nROT.Map.Uniform.prototype._isWallCallback = function(x, y) {\n\tif (x < 0 || y < 0 || x >= this._width || y >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\nROT.Map.Uniform.prototype._canBeDugCallback = function(x, y) {\n\tif (x < 1 || y < 1 || x+1 >= this._width || y+1 >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\n/**\n * @author hyakugei\n * @class Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.cellWidth=3] Number of cells to create on the horizontal (number of rooms horizontally)\n * @param {int[]} [options.cellHeight=3] Number of cells to create on the vertical (number of rooms vertically) \n * @param {int} [options.roomWidth] Room min and max width - normally set auto-magically via the constructor.\n * @param {int} [options.roomHeight] Room min and max height - normally set auto-magically via the constructor. \n */\nROT.Map.Rogue = function(width, height, options) {\n\tROT.Map.call(this, width, height);\n\t\n\tthis._options = {\n\t\tcellWidth: 3,  // NOTE to self, these could probably work the same as the roomWidth/room Height values\n\t\tcellHeight: 3  //     ie. as an array with min-max values for each direction....\n\t}\n\t\n\tfor (var p in options) { this._options[p] = options[p]; }\n\t\n\t/*\n\tSet the room sizes according to the over-all width of the map, \n\tand the cell sizes. \n\t*/\n\t\n\tif (!this._options.hasOwnProperty(\"roomWidth\")) {\n\t\tthis._options[\"roomWidth\"] = this._calculateRoomSize(this._width, this._options[\"cellWidth\"]);\n\t}\n\tif (!this._options.hasOwnProperty(\"roomHeight\")) {\n\t\tthis._options[\"roomHeight\"] = this._calculateRoomSize(this._height, this._options[\"cellHeight\"]);\n\t}\n\t\n}\n\nROT.Map.Rogue.extend(ROT.Map); \n\n/**\n * @see ROT.Map#create\n */\nROT.Map.Rogue.prototype.create = function(callback) {\n\tthis.map = this._fillMap(1);\n\tthis.rooms = [];\n\tthis.connectedCells = [];\n\t\n\tthis._initRooms();\n\tthis._connectRooms();\n\tthis._connectUnconnectedRooms();\n\tthis._createRandomRoomConnections();\n\tthis._createRooms();\n\tthis._createCorridors();\n\t\n\tif (callback) {\n\t\tfor (var i = 0; i < this._width; i++) {\n\t\t\tfor (var j = 0; j < this._height; j++) {\n\t\t\t\tcallback(i, j, this.map[i][j]);   \n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn this;\n}\n\nROT.Map.Rogue.prototype._calculateRoomSize = function(size, cell) {\n\tvar max = Math.floor((size/cell) * 0.8);\n\tvar min = Math.floor((size/cell) * 0.25);\n\tif (min < 2) min = 2;\n\tif (max < 2) max = 2;\n\treturn [min, max];\n}\n\nROT.Map.Rogue.prototype._initRooms = function () { \n\t// create rooms array. This is the \"grid\" list from the algo.  \n\tfor (var i = 0; i < this._options.cellWidth; i++) {  \n\t\tthis.rooms.push([]);\n\t\tfor(var j = 0; j < this._options.cellHeight; j++) {\n\t\t\tthis.rooms[i].push({\"x\":0, \"y\":0, \"width\":0, \"height\":0, \"connections\":[], \"cellx\":i, \"celly\":j});\n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._connectRooms = function() {\n\t//pick random starting grid\n\tvar cgx = ROT.RNG.getUniformInt(0, this._options.cellWidth-1);\n\tvar cgy = ROT.RNG.getUniformInt(0, this._options.cellHeight-1);\n\t\n\tvar idx;\n\tvar ncgx;\n\tvar ncgy;\n\t\n\tvar found = false;\n\tvar room;\n\tvar otherRoom;\n\t\n\t// find  unconnected neighbour cells\n\tdo {\n\t\n\t\t//var dirToCheck = [0,1,2,3,4,5,6,7];\n\t\tvar dirToCheck = [0,2,4,6];\n\t\tdirToCheck = dirToCheck.randomize();\n\t\t\n\t\tdo {\n\t\t\tfound = false;\n\t\t\tidx = dirToCheck.pop();\n\t\t\t\n\t\t\t\n\t\t\tncgx = cgx + ROT.DIRS[8][idx][0];\n\t\t\tncgy = cgy + ROT.DIRS[8][idx][1];\n\t\t\t\n\t\t\tif(ncgx < 0 || ncgx >= this._options.cellWidth) continue;\n\t\t\tif(ncgy < 0 || ncgy >= this._options.cellHeight) continue;\n\t\t\t\n\t\t\troom = this.rooms[cgx][cgy];\n\t\t\t\n\t\t\tif(room[\"connections\"].length > 0)\n\t\t\t{\n\t\t\t\t// as long as this room doesn't already coonect to me, we are ok with it. \n\t\t\t\tif(room[\"connections\"][0][0] == ncgx &&\n\t\t\t\troom[\"connections\"][0][1] == ncgy)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\totherRoom = this.rooms[ncgx][ncgy];\n\t\t\t\n\t\t\tif (otherRoom[\"connections\"].length == 0) { \n\t\t\t\totherRoom[\"connections\"].push([cgx,cgy]);\n\t\t\t\t\n\t\t\t\tthis.connectedCells.push([ncgx, ncgy]);\n\t\t\t\tcgx = ncgx;\n\t\t\t\tcgy = ncgy;\n\t\t\t\tfound = true;\n\t\t\t}\n\t\t\t\t\t\n\t\t} while (dirToCheck.length > 0 && found == false)\n\t\t\n\t} while (dirToCheck.length > 0)\n\n}\n\nROT.Map.Rogue.prototype._connectUnconnectedRooms = function() {\n\t//While there are unconnected rooms, try to connect them to a random connected neighbor \n\t//(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n\tvar cw = this._options.cellWidth;\n\tvar ch = this._options.cellHeight;\n\t\n\tvar randomConnectedCell;\n\tthis.connectedCells = this.connectedCells.randomize();\n\tvar room;\n\tvar otherRoom;\n\tvar validRoom;\n\t\n\tfor (var i = 0; i < this._options.cellWidth; i++) {\n\t\tfor (var j = 0; j < this._options.cellHeight; j++)  {\n\t\t\t\t\n\t\t\troom = this.rooms[i][j];\n\t\t\t\n\t\t\tif (room[\"connections\"].length == 0) {\n\t\t\t\tvar directions = [0,2,4,6];\n\t\t\t\tdirections = directions.randomize();\n\t\t\t\t\n\t\t\t\tvar validRoom = false;\n\t\t\t\t\n\t\t\t\tdo {\n\t\t\t\t\t\n\t\t\t\t\tvar dirIdx = directions.pop();\n\t\t\t\t\tvar newI = i + ROT.DIRS[8][dirIdx][0];\n\t\t\t\t\tvar newJ = j + ROT.DIRS[8][dirIdx][1];\n\t\t\t\t\t\n\t\t\t\t\tif (newI < 0 || newI >= cw || \n\t\t\t\t\tnewJ < 0 || newJ >= ch) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\totherRoom = this.rooms[newI][newJ];\n\t\t\t\t\t\n\t\t\t\t\tvalidRoom = true;\n\t\t\t\t\t\n\t\t\t\t\tif (otherRoom[\"connections\"].length == 0) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < otherRoom[\"connections\"].length; k++) {\n\t\t\t\t\t\tif(otherRoom[\"connections\"][k][0] == i && \n\t\t\t\t\t\totherRoom[\"connections\"][k][1] == j) {\n\t\t\t\t\t\t\tvalidRoom = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (validRoom) break;\n\t\t\t\t\t\n\t\t\t\t} while (directions.length)\n\t\t\t\t\n\t\t\t\tif(validRoom) { \n\t\t\t\t\troom[\"connections\"].push( [otherRoom[\"cellx\"], otherRoom[\"celly\"]] );  \n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"-- Unable to connect room.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._createRandomRoomConnections = function(connections) {\n\t// Empty for now. \n}\n\n\nROT.Map.Rogue.prototype._createRooms = function() {\n\t// Create Rooms \n\t\n\tvar w = this._width;\n\tvar h = this._height;\n\t\n\tvar cw = this._options.cellWidth;\n\tvar ch = this._options.cellHeight;\n\t\n\tvar cwp = Math.floor(this._width / cw);\n\tvar chp = Math.floor(this._height / ch);\n\t\n\tvar roomw;\n\tvar roomh;\n\tvar roomWidth = this._options[\"roomWidth\"];\n\tvar roomHeight = this._options[\"roomHeight\"];\n\tvar sx;\n\tvar sy;\n\tvar tx;\n\tvar ty;\n\tvar otherRoom;\n\t\n\tfor (var i = 0; i < cw; i++) {\n\t\tfor (var j = 0; j < ch; j++) {\n\t\t\tsx = cwp * i;\n\t\t\tsy = chp * j;\n\t\t\t\n\t\t\tif (sx == 0) sx = 1;\n\t\t\tif (sy == 0) sy = 1;\n\t\t\t\n\t\t\troomw = ROT.RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n\t\t\troomh = ROT.RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n\t\t\t\n\t\t\tif (j > 0) {\n\t\t\t\totherRoom = this.rooms[i][j-1];\n\t\t\t\twhile (sy - (otherRoom[\"y\"] + otherRoom[\"height\"] ) < 3) {\n\t\t\t\t\tsy++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (i > 0) {\n\t\t\t\totherRoom = this.rooms[i-1][j];\n\t\t\t\twhile(sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n\t\t\t\t\tsx++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar sxOffset = Math.round(ROT.RNG.getUniformInt(0, cwp-roomw)/2);\n\t\t\tvar syOffset = Math.round(ROT.RNG.getUniformInt(0, chp-roomh)/2);\n\t\t\t\n\t\t\twhile (sx + sxOffset + roomw >= w) {\n\t\t\t\tif(sxOffset) {\n\t\t\t\t\tsxOffset--;\n\t\t\t\t} else {\n\t\t\t\t\troomw--; \n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\twhile (sy + syOffset + roomh >= h) { \n\t\t\t\tif(syOffset) {\n\t\t\t\t\tsyOffset--;\n\t\t\t\t} else {\n\t\t\t\t\troomh--; \n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tsx = sx + sxOffset;\n\t\t\tsy = sy + syOffset;\n\t\t\t\n\t\t\tthis.rooms[i][j][\"x\"] = sx;\n\t\t\tthis.rooms[i][j][\"y\"] = sy;\n\t\t\tthis.rooms[i][j][\"width\"] = roomw;\n\t\t\tthis.rooms[i][j][\"height\"] = roomh;  \n\t\t\t\n\t\t\tfor (var ii = sx; ii < sx + roomw; ii++) {\n\t\t\t\tfor (var jj = sy; jj < sy + roomh; jj++) {\n\t\t\t\t\tthis.map[ii][jj] = 0;\n\t\t\t\t}\n\t\t\t}  \n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._getWallPosition = function(aRoom, aDirection) {\n\tvar rx;\n\tvar ry;\n\tvar door;\n\t\n\tif (aDirection == 1 || aDirection == 3) {\n\t\trx = ROT.RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n\t\tif (aDirection == 1) {\n\t\t\try = aRoom[\"y\"] - 2;\n\t\t\tdoor = ry + 1;\n\t\t} else {\n\t\t\try = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n\t\t\tdoor = ry -1;\n\t\t}\n\t\t\n\t\tthis.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space. \n\t\t\n\t} else if (aDirection == 2 || aDirection == 4) {\n\t\try = ROT.RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n\t\tif(aDirection == 2) {\n\t\t\trx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n\t\t\tdoor = rx - 1;\n\t\t} else {\n\t\t\trx = aRoom[\"x\"] - 2;\n\t\t\tdoor = rx + 1;\n\t\t}\n\t\t\n\t\tthis.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space. \n\t\t\n\t}\n\treturn [rx, ry];\n}\n\n/***\n* @param startPosition a 2 element array\n* @param endPosition a 2 element array\n*/\nROT.Map.Rogue.prototype._drawCorridore = function (startPosition, endPosition) {\n\tvar xOffset = endPosition[0] - startPosition[0];\n\tvar yOffset = endPosition[1] - startPosition[1];\n\t\n\tvar xpos = startPosition[0];\n\tvar ypos = startPosition[1];\n\t\n\tvar tempDist;\n\tvar xDir;\n\tvar yDir;\n\t\n\tvar move; // 2 element array, element 0 is the direction, element 1 is the total value to move. \n\tvar moves = []; // a list of 2 element arrays\n\t\n\tvar xAbs = Math.abs(xOffset);\n\tvar yAbs = Math.abs(yOffset);\n\t\n\tvar percent = ROT.RNG.getUniform(); // used to split the move at different places along the long axis\n\tvar firstHalf = percent;\n\tvar secondHalf = 1 - percent;\n\t\n\txDir = xOffset > 0 ? 2 : 6;\n\tyDir = yOffset > 0 ? 4 : 0;\n\t\n\tif (xAbs < yAbs) {\n\t\t// move firstHalf of the y offset\n\t\ttempDist = Math.ceil(yAbs * firstHalf);\n\t\tmoves.push([yDir, tempDist]);\n\t\t// move all the x offset\n\t\tmoves.push([xDir, xAbs]);\n\t\t// move sendHalf of the  y offset\n\t\ttempDist = Math.floor(yAbs * secondHalf);\n\t\tmoves.push([yDir, tempDist]);\n\t} else {\n\t\t//  move firstHalf of the x offset\n\t\ttempDist = Math.ceil(xAbs * firstHalf);\n\t\tmoves.push([xDir, tempDist]);\n\t\t// move all the y offset\n\t\tmoves.push([yDir, yAbs]);\n\t\t// move secondHalf of the x offset.\n\t\ttempDist = Math.floor(xAbs * secondHalf);\n\t\tmoves.push([xDir, tempDist]);  \n\t}\n\t\n\tthis.map[xpos][ypos] = 0;\n\t\n\twhile (moves.length > 0) {\n\t\tmove = moves.pop();\n\t\twhile (move[1] > 0) {\n\t\t\txpos += ROT.DIRS[8][move[0]][0];\n\t\t\typos += ROT.DIRS[8][move[0]][1];\n\t\t\tthis.map[xpos][ypos] = 0;\n\t\t\tmove[1] = move[1] - 1;\n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._createCorridors = function () {\n\t// Draw Corridors between connected rooms\n\t\n\tvar cw = this._options.cellWidth;\n\tvar ch = this._options.cellHeight;\n\tvar room;\n\tvar connection;\n\tvar otherRoom;\n\tvar wall;\n\tvar otherWall;\n\t\n\tfor (var i = 0; i < cw; i++) {\n\t\tfor (var j = 0; j < ch; j++) {\n\t\t\troom = this.rooms[i][j];\n\t\t\t\n\t\t\tfor (var k = 0; k < room[\"connections\"].length; k++) {\n\t\t\t\t\t\n\t\t\t\tconnection = room[\"connections\"][k]; \n\t\t\t\t\n\t\t\t\totherRoom = this.rooms[connection[0]][connection[1]];\n\t\t\t\t\n\t\t\t\t// figure out what wall our corridor will start one.\n\t\t\t\t// figure out what wall our corridor will end on. \n\t\t\t\tif (otherRoom[\"cellx\"] > room[\"cellx\"] ) {\n\t\t\t\t\twall = 2;\n\t\t\t\t\totherWall = 4;\n\t\t\t\t} else if (otherRoom[\"cellx\"] < room[\"cellx\"] ) {\n\t\t\t\t\twall = 4;\n\t\t\t\t\totherWall = 2;\n\t\t\t\t} else if(otherRoom[\"celly\"] > room[\"celly\"]) {\n\t\t\t\t\twall = 3;\n\t\t\t\t\totherWall = 1;\n\t\t\t\t} else if(otherRoom[\"celly\"] < room[\"celly\"]) {\n\t\t\t\t\twall = 1;\n\t\t\t\t\totherWall = 3;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis._drawCorridore(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n\t\t\t}\n\t\t}\n\t}\n}\n/**\n * @class Dungeon feature; has own .create() method\n */\nROT.Map.Feature = function() {}\nROT.Map.Feature.prototype.isValid = function(canBeDugCallback) {}\nROT.Map.Feature.prototype.create = function(digCallback) {}\nROT.Map.Feature.prototype.debug = function() {}\nROT.Map.Feature.createRandomAt = function(x, y, dx, dy, options) {}\n\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nROT.Map.Feature.Room = function(x1, y1, x2, y2, doorX, doorY) {\n\tthis._x1 = x1;\n\tthis._y1 = y1;\n\tthis._x2 = x2;\n\tthis._y2 = y2;\n\tthis._doors = {};\n\tif (arguments.length > 4) { this.addDoor(doorX, doorY); }\n}\nROT.Map.Feature.Room.extend(ROT.Map.Feature);\n\n/**\n * Room of random size, with a given doors and direction\n */\nROT.Map.Feature.Room.createRandomAt = function(x, y, dx, dy, options) {\n\tvar min = options.roomWidth[0];\n\tvar max = options.roomWidth[1];\n\tvar width = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar min = options.roomHeight[0];\n\tvar max = options.roomHeight[1];\n\tvar height = ROT.RNG.getUniformInt(min, max);\n\t\n\tif (dx == 1) { /* to the right */\n\t\tvar y2 = y - Math.floor(ROT.RNG.getUniform() * height);\n\t\treturn new this(x+1, y2, x+width, y2+height-1, x, y);\n\t}\n\t\n\tif (dx == -1) { /* to the left */\n\t\tvar y2 = y - Math.floor(ROT.RNG.getUniform() * height);\n\t\treturn new this(x-width, y2, x-1, y2+height-1, x, y);\n\t}\n\n\tif (dy == 1) { /* to the bottom */\n\t\tvar x2 = x - Math.floor(ROT.RNG.getUniform() * width);\n\t\treturn new this(x2, y+1, x2+width-1, y+height, x, y);\n\t}\n\n\tif (dy == -1) { /* to the top */\n\t\tvar x2 = x - Math.floor(ROT.RNG.getUniform() * width);\n\t\treturn new this(x2, y-height, x2+width-1, y-1, x, y);\n\t}\n\n        throw new Error(\"dx or dy must be 1 or -1\");\n}\n\n/**\n * Room of random size, positioned around center coords\n */\nROT.Map.Feature.Room.createRandomCenter = function(cx, cy, options) {\n\tvar min = options.roomWidth[0];\n\tvar max = options.roomWidth[1];\n\tvar width = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar min = options.roomHeight[0];\n\tvar max = options.roomHeight[1];\n\tvar height = ROT.RNG.getUniformInt(min, max);\n\n\tvar x1 = cx - Math.floor(ROT.RNG.getUniform()*width);\n\tvar y1 = cy - Math.floor(ROT.RNG.getUniform()*height);\n\tvar x2 = x1 + width - 1;\n\tvar y2 = y1 + height - 1;\n\n\treturn new this(x1, y1, x2, y2);\n}\n\n/**\n * Room of random size within a given dimensions\n */\nROT.Map.Feature.Room.createRandom = function(availWidth, availHeight, options) {\n\tvar min = options.roomWidth[0];\n\tvar max = options.roomWidth[1];\n\tvar width = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar min = options.roomHeight[0];\n\tvar max = options.roomHeight[1];\n\tvar height = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar left = availWidth - width - 1;\n\tvar top = availHeight - height - 1;\n\n\tvar x1 = 1 + Math.floor(ROT.RNG.getUniform()*left);\n\tvar y1 = 1 + Math.floor(ROT.RNG.getUniform()*top);\n\tvar x2 = x1 + width - 1;\n\tvar y2 = y1 + height - 1;\n\n\treturn new this(x1, y1, x2, y2);\n}\n\nROT.Map.Feature.Room.prototype.addDoor = function(x, y) {\n\tthis._doors[x+\",\"+y] = 1;\n\treturn this;\n}\n\n/**\n * @param {function}\n */\nROT.Map.Feature.Room.prototype.getDoors = function(callback) {\n\tfor (var key in this._doors) {\n\t\tvar parts = key.split(\",\");\n\t\tcallback(parseInt(parts[0]), parseInt(parts[1]));\n\t}\n\treturn this;\n}\n\nROT.Map.Feature.Room.prototype.clearDoors = function() {\n\tthis._doors = {};\n\treturn this;\n}\n\nROT.Map.Feature.Room.prototype.addDoors = function(isWallCallback) {\n\tvar left = this._x1-1;\n\tvar right = this._x2+1;\n\tvar top = this._y1-1;\n\tvar bottom = this._y2+1;\n\n\tfor (var x=left; x<=right; x++) {\n\t\tfor (var y=top; y<=bottom; y++) {\n\t\t\tif (x != left && x != right && y != top && y != bottom) { continue; }\n\t\t\tif (isWallCallback(x, y)) { continue; }\n\n\t\t\tthis.addDoor(x, y);\n\t\t}\n\t}\n\n\treturn this;\n}\n\nROT.Map.Feature.Room.prototype.debug = function() {\n\tconsole.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n}\n\nROT.Map.Feature.Room.prototype.isValid = function(isWallCallback, canBeDugCallback) { \n\tvar left = this._x1-1;\n\tvar right = this._x2+1;\n\tvar top = this._y1-1;\n\tvar bottom = this._y2+1;\n\t\n\tfor (var x=left; x<=right; x++) {\n\t\tfor (var y=top; y<=bottom; y++) {\n\t\t\tif (x == left || x == right || y == top || y == bottom) {\n\t\t\t\tif (!isWallCallback(x, y)) { return false; }\n\t\t\t} else {\n\t\t\t\tif (!canBeDugCallback(x, y)) { return false; }\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n */\nROT.Map.Feature.Room.prototype.create = function(digCallback) { \n\tvar left = this._x1-1;\n\tvar right = this._x2+1;\n\tvar top = this._y1-1;\n\tvar bottom = this._y2+1;\n\t\n\tvar value = 0;\n\tfor (var x=left; x<=right; x++) {\n\t\tfor (var y=top; y<=bottom; y++) {\n\t\t\tif (x+\",\"+y in this._doors) {\n\t\t\t\tvalue = 2;\n\t\t\t} else if (x == left || x == right || y == top || y == bottom) {\n\t\t\t\tvalue = 1;\n\t\t\t} else {\n\t\t\t\tvalue = 0;\n\t\t\t}\n\t\t\tdigCallback(x, y, value);\n\t\t}\n\t}\n}\n\nROT.Map.Feature.Room.prototype.getCenter = function() {\n\treturn [Math.round((this._x1 + this._x2)/2), Math.round((this._y1 + this._y2)/2)];\n}\n\nROT.Map.Feature.Room.prototype.getLeft = function() {\n\treturn this._x1;\n}\n\nROT.Map.Feature.Room.prototype.getRight = function() {\n\treturn this._x2;\n}\n\nROT.Map.Feature.Room.prototype.getTop = function() {\n\treturn this._y1;\n}\n\nROT.Map.Feature.Room.prototype.getBottom = function() {\n\treturn this._y2;\n}\n\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nROT.Map.Feature.Corridor = function(startX, startY, endX, endY) {\n\tthis._startX = startX;\n\tthis._startY = startY;\n\tthis._endX = endX; \n\tthis._endY = endY;\n\tthis._endsWithAWall = true;\n}\nROT.Map.Feature.Corridor.extend(ROT.Map.Feature);\n\nROT.Map.Feature.Corridor.createRandomAt = function(x, y, dx, dy, options) {\n\tvar min = options.corridorLength[0];\n\tvar max = options.corridorLength[1];\n\tvar length = ROT.RNG.getUniformInt(min, max);\n\t\n\treturn new this(x, y, x + dx*length, y + dy*length);\n}\n\nROT.Map.Feature.Corridor.prototype.debug = function() {\n\tconsole.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n}\n\nROT.Map.Feature.Corridor.prototype.isValid = function(isWallCallback, canBeDugCallback){ \n\tvar sx = this._startX;\n\tvar sy = this._startY;\n\tvar dx = this._endX-sx;\n\tvar dy = this._endY-sy;\n\tvar length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n\t\n\tif (dx) { dx = dx/Math.abs(dx); }\n\tif (dy) { dy = dy/Math.abs(dy); }\n\tvar nx = dy;\n\tvar ny = -dx;\n\t\n\tvar ok = true;\n\tfor (var i=0; i<length; i++) {\n\t\tvar x = sx + i*dx;\n\t\tvar y = sy + i*dy;\n\n\t\tif (!canBeDugCallback(     x,      y)) { ok = false; }\n\t\tif (!isWallCallback  (x + nx, y + ny)) { ok = false; }\n\t\tif (!isWallCallback  (x - nx, y - ny)) { ok = false; }\n\t\t\n\t\tif (!ok) {\n\t\t\tlength = i;\n\t\t\tthis._endX = x-dx;\n\t\t\tthis._endY = y-dy;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\t/**\n\t * If the length degenerated, this corridor might be invalid\n\t */\n\t \n\t/* not supported */\n\tif (length == 0) { return false; } \n\t\n\t /* length 1 allowed only if the next space is empty */\n\tif (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) { return false; }\n\t\n\t/**\n\t * We do not want the corridor to crash into a corner of a room;\n\t * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n\t * \n\t * Situation:\n\t * #######1\n\t * .......?\n\t * #######2\n\t * \n\t * The corridor was dug from left to right.\n\t * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n\t */\n\tvar firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n\tvar secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n\tthis._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n\tif ((firstCornerBad || secondCornerBad) && this._endsWithAWall) { return false; }\n\n\treturn true;\n}\n\n/**\n * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n */\nROT.Map.Feature.Corridor.prototype.create = function(digCallback) { \n\tvar sx = this._startX;\n\tvar sy = this._startY;\n\tvar dx = this._endX-sx;\n\tvar dy = this._endY-sy;\n\tvar length = 1+Math.max(Math.abs(dx), Math.abs(dy));\n\t\n\tif (dx) { dx = dx/Math.abs(dx); }\n\tif (dy) { dy = dy/Math.abs(dy); }\n\tvar nx = dy;\n\tvar ny = -dx;\n\t\n\tfor (var i=0; i<length; i++) {\n\t\tvar x = sx + i*dx;\n\t\tvar y = sy + i*dy;\n\t\tdigCallback(x, y, 0);\n\t}\n\t\n\treturn true;\n}\n\nROT.Map.Feature.Corridor.prototype.createPriorityWalls = function(priorityWallCallback) {\n\tif (!this._endsWithAWall) { return; }\n\n\tvar sx = this._startX;\n\tvar sy = this._startY;\n\n\tvar dx = this._endX-sx;\n\tvar dy = this._endY-sy;\n\tif (dx) { dx = dx/Math.abs(dx); }\n\tif (dy) { dy = dy/Math.abs(dy); }\n\tvar nx = dy;\n\tvar ny = -dx;\n\n\tpriorityWallCallback(this._endX + dx, this._endY + dy);\n\tpriorityWallCallback(this._endX + nx, this._endY + ny);\n\tpriorityWallCallback(this._endX - nx, this._endY - ny);\n}\n/**\n * @class Base noise generator\n */\nROT.Noise = function() {\n};\n\nROT.Noise.prototype.get = function(x, y) {}\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\n\n/**\n * @class 2D simplex noise generator\n * @param {int} [gradients=256] Random gradients\n */\nROT.Noise.Simplex = function(gradients) {\n\tROT.Noise.call(this);\n\n\tthis._F2 = 0.5 * (Math.sqrt(3) - 1);\n\tthis._G2 = (3 - Math.sqrt(3)) / 6;\n\n\tthis._gradients = [\n\t\t[ 0, -1],\n\t\t[ 1, -1],\n\t\t[ 1,  0],\n\t\t[ 1,  1],\n\t\t[ 0,  1],\n\t\t[-1,  1],\n\t\t[-1,  0],\n\t\t[-1, -1]\n\t];\n\n\tvar permutations = [];\n\tvar count = gradients || 256;\n\tfor (var i=0;i<count;i++) { permutations.push(i); }\n\tpermutations = permutations.randomize();\n\n\tthis._perms = [];\n\tthis._indexes = [];\n\n\tfor (var i=0;i<2*count;i++) {\n\t\tthis._perms.push(permutations[i % count]);\n\t\tthis._indexes.push(this._perms[i] % this._gradients.length);\n\t}\n\n};\nROT.Noise.Simplex.extend(ROT.Noise);\n\nROT.Noise.Simplex.prototype.get = function(xin, yin) {\n\tvar perms = this._perms;\n\tvar indexes = this._indexes;\n\tvar count = perms.length/2;\n\tvar G2 = this._G2;\n\n\tvar n0 =0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n\n\t// Skew the input space to determine which simplex cell we're in\n\tvar s = (xin + yin) * this._F2; // Hairy factor for 2D\n\tvar i = Math.floor(xin + s);\n\tvar j = Math.floor(yin + s);\n\tvar t = (i + j) * G2;\n\tvar X0 = i - t; // Unskew the cell origin back to (x,y) space\n\tvar Y0 = j - t;\n\tvar x0 = xin - X0; // The x,y distances from the cell origin\n\tvar y0 = yin - Y0;\n\n\t// For the 2D case, the simplex shape is an equilateral triangle.\n\t// Determine which simplex we are in.\n\tvar i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n\tif (x0 > y0) {\n\t\ti1 = 1;\n\t\tj1 = 0;\n\t} else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n\t\ti1 = 0;\n\t\tj1 = 1;\n\t} // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n\n\t// A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n\t// a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n\t// c = (3-sqrt(3))/6\n\tvar x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n\tvar y1 = y0 - j1 + G2;\n\tvar x2 = x0 - 1 + 2*G2; // Offsets for last corner in (x,y) unskewed coords\n\tvar y2 = y0 - 1 + 2*G2;\n\n\t// Work out the hashed gradient indices of the three simplex corners\n\tvar ii = i.mod(count);\n\tvar jj = j.mod(count);\n\n\t// Calculate the contribution from the three corners\n\tvar t0 = 0.5 - x0*x0 - y0*y0;\n\tif (t0 >= 0) {\n\t\tt0 *= t0;\n\t\tgi = indexes[ii+perms[jj]];\n\t\tvar grad = this._gradients[gi];\n\t\tn0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n\t}\n\t\n\tvar t1 = 0.5 - x1*x1 - y1*y1;\n\tif (t1 >= 0) {\n\t\tt1 *= t1;\n\t\tgi = indexes[ii+i1+perms[jj+j1]];\n\t\tvar grad = this._gradients[gi];\n\t\tn1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n\t}\n\t\n\tvar t2 = 0.5 - x2*x2 - y2*y2;\n\tif (t2 >= 0) {\n\t\tt2 *= t2;\n\t\tgi = indexes[ii+1+perms[jj+1]];\n\t\tvar grad = this._gradients[gi];\n\t\tn2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n\t}\n\n\t// Add contributions from each corner to get the final noise value.\n\t// The result is scaled to return values in the interval [-1,1].\n\treturn 70 * (n0 + n1 + n2);\n}\n/**\n * @class Abstract FOV algorithm\n * @param {function} lightPassesCallback Does the light pass through x,y?\n * @param {object} [options]\n * @param {int} [options.topology=8] 4/6/8\n */\nROT.FOV = function(lightPassesCallback, options) {\n\tthis._lightPasses = lightPassesCallback;\n\tthis._options = {\n\t\ttopology: 8\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n};\n\n/**\n * Compute visibility for a 360-degree circle\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {function} callback\n */\nROT.FOV.prototype.compute = function(x, y, R, callback) {}\n\n/**\n * Return all neighbors in a concentric ring\n * @param {int} cx center-x\n * @param {int} cy center-y\n * @param {int} r range\n */\nROT.FOV.prototype._getCircle = function(cx, cy, r) {\n\tvar result = [];\n\tvar dirs, countFactor, startOffset;\n\n\tswitch (this._options.topology) {\n\t\tcase 4:\n\t\t\tcountFactor = 1;\n\t\t\tstartOffset = [0, 1];\n\t\t\tdirs = [\n\t\t\t\tROT.DIRS[8][7],\n\t\t\t\tROT.DIRS[8][1],\n\t\t\t\tROT.DIRS[8][3],\n\t\t\t\tROT.DIRS[8][5]\n\t\t\t]\n\t\tbreak;\n\n\t\tcase 6:\n\t\t\tdirs = ROT.DIRS[6];\n\t\t\tcountFactor = 1;\n\t\t\tstartOffset = [-1, 1];\n\t\tbreak;\n\n\t\tcase 8:\n\t\t\tdirs = ROT.DIRS[4];\n\t\t\tcountFactor = 2;\n\t\t\tstartOffset = [-1, 1];\n\t\tbreak;\n\t}\n\n\t/* starting neighbor */\n\tvar x = cx + startOffset[0]*r;\n\tvar y = cy + startOffset[1]*r;\n\n\t/* circle */\n\tfor (var i=0;i<dirs.length;i++) {\n\t\tfor (var j=0;j<r*countFactor;j++) {\n\t\t\tresult.push([x, y]);\n\t\t\tx += dirs[i][0];\n\t\t\ty += dirs[i][1];\n\n\t\t}\n\t}\n\n\treturn result;\n}\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nROT.FOV.DiscreteShadowcasting = function(lightPassesCallback, options) {\n\tROT.FOV.call(this, lightPassesCallback, options);\n}\nROT.FOV.DiscreteShadowcasting.extend(ROT.FOV);\n\n/**\n * @see ROT.FOV#compute\n */\nROT.FOV.DiscreteShadowcasting.prototype.compute = function(x, y, R, callback) {\n\tvar center = this._coords;\n\tvar map = this._map;\n\n\t/* this place is always visible */\n\tcallback(x, y, 0, 1);\n\n\t/* standing in a dark place. FIXME is this a good idea?  */\n\tif (!this._lightPasses(x, y)) { return; }\n\t\n\t/* start and end angles */\n\tvar DATA = [];\n\t\n\tvar A, B, cx, cy, blocks;\n\n\t/* analyze surrounding cells in concentric rings, starting from the center */\n\tfor (var r=1; r<=R; r++) {\n\t\tvar neighbors = this._getCircle(x, y, r);\n\t\tvar angle = 360 / neighbors.length;\n\n\t\tfor (var i=0;i<neighbors.length;i++) {\n\t\t\tcx = neighbors[i][0];\n\t\t\tcy = neighbors[i][1];\n\t\t\tA = angle * (i - 0.5);\n\t\t\tB = A + angle;\n\t\t\t\n\t\t\tblocks = !this._lightPasses(cx, cy);\n\t\t\tif (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) { callback(cx, cy, r, 1); }\n\t\t\t\n\t\t\tif (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) { return; } /* cutoff? */\n\n\t\t} /* for all cells in this ring */\n\t} /* for all rings */\n}\n\n/**\n * @param {int} A start angle\n * @param {int} B end angle\n * @param {bool} blocks Does current cell block visibility?\n * @param {int[][]} DATA shadowed angle pairs\n */\nROT.FOV.DiscreteShadowcasting.prototype._visibleCoords = function(A, B, blocks, DATA) {\n\tif (A < 0) { \n\t\tvar v1 = arguments.callee(0, B, blocks, DATA);\n\t\tvar v2 = arguments.callee(360+A, 360, blocks, DATA);\n\t\treturn v1 || v2;\n\t}\n\t\n\tvar index = 0;\n\twhile (index < DATA.length && DATA[index] < A) { index++; }\n\t\n\tif (index == DATA.length) { /* completely new shadow */\n\t\tif (blocks) { DATA.push(A, B); } \n\t\treturn true;\n\t}\n\t\n\tvar count = 0;\n\t\n\tif (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n\t\twhile (index < DATA.length && DATA[index] < B) {\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\tif (count == 0) { return false; }\n\t\t\n\t\tif (blocks) { \n\t\t\tif (count % 2) {\n\t\t\t\tDATA.splice(index-count, count, B);\n\t\t\t} else {\n\t\t\t\tDATA.splice(index-count, count);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\n\t} else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n\t\twhile (index < DATA.length && DATA[index] < B) {\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\t/* visible when outside an existing shadow, or when overlapping */\n\t\tif (A == DATA[index-count] && count == 1) { return false; }\n\t\t\n\t\tif (blocks) { \n\t\t\tif (count % 2) {\n\t\t\t\tDATA.splice(index-count, count, A);\n\t\t\t} else {\n\t\t\t\tDATA.splice(index-count, count, A, B);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\treturn true;\n\t}\n}\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nROT.FOV.PreciseShadowcasting = function(lightPassesCallback, options) {\n\tROT.FOV.call(this, lightPassesCallback, options);\n}\nROT.FOV.PreciseShadowcasting.extend(ROT.FOV);\n\n/**\n * @see ROT.FOV#compute\n */\nROT.FOV.PreciseShadowcasting.prototype.compute = function(x, y, R, callback) {\n\t/* this place is always visible */\n\tcallback(x, y, 0, 1);\n\n\t/* standing in a dark place. FIXME is this a good idea?  */\n\tif (!this._lightPasses(x, y)) { return; }\n\t\n\t/* list of all shadows */\n\tvar SHADOWS = [];\n\t\n\tvar cx, cy, blocks, A1, A2, visibility;\n\n\t/* analyze surrounding cells in concentric rings, starting from the center */\n\tfor (var r=1; r<=R; r++) {\n\t\tvar neighbors = this._getCircle(x, y, r);\n\t\tvar neighborCount = neighbors.length;\n\n\t\tfor (var i=0;i<neighborCount;i++) {\n\t\t\tcx = neighbors[i][0];\n\t\t\tcy = neighbors[i][1];\n\t\t\t/* shift half-an-angle backwards to maintain consistency of 0-th cells */\n\t\t\tA1 = [i ? 2*i-1 : 2*neighborCount-1, 2*neighborCount];\n\t\t\tA2 = [2*i+1, 2*neighborCount]; \n\t\t\t\n\t\t\tblocks = !this._lightPasses(cx, cy);\n\t\t\tvisibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n\t\t\tif (visibility) { callback(cx, cy, r, visibility); }\n\n\t\t\tif (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) { return; } /* cutoff? */\n\n\t\t} /* for all cells in this ring */\n\t} /* for all rings */\n}\n\n/**\n * @param {int[2]} A1 arc start\n * @param {int[2]} A2 arc end\n * @param {bool} blocks Does current arc block visibility?\n * @param {int[][]} SHADOWS list of active shadows\n */\nROT.FOV.PreciseShadowcasting.prototype._checkVisibility = function(A1, A2, blocks, SHADOWS) {\n\tif (A1[0] > A2[0]) { /* split into two sub-arcs */\n\t\tvar v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n\t\tvar v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n\t\treturn (v1+v2)/2;\n\t}\n\n\t/* index1: first shadow >= A1 */\n\tvar index1 = 0, edge1 = false;\n\twhile (index1 < SHADOWS.length) {\n\t\tvar old = SHADOWS[index1];\n\t\tvar diff = old[0]*A1[1] - A1[0]*old[1];\n\t\tif (diff >= 0) { /* old >= A1 */\n\t\t\tif (diff == 0 && !(index1 % 2)) { edge1 = true; }\n\t\t\tbreak;\n\t\t}\n\t\tindex1++;\n\t}\n\n\t/* index2: last shadow <= A2 */\n\tvar index2 = SHADOWS.length, edge2 = false;\n\twhile (index2--) {\n\t\tvar old = SHADOWS[index2];\n\t\tvar diff = A2[0]*old[1] - old[0]*A2[1];\n\t\tif (diff >= 0) { /* old <= A2 */\n\t\t\tif (diff == 0 && (index2 % 2)) { edge2 = true; }\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tvar visible = true;\n\tif (index1 == index2 && (edge1 || edge2)) {  /* subset of existing shadow, one of the edges match */\n\t\tvisible = false; \n\t} else if (edge1 && edge2 && index1+1==index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n\t\tvisible = false;\n\t} else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n\t\tvisible = false;\n\t}\n\t\n\tif (!visible) { return 0; } /* fast case: not visible */\n\t\n\tvar visibleLength, P;\n\n\t/* compute the length of visible arc, adjust list of shadows (if blocking) */\n\tvar remove = index2-index1+1;\n\tif (remove % 2) {\n\t\tif (index1 % 2) { /* first edge within existing shadow, second outside */\n\t\t\tvar P = SHADOWS[index1];\n\t\t\tvisibleLength = (A2[0]*P[1] - P[0]*A2[1]) / (P[1] * A2[1]);\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove, A2); }\n\t\t} else { /* second edge within existing shadow, first outside */\n\t\t\tvar P = SHADOWS[index2];\n\t\t\tvisibleLength = (P[0]*A1[1] - A1[0]*P[1]) / (A1[1] * P[1]);\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove, A1); }\n\t\t}\n\t} else {\n\t\tif (index1 % 2) { /* both edges within existing shadows */\n\t\t\tvar P1 = SHADOWS[index1];\n\t\t\tvar P2 = SHADOWS[index2];\n\t\t\tvisibleLength = (P2[0]*P1[1] - P1[0]*P2[1]) / (P1[1] * P2[1]);\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove); }\n\t\t} else { /* both edges outside existing shadows */\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove, A1, A2); }\n\t\t\treturn 1; /* whole arc visible! */\n\t\t}\n\t}\n\n\tvar arcLength = (A2[0]*A1[1] - A1[0]*A2[1]) / (A1[1] * A2[1]);\n\n\treturn visibleLength/arcLength;\n}\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nROT.FOV.RecursiveShadowcasting = function(lightPassesCallback, options) {\n\tROT.FOV.call(this, lightPassesCallback, options);\n}\nROT.FOV.RecursiveShadowcasting.extend(ROT.FOV);\n\n/** Octants used for translating recursive shadowcasting offsets */\nROT.FOV.RecursiveShadowcasting.OCTANTS = [\n\t[-1,  0,  0,  1],\n\t[ 0, -1,  1,  0],\n\t[ 0, -1, -1,  0],\n\t[-1,  0,  0, -1],\n\t[ 1,  0,  0, -1],\n\t[ 0,  1, -1,  0],\n\t[ 0,  1,  1,  0],\n\t[ 1,  0,  0,  1]\n];\n\n/**\n * Compute visibility for a 360-degree circle\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype.compute = function(x, y, R, callback) {\n\t//You can always see your own tile\n\tcallback(x, y, 0, 1);\n\tfor(var i = 0; i < ROT.FOV.RecursiveShadowcasting.OCTANTS.length; i++) {\n\t\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[i], R, callback);\n\t}\n}\n\n/**\n * Compute visibility for a 180-degree arc\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype.compute180 = function(x, y, R, dir, callback) {\n\t//You can always see your own tile\n\tcallback(x, y, 0, 1);\n\tvar previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n\tvar nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n\tvar nextOctant = (dir+ 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[nextPreviousOctant], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[previousOctant], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[dir], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[nextOctant], R, callback);\n}\n\n/**\n * Compute visibility for a 90-degree arc\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype.compute90 = function(x, y, R, dir, callback) {\n\t//You can always see your own tile\n\tcallback(x, y, 0, 1);\n\tvar previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[dir], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[previousOctant], R, callback);\n}\n\n/**\n * Render one octant (45-degree arc) of the viewshed\n * @param {int} x\n * @param {int} y\n * @param {int} octant Octant to be rendered\n * @param {int} R Maximum visibility radius\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype._renderOctant = function(x, y, octant, R, callback) {\n\t//Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n\tthis._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n}\n\n/**\n * Actually calculates the visibility\n * @param {int} startX The starting X coordinate\n * @param {int} startY The starting Y coordinate\n * @param {int} row The row to render\n * @param {float} visSlopeStart The slope to start at\n * @param {float} visSlopeEnd The slope to end at\n * @param {int} radius The radius to reach out to\n * @param {int} xx \n * @param {int} xy \n * @param {int} yx \n * @param {int} yy \n * @param {function} callback The callback to use when we hit a block that is visible\n */\nROT.FOV.RecursiveShadowcasting.prototype._castVisibility = function(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n\tif(visSlopeStart < visSlopeEnd) { return; }\n\tfor(var i = row; i <= radius; i++) {\n\t\tvar dx = -i - 1;\n\t\tvar dy = -i;\n\t\tvar blocked = false;\n\t\tvar newStart = 0;\n\n\t\t//'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n\t\twhile(dx <= 0) {\n\t\t\tdx += 1;\n\n\t\t\t//Translate from relative coordinates to map coordinates\n\t\t\tvar mapX = startX + dx * xx + dy * xy;\n\t\t\tvar mapY = startY + dx * yx + dy * yy;\n\n\t\t\t//Range of the row\n\t\t\tvar slopeStart = (dx - 0.5) / (dy + 0.5);\n\t\t\tvar slopeEnd = (dx + 0.5) / (dy - 0.5);\n\t\t\n\t\t\t//Ignore if not yet at left edge of Octant\n\t\t\tif(slopeEnd > visSlopeStart) { continue; }\n\t\t\t\n\t\t\t//Done if past right edge\n\t\t\tif(slopeStart < visSlopeEnd) { break; }\n\t\t\t\t\n\t\t\t//If it's in range, it's visible\n\t\t\tif((dx * dx + dy * dy) < (radius * radius)) {\n\t\t\t\tcallback(mapX, mapY, i, 1);\n\t\t\t}\n\t\n\t\t\tif(!blocked) {\n\t\t\t\t//If tile is a blocking tile, cast around it\n\t\t\t\tif(!this._lightPasses(mapX, mapY) && i < radius) {\n\t\t\t\t\tblocked = true;\n\t\t\t\t\tthis._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n\t\t\t\t\tnewStart = slopeEnd;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//Keep narrowing if scanning across a block\n\t\t\t\tif(!this._lightPasses(mapX, mapY)) {\n\t\t\t\t\tnewStart = slopeEnd;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\n\t\t\t\t//Block has ended\n\t\t\t\tblocked = false;\n\t\t\t\tvisSlopeStart = newStart;\n\t\t\t}\n\t\t}\n\t\tif(blocked) { break; }\n\t}\n}\n/**\n * @namespace Color operations\n */\nROT.Color = {\n\tfromString: function(str) {\n\t\tvar cached, r;\n\t\tif (str in this._cache) {\n\t\t\tcached = this._cache[str];\n\t\t} else {\n\t\t\tif (str.charAt(0) == \"#\") { /* hex rgb */\n\n\t\t\t\tvar values = str.match(/[0-9a-f]/gi).map(function(x) { return parseInt(x, 16); });\n\t\t\t\tif (values.length == 3) {\n\t\t\t\t\tcached = values.map(function(x) { return x*17; });\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i=0;i<3;i++) {\n\t\t\t\t\t\tvalues[i+1] += 16*values[i];\n\t\t\t\t\t\tvalues.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t\tcached = values;\n\t\t\t\t}\n\n\t\t\t} else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { /* decimal rgb */\n\t\t\t\tcached = r[1].split(/\\s*,\\s*/).map(function(x) { return parseInt(x); });\n\t\t\t} else { /* html name */\n\t\t\t\tcached = [0, 0, 0];\n\t\t\t}\n\n\t\t\tthis._cache[str] = cached;\n\t\t}\n\n\t\treturn cached.slice();\n\t},\n\n\t/**\n\t * Add two or more colors\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tadd: function(color1, color2) {\n\t\tvar result = color1.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tresult[i] += arguments[j][i];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Add two or more colors, MODIFIES FIRST ARGUMENT\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tadd_: function(color1, color2) {\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tcolor1[i] += arguments[j][i];\n\t\t\t}\n\t\t}\n\t\treturn color1;\n\t},\n\n\t/**\n\t * Multiply (mix) two or more colors\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tmultiply: function(color1, color2) {\n\t\tvar result = color1.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tresult[i] *= arguments[j][i] / 255;\n\t\t\t}\n\t\t\tresult[i] = Math.round(result[i]);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tmultiply_: function(color1, color2) {\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tcolor1[i] *= arguments[j][i] / 255;\n\t\t\t}\n\t\t\tcolor1[i] = Math.round(color1[i]);\n\t\t}\n\t\treturn color1;\n\t},\n\n\t/**\n\t * Interpolate (blend) two colors with a given factor\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @param {float} [factor=0.5] 0..1\n\t * @returns {number[]}\n\t */\n\tinterpolate: function(color1, color2, factor) {\n\t\tif (arguments.length < 3) { factor = 0.5; }\n\t\tvar result = color1.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tresult[i] = Math.round(result[i] + factor*(color2[i]-color1[i]));\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Interpolate (blend) two colors with a given factor in HSL mode\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @param {float} [factor=0.5] 0..1\n\t * @returns {number[]}\n\t */\n\tinterpolateHSL: function(color1, color2, factor) {\n\t\tif (arguments.length < 3) { factor = 0.5; }\n\t\tvar hsl1 = this.rgb2hsl(color1);\n\t\tvar hsl2 = this.rgb2hsl(color2);\n\t\tfor (var i=0;i<3;i++) {\n\t\t\thsl1[i] += factor*(hsl2[i]-hsl1[i]);\n\t\t}\n\t\treturn this.hsl2rgb(hsl1);\n\t},\n\n\t/**\n\t * Create a new random color based on this one\n\t * @param {number[]} color\n\t * @param {number[]} diff Set of standard deviations\n\t * @returns {number[]}\n\t */\n\trandomize: function(color, diff) {\n\t\tif (!(diff instanceof Array)) { diff = Math.round(ROT.RNG.getNormal(0, diff)); }\n\t\tvar result = color.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tresult[i] += (diff instanceof Array ? Math.round(ROT.RNG.getNormal(0, diff[i])) : diff);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n\t * @param {number[]} color\n\t * @returns {number[]}\n\t */\n\trgb2hsl: function(color) {\n\t\tvar r = color[0]/255;\n\t\tvar g = color[1]/255;\n\t\tvar b = color[2]/255;\n\n\t\tvar max = Math.max(r, g, b), min = Math.min(r, g, b);\n\t\tvar h, s, l = (max + min) / 2;\n\n\t\tif (max == min) {\n\t\t\th = s = 0; // achromatic\n\t\t} else {\n\t\t\tvar d = max - min;\n\t\t\ts = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n\t\t\tswitch(max) {\n\t\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\n\t\t\t\tcase g: h = (b - r) / d + 2; break;\n\t\t\t\tcase b: h = (r - g) / d + 4; break;\n\t\t\t}\n\t\t\th /= 6;\n\t\t}\n\n\t\treturn [h, s, l];\n\t},\n\n\t/**\n\t * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n\t * @param {number[]} color\n\t * @returns {number[]}\n\t */\n\thsl2rgb: function(color) {\n\t\tvar l = color[2];\n\n\t\tif (color[1] == 0) {\n\t\t\tl = Math.round(l*255);\n\t\t\treturn [l, l, l];\n\t\t} else {\n\t\t\tvar hue2rgb = function(p, q, t) {\n\t\t\t\tif (t < 0) t += 1;\n\t\t\t\tif (t > 1) t -= 1;\n\t\t\t\tif (t < 1/6) return p + (q - p) * 6 * t;\n\t\t\t\tif (t < 1/2) return q;\n\t\t\t\tif (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n\t\t\t\treturn p;\n\t\t\t}\n\n\t\t\tvar s = color[1];\n\t\t\tvar q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n\t\t\tvar p = 2 * l - q;\n\t\t\tvar r = hue2rgb(p, q, color[0] + 1/3);\n\t\t\tvar g = hue2rgb(p, q, color[0]);\n\t\t\tvar b = hue2rgb(p, q, color[0] - 1/3);\n\t\t\treturn [Math.round(r*255), Math.round(g*255), Math.round(b*255)];\n\t\t}\n\t},\n\n\ttoRGB: function(color) {\n\t\treturn \"rgb(\" + this._clamp(color[0]) + \",\" + this._clamp(color[1]) + \",\" + this._clamp(color[2]) + \")\";\n\t},\n\n\ttoHex: function(color) {\n\t\tvar parts = [];\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tparts.push(this._clamp(color[i]).toString(16).lpad(\"0\", 2));\n\t\t}\n\t\treturn \"#\" + parts.join(\"\");\n\t},\n\n\t_clamp: function(num) {\n\t\tif (num < 0) {\n\t\t\treturn 0;\n\t\t} else if (num > 255) {\n\t\t\treturn 255;\n\t\t} else {\n\t\t\treturn num;\n\t\t}\n\t},\n\n\t_cache: {\n\t\t\"black\": [0,0,0],\n\t\t\"navy\": [0,0,128],\n\t\t\"darkblue\": [0,0,139],\n\t\t\"mediumblue\": [0,0,205],\n\t\t\"blue\": [0,0,255],\n\t\t\"darkgreen\": [0,100,0],\n\t\t\"green\": [0,128,0],\n\t\t\"teal\": [0,128,128],\n\t\t\"darkcyan\": [0,139,139],\n\t\t\"deepskyblue\": [0,191,255],\n\t\t\"darkturquoise\": [0,206,209],\n\t\t\"mediumspringgreen\": [0,250,154],\n\t\t\"lime\": [0,255,0],\n\t\t\"springgreen\": [0,255,127],\n\t\t\"aqua\": [0,255,255],\n\t\t\"cyan\": [0,255,255],\n\t\t\"midnightblue\": [25,25,112],\n\t\t\"dodgerblue\": [30,144,255],\n\t\t\"forestgreen\": [34,139,34],\n\t\t\"seagreen\": [46,139,87],\n\t\t\"darkslategray\": [47,79,79],\n\t\t\"darkslategrey\": [47,79,79],\n\t\t\"limegreen\": [50,205,50],\n\t\t\"mediumseagreen\": [60,179,113],\n\t\t\"turquoise\": [64,224,208],\n\t\t\"royalblue\": [65,105,225],\n\t\t\"steelblue\": [70,130,180],\n\t\t\"darkslateblue\": [72,61,139],\n\t\t\"mediumturquoise\": [72,209,204],\n\t\t\"indigo\": [75,0,130],\n\t\t\"darkolivegreen\": [85,107,47],\n\t\t\"cadetblue\": [95,158,160],\n\t\t\"cornflowerblue\": [100,149,237],\n\t\t\"mediumaquamarine\": [102,205,170],\n\t\t\"dimgray\": [105,105,105],\n\t\t\"dimgrey\": [105,105,105],\n\t\t\"slateblue\": [106,90,205],\n\t\t\"olivedrab\": [107,142,35],\n\t\t\"slategray\": [112,128,144],\n\t\t\"slategrey\": [112,128,144],\n\t\t\"lightslategray\": [119,136,153],\n\t\t\"lightslategrey\": [119,136,153],\n\t\t\"mediumslateblue\": [123,104,238],\n\t\t\"lawngreen\": [124,252,0],\n\t\t\"chartreuse\": [127,255,0],\n\t\t\"aquamarine\": [127,255,212],\n\t\t\"maroon\": [128,0,0],\n\t\t\"purple\": [128,0,128],\n\t\t\"olive\": [128,128,0],\n\t\t\"gray\": [128,128,128],\n\t\t\"grey\": [128,128,128],\n\t\t\"skyblue\": [135,206,235],\n\t\t\"lightskyblue\": [135,206,250],\n\t\t\"blueviolet\": [138,43,226],\n\t\t\"darkred\": [139,0,0],\n\t\t\"darkmagenta\": [139,0,139],\n\t\t\"saddlebrown\": [139,69,19],\n\t\t\"darkseagreen\": [143,188,143],\n\t\t\"lightgreen\": [144,238,144],\n\t\t\"mediumpurple\": [147,112,216],\n\t\t\"darkviolet\": [148,0,211],\n\t\t\"palegreen\": [152,251,152],\n\t\t\"darkorchid\": [153,50,204],\n\t\t\"yellowgreen\": [154,205,50],\n\t\t\"sienna\": [160,82,45],\n\t\t\"brown\": [165,42,42],\n\t\t\"darkgray\": [169,169,169],\n\t\t\"darkgrey\": [169,169,169],\n\t\t\"lightblue\": [173,216,230],\n\t\t\"greenyellow\": [173,255,47],\n\t\t\"paleturquoise\": [175,238,238],\n\t\t\"lightsteelblue\": [176,196,222],\n\t\t\"powderblue\": [176,224,230],\n\t\t\"firebrick\": [178,34,34],\n\t\t\"darkgoldenrod\": [184,134,11],\n\t\t\"mediumorchid\": [186,85,211],\n\t\t\"rosybrown\": [188,143,143],\n\t\t\"darkkhaki\": [189,183,107],\n\t\t\"silver\": [192,192,192],\n\t\t\"mediumvioletred\": [199,21,133],\n\t\t\"indianred\": [205,92,92],\n\t\t\"peru\": [205,133,63],\n\t\t\"chocolate\": [210,105,30],\n\t\t\"tan\": [210,180,140],\n\t\t\"lightgray\": [211,211,211],\n\t\t\"lightgrey\": [211,211,211],\n\t\t\"palevioletred\": [216,112,147],\n\t\t\"thistle\": [216,191,216],\n\t\t\"orchid\": [218,112,214],\n\t\t\"goldenrod\": [218,165,32],\n\t\t\"crimson\": [220,20,60],\n\t\t\"gainsboro\": [220,220,220],\n\t\t\"plum\": [221,160,221],\n\t\t\"burlywood\": [222,184,135],\n\t\t\"lightcyan\": [224,255,255],\n\t\t\"lavender\": [230,230,250],\n\t\t\"darksalmon\": [233,150,122],\n\t\t\"violet\": [238,130,238],\n\t\t\"palegoldenrod\": [238,232,170],\n\t\t\"lightcoral\": [240,128,128],\n\t\t\"khaki\": [240,230,140],\n\t\t\"aliceblue\": [240,248,255],\n\t\t\"honeydew\": [240,255,240],\n\t\t\"azure\": [240,255,255],\n\t\t\"sandybrown\": [244,164,96],\n\t\t\"wheat\": [245,222,179],\n\t\t\"beige\": [245,245,220],\n\t\t\"whitesmoke\": [245,245,245],\n\t\t\"mintcream\": [245,255,250],\n\t\t\"ghostwhite\": [248,248,255],\n\t\t\"salmon\": [250,128,114],\n\t\t\"antiquewhite\": [250,235,215],\n\t\t\"linen\": [250,240,230],\n\t\t\"lightgoldenrodyellow\": [250,250,210],\n\t\t\"oldlace\": [253,245,230],\n\t\t\"red\": [255,0,0],\n\t\t\"fuchsia\": [255,0,255],\n\t\t\"magenta\": [255,0,255],\n\t\t\"deeppink\": [255,20,147],\n\t\t\"orangered\": [255,69,0],\n\t\t\"tomato\": [255,99,71],\n\t\t\"hotpink\": [255,105,180],\n\t\t\"coral\": [255,127,80],\n\t\t\"darkorange\": [255,140,0],\n\t\t\"lightsalmon\": [255,160,122],\n\t\t\"orange\": [255,165,0],\n\t\t\"lightpink\": [255,182,193],\n\t\t\"pink\": [255,192,203],\n\t\t\"gold\": [255,215,0],\n\t\t\"peachpuff\": [255,218,185],\n\t\t\"navajowhite\": [255,222,173],\n\t\t\"moccasin\": [255,228,181],\n\t\t\"bisque\": [255,228,196],\n\t\t\"mistyrose\": [255,228,225],\n\t\t\"blanchedalmond\": [255,235,205],\n\t\t\"papayawhip\": [255,239,213],\n\t\t\"lavenderblush\": [255,240,245],\n\t\t\"seashell\": [255,245,238],\n\t\t\"cornsilk\": [255,248,220],\n\t\t\"lemonchiffon\": [255,250,205],\n\t\t\"floralwhite\": [255,250,240],\n\t\t\"snow\": [255,250,250],\n\t\t\"yellow\": [255,255,0],\n\t\t\"lightyellow\": [255,255,224],\n\t\t\"ivory\": [255,255,240],\n\t\t\"white\": [255,255,255]\n\t}\n}\n/**\n * @class Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n * @param {function} reflectivityCallback Callback to retrieve cell reflectivity (0..1)\n * @param {object} [options]\n * @param {int} [options.passes=1] Number of passes. 1 equals to simple FOV of all light sources, >1 means a *highly simplified* radiosity-like algorithm.\n * @param {int} [options.emissionThreshold=100] Cells with emissivity > threshold will be treated as light source in the next pass.\n * @param {int} [options.range=10] Max light range\n */\nROT.Lighting = function(reflectivityCallback, options) {\n\tthis._reflectivityCallback = reflectivityCallback;\n\tthis._options = {\n\t\tpasses: 1,\n\t\temissionThreshold: 100,\n\t\trange: 10\n\t};\n\tthis._fov = null;\n\n\tthis._lights = {};\n\tthis._reflectivityCache = {};\n\tthis._fovCache = {};\n\n\tthis.setOptions(options);\n}\n\n/**\n * Adjust options at runtime\n * @see ROT.Lighting\n * @param {object} [options]\n */\nROT.Lighting.prototype.setOptions = function(options) {\n\tfor (var p in options) { this._options[p] = options[p]; }\n\tif (options && options.range) { this.reset(); }\n\treturn this;\n}\n\n/**\n * Set the used Field-Of-View algo\n * @param {ROT.FOV} fov\n */\nROT.Lighting.prototype.setFOV = function(fov) {\n\tthis._fov = fov;\n\tthis._fovCache = {};\n\treturn this;\n}\n\n/**\n * Set (or remove) a light source\n * @param {int} x\n * @param {int} y\n * @param {null || string || number[3]} color\n */\nROT.Lighting.prototype.setLight = function(x, y, color) {\n\tvar key = x+\",\"+y;\n\n\tif (color) {\n\t\tthis._lights[key] = (typeof(color) == \"string\" ? ROT.Color.fromString(color) : color);\n\t} else {\n\t\tdelete this._lights[key];\n\t}\n\treturn this;\n}\n\n/**\n * Remove all light sources\n */\nROT.Lighting.prototype.clearLights = function() {\n    this._lights = {};\n}\n\n/**\n * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n */\nROT.Lighting.prototype.reset = function() {\n\tthis._reflectivityCache = {};\n\tthis._fovCache = {};\n\n\treturn this;\n}\n\n/**\n * Compute the lighting\n * @param {function} lightingCallback Will be called with (x, y, color) for every lit cell\n */\nROT.Lighting.prototype.compute = function(lightingCallback) {\n\tvar doneCells = {};\n\tvar emittingCells = {};\n\tvar litCells = {};\n\n\tfor (var key in this._lights) { /* prepare emitters for first pass */\n\t\tvar light = this._lights[key];\n\t\temittingCells[key] = [0, 0, 0];\n\t\tROT.Color.add_(emittingCells[key], light);\n\t}\n\n\tfor (var i=0;i<this._options.passes;i++) { /* main loop */\n\t\tthis._emitLight(emittingCells, litCells, doneCells);\n\t\tif (i+1 == this._options.passes) { continue; } /* not for the last pass */\n\t\temittingCells = this._computeEmitters(litCells, doneCells);\n\t}\n\n\tfor (var litKey in litCells) { /* let the user know what and how is lit */\n\t\tvar parts = litKey.split(\",\");\n\t\tvar x = parseInt(parts[0]);\n\t\tvar y = parseInt(parts[1]);\n\t\tlightingCallback(x, y, litCells[litKey]);\n\t}\n\n\treturn this;\n}\n\n/**\n * Compute one iteration from all emitting cells\n * @param {object} emittingCells These emit light\n * @param {object} litCells Add projected light to these\n * @param {object} doneCells These already emitted, forbid them from further calculations\n */\nROT.Lighting.prototype._emitLight = function(emittingCells, litCells, doneCells) {\n\tfor (var key in emittingCells) {\n\t\tvar parts = key.split(\",\");\n\t\tvar x = parseInt(parts[0]);\n\t\tvar y = parseInt(parts[1]);\n\t\tthis._emitLightFromCell(x, y, emittingCells[key], litCells);\n\t\tdoneCells[key] = 1;\n\t}\n\treturn this;\n}\n\n/**\n * Prepare a list of emitters for next pass\n * @param {object} litCells\n * @param {object} doneCells\n * @returns {object}\n */\nROT.Lighting.prototype._computeEmitters = function(litCells, doneCells) {\n\tvar result = {};\n\n\tfor (var key in litCells) {\n\t\tif (key in doneCells) { continue; } /* already emitted */\n\n\t\tvar color = litCells[key];\n\n\t\tif (key in this._reflectivityCache) {\n\t\t\tvar reflectivity = this._reflectivityCache[key];\n\t\t} else {\n\t\t\tvar parts = key.split(\",\");\n\t\t\tvar x = parseInt(parts[0]);\n\t\t\tvar y = parseInt(parts[1]);\n\t\t\tvar reflectivity = this._reflectivityCallback(x, y);\n\t\t\tthis._reflectivityCache[key] = reflectivity;\n\t\t}\n\n\t\tif (reflectivity == 0) { continue; } /* will not reflect at all */\n\n\t\t/* compute emission color */\n\t\tvar emission = [];\n\t\tvar intensity = 0;\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tvar part = Math.round(color[i]*reflectivity);\n\t\t\temission[i] = part;\n\t\t\tintensity += part;\n\t\t}\n\t\tif (intensity > this._options.emissionThreshold) { result[key] = emission; }\n\t}\n\n\treturn result;\n}\n\n/**\n * Compute one iteration from one cell\n * @param {int} x\n * @param {int} y\n * @param {number[]} color\n * @param {object} litCells Cell data to by updated\n */\nROT.Lighting.prototype._emitLightFromCell = function(x, y, color, litCells) {\n\tvar key = x+\",\"+y;\n\tif (key in this._fovCache) {\n\t\tvar fov = this._fovCache[key];\n\t} else {\n\t\tvar fov = this._updateFOV(x, y);\n\t}\n\n\tfor (var fovKey in fov) {\n\t\tvar formFactor = fov[fovKey];\n\n\t\tif (fovKey in litCells) { /* already lit */\n\t\t\tvar result = litCells[fovKey];\n\t\t} else { /* newly lit */\n\t\t\tvar result = [0, 0, 0];\n\t\t\tlitCells[fovKey] = result;\n\t\t}\n\n\t\tfor (var i=0;i<3;i++) { result[i] += Math.round(color[i]*formFactor); } /* add light color */\n\t}\n\n\treturn this;\n}\n\n/**\n * Compute FOV (\"form factor\") for a potential light source at [x,y]\n * @param {int} x\n * @param {int} y\n * @returns {object}\n */\nROT.Lighting.prototype._updateFOV = function(x, y) {\n\tvar key1 = x+\",\"+y;\n\tvar cache = {};\n\tthis._fovCache[key1] = cache;\n\tvar range = this._options.range;\n\tvar cb = function(x, y, r, vis) {\n\t\tvar key2 = x+\",\"+y;\n\t\tvar formFactor = vis * (1-r/range);\n\t\tif (formFactor == 0) { return; }\n\t\tcache[key2] = formFactor;\n\t}\n\tthis._fov.compute(x, y, range, cb.bind(this));\n\n\treturn cache;\n}\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nROT.Path = function(toX, toY, passableCallback, options) {\n\tthis._toX = toX;\n\tthis._toY = toY;\n\tthis._fromX = null;\n\tthis._fromY = null;\n\tthis._passableCallback = passableCallback;\n\tthis._options = {\n\t\ttopology: 8\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\n\tthis._dirs = ROT.DIRS[this._options.topology];\n\tif (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n\t\tthis._dirs = [\n\t\t\tthis._dirs[0],\n\t\t\tthis._dirs[2],\n\t\t\tthis._dirs[4],\n\t\t\tthis._dirs[6],\n\t\t\tthis._dirs[1],\n\t\t\tthis._dirs[3],\n\t\t\tthis._dirs[5],\n\t\t\tthis._dirs[7]\n\t\t]\n\t}\n}\n\n/**\n * Compute a path from a given point\n * @param {int} fromX\n * @param {int} fromY\n * @param {function} callback Will be called for every path item with arguments \"x\" and \"y\"\n */\nROT.Path.prototype.compute = function(fromX, fromY, callback) {\n}\n\nROT.Path.prototype._getNeighbors = function(cx, cy) {\n\tvar result = [];\n\tfor (var i=0;i<this._dirs.length;i++) {\n\t\tvar dir = this._dirs[i];\n\t\tvar x = cx + dir[0];\n\t\tvar y = cy + dir[1];\n\t\t\n\t\tif (!this._passableCallback(x, y)) { continue; }\n\t\tresult.push([x, y]);\n\t}\n\t\n\treturn result;\n}\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nROT.Path.Dijkstra = function(toX, toY, passableCallback, options) {\n\tROT.Path.call(this, toX, toY, passableCallback, options);\n\n\tthis._computed = {};\n\tthis._todo = [];\n\tthis._add(toX, toY, null);\n}\nROT.Path.Dijkstra.extend(ROT.Path);\n\n/**\n * Compute a path from a given point\n * @see ROT.Path#compute\n */\nROT.Path.Dijkstra.prototype.compute = function(fromX, fromY, callback) {\n\tvar key = fromX+\",\"+fromY;\n\tif (!(key in this._computed)) { this._compute(fromX, fromY); }\n\tif (!(key in this._computed)) { return; }\n\t\n\tvar item = this._computed[key];\n\twhile (item) {\n\t\tcallback(item.x, item.y);\n\t\titem = item.prev;\n\t}\n}\n\n/**\n * Compute a non-cached value\n */\nROT.Path.Dijkstra.prototype._compute = function(fromX, fromY) {\n\twhile (this._todo.length) {\n\t\tvar item = this._todo.shift();\n\t\tif (item.x == fromX && item.y == fromY) { return; }\n\t\t\n\t\tvar neighbors = this._getNeighbors(item.x, item.y);\n\t\t\n\t\tfor (var i=0;i<neighbors.length;i++) {\n\t\t\tvar neighbor = neighbors[i];\n\t\t\tvar x = neighbor[0];\n\t\t\tvar y = neighbor[1];\n\t\t\tvar id = x+\",\"+y;\n\t\t\tif (id in this._computed) { continue; } /* already done */\t\n\t\t\tthis._add(x, y, item); \n\t\t}\n\t}\n}\n\nROT.Path.Dijkstra.prototype._add = function(x, y, prev) {\n\tvar obj = {\n\t\tx: x,\n\t\ty: y,\n\t\tprev: prev\n\t}\n\tthis._computed[x+\",\"+y] = obj;\n\tthis._todo.push(obj);\n}\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nROT.Path.AStar = function(toX, toY, passableCallback, options) {\n\tROT.Path.call(this, toX, toY, passableCallback, options);\n\n\tthis._todo = [];\n\tthis._done = {};\n\tthis._fromX = null;\n\tthis._fromY = null;\n}\nROT.Path.AStar.extend(ROT.Path);\n\n/**\n * Compute a path from a given point\n * @see ROT.Path#compute\n */\nROT.Path.AStar.prototype.compute = function(fromX, fromY, callback) {\n\tthis._todo = [];\n\tthis._done = {};\n\tthis._fromX = fromX;\n\tthis._fromY = fromY;\n\tthis._add(this._toX, this._toY, null);\n\n\twhile (this._todo.length) {\n\t\tvar item = this._todo.shift();\n\t\tif (item.x == fromX && item.y == fromY) { break; }\n\t\tvar neighbors = this._getNeighbors(item.x, item.y);\n\n\t\tfor (var i=0;i<neighbors.length;i++) {\n\t\t\tvar neighbor = neighbors[i];\n\t\t\tvar x = neighbor[0];\n\t\t\tvar y = neighbor[1];\n\t\t\tvar id = x+\",\"+y;\n\t\t\tif (id in this._done) { continue; }\n\t\t\tthis._add(x, y, item); \n\t\t}\n\t}\n\t\n\tvar item = this._done[fromX+\",\"+fromY];\n\tif (!item) { return; }\n\t\n\twhile (item) {\n\t\tcallback(item.x, item.y);\n\t\titem = item.prev;\n\t}\n}\n\nROT.Path.AStar.prototype._add = function(x, y, prev) {\n\tvar obj = {\n\t\tx: x,\n\t\ty: y,\n\t\tprev: prev,\n\t\tg: (prev ? prev.g+1 : 0),\n\t\th: this._distance(x, y)\n\t}\n\tthis._done[x+\",\"+y] = obj;\n\t\n\t/* insert into priority queue */\n\t\n\tvar f = obj.g + obj.h;\n\tfor (var i=0;i<this._todo.length;i++) {\n\t\tvar item = this._todo[i];\n\t\tif (f < item.g + item.h) {\n\t\t\tthis._todo.splice(i, 0, obj);\n\t\t\treturn;\n\t\t}\n\t}\n\t\n\tthis._todo.push(obj);\n}\n\nROT.Path.AStar.prototype._distance = function(x, y) {\n\tswitch (this._options.topology) {\n\t\tcase 4:\n\t\t\treturn (Math.abs(x-this._fromX) + Math.abs(y-this._fromY));\n\t\tbreak;\n\n\t\tcase 6:\n\t\t\tvar dx = Math.abs(x - this._fromX);\n\t\t\tvar dy = Math.abs(y - this._fromY);\n\t\t\treturn dy + Math.max(0, (dx-dy)/2);\n\t\tbreak;\n\n\t\tcase 8: \n\t\t\treturn Math.max(Math.abs(x-this._fromX), Math.abs(y-this._fromY));\n\t\tbreak;\n\t}\n\n        throw new Error(\"Illegal topology\");\n}\n/**\n * @class Terminal backend\n * @private\n */\nROT.Display.Term = function(context) {\n\tROT.Display.Backend.call(this, context);\n\tthis._cx = -1;\n\tthis._cy = -1;\n\tthis._lastColor = \"\";\n\tthis._options = {};\n\tthis._ox = 0;\n\tthis._oy = 0;\n\tthis._termcolor = {};\n}\nROT.Display.Term.extend(ROT.Display.Backend);\n\nROT.Display.Term.prototype.compute = function(options) {\n\tthis._options = options;\n\tthis._ox = Math.floor((process.stdout.columns - options.width) / 2);\n\tthis._oy = Math.floor((process.stdout.rows - options.height) / 2);\n\tthis._termcolor = new ROT.Display.Term[options.termColor.capitalize()](this._context);\n\tthis._context._termcolor = this._termcolor;\n}\n\nROT.Display.Term.prototype.draw = function(data, clearBefore) {\n\t// determine where to draw what with what colors\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\t// determine if we need to move the terminal cursor\n\tvar dx = this._ox + x;\n\tvar dy = this._oy + y;\n\tif (dx < 0 || dx >= process.stdout.columns) { return; }\n\tif (dy < 0 || dy >= process.stdout.rows) { return; }\n\tif (dx !== this._cx || dy !== this._cy) {\n\t\tprocess.stdout.write(this._termcolor.positionToAnsi(dx,dy));\n\t\tthis._cx = dx;\n\t\tthis._cy = dy;\n\t}\n\n\t// terminals automatically clear, but if we're clearing when we're\n\t// not otherwise provided with a character, just use a space instead\n\tif (clearBefore) {\n\t\tif (!ch) {\n\t\t\tch = \" \";\n\t\t}\n\t}\n\t\t\n\t// if we're not clearing and not provided with a character, do nothing\n\tif (!ch) { return; }\n\n\t// determine if we need to change colors\n\tvar newColor = this._termcolor.colorToAnsi(fg,bg);\n\tif (newColor !== this._lastColor) {\n\t\tprocess.stdout.write(newColor);\n\t\tthis._lastColor = newColor;\n\t}\n\n\t// write the provided symbol to the display\n\tvar chars = [].concat(ch);\n\tprocess.stdout.write(chars[0]);\n\n\t// update our position, given that we wrote a character\n\tthis._cx++;\n\tif (this._cx >= process.stdout.columns) {\n\t\tthis._cx = 0;\n\t\tthis._cy++;\n\t}\n}\n\nROT.Display.Term.prototype.computeSize = function(availWidth, availHeight) {\n\treturn [process.stdout.columns, process.stdout.rows];\n}\n\nROT.Display.Term.prototype.computeFontSize = function(availWidth, availHeight) {\n\treturn 12;\n}\n\nROT.Display.Term.prototype.eventToPosition = function(x, y) {\n\treturn [x,y]\n}\n/**\n * @class Abstract terminal code module\n * @private\n */\nROT.Display.Term.Color = function(context) {\n\tthis._context = context;\n}\n\nROT.Display.Term.Color.prototype.clearToAnsi = function(bg) {\n}\n\nROT.Display.Term.Color.prototype.colorToAnsi = function(fg, bg) {\n}\n\nROT.Display.Term.Color.prototype.positionToAnsi = function(x, y) {\n}\n/**\n * @class xterm terminal code module\n * @private\n */\nROT.Display.Term.Xterm = function(context) {\n\tROT.Display.Term.Color.call(this, context);\n}\nROT.Display.Term.Xterm.extend(ROT.Display.Term.Color);\n\nROT.Display.Term.Xterm.prototype.clearToAnsi = function(bg) {\n\treturn \"\\x1b[0;48;5;\"\n\t\t+ this._termcolor(bg)\n\t\t+ \"m\\x1b[2J\";\n}\n\nROT.Display.Term.Xterm.prototype.colorToAnsi = function(fg, bg) {\n\treturn \"\\x1b[0;38;5;\"\n\t\t+ this._termcolor(fg)\n\t\t+ \";48;5;\"\n\t\t+ this._termcolor(bg)\n\t\t+ \"m\";\n}\n\nROT.Display.Term.Xterm.prototype.positionToAnsi = function(x, y) {\n\treturn \"\\x1b[\" + (y+1) + \";\" + (x+1) + \"H\";\n}\n\nROT.Display.Term.Xterm.prototype._termcolor = function(color) {\n\tvar SRC_COLORS = 256.0;\n\tvar DST_COLORS = 6.0;\n\tvar COLOR_RATIO = DST_COLORS / SRC_COLORS;\n\tvar rgb = ROT.Color.fromString(color);\n\tvar r = Math.floor(rgb[0] * COLOR_RATIO);\n\tvar g = Math.floor(rgb[1] * COLOR_RATIO);\n\tvar b = Math.floor(rgb[2] * COLOR_RATIO);\n\treturn r*36 + g*6 + b*1 + 16;\n}\n/**\n * Export to Node.js module\n */\nfor (var p in ROT) {\n\texports[p] = ROT[p];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rot-js/lib/rot.js\n// module id = 2\n// module chunks = 0","export default class XY {\r\n\tconstructor(x = 0, y = 0) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\ttoString() {\r\n\t\treturn this.x + \",\" + this.y;\r\n\t}\r\n\tis(xy) {\r\n\t\treturn (this.x === xy.x && this.y === xy.y);\r\n\t}\r\n\tdist8(xy) {\r\n\t\tconst [dx, dy] = [xy.x - this.x, xy.y - this.y];\r\n\t\treturn Math.max(Math.abs(dx), Math.abs(dy));\r\n\t}\r\n\tdist4(xy) {\r\n\t\tconst [dx, dy] = [xy.x - this.x, xy.y - this.y];\r\n\t\treturn Math.abs(dx) + Math.abs(dy);\r\n\t}\r\n\tdist(xy) {\r\n\t\tconst [dx, dy] = [xy.x - this.x, xy.y - this.y];\r\n\t\treturn Math.sqrt(dx*dx+dy*dy);\r\n\t}\r\n\tplus(xy) {\r\n\t\treturn new XY(this.x+xy.x, this.y+xy.y);\r\n\t}\r\n\tminus(xy) {\r\n\t\treturn new XY(this.x-xy.x, this.y-xy.y);\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/xy.js","import Entity from './entity'\r\nimport Game from './game'\r\n\r\nexport default class Being extends Entity {\r\n\tconstructor(visual) {\r\n\t\tsuper(visual);\r\n\t\tthis._speed = 100;\r\n\t\tthis._hp = 10;\r\n\t}\r\n\tgetSpeed() {\r\n\t\t// Called by the Scheduler\r\n\t\treturn this._speed;\r\n\t}\r\n\tdamage(damage) {\r\n\t\tthis._hp -= damage;\r\n\t\tif (this._hp <= 0) { this.die(); }\r\n\t}\r\n\tact() {\r\n\t\t// FIXME\r\n\t}\r\n\tdie() {\r\n\t\tGame.scheduler.remove(this);\r\n\t}\r\n\tsetPosition = function(xy, level) {\r\n\t\t// came to a currently active level; add self to the scheduler\r\n\t\tif (level !== this._level && level === Game.level) {\r\n\t\t\tGame.scheduler.add(this, true);\r\n\t\t}\r\n\r\n\t\tif (level.getTileAt(xy).passable) {\r\n\t\t\treturn Entity.prototype.setPosition.call(this, xy, level);\r\n\t\t} else {\r\n\t\t\tif (typeof level.getTileAt(xy).bump === \"function\") {\r\n\t\t\t\tlevel.getTileAt(xy).bump();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/being.js","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/core.js\n// module id = 5\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 6\n// module chunks = 0","'use strict';\r\n\r\nif (typeof Promise === 'undefined') {\r\n  // Rejection tracking prevents a common issue where React gets into an\r\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\r\n  // and the user has no idea what causes React's erratic future behavior.\r\n  require('promise/lib/rejection-tracking').enable();\r\n  window.Promise = require('promise/lib/es6-extensions.js');\r\n}\r\n\r\n// fetch() polyfill for making API calls.\r\nrequire('whatwg-fetch');\r\n\r\n// Object.assign() is commonly used with React.\r\n// It will use the native implementation if it's present and isn't buggy.\r\nObject.assign = require('object-assign');\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/polyfills.js\n// module id = 7\n// module chunks = 0","import ROT from 'rot-js'\r\nimport game from './game';\r\n\r\nif (!ROT.isSupported()) {\r\n    alert(\"The rot.js library isn't supported by your browser.\");\r\n} else {\r\n    // Initialize the game\r\n    game.init();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/asap/browser-raw.js\n// module id = 9\n// module chunks = 0","import Entity from './entity'\r\nimport Game from './game'\r\nimport XY from './xy'\r\nimport generateMap from './map'\r\n\r\nexport default class Level {\r\n\tconstructor() {\r\n\t\t// FIXME data structure for storing entities\r\n\t\tthis._beings = {};\r\n\r\n\t\t// FIXME map data\r\n\t\tthis._size = new XY(80, 25);\r\n\t\tconst mapData = generateMap(80, 25);\r\n\t\tthis._map = mapData.map;\r\n\t\tthis._freeCells = mapData.freeCells;\r\n\r\n\t\tthis._empty = new Entity({ch:\".\", fg:\"#888\", bg:null});\r\n\t}\r\n\tgetSize() {\r\n\t\treturn this._size;\r\n\t}\r\n\tsetEntity(entity, xy) {\r\n\t\t// FIXME remove from old position, draw\r\n\t\tconst oldXY = entity.getXY();\r\n\t\tif (entity.getLevel() === this) {\r\n\t\t\tdelete this._beings[oldXY];\r\n\t\t\tif (Game.level === this) { Game.draw(oldXY); }\r\n\t\t}\r\n\t\tif (entity.setPosition(xy, this)) {\r\n\t\t\tentity.setPosition(xy, this); // propagate position data to the entity itself\r\n\t\t\t// FIXME set new position, draw\r\n\t\t\tthis._beings[xy] = entity;\r\n\t\t\tif (Game.level === this) {\r\n\t\t\t\tGame.draw(xy);\r\n\t\t\t\tGame.textBuffer.write(\"An entity moves to \" + xy + \".\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (entity.getLevel() === this) {\r\n\t\t\t\tentity.setPosition(oldXY, this);\r\n\t\t\t\tthis._beings[oldXY] = entity;\r\n\t\t\t\tif (Game.level === this) { Game.draw(oldXY); }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tgetEntityAt(xy) {\r\n\t\treturn this._beings[xy] || this._map[xy] || this._empty;\r\n\t}\r\n\tgetTileAt(xy) {\r\n\t\treturn this._map[xy] || this._empty;\r\n\t}\r\n\tgetBeings() {\r\n\t\t// FIXME list of all beings\r\n\t\treturn this._beings;\r\n\t}\r\n\tgetFreeCells() {\r\n\t\treturn this._freeCells;\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/level.js","import ROT from 'rot-js'\r\nimport Entity from './entity'\r\nimport Tile from './tile'\r\n\r\nexport default function generateMap(w, h) {\r\n    const digger = new ROT.Map.Digger(w, h);\r\n    let map = {};\r\n    let freeCells = [];\r\n\r\n    const digCallback = function(x, y, value) {\r\n        const key = x+\",\"+y;\r\n        if (value) {\r\n            map[key] = new Tile(\"wall\");\r\n        } else {\r\n            map[key] = new Tile(\"floor\");\r\n            freeCells.push(key);\r\n        }\r\n    }\r\n    digger.create(digCallback.bind(this));\r\n    const rooms = digger.getRooms();\r\n    const corridors = digger.getCorridors();\r\n    return {map, freeCells};\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/map.js","import ROT from 'rot-js'\r\nimport Being from './being'\r\nimport Game from './game'\r\nimport XY from './xy'\r\n\r\nexport default class Player extends Being {\n\tconstructor() {\n\t\tsuper({ch:\"@\", fg:\"#fff\"});\n\n\t\tthis._keys = {};\r\n\t\tthis._keys[ROT.VK_K] = 0;\r\n\t\tthis._keys[ROT.VK_UP] = 0;\r\n\t\tthis._keys[ROT.VK_NUMPAD8] = 0;\r\n\t\tthis._keys[ROT.VK_U] = 1;\r\n\t\tthis._keys[ROT.VK_NUMPAD9] = 1;\r\n\t\tthis._keys[ROT.VK_L] = 2;\r\n\t\tthis._keys[ROT.VK_RIGHT] = 2;\r\n\t\tthis._keys[ROT.VK_NUMPAD6] = 2;\r\n\t\tthis._keys[ROT.VK_N] = 3;\r\n\t\tthis._keys[ROT.VK_NUMPAD3] = 3;\r\n\t\tthis._keys[ROT.VK_J] = 4;\r\n\t\tthis._keys[ROT.VK_DOWN] = 4;\r\n\t\tthis._keys[ROT.VK_NUMPAD2] = 4;\r\n\t\tthis._keys[ROT.VK_B] = 5;\r\n\t\tthis._keys[ROT.VK_NUMPAD1] = 5;\r\n\t\tthis._keys[ROT.VK_H] = 6;\r\n\t\tthis._keys[ROT.VK_LEFT] = 6;\r\n\t\tthis._keys[ROT.VK_NUMPAD4] = 6;\r\n\t\tthis._keys[ROT.VK_Y] = 7;\r\n\t\tthis._keys[ROT.VK_NUMPAD7] = 7;\r\n\r\n\t\tthis._keys[ROT.VK_PERIOD] = -1;\r\n\t\tthis._keys[ROT.VK_CLEAR] = -1;\r\n\t\tthis._keys[ROT.VK_NUMPAD5] = -1;\n\t}\n\tact() {\r\n\t\tGame.textBuffer.write(\"It is your turn, press any relevant key.\");\r\n\t\tGame.textBuffer.flush();\r\n\t\tGame.engine.lock();\r\n\t\twindow.addEventListener(\"keydown\", this);\r\n\t}\n\tdie() {\r\n\t\tsuper.die();\r\n\t\tGame.over();\r\n\t}\n\thandleEvent(e) {\r\n\t\tconst code = e.keyCode;\r\n\r\n\t\tconst keyHandled = this._handleKey(e.keyCode);\r\n\r\n\t\tif (keyHandled) {\r\n\t\t\twindow.removeEventListener(\"keydown\", this);\r\n\t\t\tGame.engine.unlock();\r\n\t\t}\r\n\t}\n\t_handleKey = function(code) {\r\n\t\tif (code in this._keys) {\r\n\t\t\tGame.textBuffer.clear();\r\n\r\n\t\t\tconst direction = this._keys[code];\r\n\t\t\tif (direction === -1) { // noop\r\n\t\t\t\t// FIXME show something?\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tconst dir = ROT.DIRS[8][direction];\r\n\t\t\tconst xy = this._xy.plus(new XY(dir[0], dir[1]));\r\n\r\n\t\t\tthis._level.setEntity(this, xy);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false; // unknown key\r\n\t}\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/player.js","import ROT from 'rot-js'\r\nimport Game from './game'\r\n\r\nconst Screen = {};\r\n\r\n// Define our initial start screen\r\nScreen.startScreen = {\r\n    enter: function() {    console.log(\"Entered start screen.\"); },\r\n    exit: function() { console.log(\"Exited start screen.\"); },\r\n    render: function(display) {\r\n        // Render our prompt to the screen\r\n        display.drawText(1,1, \"%c{yellow}Javascript Roguelike\");\r\n        display.drawText(1,2, \"Press [Enter] to start!\");\r\n    },\r\n    handleInput: function(inputType, inputData) {\r\n        // When [Enter] is pressed, go to the play screen\r\n        if (inputType === 'keydown') {\r\n            if (inputData.keyCode === ROT.VK_RETURN) {\r\n                Game.startGame();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// Define our winning screen\r\nScreen.winScreen = {\r\n    enter: function() {    console.log(\"Entered win screen.\"); },\r\n    exit: function() { console.log(\"Exited win screen.\"); },\r\n    render: function(display) {\r\n        // Render our prompt to the screen\r\n        for (var i = 0; i < 22; i++) {\r\n            // Generate random background colors\r\n            var r = Math.round(Math.random() * 255);\r\n            var g = Math.round(Math.random() * 255);\r\n            var b = Math.round(Math.random() * 255);\r\n            var background = ROT.Color.toRGB([r, g, b]);\r\n            display.drawText(2, i + 1, \"%b{\" + background + \"}You win!\");\r\n        }\r\n    },\r\n    handleInput: function(inputType, inputData) {\r\n        // Nothing to do here\r\n    }\r\n}\r\n\r\n// Define our losing screen\r\nScreen.loseScreen = {\r\n    enter: function() {    console.log(\"Entered lose screen.\"); },\r\n    exit: function() { console.log(\"Exited lose screen.\"); },\r\n    render: function(display) {\r\n        // Render our prompt to the screen\r\n        for (var i = 0; i < 22; i++) {\r\n            display.drawText(2, i + 1, \"%b{red}You lose! :(\");\r\n        }\r\n    },\r\n    handleInput: function(inputType, inputData) {\r\n        // Nothing to do here\r\n    }\r\n}\r\n\r\nexport default Screen;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/screens.js","import XY from './xy'\r\n\r\nexport default class TextBuffer {\r\n\tconstructor() {\r\n\t\tthis._data = [];\r\n\t\tthis._options = {\r\n\t\t\tdisplay: null,\r\n\t\t\tposition: new XY(),\r\n\t\t\tsize: new XY()\r\n\t\t}\r\n\t}\r\n\tconfigure(options) {\r\n\t\tfor (var p in options) { this._options[p] = options[p]; }\r\n\t}\r\n\tclear() {\r\n\t\tthis._data = [];\r\n\t}\r\n\twrite(text) {\r\n\t\tthis._data.push(text);\r\n\t}\r\n\tflush() {\r\n\t\tconst options = this._options;\r\n\t\tconst display = options.display;\r\n\t\tconst pos = options.position;\r\n\t\tconst size = options.size;\r\n\r\n\t\t// clear\r\n\t\tfor (let i = 0; i < size.x; i++) {\r\n\t\t\tfor (let j = 0; j < size.y; j++) {\r\n\t\t\t\tdisplay.draw(pos.x + i, pos.y + j);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar text = this._data.join(\" \");\r\n\t\tdisplay.drawText(pos.x, pos.y, text, size.x);\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/textbuffer.js","import Entity from './entity'\r\nimport Game from './game'\r\n\r\nexport default class Tile extends Entity {\r\n    constructor(type) {\r\n        // FIXME\r\n        const tile = Tile.Types[type];\r\n        super(tile.visual);\r\n        this.name = tile.name;\r\n        this.passable = tile.passable;\r\n        this.blocksLos = tile.blocksLos;\r\n        this.bump = tile.bump ? tile.bump : this.bump;\r\n    }\r\n    bump() {\r\n        if(!this.passable){\r\n            Game.textBuffer.write('You cannot move through this ' + this.name + ' no matter how hard you try.');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    static Types = {\r\n        floor: {\r\n            name: 'Floor',\r\n            visual: {ch: '.', fg: '#444', bg: '#222'},\r\n            passable: true,\r\n            blocksLos: false\r\n        },\r\n        wall: {\r\n            name: 'Wall',\r\n            visual: {ch: '#', fg: '#777', bg: '#2e2e2e'},\r\n            passable: false,\r\n            blocksLos: true\r\n        },\r\n        door: {\r\n            name: 'Door',\r\n            visual: {ch: '+', fg: 'yellow', bg: '#222'},\r\n            passable: false,\r\n            blocksLos: true,\r\n            bump: function(entity){\r\n                if(!this.passable){\r\n                    this.passable = true;\r\n                    this.blocksLos = false;\r\n                    this.visual.ch = \"'\";\r\n                    Game.textBuffer.write('You open the ' + this.name + '.');\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/tile.js","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 16\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 17\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/es6-extensions.js\n// module id = 18\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._10 = null;\n  Promise._97 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._10 = function (promise) {\n    if (\n      promise._81 === 2 && // IS REJECTED\n      rejections[promise._72]\n    ) {\n      if (rejections[promise._72].logged) {\n        onHandled(promise._72);\n      } else {\n        clearTimeout(rejections[promise._72].timeout);\n      }\n      delete rejections[promise._72];\n    }\n  };\n  Promise._97 = function (promise, err) {\n    if (promise._45 === 0) { // not yet handled\n      promise._72 = id++;\n      rejections[promise._72] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._72),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/rejection-tracking.js\n// module id = 19\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 20\n// module chunks = 0"],"sourceRoot":""}