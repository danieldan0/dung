{"version":3,"sources":["..\\static\\js\\main.1bff24ae.js","..\\webpack\\bootstrap 76aa79216542f192a201","game.js","..\\node_modules\\rot-js\\lib\\rot.js","entity.js","xy.js","being.js","..\\node_modules\\promise\\lib\\core.js","..\\node_modules\\webpack\\buildin\\global.js","..\\config\\polyfills.js","index.js","..\\node_modules\\asap\\browser-raw.js","level.js","map.js","player.js","screens.js","textbuffer.js","tile.js","..\\node_modules\\object-assign\\index.js","..\\node_modules\\process\\browser.js","..\\node_modules\\promise\\lib\\es6-extensions.js","..\\node_modules\\promise\\lib\\rejection-tracking.js","..\\node_modules\\whatwg-fetch\\fetch.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","_classCallCheck","instance","Constructor","TypeError","__WEBPACK_IMPORTED_MODULE_0_rot_js__","__WEBPACK_IMPORTED_MODULE_0_rot_js___default","__WEBPACK_IMPORTED_MODULE_3__level__","__WEBPACK_IMPORTED_MODULE_4__player__","__WEBPACK_IMPORTED_MODULE_5__screens__","__WEBPACK_IMPORTED_MODULE_6__textbuffer__","__WEBPACK_IMPORTED_MODULE_7__xy__","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","Game","this","scheduler","a","Scheduler","Speed","engine","Engine","display","Display","fontSize","textBuffer","document","body","appendChild","getContainer","player","game","bindEventToScreen","event","window","addEventListener","e","currentScreen","handleInput","switchScreen","startScreen","level","getSize","_switchLevel","setEntity","getFreeCells","random","start","xy","tile","getTileAt","tileVisual","getVisual","entity","getEntityAt","visual","draw","x","y","ch","fg","bg","lock","loseScreen","clear","size","setOptions","width","height","configure","position","j","beings","getBeings","add","screen","exit","getDisplay","enter","render","global","process","requestAnimationFrame","cb","setTimeout","child","scrollLeft","scrollTop","createElement","type","canvas","getBoundingClientRect","left","top","getContext","_termcolor","beginPath","clearRect","w","h","clearCmd","clearToAnsi","fillStyle","stdout","write","drawImage","b","f","g","fill","fillRect","fillText","chs","font","lineTo","measureText","moveTo","textAlign","textBaseline","style","visibility","documentElement","ROT","isSupported","Function","bind","DEFAULT_WIDTH","DEFAULT_HEIGHT","DIRS","4","8","6","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","Text","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","str","maxWidth","result","tokens","tokenize","lineWidth","token","Math","max","offset","replace","match","index","part","substring","push","trim","_breakLines","Infinity","lineLength","lastTokenWithSpace","charAt","indexOf","_breakInsideToken","arr","split","pop","join","nextIndex","breakIndex","lastIndexOf","splice","lastTextToken","tokenIndex","removeBreakChar","newBreakToken","newTextToken","Array","floor","RNG","getUniform","randomize","Number","mod","String","capitalize","toUpperCase","lpad","character","count","cnt","rpad","format","template","map","args","slice","arguments","replacer","group1","group2","obj","group","parts","shift","method","toLowerCase","replaced","apply","first","unshift","create","tmp","extend","parent","constructor","mozRequestAnimationFrame","webkitRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","options","_context","_data","_dirty","_options","_backend","defaultOptions","transpose","layout","spacing","border","forceSquareRatio","fontFamily","fontStyle","tileWidth","tileHeight","tileMap","tileSet","tileColorize","termColor","DEBUG","_tick","what","colors","compute","getOptions","computeSize","availWidth","availHeight","computeFontSize","eventToPosition","touches","clientX","clientY","rect","drawText","text","cx","cy","lines","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","charCodeAt","_draw","clearBefore","data","Backend","context","Rect","_spacingX","_spacingY","_canvasCache","cache","charWidth","ceil","_drawWithCache","_drawNoCache","hash","ctx","chars","concat","boxWidth","boxHeight","oldFont","ratio","widthFraction","Hex","_hexSize","sqrt","xprop","yprop","px","reverse","_fill","hexSizeWidth","hexSizeHeight","hexSize","min","prop","Tile","_colorCanvas","Error","globalCompositeOperation","getSeed","_seed","setSeed","seed","_s0","_frac","_s1","_s2","_c","t","getUniformInt","lowerBound","upperBound","getNormal","mean","stddev","u","v","r","gauss","log","getPercentage","getWeightedValue","total","getState","setState","state","clone","Date","now","StringGenerator","words","order","prior","_boundary","fromCharCode","_suffix","_prefix","_priorValues","generate","_sample","_join","observe","string","_split","subcontext","_observeEvent","getStats","priorCount","dataCount","eventCount","_backoff","available","EventQueue","_time","_events","_eventTimes","getTime","time","remove","_remove","_queue","_repeat","_current","item","repeat","next","Simple","getSpeed","Action","_defaultDuration","_duration","setDuration","_scheduler","_lock","unlock","actor","act","then","Map","_width","_height","callback","_fillMap","Arena","empty","DividedMaze","_stack","_map","_process","room","_partitionRoom","availX","availY","bottom","right","walls","solid","hole","IceyMaze","regularity","_regularity","nx","ny","done","blocked","dirs","_randomize","_isFree","EllerMaze","L","R","_addToList","_removeFromList","Cellular","born","survive","topology","connected","_dirs","probability","set","newMap","widthStep","widthStart","cur","ncount","_getNeighbors","_completeMaze","dir","allFreeSpace","notConnected","_freeSpace","_pointKey","_findConnected","keys","_getFromTo","from","to","local","_tunnelToConnected","k","pp","connectedKeys","notConnectedKeys","_getClosest","point","space","minPoint","minDist","stack","keepNotConnected","tests","xx","pkey","yy","Dungeon","_rooms","_corridors","getRooms","getCorridors","Digger","roomWidth","roomHeight","corridorLength","dugPercentage","timeLimit","_features","Room","Corridor","_featureAttempts","_walls","_digCallback","_canBeDugCallback","_isWallCallback","_priorityWallCallback","_dug","area","_firstRoom","t1","wall","_findWall","parseInt","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","priorityWalls","_addDoors","Feature","createRandomCenter","prio1","prio2","dx","dy","feature","createRandomAt","isValid","createPriorityWalls","deltas","delta","isWallCallback","clearDoors","addDoors","Uniform","roomDugPercentage","_roomAttempts","_corridorAttempts","_connected","_unconnected","_generateRooms","_generateCorridors","_generateRoom","createRandom","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","center1","center2","diffX","diffY","abs","dirIndex1","dirIndex2","getLeft","getRight","getTop","getBottom","_placeInWall","end","_digLine","diff","rotation","mid","index2","round","mid1","mid2","addDoor","dirIndex","avail","lastBadIndex","points","corridor","Rogue","cellWidth","cellHeight","_calculateRoomSize","connectedCells","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","cell","connections","cellx","celly","idx","ncgx","ncgy","otherRoom","cgx","cgy","found","dirToCheck","cw","validRoom","directions","dirIdx","newI","newJ","console","roomw","roomh","sx","sy","cwp","chp","sxOffset","syOffset","ii","jj","_getWallPosition","aRoom","aDirection","rx","ry","door","_drawCorridore","startPosition","endPosition","tempDist","xDir","yDir","move","xOffset","yOffset","xpos","ypos","moves","xAbs","yAbs","percent","firstHalf","secondHalf","connection","otherWall","canBeDugCallback","digCallback","debug","x1","y1","x2","y2","doorX","doorY","_x1","_y1","_x2","_y2","_doors","getDoors","startX","startY","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","ok","firstCornerBad","secondCornerBad","priorityWallCallback","Noise","Simplex","gradients","_F2","_G2","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","G2","n0","n1","n2","X0","Y0","x0","y0","t0","grad","t2","FOV","lightPassesCallback","_lightPasses","_getCircle","countFactor","startOffset","DiscreteShadowcasting","_coords","A","B","blocks","DATA","neighbors","angle","_visibleCoords","v1","callee","v2","PreciseShadowcasting","A1","A2","SHADOWS","neighborCount","_checkVisibility","index1","edge1","old","edge2","visible","visibleLength","P","P1","P2","RecursiveShadowcasting","OCTANTS","_renderOctant","compute180","previousOctant","nextPreviousOctant","nextOctant","compute90","octant","_castVisibility","row","visSlopeStart","visSlopeEnd","radius","yx","newStart","mapX","mapY","slopeStart","slopeEnd","Color","fromString","cached","_cache","values","color1","color2","add_","multiply","multiply_","interpolate","factor","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","color","hue2rgb","q","toRGB","_clamp","toHex","toString","num","black","navy","darkblue","mediumblue","blue","darkgreen","green","teal","darkcyan","deepskyblue","darkturquoise","mediumspringgreen","lime","springgreen","aqua","cyan","midnightblue","dodgerblue","forestgreen","seagreen","darkslategray","darkslategrey","limegreen","mediumseagreen","turquoise","royalblue","steelblue","darkslateblue","mediumturquoise","indigo","darkolivegreen","cadetblue","cornflowerblue","mediumaquamarine","dimgray","dimgrey","slateblue","olivedrab","slategray","slategrey","lightslategray","lightslategrey","mediumslateblue","lawngreen","chartreuse","aquamarine","maroon","purple","olive","gray","grey","skyblue","lightskyblue","blueviolet","darkred","darkmagenta","saddlebrown","darkseagreen","lightgreen","mediumpurple","darkviolet","palegreen","darkorchid","yellowgreen","sienna","brown","darkgray","darkgrey","lightblue","greenyellow","paleturquoise","lightsteelblue","powderblue","firebrick","darkgoldenrod","mediumorchid","rosybrown","darkkhaki","silver","mediumvioletred","indianred","peru","chocolate","tan","lightgray","lightgrey","palevioletred","thistle","orchid","goldenrod","crimson","gainsboro","plum","burlywood","lightcyan","lavender","darksalmon","violet","palegoldenrod","lightcoral","khaki","aliceblue","honeydew","azure","sandybrown","wheat","beige","whitesmoke","mintcream","ghostwhite","salmon","antiquewhite","linen","lightgoldenrodyellow","oldlace","red","fuchsia","magenta","deeppink","orangered","tomato","hotpink","coral","darkorange","lightsalmon","orange","lightpink","pink","gold","peachpuff","navajowhite","moccasin","bisque","mistyrose","blanchedalmond","papayawhip","lavenderblush","seashell","cornsilk","lemonchiffon","floralwhite","snow","yellow","lightyellow","ivory","white","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","range","_fov","_lights","_reflectivityCache","_fovCache","reset","setFOV","fov","setLight","clearLights","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","_updateFOV","fovKey","formFactor","key1","vis","key2","Path","toX","toY","passableCallback","_toX","_toY","_fromX","_fromY","_passableCallback","fromX","fromY","Dijkstra","_computed","_todo","_add","_compute","prev","neighbor","AStar","_done","_distance","Term","_cx","_cy","_lastColor","_ox","_oy","columns","rows","positionToAnsi","newColor","colorToAnsi","Xterm","rgb","Entity","_visual","_xy","_level","XY","undefined","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","__WEBPACK_IMPORTED_MODULE_0__entity__","__WEBPACK_IMPORTED_MODULE_1__game__","__WEBPACK_IMPORTED_MODULE_2_rot_js__","Being","_Entity","_this","getPrototypeOf","_speed","_hp","damage","die","passable","setPosition","bump","noop","getThen","ex","LAST_ERROR","IS_ERROR","tryCallOne","fn","tryCallTwo","Promise","_45","_81","_65","_54","doResolve","safeThen","onFulfilled","onRejected","resolve","reject","res","handle","Handler","deferred","_10","handleResolved","asap","promise","ret","newValue","finale","_97","reason","_61","eval","enable","assign","init","alert","rawAsap","task","queue","requestFlush","flushing","flush","currentIndex","capacity","scan","newLength","makeRequestCallFromTimer","handleTimer","timeoutHandle","clearInterval","intervalHandle","setInterval","scope","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","toggle","observer","node","createTextNode","characterData","__WEBPACK_IMPORTED_MODULE_2__xy__","__WEBPACK_IMPORTED_MODULE_3__map__","Level","_beings","_size","mapData","_freeCells","freeCells","_empty","oldXY","getXY","getLevel","generateMap","digger","__WEBPACK_IMPORTED_MODULE_3__xy__","__WEBPACK_IMPORTED_MODULE_2__tile__","placeDoors","__WEBPACK_IMPORTED_MODULE_1__being__","__WEBPACK_IMPORTED_MODULE_2__game__","_get","receiver","desc","getOwnPropertyDescriptor","Player","_Being","_handleKey","code","_keys","direction","plus","teleport","over","keyCode","removeEventListener","Screen","inputType","inputData","startGame","winScreen","background","__WEBPACK_IMPORTED_MODULE_0__xy__","TextBuffer","pos","Types","blocksLos","toObject","val","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","test1","getOwnPropertyNames","test2","test3","forEach","letter","err","source","symbols","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","timeout","len","run","Item","array","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","all","remaining","race","disable","enabled","onUnhandled","allRejections","matchWhitelist","rejections","error","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","warn","_72","line","list","some","cls","RangeError","normalizeName","test","normalizeValue","iteratorFor","items","iterator","support","iterable","Symbol","Headers","headers","append","isArray","header","consumed","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","bufferClone","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","rejected","decode","json","JSON","parse","normalizeMethod","upcased","methods","Request","input","url","credentials","mode","referrer","form","bytes","decodeURIComponent","parseHeaders","rawHeaders","Response","bodyInit","status","statusText","fetch","viewClasses","DataView","isView","oldValue","has","thisArg","entries","response","redirectStatuses","redirect","location","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill"],"mappings":"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","file":"static/js/main.1bff24ae.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dung/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 21);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rot_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__being__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__entity__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__level__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__player__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__screens__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__textbuffer__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__xy__ = __webpack_require__(3);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\n\n\n\n\nvar Game = function () {\n\tfunction Game() {\n\t\t_classCallCheck(this, Game);\n\t}\n\n\t_createClass(Game, [{\n\t\tkey: 'init',\n\t\tvalue: function init() {\n\t\t\tthis.scheduler = new __WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.Scheduler.Speed();\n\t\t\tthis.engine = new __WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.Engine(this.scheduler);\n\t\t\tthis.display = new __WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.Display({ fontSize: 16 });\n\t\t\tthis.textBuffer = new __WEBPACK_IMPORTED_MODULE_6__textbuffer__[\"a\" /* default */](this.display);\n\t\t\tdocument.body.appendChild(this.display.getContainer());\n\t\t\tthis.player = new __WEBPACK_IMPORTED_MODULE_4__player__[\"a\" /* default */]();\n\n\t\t\t// Create a helper function for binding to an event\n\t\t\t// and making it send it to the screen\n\t\t\tvar game = this; // So that we don't lose this\n\t\t\tvar bindEventToScreen = function bindEventToScreen(event) {\n\t\t\t\twindow.addEventListener(event, function (e) {\n\t\t\t\t\t// When an event is received, send it to the\n\t\t\t\t\t// screen if there is one\n\t\t\t\t\tif (game.currentScreen !== null) {\n\t\t\t\t\t\t// Send the event type and data to the screen\n\t\t\t\t\t\tgame.currentScreen.handleInput(event, e);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t\t// Bind keyboard input events\n\t\t\tbindEventToScreen('keydown');\n\t\t\tbindEventToScreen('keyup');\n\t\t\tbindEventToScreen('keypress');\n\n\t\t\tthis.switchScreen(__WEBPACK_IMPORTED_MODULE_5__screens__[\"a\" /* default */].startScreen);\n\t\t}\n\t}, {\n\t\tkey: 'startGame',\n\t\tvalue: function startGame() {\n\t\t\t// FIXME build a level and position a player\n\t\t\tvar level = new __WEBPACK_IMPORTED_MODULE_3__level__[\"a\" /* default */]();\n\t\t\tvar size = level.getSize();\n\t\t\tthis._switchLevel(level);\n\t\t\tthis.level.setEntity(this.player, level.getFreeCells().random());\n\n\t\t\tthis.engine.start();\n\t\t}\n\t}, {\n\t\tkey: 'draw',\n\t\tvalue: function draw(xy) {\n\t\t\tvar tile = this.level.getTileAt(xy);\n\t\t\tvar tileVisual = tile.getVisual();\n\t\t\tvar entity = this.level.getEntityAt(xy);\n\t\t\tvar visual = entity.getVisual();\n\t\t\tthis.display.draw(xy.x, xy.y, visual.ch, visual.fg, tileVisual.bg);\n\t\t}\n\t}, {\n\t\tkey: 'over',\n\t\tvalue: function over() {\n\t\t\tthis.engine.lock();\n\t\t\t// FIXME show something\n\t\t\tthis.switchScreen(__WEBPACK_IMPORTED_MODULE_5__screens__[\"a\" /* default */].loseScreen);\n\t\t}\n\t}, {\n\t\tkey: '_switchLevel',\n\t\tvalue: function _switchLevel(level) {\n\t\t\t// remove old beings from the scheduler\n\t\t\tthis.scheduler.clear();\n\n\t\t\tthis.level = level;\n\t\t\tvar size = this.level.getSize();\n\n\t\t\tvar bufferSize = 3;\n\t\t\tthis.display.setOptions({ width: size.x, height: size.y + bufferSize });\n\t\t\tthis.textBuffer.configure({\n\t\t\t\tdisplay: this.display,\n\t\t\t\tposition: new __WEBPACK_IMPORTED_MODULE_7__xy__[\"a\" /* default */](0, size.y),\n\t\t\t\tsize: new __WEBPACK_IMPORTED_MODULE_7__xy__[\"a\" /* default */](size.x, bufferSize)\n\t\t\t});\n\t\t\tthis.textBuffer.clear();\n\n\t\t\t/* FIXME draw a level */\n\t\t\tvar xy = new __WEBPACK_IMPORTED_MODULE_7__xy__[\"a\" /* default */]();\n\t\t\tfor (var i = 0; i < size.x; i++) {\n\t\t\t\txy.x = i;\n\t\t\t\tfor (var j = 0; j < size.y; j++) {\n\t\t\t\t\txy.y = j;\n\t\t\t\t\tthis.draw(xy);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// add new beings to the scheduler\n\t\t\tvar beings = this.level.getBeings();\n\t\t\tfor (var p in beings) {\n\t\t\t\tthis.scheduler.add(beings[p], true);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'getDisplay',\n\t\tvalue: function getDisplay() {\n\t\t\treturn this.display;\n\t\t}\n\t}, {\n\t\tkey: 'switchScreen',\n\t\tvalue: function switchScreen(screen) {\n\t\t\t// If we had a screen before, notify it that we exited\n\t\t\tif (Game.currentScreen !== null) {\n\t\t\t\tGame.currentScreen.exit();\n\t\t\t}\n\t\t\t// Clear the display\n\t\t\tthis.getDisplay().clear();\n\t\t\t// Update our current screen, notify it we entered\n\t\t\t// and then render it\n\t\t\tthis.currentScreen = screen;\n\t\t\tif (this.currentScreen) {\n\t\t\t\tthis.currentScreen.enter();\n\t\t\t\tthis.currentScreen.render(this.display);\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn Game;\n}();\n\nGame.scheduler = null;\nGame.engine = null;\nGame.player = null;\nGame.level = null;\nGame.display = null;\nGame.textBuffer = null;\nGame.currentScreen = null;\n\n\nvar game = new Game();\n/* harmony default export */ __webpack_exports__[\"a\"] = (game);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, process) {/*\n\tThis is rot.js, the ROguelike Toolkit in JavaScript.\n\tVersion 0.6~dev, generated on Mon Nov 30 10:34:42 CET 2015.\n*/\n/**\n * Add objects for Node.js environment\n */\nglobal.requestAnimationFrame = function(cb) {\n\treturn setTimeout(cb, 1000/60);\n};\n\nglobal.document = {\n\tbody: {\n\t\tappendChild: function(child) {},\n\t\tscrollLeft: 0,\n\t\tscrollTop: 0\n\t},\n\tcreateElement: function(type) {\n\t\tvar canvas;\n\t\treturn canvas = {\n\t\t\tgetBoundingClientRect: function() {\n\t\t\t\tvar rect;\n\t\t\t\treturn rect = {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\ttop: 0\n\t\t\t\t};\n\t\t\t},\n\t\t\tgetContext: function(type) {\n\t\t\t\tvar context;\n\t\t\t\treturn context = {\n\t\t\t\t\t_termcolor: null,\n\t\t\t\t\tbeginPath: function() {},\n\t\t\t\t\tcanvas: canvas,\n\t\t\t\t\tclearRect: function(x, y, w, h) {\n\t\t\t\t\t\tif(this._termcolor !== null) {\n\t\t\t\t\t\t\tvar clearCmd = this._termcolor.clearToAnsi(this.fillStyle);\n\t\t\t\t\t\t\tprocess.stdout.write(clearCmd);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tdrawImage: function(a, b, c, d, e, f, g, h, i) {},\n\t\t\t\t\tfill: function() {},\n\t\t\t\t\tfillRect: function(x, y, w, h) {\n\t\t\t\t\t\tif(this._termcolor !== null) {\n\t\t\t\t\t\t\tvar clearCmd = this._termcolor.clearToAnsi(this.fillStyle);\n\t\t\t\t\t\t\tprocess.stdout.write(clearCmd);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfillStyle: \"#000\",\n\t\t\t\t\tfillText: function(chs, x, y) {},\n\t\t\t\t\tfont: \"monospace\",\n\t\t\t\t\tlineTo: function(x, y) {},\n\t\t\t\t\tmeasureText: function(ch) {\n\t\t\t\t\t\tvar result;\n\t\t\t\t\t\treturn result = {\n\t\t\t\t\t\t\twidth: 12\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\tmoveTo: function(x, y) {},\n\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\ttextBaseline: \"middle\"\n\t\t\t\t};\n\t\t\t},\n\t\t\theight: 0,\n\t\t\tstyle: {\n\t\t\t\tleft: \"100px\",\n\t\t\t\tposition: \"absolute\",\n\t\t\t\ttop: \"100px\",\n\t\t\t\tvisibility: \"hidden\"\n\t\t\t},\n\t\t\twidth: 0\n\t\t};\n\t},\n\tdocumentElement: {\n\t\tscrollLeft: 0,\n\t\tscrollTop: 0\n\t}\n};\n/**\n * @namespace Top-level ROT namespace\n */\nvar ROT = {\n\t/**\n\t * @returns {bool} Is rot.js supported by this browser?\n\t */\n\tisSupported: function() {\n\t\treturn !!(document.createElement(\"canvas\").getContext && Function.prototype.bind);\n\t},\n\n\t/** Default with for display and map generators */\n\tDEFAULT_WIDTH: 80,\n\t/** Default height for display and map generators */\n\tDEFAULT_HEIGHT: 25,\n\n\t/** Directional constants. Ordering is important! */\n\tDIRS: {\n\t\t\"4\": [\n\t\t\t[ 0, -1],\n\t\t\t[ 1,  0],\n\t\t\t[ 0,  1],\n\t\t\t[-1,  0]\n\t\t],\n\t\t\"8\": [\n\t\t\t[ 0, -1],\n\t\t\t[ 1, -1],\n\t\t\t[ 1,  0],\n\t\t\t[ 1,  1],\n\t\t\t[ 0,  1],\n\t\t\t[-1,  1],\n\t\t\t[-1,  0],\n\t\t\t[-1, -1]\n\t\t],\n\t\t\"6\": [\n\t\t\t[-1, -1],\n\t\t\t[ 1, -1],\n\t\t\t[ 2,  0],\n\t\t\t[ 1,  1],\n\t\t\t[-1,  1],\n\t\t\t[-2,  0]\n\t\t]\n\t},\n\n\t/** Cancel key. */\n\tVK_CANCEL: 3, \n\t/** Help key. */\n\tVK_HELP: 6, \n\t/** Backspace key. */\n\tVK_BACK_SPACE: 8, \n\t/** Tab key. */\n\tVK_TAB: 9, \n\t/** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n\tVK_CLEAR: 12, \n\t/** Return/enter key on the main keyboard. */\n\tVK_RETURN: 13, \n\t/** Reserved, but not used. */\n\tVK_ENTER: 14, \n\t/** Shift key. */\n\tVK_SHIFT: 16, \n\t/** Control key. */\n\tVK_CONTROL: 17, \n\t/** Alt (Option on Mac) key. */\n\tVK_ALT: 18, \n\t/** Pause key. */\n\tVK_PAUSE: 19, \n\t/** Caps lock. */\n\tVK_CAPS_LOCK: 20, \n\t/** Escape key. */\n\tVK_ESCAPE: 27, \n\t/** Space bar. */\n\tVK_SPACE: 32, \n\t/** Page Up key. */\n\tVK_PAGE_UP: 33, \n\t/** Page Down key. */\n\tVK_PAGE_DOWN: 34, \n\t/** End key. */\n\tVK_END: 35, \n\t/** Home key. */\n\tVK_HOME: 36, \n\t/** Left arrow. */\n\tVK_LEFT: 37, \n\t/** Up arrow. */\n\tVK_UP: 38, \n\t/** Right arrow. */\n\tVK_RIGHT: 39, \n\t/** Down arrow. */\n\tVK_DOWN: 40, \n\t/** Print Screen key. */\n\tVK_PRINTSCREEN: 44, \n\t/** Ins(ert) key. */\n\tVK_INSERT: 45, \n\t/** Del(ete) key. */\n\tVK_DELETE: 46, \n\t/***/\n\tVK_0: 48,\n\t/***/\n\tVK_1: 49,\n\t/***/\n\tVK_2: 50,\n\t/***/\n\tVK_3: 51,\n\t/***/\n\tVK_4: 52,\n\t/***/\n\tVK_5: 53,\n\t/***/\n\tVK_6: 54,\n\t/***/\n\tVK_7: 55,\n\t/***/\n\tVK_8: 56,\n\t/***/\n\tVK_9: 57,\n\t/** Colon (:) key. Requires Gecko 15.0 */\n\tVK_COLON: 58, \n\t/** Semicolon (;) key. */\n\tVK_SEMICOLON: 59, \n\t/** Less-than (<) key. Requires Gecko 15.0 */\n\tVK_LESS_THAN: 60, \n\t/** Equals (=) key. */\n\tVK_EQUALS: 61, \n\t/** Greater-than (>) key. Requires Gecko 15.0 */\n\tVK_GREATER_THAN: 62, \n\t/** Question mark (?) key. Requires Gecko 15.0 */\n\tVK_QUESTION_MARK: 63, \n\t/** Atmark (@) key. Requires Gecko 15.0 */\n\tVK_AT: 64, \n\t/***/\n\tVK_A: 65,\n\t/***/\n\tVK_B: 66,\n\t/***/\n\tVK_C: 67,\n\t/***/\n\tVK_D: 68,\n\t/***/\n\tVK_E: 69,\n\t/***/\n\tVK_F: 70,\n\t/***/\n\tVK_G: 71,\n\t/***/\n\tVK_H: 72,\n\t/***/\n\tVK_I: 73,\n\t/***/\n\tVK_J: 74,\n\t/***/\n\tVK_K: 75,\n\t/***/\n\tVK_L: 76,\n\t/***/\n\tVK_M: 77,\n\t/***/\n\tVK_N: 78,\n\t/***/\n\tVK_O: 79,\n\t/***/\n\tVK_P: 80,\n\t/***/\n\tVK_Q: 81,\n\t/***/\n\tVK_R: 82,\n\t/***/\n\tVK_S: 83,\n\t/***/\n\tVK_T: 84,\n\t/***/\n\tVK_U: 85,\n\t/***/\n\tVK_V: 86,\n\t/***/\n\tVK_W: 87,\n\t/***/\n\tVK_X: 88,\n\t/***/\n\tVK_Y: 89,\n\t/***/\n\tVK_Z: 90,\n\t/***/\n\tVK_CONTEXT_MENU: 93,\n\t/** 0 on the numeric keypad. */\n\tVK_NUMPAD0: 96, \n\t/** 1 on the numeric keypad. */\n\tVK_NUMPAD1: 97, \n\t/** 2 on the numeric keypad. */\n\tVK_NUMPAD2: 98, \n\t/** 3 on the numeric keypad. */\n\tVK_NUMPAD3: 99, \n\t/** 4 on the numeric keypad. */\n\tVK_NUMPAD4: 100, \n\t/** 5 on the numeric keypad. */\n\tVK_NUMPAD5: 101, \n\t/** 6 on the numeric keypad. */\n\tVK_NUMPAD6: 102, \n\t/** 7 on the numeric keypad. */\n\tVK_NUMPAD7: 103, \n\t/** 8 on the numeric keypad. */\n\tVK_NUMPAD8: 104, \n\t/** 9 on the numeric keypad. */\n\tVK_NUMPAD9: 105, \n\t/** * on the numeric keypad. */\n\tVK_MULTIPLY: 106,\n\t/** + on the numeric keypad. */\n\tVK_ADD: 107, \n\t/***/\n\tVK_SEPARATOR: 108,\n\t/** - on the numeric keypad. */\n\tVK_SUBTRACT: 109, \n\t/** Decimal point on the numeric keypad. */\n\tVK_DECIMAL: 110, \n\t/** / on the numeric keypad. */\n\tVK_DIVIDE: 111, \n\t/** F1 key. */\n\tVK_F1: 112, \n\t/** F2 key. */\n\tVK_F2: 113, \n\t/** F3 key. */\n\tVK_F3: 114, \n\t/** F4 key. */\n\tVK_F4: 115, \n\t/** F5 key. */\n\tVK_F5: 116, \n\t/** F6 key. */\n\tVK_F6: 117, \n\t/** F7 key. */\n\tVK_F7: 118, \n\t/** F8 key. */\n\tVK_F8: 119, \n\t/** F9 key. */\n\tVK_F9: 120, \n\t/** F10 key. */\n\tVK_F10: 121, \n\t/** F11 key. */\n\tVK_F11: 122, \n\t/** F12 key. */\n\tVK_F12: 123, \n\t/** F13 key. */\n\tVK_F13: 124, \n\t/** F14 key. */\n\tVK_F14: 125, \n\t/** F15 key. */\n\tVK_F15: 126, \n\t/** F16 key. */\n\tVK_F16: 127, \n\t/** F17 key. */\n\tVK_F17: 128, \n\t/** F18 key. */\n\tVK_F18: 129, \n\t/** F19 key. */\n\tVK_F19: 130, \n\t/** F20 key. */\n\tVK_F20: 131, \n\t/** F21 key. */\n\tVK_F21: 132, \n\t/** F22 key. */\n\tVK_F22: 133, \n\t/** F23 key. */\n\tVK_F23: 134, \n\t/** F24 key. */\n\tVK_F24: 135, \n\t/** Num Lock key. */\n\tVK_NUM_LOCK: 144, \n\t/** Scroll Lock key. */\n\tVK_SCROLL_LOCK: 145, \n\t/** Circumflex (^) key. Requires Gecko 15.0 */\n\tVK_CIRCUMFLEX: 160, \n\t/** Exclamation (!) key. Requires Gecko 15.0 */\n\tVK_EXCLAMATION: 161, \n\t/** Double quote () key. Requires Gecko 15.0 */\n\tVK_DOUBLE_QUOTE: 162, \n\t/** Hash (#) key. Requires Gecko 15.0 */\n\tVK_HASH: 163, \n\t/** Dollar sign ($) key. Requires Gecko 15.0 */\n\tVK_DOLLAR: 164, \n\t/** Percent (%) key. Requires Gecko 15.0 */\n\tVK_PERCENT: 165, \n\t/** Ampersand (&) key. Requires Gecko 15.0 */\n\tVK_AMPERSAND: 166, \n\t/** Underscore (_) key. Requires Gecko 15.0 */\n\tVK_UNDERSCORE: 167, \n\t/** Open parenthesis (() key. Requires Gecko 15.0 */\n\tVK_OPEN_PAREN: 168, \n\t/** Close parenthesis ()) key. Requires Gecko 15.0 */\n\tVK_CLOSE_PAREN: 169, \n\t/* Asterisk (*) key. Requires Gecko 15.0 */\n\tVK_ASTERISK: 170,\n\t/** Plus (+) key. Requires Gecko 15.0 */\n\tVK_PLUS: 171, \n\t/** Pipe (|) key. Requires Gecko 15.0 */\n\tVK_PIPE: 172, \n\t/** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n\tVK_HYPHEN_MINUS: 173, \n\t/** Open curly bracket ({) key. Requires Gecko 15.0 */\n\tVK_OPEN_CURLY_BRACKET: 174, \n\t/** Close curly bracket (}) key. Requires Gecko 15.0 */\n\tVK_CLOSE_CURLY_BRACKET: 175, \n\t/** Tilde (~) key. Requires Gecko 15.0 */\n\tVK_TILDE: 176, \n\t/** Comma (,) key. */\n\tVK_COMMA: 188, \n\t/** Period (.) key. */\n\tVK_PERIOD: 190, \n\t/** Slash (/) key. */\n\tVK_SLASH: 191, \n\t/** Back tick (`) key. */\n\tVK_BACK_QUOTE: 192, \n\t/** Open square bracket ([) key. */\n\tVK_OPEN_BRACKET: 219, \n\t/** Back slash (\\) key. */\n\tVK_BACK_SLASH: 220, \n\t/** Close square bracket (]) key. */\n\tVK_CLOSE_BRACKET: 221, \n\t/** Quote (''') key. */\n\tVK_QUOTE: 222, \n\t/** Meta key on Linux, Command key on Mac. */\n\tVK_META: 224, \n\t/** AltGr key on Linux. Requires Gecko 15.0 */\n\tVK_ALTGR: 225, \n\t/** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n\tVK_WIN: 91, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_KANA: 21, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_HANGUL: 21, \n\t/** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n\tVK_EISU: 22, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_JUNJA: 23, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_FINAL: 24, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_HANJA: 25, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_KANJI: 25, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_CONVERT: 28, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_NONCONVERT: 29, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_ACCEPT: 30, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_MODECHANGE: 31, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_SELECT: 41, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_PRINT: 42, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_EXECUTE: 43, \n\t/** Linux support for this keycode was added in Gecko 4.0.\t */\n\tVK_SLEEP: 95 \n};\n/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nROT.Text = {\n\tRE_COLORS: /%([bc]){([^}]*)}/g,\n\n\t/* token types */\n\tTYPE_TEXT:\t\t0,\n\tTYPE_NEWLINE:\t1,\n\tTYPE_FG:\t\t2,\n\tTYPE_BG:\t\t3,\n\n\t/**\n\t * Measure size of a resulting text block\n\t */\n\tmeasure: function(str, maxWidth) {\n\t\tvar result = {width:0, height:1};\n\t\tvar tokens = this.tokenize(str, maxWidth);\n\t\tvar lineWidth = 0;\n\n\t\tfor (var i=0;i<tokens.length;i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tswitch (token.type) {\n\t\t\t\tcase this.TYPE_TEXT:\n\t\t\t\t\tlineWidth += token.value.length;\n\t\t\t\tbreak;\n\n\t\t\t\tcase this.TYPE_NEWLINE:\n\t\t\t\t\tresult.height++;\n\t\t\t\t\tresult.width = Math.max(result.width, lineWidth);\n\t\t\t\t\tlineWidth = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tresult.width = Math.max(result.width, lineWidth);\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * Convert string to a series of a formatting commands\n\t */\n\ttokenize: function(str, maxWidth) {\n\t\tvar result = [];\n\n\t\t/* first tokenization pass - split texts and color formatting commands */\n\t\tvar offset = 0;\n\t\tstr.replace(this.RE_COLORS, function(match, type, name, index) {\n\t\t\t/* string before */\n\t\t\tvar part = str.substring(offset, index);\n\t\t\tif (part.length) {\n\t\t\t\tresult.push({\n\t\t\t\t\ttype: ROT.Text.TYPE_TEXT,\n\t\t\t\t\tvalue: part\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/* color command */\n\t\t\tresult.push({\n\t\t\t\ttype: (type == \"c\" ? ROT.Text.TYPE_FG : ROT.Text.TYPE_BG),\n\t\t\t\tvalue: name.trim()\n\t\t\t});\n\n\t\t\toffset = index + match.length;\n\t\t\treturn \"\";\n\t\t});\n\n\t\t/* last remaining part */\n\t\tvar part = str.substring(offset);\n\t\tif (part.length) {\n\t\t\tresult.push({\n\t\t\t\ttype: ROT.Text.TYPE_TEXT,\n\t\t\t\tvalue: part\n\t\t\t});\n\t\t}\n\n\t\treturn this._breakLines(result, maxWidth);\n\t},\n\n\t/* insert line breaks into first-pass tokenized data */\n\t_breakLines: function(tokens, maxWidth) {\n\t\tif (!maxWidth) { maxWidth = Infinity; };\n\n\t\tvar i = 0;\n\t\tvar lineLength = 0;\n\t\tvar lastTokenWithSpace = -1;\n\n\t\twhile (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n\t\t\tvar token = tokens[i];\n\t\t\tif (token.type == ROT.Text.TYPE_NEWLINE) { /* reset */\n\t\t\t\tlineLength = 0; \n\t\t\t\tlastTokenWithSpace = -1;\n\t\t\t}\n\t\t\tif (token.type != ROT.Text.TYPE_TEXT) { /* skip non-text tokens */\n\t\t\t\ti++;\n\t\t\t\tcontinue; \n\t\t\t}\n\n\t\t\t/* remove spaces at the beginning of line */\n\t\t\twhile (lineLength == 0 && token.value.charAt(0) == \" \") { token.value = token.value.substring(1); }\n\n\t\t\t/* forced newline? insert two new tokens after this one */\n\t\t\tvar index = token.value.indexOf(\"\\n\");\n\t\t\tif (index != -1) { \n\t\t\t\ttoken.value = this._breakInsideToken(tokens, i, index, true); \n\n\t\t\t\t/* if there are spaces at the end, we must remove them (we do not want the line too long) */\n\t\t\t\tvar arr = token.value.split(\"\");\n\t\t\t\twhile (arr.length && arr[arr.length-1] == \" \") { arr.pop(); }\n\t\t\t\ttoken.value = arr.join(\"\");\n\t\t\t}\n\n\t\t\t/* token degenerated? */\n\t\t\tif (!token.value.length) {\n\t\t\t\ttokens.splice(i, 1);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n\n\t\t\t\t/* is it possible to break within this token? */\n\t\t\t\tvar index = -1;\n\t\t\t\twhile (1) {\n\t\t\t\t\tvar nextIndex = token.value.indexOf(\" \", index+1);\n\t\t\t\t\tif (nextIndex == -1) { break; }\n\t\t\t\t\tif (lineLength + nextIndex > maxWidth) { break; }\n\t\t\t\t\tindex = nextIndex;\n\t\t\t\t}\n\n\t\t\t\tif (index != -1) { /* break at space within this one */\n\t\t\t\t\ttoken.value = this._breakInsideToken(tokens, i, index, true);\n\t\t\t\t} else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n\t\t\t\t\tvar token = tokens[lastTokenWithSpace];\n\t\t\t\t\tvar breakIndex = token.value.lastIndexOf(\" \");\n\t\t\t\t\ttoken.value = this._breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n\t\t\t\t\ti = lastTokenWithSpace;\n\t\t\t\t} else { /* force break in this token */\n\t\t\t\t\ttoken.value = this._breakInsideToken(tokens, i, maxWidth-lineLength, false);\n\t\t\t\t}\n\n\t\t\t} else { /* line not long, continue */\n\t\t\t\tlineLength += token.value.length;\n\t\t\t\tif (token.value.indexOf(\" \") != -1) { lastTokenWithSpace = i; }\n\t\t\t}\n\t\t\t\n\t\t\ti++; /* advance to next token */\n\t\t}\n\n\n\t\ttokens.push({type: ROT.Text.TYPE_NEWLINE}); /* insert fake newline to fix the last text line */\n\n\t\t/* remove trailing space from text tokens before newlines */\n\t\tvar lastTextToken = null;\n\t\tfor (var i=0;i<tokens.length;i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tswitch (token.type) {\n\t\t\t\tcase ROT.Text.TYPE_TEXT: lastTextToken = token; break;\n\t\t\t\tcase ROT.Text.TYPE_NEWLINE: \n\t\t\t\t\tif (lastTextToken) { /* remove trailing space */\n\t\t\t\t\t\tvar arr = lastTextToken.value.split(\"\");\n\t\t\t\t\t\twhile (arr.length && arr[arr.length-1] == \" \") { arr.pop(); }\n\t\t\t\t\t\tlastTextToken.value = arr.join(\"\");\n\t\t\t\t\t}\n\t\t\t\t\tlastTextToken = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\ttokens.pop(); /* remove fake token */\n\n\t\treturn tokens;\n\t},\n\n\t/**\n\t * Create new tokens and insert them into the stream\n\t * @param {object[]} tokens\n\t * @param {int} tokenIndex Token being processed\n\t * @param {int} breakIndex Index within current token's value\n\t * @param {bool} removeBreakChar Do we want to remove the breaking character?\n\t * @returns {string} remaining unbroken token value\n\t */\n\t_breakInsideToken: function(tokens, tokenIndex, breakIndex, removeBreakChar) {\n\t\tvar newBreakToken = {\n\t\t\ttype: ROT.Text.TYPE_NEWLINE\n\t\t}\n\t\tvar newTextToken = {\n\t\t\ttype: ROT.Text.TYPE_TEXT,\n\t\t\tvalue: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n\t\t}\n\t\ttokens.splice(tokenIndex+1, 0, newBreakToken, newTextToken);\n\t\treturn tokens[tokenIndex].value.substring(0, breakIndex);\n\t}\n}\n/**\n * @returns {any} Randomly picked item, null when length=0\n */\nArray.prototype.random = Array.prototype.random || function() {\n\tif (!this.length) { return null; }\n\treturn this[Math.floor(ROT.RNG.getUniform() * this.length)];\n}\n\n/**\n * @returns {array} New array with randomized items\n * FIXME destroys this!\n */\nArray.prototype.randomize = Array.prototype.randomize || function() {\n\tvar result = [];\n\twhile (this.length) {\n\t\tvar index = this.indexOf(this.random());\n\t\tresult.push(this.splice(index, 1)[0]);\n\t}\n\treturn result;\n}\n/**\n * Always positive modulus\n * @param {int} n Modulus\n * @returns {int} this modulo n\n */\nNumber.prototype.mod = Number.prototype.mod || function(n) {\n\treturn ((this%n)+n)%n;\n}\n/**\n * @returns {string} First letter capitalized\n */\nString.prototype.capitalize = String.prototype.capitalize || function() {\n\treturn this.charAt(0).toUpperCase() + this.substring(1);\n}\n\n/** \n * Left pad\n * @param {string} [character=\"0\"]\n * @param {int} [count=2]\n */\nString.prototype.lpad = String.prototype.lpad || function(character, count) {\n\tvar ch = character || \"0\";\n\tvar cnt = count || 2;\n\n\tvar s = \"\";\n\twhile (s.length < (cnt - this.length)) { s += ch; }\n\ts = s.substring(0, cnt-this.length);\n\treturn s+this;\n}\n\n/** \n * Right pad\n * @param {string} [character=\"0\"]\n * @param {int} [count=2]\n */\nString.prototype.rpad = String.prototype.rpad || function(character, count) {\n\tvar ch = character || \"0\";\n\tvar cnt = count || 2;\n\n\tvar s = \"\";\n\twhile (s.length < (cnt - this.length)) { s += ch; }\n\ts = s.substring(0, cnt-this.length);\n\treturn this+s;\n}\n\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nString.format = String.format || function(template) {\n\tvar map = String.format.map;\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\n\tvar replacer = function(match, group1, group2, index) {\n\t\tif (template.charAt(index-1) == \"%\") { return match.substring(1); }\n\t\tif (!args.length) { return match; }\n\t\tvar obj = args[0];\n\n\t\tvar group = group1 || group2;\n\t\tvar parts = group.split(\",\");\n\t\tvar name = parts.shift();\n\t\tvar method = map[name.toLowerCase()];\n\t\tif (!method) { return match; }\n\n\t\tvar obj = args.shift();\n\t\tvar replaced = obj[method].apply(obj, parts);\n\n\t\tvar first = name.charAt(0);\n\t\tif (first != first.toLowerCase()) { replaced = replaced.capitalize(); }\n\n\t\treturn replaced;\n\t}\n\treturn template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\n\nString.format.map = String.format.map || {\n\t\"s\": \"toString\"\n}\n\n/**\n * Convenience shortcut to String.format(this)\n */\nString.prototype.format = String.prototype.format || function() {\n\tvar args = Array.prototype.slice.call(arguments);\n\targs.unshift(this);\n\treturn String.format.apply(String, args);\n}\n\nif (!Object.create) {  \n\t/**\n\t * ES5 Object.create\n\t */\n\tObject.create = function(o) {  \n\t\tvar tmp = function() {};\n\t\ttmp.prototype = o;\n\t\treturn new tmp();\n\t};  \n}  \n/**\n * Sets prototype of this function to an instance of parent function\n * @param {function} parent\n */\nFunction.prototype.extend = Function.prototype.extend || function(parent) {\n\tthis.prototype = Object.create(parent.prototype);\n\tthis.prototype.constructor = this;\n\treturn this;\n}\nif (typeof window != \"undefined\") {\n\twindow.requestAnimationFrame =\n\t\twindow.requestAnimationFrame\n\t\t|| window.mozRequestAnimationFrame\n\t\t|| window.webkitRequestAnimationFrame\n\t\t|| window.oRequestAnimationFrame\n\t\t|| window.msRequestAnimationFrame\n\t\t|| function(cb) { return setTimeout(cb, 1000/60); };\n\n\twindow.cancelAnimationFrame =\n\t\twindow.cancelAnimationFrame\n\t\t|| window.mozCancelAnimationFrame\n\t\t|| window.webkitCancelAnimationFrame\n\t\t|| window.oCancelAnimationFrame\n\t\t|| window.msCancelAnimationFrame\n\t\t|| function(id) { return clearTimeout(id); };\n}\n/**\n * @class Visual map display\n * @param {object} [options]\n * @param {int} [options.width=ROT.DEFAULT_WIDTH]\n * @param {int} [options.height=ROT.DEFAULT_HEIGHT]\n * @param {int} [options.fontSize=15]\n * @param {string} [options.fontFamily=\"monospace\"]\n * @param {string} [options.fontStyle=\"\"] bold/italic/none/both\n * @param {string} [options.fg=\"#ccc\"]\n * @param {string} [options.bg=\"#000\"]\n * @param {float} [options.spacing=1]\n * @param {float} [options.border=0]\n * @param {string} [options.layout=\"rect\"]\n * @param {bool} [options.forceSquareRatio=false]\n * @param {int} [options.tileWidth=32]\n * @param {int} [options.tileHeight=32]\n * @param {object} [options.tileMap={}]\n * @param {image} [options.tileSet=null]\n * @param {image} [options.tileColorize=false]\n */\nROT.Display = function(options) {\n\tvar canvas = document.createElement(\"canvas\");\n\tthis._context = canvas.getContext(\"2d\");\n\tthis._data = {};\n\tthis._dirty = false; /* false = nothing, true = all, object = dirty cells */\n\tthis._options = {};\n\tthis._backend = null;\n\t\n\tvar defaultOptions = {\n\t\twidth: ROT.DEFAULT_WIDTH,\n\t\theight: ROT.DEFAULT_HEIGHT,\n\t\ttranspose: false,\n\t\tlayout: \"rect\",\n\t\tfontSize: 15,\n\t\tspacing: 1,\n\t\tborder: 0,\n\t\tforceSquareRatio: false,\n\t\tfontFamily: \"monospace\",\n\t\tfontStyle: \"\",\n\t\tfg: \"#ccc\",\n\t\tbg: \"#000\",\n\t\ttileWidth: 32,\n\t\ttileHeight: 32,\n\t\ttileMap: {},\n\t\ttileSet: null,\n\t\ttileColorize: false,\n\t\ttermColor: \"xterm\"\n\t};\n\tfor (var p in options) { defaultOptions[p] = options[p]; }\n\tthis.setOptions(defaultOptions);\n\tthis.DEBUG = this.DEBUG.bind(this);\n\n\tthis._tick = this._tick.bind(this);\n\trequestAnimationFrame(this._tick);\n}\n\n/**\n * Debug helper, ideal as a map generator callback. Always bound to this.\n * @param {int} x\n * @param {int} y\n * @param {int} what\n */\nROT.Display.prototype.DEBUG = function(x, y, what) {\n\tvar colors = [this._options.bg, this._options.fg];\n\tthis.draw(x, y, null, null, colors[what % colors.length]);\n}\n\n/**\n * Clear the whole display (cover it with background color)\n */\nROT.Display.prototype.clear = function() {\n\tthis._data = {};\n\tthis._dirty = true;\n}\n\n/**\n * @see ROT.Display\n */\nROT.Display.prototype.setOptions = function(options) {\n\tfor (var p in options) { this._options[p] = options[p]; }\n\tif (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n\t\tif (options.layout) { \n\t\t\tthis._backend = new ROT.Display[options.layout.capitalize()](this._context);\n\t\t}\n\n\t\tvar font = (this._options.fontStyle ? this._options.fontStyle + \" \" : \"\") + this._options.fontSize + \"px \" + this._options.fontFamily;\n\t\tthis._context.font = font;\n\t\tthis._backend.compute(this._options);\n\t\tthis._context.font = font;\n\t\tthis._context.textAlign = \"center\";\n\t\tthis._context.textBaseline = \"middle\";\n\t\tthis._dirty = true;\n\t}\n\treturn this;\n}\n\n/**\n * Returns currently set options\n * @returns {object} Current options object \n */\nROT.Display.prototype.getOptions = function() {\n\treturn this._options;\n}\n\n/**\n * Returns the DOM node of this display\n * @returns {node} DOM node\n */\nROT.Display.prototype.getContainer = function() {\n\treturn this._context.canvas;\n}\n\n/**\n * Compute the maximum width/height to fit into a set of given constraints\n * @param {int} availWidth Maximum allowed pixel width\n * @param {int} availHeight Maximum allowed pixel height\n * @returns {int[2]} cellWidth,cellHeight\n */\nROT.Display.prototype.computeSize = function(availWidth, availHeight) {\n\treturn this._backend.computeSize(availWidth, availHeight, this._options);\n}\n\n/**\n * Compute the maximum font size to fit into a set of given constraints\n * @param {int} availWidth Maximum allowed pixel width\n * @param {int} availHeight Maximum allowed pixel height\n * @returns {int} fontSize\n */\nROT.Display.prototype.computeFontSize = function(availWidth, availHeight) {\n\treturn this._backend.computeFontSize(availWidth, availHeight, this._options);\n}\n\n/**\n * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n * @param {Event} e event\n * @returns {int[2]} -1 for values outside of the canvas\n */\nROT.Display.prototype.eventToPosition = function(e) {\n\tif (e.touches) {\n\t\tvar x = e.touches[0].clientX;\n\t\tvar y = e.touches[0].clientY;\n\t} else {\n\t\tvar x = e.clientX;\n\t\tvar y = e.clientY;\n\t}\n\n\tvar rect = this._context.canvas.getBoundingClientRect();\n\tx -= rect.left;\n\ty -= rect.top;\n\t\n\tif (x < 0 || y < 0 || x >= this._context.canvas.width || y >= this._context.canvas.height) { return [-1, -1]; }\n\n\treturn this._backend.eventToPosition(x, y);\n}\n\n/**\n * @param {int} x\n * @param {int} y\n * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n * @param {string} [fg] foreground color\n * @param {string} [bg] background color\n */\nROT.Display.prototype.draw = function(x, y, ch, fg, bg) {\n\tif (!fg) { fg = this._options.fg; }\n\tif (!bg) { bg = this._options.bg; }\n\tthis._data[x+\",\"+y] = [x, y, ch, fg, bg];\n\t\n\tif (this._dirty === true) { return; } /* will already redraw everything */\n\tif (!this._dirty) { this._dirty = {}; } /* first! */\n\tthis._dirty[x+\",\"+y] = true;\n}\n\n/**\n * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n * @param {int} x\n * @param {int} y\n * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n * @param {int} [maxWidth] wrap at what width?\n * @returns {int} lines drawn\n */\nROT.Display.prototype.drawText = function(x, y, text, maxWidth) {\n\tvar fg = null;\n\tvar bg = null;\n\tvar cx = x;\n\tvar cy = y;\n\tvar lines = 1;\n\tif (!maxWidth) { maxWidth = this._options.width-x; }\n\n\tvar tokens = ROT.Text.tokenize(text, maxWidth);\n\n\twhile (tokens.length) { /* interpret tokenized opcode stream */\n\t\tvar token = tokens.shift();\n\t\tswitch (token.type) {\n\t\t\tcase ROT.Text.TYPE_TEXT:\n\t\t\t\tvar isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n\t\t\t\tfor (var i=0;i<token.value.length;i++) {\n\t\t\t\t\tvar cc = token.value.charCodeAt(i);\n\t\t\t\t\tvar c = token.value.charAt(i);\n\t\t\t\t\t// Assign to `true` when the current char is full-width.\n\t\t\t\t\tisFullWidth = (cc > 0xff && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) && cc > 0xffee;\n\t\t\t\t\t// Current char is space, whatever full-width or half-width both are OK.\n\t\t\t\t\tisSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n\t\t\t\t\t// The previous char is full-width and\n\t\t\t\t\t// current char is nether half-width nor a space.\n\t\t\t\t\tif (isPrevFullWidth && !isFullWidth && !isSpace) { cx++; } // add an extra position\n\t\t\t\t\t// The current char is full-width and\n\t\t\t\t\t// the previous char is not a space.\n\t\t\t\t\tif(isFullWidth && !isPrevSpace) { cx++; } // add an extra position\n\t\t\t\t\tthis.draw(cx++, cy, c, fg, bg);\n\t\t\t\t\tisPrevSpace = isSpace;\n\t\t\t\t\tisPrevFullWidth = isFullWidth;\n\t\t\t\t}\n\t\t\tbreak;\n\n\t\t\tcase ROT.Text.TYPE_FG:\n\t\t\t\tfg = token.value || null;\n\t\t\tbreak;\n\n\t\t\tcase ROT.Text.TYPE_BG:\n\t\t\t\tbg = token.value || null;\n\t\t\tbreak;\n\n\t\t\tcase ROT.Text.TYPE_NEWLINE:\n\t\t\t\tcx = x;\n\t\t\t\tcy++;\n\t\t\t\tlines++\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn lines;\n}\n\n/**\n * Timer tick: update dirty parts\n */\nROT.Display.prototype._tick = function() {\n\trequestAnimationFrame(this._tick);\n\n\tif (!this._dirty) { return; }\n\n\tif (this._dirty === true) { /* draw all */\n\t\tthis._context.fillStyle = this._options.bg;\n\t\tthis._context.fillRect(0, 0, this._context.canvas.width, this._context.canvas.height);\n\n\t\tfor (var id in this._data) { /* redraw cached data */\n\t\t\tthis._draw(id, false);\n\t\t}\n\n\t} else { /* draw only dirty */\n\t\tfor (var key in this._dirty) {\n\t\t\tthis._draw(key, true);\n\t\t}\n\t}\n\n\tthis._dirty = false;\n}\n\n/**\n * @param {string} key What to draw\n * @param {bool} clearBefore Is it necessary to clean before?\n */\nROT.Display.prototype._draw = function(key, clearBefore) {\n\tvar data = this._data[key];\n\tif (data[4] != this._options.bg) { clearBefore = true; }\n\n\tthis._backend.draw(data, clearBefore);\n}\n/**\n * @class Abstract display backend module\n * @private\n */\nROT.Display.Backend = function(context) {\n\tthis._context = context;\n}\n\nROT.Display.Backend.prototype.compute = function(options) {\n}\n\nROT.Display.Backend.prototype.draw = function(data, clearBefore) {\n}\n\nROT.Display.Backend.prototype.computeSize = function(availWidth, availHeight) {\n}\n\nROT.Display.Backend.prototype.computeFontSize = function(availWidth, availHeight) {\n}\n\nROT.Display.Backend.prototype.eventToPosition = function(x, y) {\n}\n/**\n * @class Rectangular backend\n * @private\n */\nROT.Display.Rect = function(context) {\n\tROT.Display.Backend.call(this, context);\n\t\n\tthis._spacingX = 0;\n\tthis._spacingY = 0;\n\tthis._canvasCache = {};\n\tthis._options = {};\n}\nROT.Display.Rect.extend(ROT.Display.Backend);\n\nROT.Display.Rect.cache = false;\n\nROT.Display.Rect.prototype.compute = function(options) {\n\tthis._canvasCache = {};\n\tthis._options = options;\n\n\tvar charWidth = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._spacingX = Math.ceil(options.spacing * charWidth);\n\tthis._spacingY = Math.ceil(options.spacing * options.fontSize);\n\n\tif (this._options.forceSquareRatio) {\n\t\tthis._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n\t}\n\n\tthis._context.canvas.width = options.width * this._spacingX;\n\tthis._context.canvas.height = options.height * this._spacingY;\n}\n\nROT.Display.Rect.prototype.draw = function(data, clearBefore) {\n\tif (this.constructor.cache) {\n\t\tthis._drawWithCache(data, clearBefore);\n\t} else {\n\t\tthis._drawNoCache(data, clearBefore);\n\t}\n}\n\nROT.Display.Rect.prototype._drawWithCache = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tvar hash = \"\"+ch+fg+bg;\n\tif (hash in this._canvasCache) {\n\t\tvar canvas = this._canvasCache[hash];\n\t} else {\n\t\tvar b = this._options.border;\n\t\tvar canvas = document.createElement(\"canvas\");\n\t\tvar ctx = canvas.getContext(\"2d\");\n\t\tcanvas.width = this._spacingX;\n\t\tcanvas.height = this._spacingY;\n\t\tctx.fillStyle = bg;\n\t\tctx.fillRect(b, b, canvas.width-b, canvas.height-b);\n\t\t\n\t\tif (ch) {\n\t\t\tctx.fillStyle = fg;\n\t\t\tctx.font = this._context.font;\n\t\t\tctx.textAlign = \"center\";\n\t\t\tctx.textBaseline = \"middle\";\n\n\t\t\tvar chars = [].concat(ch);\n\t\t\tfor (var i=0;i<chars.length;i++) {\n\t\t\t\tctx.fillText(chars[i], this._spacingX/2, Math.ceil(this._spacingY/2));\n\t\t\t}\n\t\t}\n\t\tthis._canvasCache[hash] = canvas;\n\t}\n\t\n\tthis._context.drawImage(canvas, x*this._spacingX, y*this._spacingY);\n}\n\nROT.Display.Rect.prototype._drawNoCache = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tif (clearBefore) { \n\t\tvar b = this._options.border;\n\t\tthis._context.fillStyle = bg;\n\t\tthis._context.fillRect(x*this._spacingX + b, y*this._spacingY + b, this._spacingX - b, this._spacingY - b);\n\t}\n\t\n\tif (!ch) { return; }\n\n\tthis._context.fillStyle = fg;\n\n\tvar chars = [].concat(ch);\n\tfor (var i=0;i<chars.length;i++) {\n\t\tthis._context.fillText(chars[i], (x+0.5) * this._spacingX, Math.ceil((y+0.5) * this._spacingY));\n\t}\n}\n\nROT.Display.Rect.prototype.computeSize = function(availWidth, availHeight) {\n\tvar width = Math.floor(availWidth / this._spacingX);\n\tvar height = Math.floor(availHeight / this._spacingY);\n\treturn [width, height];\n}\n\nROT.Display.Rect.prototype.computeFontSize = function(availWidth, availHeight) {\n\tvar boxWidth = Math.floor(availWidth / this._options.width);\n\tvar boxHeight = Math.floor(availHeight / this._options.height);\n\n\t/* compute char ratio */\n\tvar oldFont = this._context.font;\n\tthis._context.font = \"100px \" + this._options.fontFamily;\n\tvar width = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._context.font = oldFont;\n\tvar ratio = width / 100;\n\t\t\n\tvar widthFraction = ratio * boxHeight / boxWidth;\n\tif (widthFraction > 1) { /* too wide with current aspect ratio */\n\t\tboxHeight = Math.floor(boxHeight / widthFraction);\n\t}\n\treturn Math.floor(boxHeight / this._options.spacing);\n}\n\nROT.Display.Rect.prototype.eventToPosition = function(x, y) {\n\treturn [Math.floor(x/this._spacingX), Math.floor(y/this._spacingY)];\n}\n/**\n * @class Hexagonal backend\n * @private\n */\nROT.Display.Hex = function(context) {\n\tROT.Display.Backend.call(this, context);\n\n\tthis._spacingX = 0;\n\tthis._spacingY = 0;\n\tthis._hexSize = 0;\n\tthis._options = {};\n}\nROT.Display.Hex.extend(ROT.Display.Backend);\n\nROT.Display.Hex.prototype.compute = function(options) {\n\tthis._options = options;\n\n\t/* FIXME char size computation does not respect transposed hexes */\n\tvar charWidth = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._hexSize = Math.floor(options.spacing * (options.fontSize + charWidth/Math.sqrt(3)) / 2);\n\tthis._spacingX = this._hexSize * Math.sqrt(3) / 2;\n\tthis._spacingY = this._hexSize * 1.5;\n\n\tif (options.transpose) {\n\t\tvar xprop = \"height\";\n\t\tvar yprop = \"width\";\n\t} else {\n\t\tvar xprop = \"width\";\n\t\tvar yprop = \"height\";\n\t}\n\tthis._context.canvas[xprop] = Math.ceil( (options.width + 1) * this._spacingX );\n\tthis._context.canvas[yprop] = Math.ceil( (options.height - 1) * this._spacingY + 2*this._hexSize );\n}\n\nROT.Display.Hex.prototype.draw = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tvar px = [\n\t\t(x+1) * this._spacingX,\n\t\ty * this._spacingY + this._hexSize\n\t];\n\tif (this._options.transpose) { px.reverse(); }\n\n\tif (clearBefore) { \n\t\tthis._context.fillStyle = bg;\n\t\tthis._fill(px[0], px[1]);\n\t}\n\t\n\tif (!ch) { return; }\n\n\tthis._context.fillStyle = fg;\n\n\tvar chars = [].concat(ch);\n\tfor (var i=0;i<chars.length;i++) {\n\t\tthis._context.fillText(chars[i], px[0], Math.ceil(px[1]));\n\t}\n}\n\nROT.Display.Hex.prototype.computeSize = function(availWidth, availHeight) {\n\tif (this._options.transpose) {\n\t\tavailWidth += availHeight;\n\t\tavailHeight = availWidth - availHeight;\n\t\tavailWidth -= availHeight;\n\t}\n\n\tvar width = Math.floor(availWidth / this._spacingX) - 1;\n\tvar height = Math.floor((availHeight - 2*this._hexSize) / this._spacingY + 1);\n\treturn [width, height];\n}\n\nROT.Display.Hex.prototype.computeFontSize = function(availWidth, availHeight) {\n\tif (this._options.transpose) {\n\t\tavailWidth += availHeight;\n\t\tavailHeight = availWidth - availHeight;\n\t\tavailWidth -= availHeight;\n\t}\n\n\tvar hexSizeWidth = 2*availWidth / ((this._options.width+1) * Math.sqrt(3)) - 1;\n\tvar hexSizeHeight = availHeight / (2 + 1.5*(this._options.height-1));\n\tvar hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n\n\t/* compute char ratio */\n\tvar oldFont = this._context.font;\n\tthis._context.font = \"100px \" + this._options.fontFamily;\n\tvar width = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._context.font = oldFont;\n\tvar ratio = width / 100;\n\n\thexSize = Math.floor(hexSize)+1; /* closest larger hexSize */\n\n\t/* FIXME char size computation does not respect transposed hexes */\n\tvar fontSize = 2*hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n\n\t/* closest smaller fontSize */\n\treturn Math.ceil(fontSize)-1;\n}\n\nROT.Display.Hex.prototype.eventToPosition = function(x, y) {\n\tif (this._options.transpose) {\n\t\tx += y;\n\t\ty = x-y;\n\t\tx -= y;\n\t\tvar prop = \"width\";\n\t} else {\n\t\tvar prop = \"height\";\n\t}\n\tvar size = this._context.canvas[prop] / this._options[prop];\n\ty = Math.floor(y/size);\n\n\tif (y.mod(2)) { /* odd row */\n\t\tx -= this._spacingX;\n\t\tx = 1 + 2*Math.floor(x/(2*this._spacingX));\n\t} else {\n\t\tx = 2*Math.floor(x/(2*this._spacingX));\n\t}\n\t\n\treturn [x, y];\n}\n\n/**\n * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n */\nROT.Display.Hex.prototype._fill = function(cx, cy) {\n\tvar a = this._hexSize;\n\tvar b = this._options.border;\n\t\n\tthis._context.beginPath();\n\n\tif (this._options.transpose) {\n\t\tthis._context.moveTo(cx-a+b,\tcy);\n\t\tthis._context.lineTo(cx-a/2+b,\tcy+this._spacingX-b);\n\t\tthis._context.lineTo(cx+a/2-b,\tcy+this._spacingX-b);\n\t\tthis._context.lineTo(cx+a-b,\tcy);\n\t\tthis._context.lineTo(cx+a/2-b,\tcy-this._spacingX+b);\n\t\tthis._context.lineTo(cx-a/2+b,\tcy-this._spacingX+b);\n\t\tthis._context.lineTo(cx-a+b,\tcy);\n\t} else {\n\t\tthis._context.moveTo(cx,\t\t\t\t\tcy-a+b);\n\t\tthis._context.lineTo(cx+this._spacingX-b,\tcy-a/2+b);\n\t\tthis._context.lineTo(cx+this._spacingX-b,\tcy+a/2-b);\n\t\tthis._context.lineTo(cx,\t\t\t\t\tcy+a-b);\n\t\tthis._context.lineTo(cx-this._spacingX+b,\tcy+a/2-b);\n\t\tthis._context.lineTo(cx-this._spacingX+b,\tcy-a/2+b);\n\t\tthis._context.lineTo(cx,\t\t\t\t\tcy-a+b);\n\t}\n\tthis._context.fill();\n}\n/**\n * @class Tile backend\n * @private\n */\nROT.Display.Tile = function(context) {\n\tROT.Display.Rect.call(this, context);\n\t\n\tthis._options = {};\n\tthis._colorCanvas = document.createElement(\"canvas\");\n}\nROT.Display.Tile.extend(ROT.Display.Rect);\n\nROT.Display.Tile.prototype.compute = function(options) {\n\tthis._options = options;\n\tthis._context.canvas.width = options.width * options.tileWidth;\n\tthis._context.canvas.height = options.height * options.tileHeight;\n\tthis._colorCanvas.width = options.tileWidth;\n\tthis._colorCanvas.height = options.tileHeight;\n}\n\nROT.Display.Tile.prototype.draw = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tvar tileWidth = this._options.tileWidth;\n\tvar tileHeight = this._options.tileHeight;\n\n\tif (clearBefore) {\n\t\tif (this._options.tileColorize) {\n\t\t\tthis._context.clearRect(x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n\t\t} else {\n\t\t\tthis._context.fillStyle = bg;\n\t\t\tthis._context.fillRect(x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n\t\t}\n\t}\n\n\tif (!ch) { return; }\n\n\tvar chars = [].concat(ch);\n\tfor (var i=0;i<chars.length;i++) {\n\t\tvar tile = this._options.tileMap[chars[i]];\n\t\tif (!tile) { throw new Error(\"Char '\" + chars[i] + \"' not found in tileMap\"); }\n\t\t\n\t\tif (this._options.tileColorize) { /* apply colorization */\n\t\t\tvar canvas = this._colorCanvas;\n\t\t\tvar context = canvas.getContext(\"2d\");\n\t\t\tcontext.clearRect(0, 0, tileWidth, tileHeight);\n\n\t\t\tcontext.drawImage(\n\t\t\t\tthis._options.tileSet,\n\t\t\t\ttile[0], tile[1], tileWidth, tileHeight,\n\t\t\t\t0, 0, tileWidth, tileHeight\n\t\t\t);\n\n\t\t\tif (fg != \"transparent\") {\n\t\t\t\tcontext.fillStyle = fg;\n\t\t\t\tcontext.globalCompositeOperation = \"source-atop\";\n\t\t\t\tcontext.fillRect(0, 0, tileWidth, tileHeight);\n\t\t\t}\n\n\t\t\tif (bg != \"transparent\") {\n\t\t\t\tcontext.fillStyle = bg;\n\t\t\t\tcontext.globalCompositeOperation = \"destination-over\";\n\t\t\t\tcontext.fillRect(0, 0, tileWidth, tileHeight);\n\t\t\t}\n\n\t\t\tthis._context.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n\n\t\t} else { /* no colorizing, easy */\n\t\t\tthis._context.drawImage(\n\t\t\t\tthis._options.tileSet,\n\t\t\t\ttile[0], tile[1], tileWidth, tileHeight,\n\t\t\t\tx*tileWidth, y*tileHeight, tileWidth, tileHeight\n\t\t\t);\n\t\t}\n\t}\n}\n\nROT.Display.Tile.prototype.computeSize = function(availWidth, availHeight) {\n\tvar width = Math.floor(availWidth / this._options.tileWidth);\n\tvar height = Math.floor(availHeight / this._options.tileHeight);\n\treturn [width, height];\n}\n\nROT.Display.Tile.prototype.computeFontSize = function(availWidth, availHeight) {\n\tvar width = Math.floor(availWidth / this._options.width);\n\tvar height = Math.floor(availHeight / this._options.height);\n\treturn [width, height];\n}\n\nROT.Display.Tile.prototype.eventToPosition = function(x, y) {\n\treturn [Math.floor(x/this._options.tileWidth), Math.floor(y/this._options.tileHeight)];\n}\n/**\n * @namespace\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nROT.RNG = {\n\t/**\n\t * @returns {number} \n\t */\n\tgetSeed: function() {\n\t\treturn this._seed;\n\t},\n\n\t/**\n\t * @param {number} seed Seed the number generator\n\t */\n\tsetSeed: function(seed) {\n\t\tseed = (seed < 1 ? 1/seed : seed);\n\n\t\tthis._seed = seed;\n\t\tthis._s0 = (seed >>> 0) * this._frac;\n\n\t\tseed = (seed*69069 + 1) >>> 0;\n\t\tthis._s1 = seed * this._frac;\n\n\t\tseed = (seed*69069 + 1) >>> 0;\n\t\tthis._s2 = seed * this._frac;\n\n\t\tthis._c = 1;\n\t\treturn this;\n\t},\n\n\t/**\n\t * @returns {float} Pseudorandom value [0,1), uniformly distributed\n\t */\n\tgetUniform: function() {\n\t\tvar t = 2091639 * this._s0 + this._c * this._frac;\n\t\tthis._s0 = this._s1;\n\t\tthis._s1 = this._s2;\n\t\tthis._c = t | 0;\n\t\tthis._s2 = t - this._c;\n\t\treturn this._s2;\n\t},\n\n\t/**\n\t * @param {int} lowerBound The lower end of the range to return a value from, inclusive\n\t * @param {int} upperBound The upper end of the range to return a value from, inclusive\n\t * @returns {int} Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n\t */\n\tgetUniformInt: function(lowerBound, upperBound) {\n\t\tvar max = Math.max(lowerBound, upperBound);\n\t\tvar min = Math.min(lowerBound, upperBound);\n\t\treturn Math.floor(this.getUniform() * (max - min + 1)) + min;\n\t},\n\n\t/**\n\t * @param {float} [mean=0] Mean value\n\t * @param {float} [stddev=1] Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n\t * @returns {float} A normally distributed pseudorandom value\n\t */\n\tgetNormal: function(mean, stddev) {\n\t\tdo {\n\t\t\tvar u = 2*this.getUniform()-1;\n\t\t\tvar v = 2*this.getUniform()-1;\n\t\t\tvar r = u*u + v*v;\n\t\t} while (r > 1 || r == 0);\n\n\t\tvar gauss = u * Math.sqrt(-2*Math.log(r)/r);\n\t\treturn (mean || 0) + gauss*(stddev || 1);\n\t},\n\n\t/**\n\t * @returns {int} Pseudorandom value [1,100] inclusive, uniformly distributed\n\t */\n\tgetPercentage: function() {\n\t\treturn 1 + Math.floor(this.getUniform()*100);\n\t},\n\t\n\t/**\n\t * @param {object} data key=whatever, value=weight (relative probability)\n\t * @returns {string} whatever\n\t */\n\tgetWeightedValue: function(data) {\n\t\tvar total = 0;\n\t\t\n\t\tfor (var id in data) {\n\t\t\ttotal += data[id];\n\t\t}\n\t\tvar random = this.getUniform()*total;\n\t\t\n\t\tvar part = 0;\n\t\tfor (var id in data) {\n\t\t\tpart += data[id];\n\t\t\tif (random < part) { return id; }\n\t\t}\n\n\t\t// If by some floating-point annoyance we have\n\t\t// random >= total, just return the last id.\n\t\treturn id;\n\t},\n\n\t/**\n\t * Get RNG state. Useful for storing the state and re-setting it via setState.\n\t * @returns {?} Internal state\n\t */\n\tgetState: function() {\n\t\treturn [this._s0, this._s1, this._s2, this._c];\n\t},\n\n\t/**\n\t * Set a previously retrieved state.\n\t * @param {?} state\n\t */\n\tsetState: function(state) {\n\t\tthis._s0 = state[0];\n\t\tthis._s1 = state[1];\n\t\tthis._s2 = state[2];\n\t\tthis._c  = state[3];\n\t\treturn this;\n\t},\n\n\t/**\n\t * Returns a cloned RNG\n\t */\n\tclone: function() {\n\t\tvar clone = Object.create(this);\n\t\tclone.setState(this.getState());\n\t\treturn clone;\n\t},\n\n\t_s0: 0,\n\t_s1: 0,\n\t_s2: 0,\n\t_c: 0,\n\t_frac: 2.3283064365386963e-10 /* 2^-32 */\n}\n\nROT.RNG.setSeed(Date.now());\n/**\n * @class (Markov process)-based string generator. \n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>. \n * Offers configurable order and prior.\n * @param {object} [options]\n * @param {bool} [options.words=false] Use word mode?\n * @param {int} [options.order=3]\n * @param {float} [options.prior=0.001]\n */\nROT.StringGenerator = function(options) {\n\tthis._options = {\n\t\twords: false,\n\t\torder: 3,\n\t\tprior: 0.001\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\n\tthis._boundary = String.fromCharCode(0);\n\tthis._suffix = this._boundary;\n\tthis._prefix = [];\n\tfor (var i=0;i<this._options.order;i++) { this._prefix.push(this._boundary); }\n\n\tthis._priorValues = {};\n\tthis._priorValues[this._boundary] = this._options.prior;\n\n\tthis._data = {};\n}\n\n/**\n * Remove all learning data\n */\nROT.StringGenerator.prototype.clear = function() {\n\tthis._data = {};\n\tthis._priorValues = {};\n}\n\n/**\n * @returns {string} Generated string\n */\nROT.StringGenerator.prototype.generate = function() {\n\tvar result = [this._sample(this._prefix)];\n\twhile (result[result.length-1] != this._boundary) {\n\t\tresult.push(this._sample(result));\n\t}\n\treturn this._join(result.slice(0, -1));\n}\n\n/**\n * Observe (learn) a string from a training set\n */\nROT.StringGenerator.prototype.observe = function(string) {\n\tvar tokens = this._split(string);\n\n\tfor (var i=0; i<tokens.length; i++) {\n\t\tthis._priorValues[tokens[i]] = this._options.prior;\n\t}\n\n\ttokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n\n\tfor (var i=this._options.order; i<tokens.length; i++) {\n\t\tvar context = tokens.slice(i-this._options.order, i);\n\t\tvar event = tokens[i];\n\t\tfor (var j=0; j<context.length; j++) {\n\t\t\tvar subcontext = context.slice(j);\n\t\t\tthis._observeEvent(subcontext, event);\n\t\t}\n\t}\n}\n\nROT.StringGenerator.prototype.getStats = function() {\n\tvar parts = [];\n\n\tvar priorCount = 0;\n\tfor (var p in this._priorValues) { priorCount++; }\n\tpriorCount--; /* boundary */\n\tparts.push(\"distinct samples: \" + priorCount);\n\n\tvar dataCount = 0;\n\tvar eventCount = 0;\n\tfor (var p in this._data) { \n\t\tdataCount++; \n\t\tfor (var key in this._data[p]) {\n\t\t\teventCount++;\n\t\t}\n\t}\n\tparts.push(\"dictionary size (contexts): \" + dataCount);\n\tparts.push(\"dictionary size (events): \" + eventCount);\n\n\treturn parts.join(\", \");\n}\n\n/**\n * @param {string}\n * @returns {string[]}\n */\nROT.StringGenerator.prototype._split = function(str) {\n\treturn str.split(this._options.words ? /\\s+/ : \"\");\n}\n\n/**\n * @param {string[]}\n * @returns {string} \n */\nROT.StringGenerator.prototype._join = function(arr) {\n\treturn arr.join(this._options.words ? \" \" : \"\");\n}\n\n/**\n * @param {string[]} context\n * @param {string} event\n */\nROT.StringGenerator.prototype._observeEvent = function(context, event) {\n\tvar key = this._join(context);\n\tif (!(key in this._data)) { this._data[key] = {}; }\n\tvar data = this._data[key];\n\n\tif (!(event in data)) { data[event] = 0; }\n\tdata[event]++;\n}\n\n/**\n * @param {string[]}\n * @returns {string}\n */\nROT.StringGenerator.prototype._sample = function(context) {\n\tcontext = this._backoff(context);\n\tvar key = this._join(context);\n\tvar data = this._data[key];\n\n\tvar available = {};\n\n\tif (this._options.prior) {\n\t\tfor (var event in this._priorValues) { available[event] = this._priorValues[event]; }\n\t\tfor (var event in data) { available[event] += data[event]; }\n\t} else { \n\t\tavailable = data;\n\t}\n\n\treturn ROT.RNG.getWeightedValue(available);\n}\n\n/**\n * @param {string[]}\n * @returns {string[]}\n */\nROT.StringGenerator.prototype._backoff = function(context) {\n\tif (context.length > this._options.order) {\n\t\tcontext = context.slice(-this._options.order);\n\t} else if (context.length < this._options.order) {\n\t\tcontext = this._prefix.slice(0, this._options.order - context.length).concat(context);\n\t}\n\n\twhile (!(this._join(context) in this._data) && context.length > 0) { context = context.slice(1); }\n\n\treturn context;\n}\n/**\n * @class Generic event queue: stores events and retrieves them based on their time\n */\nROT.EventQueue = function() {\n\tthis._time = 0;\n\tthis._events = [];\n\tthis._eventTimes = [];\n}\n\n/**\n * @returns {number} Elapsed time\n */\nROT.EventQueue.prototype.getTime = function() {\n\treturn this._time;\n}\n\n/**\n * Clear all scheduled events\n */\nROT.EventQueue.prototype.clear = function() {\n\tthis._events = [];\n\tthis._eventTimes = [];\n\treturn this;\n}\n\n/**\n * @param {?} event\n * @param {number} time\n */\nROT.EventQueue.prototype.add = function(event, time) {\n\tvar index = this._events.length;\n\tfor (var i=0;i<this._eventTimes.length;i++) {\n\t\tif (this._eventTimes[i] > time) {\n\t\t\tindex = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tthis._events.splice(index, 0, event);\n\tthis._eventTimes.splice(index, 0, time);\n}\n\n/**\n * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n * @returns {? || null} The event previously added by addEvent, null if no event available\n */\nROT.EventQueue.prototype.get = function() {\n\tif (!this._events.length) { return null; }\n\n\tvar time = this._eventTimes.splice(0, 1)[0];\n\tif (time > 0) { /* advance */\n\t\tthis._time += time;\n\t\tfor (var i=0;i<this._eventTimes.length;i++) { this._eventTimes[i] -= time; }\n\t}\n\n\treturn this._events.splice(0, 1)[0];\n}\n\n/**\n * Remove an event from the queue\n * @param {?} event\n * @returns {bool} success?\n */\nROT.EventQueue.prototype.remove = function(event) {\n\tvar index = this._events.indexOf(event);\n\tif (index == -1) { return false }\n\tthis._remove(index);\n\treturn true;\n}\n\n/**\n * Remove an event from the queue\n * @param {int} index\n */\nROT.EventQueue.prototype._remove = function(index) {\n\tthis._events.splice(index, 1);\n\tthis._eventTimes.splice(index, 1);\n}\n/**\n * @class Abstract scheduler\n */\nROT.Scheduler = function() {\n\tthis._queue = new ROT.EventQueue();\n\tthis._repeat = [];\n\tthis._current = null;\n}\n\n/**\n * @see ROT.EventQueue#getTime\n */\nROT.Scheduler.prototype.getTime = function() {\n\treturn this._queue.getTime();\n}\n\n/**\n * @param {?} item\n * @param {bool} repeat\n */\nROT.Scheduler.prototype.add = function(item, repeat) {\n\tif (repeat) { this._repeat.push(item); }\n\treturn this;\n}\n\n/**\n * Clear all items\n */\nROT.Scheduler.prototype.clear = function() {\n\tthis._queue.clear();\n\tthis._repeat = [];\n\tthis._current = null;\n\treturn this;\n}\n\n/**\n * Remove a previously added item\n * @param {?} item\n * @returns {bool} successful?\n */\nROT.Scheduler.prototype.remove = function(item) {\n\tvar result = this._queue.remove(item);\n\n\tvar index = this._repeat.indexOf(item);\n\tif (index != -1) { this._repeat.splice(index, 1); }\n\n\tif (this._current == item) { this._current = null; }\n\n\treturn result;\n}\n\n/**\n * Schedule next item\n * @returns {?}\n */\nROT.Scheduler.prototype.next = function() {\n\tthis._current = this._queue.get();\n\treturn this._current;\n}\n/**\n * @class Simple fair scheduler (round-robin style)\n * @augments ROT.Scheduler\n */\nROT.Scheduler.Simple = function() {\n\tROT.Scheduler.call(this);\n}\nROT.Scheduler.Simple.extend(ROT.Scheduler);\n\n/**\n * @see ROT.Scheduler#add\n */\nROT.Scheduler.Simple.prototype.add = function(item, repeat) {\n\tthis._queue.add(item, 0);\n\treturn ROT.Scheduler.prototype.add.call(this, item, repeat);\n}\n\n/**\n * @see ROT.Scheduler#next\n */\nROT.Scheduler.Simple.prototype.next = function() {\n\tif (this._current && this._repeat.indexOf(this._current) != -1) {\n\t\tthis._queue.add(this._current, 0);\n\t}\n\treturn ROT.Scheduler.prototype.next.call(this);\n}\n/**\n * @class Speed-based scheduler\n * @augments ROT.Scheduler\n */\nROT.Scheduler.Speed = function() {\n\tROT.Scheduler.call(this);\n}\nROT.Scheduler.Speed.extend(ROT.Scheduler);\n\n/**\n * @param {object} item anything with \"getSpeed\" method\n * @param {bool} repeat\n * @see ROT.Scheduler#add\n */\nROT.Scheduler.Speed.prototype.add = function(item, repeat) {\n\tthis._queue.add(item, 1/item.getSpeed());\n\treturn ROT.Scheduler.prototype.add.call(this, item, repeat);\n}\n\n/**\n * @see ROT.Scheduler#next\n */\nROT.Scheduler.Speed.prototype.next = function() {\n\tif (this._current && this._repeat.indexOf(this._current) != -1) {\n\t\tthis._queue.add(this._current, 1/this._current.getSpeed());\n\t}\n\treturn ROT.Scheduler.prototype.next.call(this);\n}\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nROT.Scheduler.Action = function() {\n\tROT.Scheduler.call(this);\n\tthis._defaultDuration = 1; /* for newly added */\n\tthis._duration = this._defaultDuration; /* for this._current */\n}\nROT.Scheduler.Action.extend(ROT.Scheduler);\n\n/**\n * @param {object} item\n * @param {bool} repeat\n * @param {number} [time=1]\n * @see ROT.Scheduler#add\n */\nROT.Scheduler.Action.prototype.add = function(item, repeat, time) {\n\tthis._queue.add(item, time || this._defaultDuration);\n\treturn ROT.Scheduler.prototype.add.call(this, item, repeat);\n}\n\nROT.Scheduler.Action.prototype.clear = function() {\n\tthis._duration = this._defaultDuration;\n\treturn ROT.Scheduler.prototype.clear.call(this);\n}\n\nROT.Scheduler.Action.prototype.remove = function(item) {\n\tif (item == this._current) { this._duration = this._defaultDuration; }\n\treturn ROT.Scheduler.prototype.remove.call(this, item);\n}\n\n/**\n * @see ROT.Scheduler#next\n */\nROT.Scheduler.Action.prototype.next = function() {\n\tif (this._current && this._repeat.indexOf(this._current) != -1) {\n\t\tthis._queue.add(this._current, this._duration || this._defaultDuration);\n\t\tthis._duration = this._defaultDuration;\n\t}\n\treturn ROT.Scheduler.prototype.next.call(this);\n}\n\n/**\n * Set duration for the active item\n */\nROT.Scheduler.Action.prototype.setDuration = function(time) {\n\tif (this._current) { this._duration = time; }\n\treturn this;\n}\n/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nROT.Engine = function(scheduler) {\n\tthis._scheduler = scheduler;\n\tthis._lock = 1;\n}\n\n/**\n * Start the main loop. When this call returns, the loop is locked.\n */\nROT.Engine.prototype.start = function() {\n\treturn this.unlock();\n}\n\n/**\n * Interrupt the engine by an asynchronous action\n */\nROT.Engine.prototype.lock = function() {\n\tthis._lock++;\n\treturn this;\n}\n\n/**\n * Resume execution (paused by a previous lock)\n */\nROT.Engine.prototype.unlock = function() {\n\tif (!this._lock) { throw new Error(\"Cannot unlock unlocked engine\"); }\n\tthis._lock--;\n\n\twhile (!this._lock) {\n\t\tvar actor = this._scheduler.next();\n\t\tif (!actor) { return this.lock(); } /* no actors */\n\t\tvar result = actor.act();\n\t\tif (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n\t\t\tthis.lock();\n\t\t\tresult.then(this.unlock.bind(this));\n\t\t}\n\t}\n\n\treturn this;\n}\n/**\n * @class Base map generator\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n */\nROT.Map = function(width, height) {\n\tthis._width = width || ROT.DEFAULT_WIDTH;\n\tthis._height = height || ROT.DEFAULT_HEIGHT;\n};\n\nROT.Map.prototype.create = function(callback) {}\n\nROT.Map.prototype._fillMap = function(value) {\n\tvar map = [];\n\tfor (var i=0;i<this._width;i++) {\n\t\tmap.push([]);\n\t\tfor (var j=0;j<this._height;j++) { map[i].push(value); }\n\t}\n\treturn map;\n}\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nROT.Map.Arena = function(width, height) {\n\tROT.Map.call(this, width, height);\n}\nROT.Map.Arena.extend(ROT.Map);\n\nROT.Map.Arena.prototype.create = function(callback) {\n\tvar w = this._width-1;\n\tvar h = this._height-1;\n\tfor (var i=0;i<=w;i++) {\n\t\tfor (var j=0;j<=h;j++) {\n\t\t\tvar empty = (i && j && i<w && j<h);\n\t\t\tcallback(i, j, empty ? 0 : 1);\n\t\t}\n\t}\n\treturn this;\n}\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nROT.Map.DividedMaze = function(width, height) {\n\tROT.Map.call(this, width, height);\n\tthis._stack = [];\n}\nROT.Map.DividedMaze.extend(ROT.Map);\n\nROT.Map.DividedMaze.prototype.create = function(callback) {\n\tvar w = this._width;\n\tvar h = this._height;\n\t\n\tthis._map = [];\n\t\n\tfor (var i=0;i<w;i++) {\n\t\tthis._map.push([]);\n\t\tfor (var j=0;j<h;j++) {\n\t\t\tvar border = (i == 0 || j == 0 || i+1 == w || j+1 == h);\n\t\t\tthis._map[i].push(border ? 1 : 0);\n\t\t}\n\t}\n\t\n\tthis._stack = [\n\t\t[1, 1, w-2, h-2]\n\t];\n\tthis._process();\n\t\n\tfor (var i=0;i<w;i++) {\n\t\tfor (var j=0;j<h;j++) {\n\t\t\tcallback(i, j, this._map[i][j]);\n\t\t}\n\t}\n\tthis._map = null;\n\treturn this;\n}\n\nROT.Map.DividedMaze.prototype._process = function() {\n\twhile (this._stack.length) {\n\t\tvar room = this._stack.shift(); /* [left, top, right, bottom] */\n\t\tthis._partitionRoom(room);\n\t}\n}\n\nROT.Map.DividedMaze.prototype._partitionRoom = function(room) {\n\tvar availX = [];\n\tvar availY = [];\n\t\n\tfor (var i=room[0]+1;i<room[2];i++) {\n\t\tvar top = this._map[i][room[1]-1];\n\t\tvar bottom = this._map[i][room[3]+1];\n\t\tif (top && bottom && !(i % 2)) { availX.push(i); }\n\t}\n\t\n\tfor (var j=room[1]+1;j<room[3];j++) {\n\t\tvar left = this._map[room[0]-1][j];\n\t\tvar right = this._map[room[2]+1][j];\n\t\tif (left && right && !(j % 2)) { availY.push(j); }\n\t}\n\n\tif (!availX.length || !availY.length) { return; }\n\n\tvar x = availX.random();\n\tvar y = availY.random();\n\t\n\tthis._map[x][y] = 1;\n\t\n\tvar walls = [];\n\t\n\tvar w = []; walls.push(w); /* left part */\n\tfor (var i=room[0]; i<x; i++) { \n\t\tthis._map[i][y] = 1;\n\t\tw.push([i, y]); \n\t}\n\t\n\tvar w = []; walls.push(w); /* right part */\n\tfor (var i=x+1; i<=room[2]; i++) { \n\t\tthis._map[i][y] = 1;\n\t\tw.push([i, y]); \n\t}\n\n\tvar w = []; walls.push(w); /* top part */\n\tfor (var j=room[1]; j<y; j++) { \n\t\tthis._map[x][j] = 1;\n\t\tw.push([x, j]); \n\t}\n\t\n\tvar w = []; walls.push(w); /* bottom part */\n\tfor (var j=y+1; j<=room[3]; j++) { \n\t\tthis._map[x][j] = 1;\n\t\tw.push([x, j]); \n\t}\n\t\t\n\tvar solid = walls.random();\n\tfor (var i=0;i<walls.length;i++) {\n\t\tvar w = walls[i];\n\t\tif (w == solid) { continue; }\n\t\t\n\t\tvar hole = w.random();\n\t\tthis._map[hole[0]][hole[1]] = 0;\n\t}\n\n\tthis._stack.push([room[0], room[1], x-1, y-1]); /* left top */\n\tthis._stack.push([x+1, room[1], room[2], y-1]); /* right top */\n\tthis._stack.push([room[0], y+1, x-1, room[3]]); /* left bottom */\n\tthis._stack.push([x+1, y+1, room[2], room[3]]); /* right bottom */\n}\n/**\n * @class Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n * @augments ROT.Map\n */\nROT.Map.IceyMaze = function(width, height, regularity) {\n\tROT.Map.call(this, width, height);\n\tthis._regularity = regularity || 0;\n}\nROT.Map.IceyMaze.extend(ROT.Map);\n\nROT.Map.IceyMaze.prototype.create = function(callback) {\n\tvar width = this._width;\n\tvar height = this._height;\n\t\n\tvar map = this._fillMap(1);\n\t\n\twidth -= (width % 2 ? 1 : 2);\n\theight -= (height % 2 ? 1 : 2);\n\n\tvar cx = 0;\n\tvar cy = 0;\n\tvar nx = 0;\n\tvar ny = 0;\n\n\tvar done = 0;\n\tvar blocked = false;\n\tvar dirs = [\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0]\n\t];\n\tdo {\n\t\tcx = 1 + 2*Math.floor(ROT.RNG.getUniform()*(width-1) / 2);\n\t\tcy = 1 + 2*Math.floor(ROT.RNG.getUniform()*(height-1) / 2);\n\n\t\tif (!done) { map[cx][cy] = 0; }\n\t\t\n\t\tif (!map[cx][cy]) {\n\t\t\tthis._randomize(dirs);\n\t\t\tdo {\n\t\t\t\tif (Math.floor(ROT.RNG.getUniform()*(this._regularity+1)) == 0) { this._randomize(dirs); }\n\t\t\t\tblocked = true;\n\t\t\t\tfor (var i=0;i<4;i++) {\n\t\t\t\t\tnx = cx + dirs[i][0]*2;\n\t\t\t\t\tny = cy + dirs[i][1]*2;\n\t\t\t\t\tif (this._isFree(map, nx, ny, width, height)) {\n\t\t\t\t\t\tmap[nx][ny] = 0;\n\t\t\t\t\t\tmap[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcx = nx;\n\t\t\t\t\t\tcy = ny;\n\t\t\t\t\t\tblocked = false;\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} while (!blocked);\n\t\t}\n\t} while (done+1 < width*height/4);\n\t\n\tfor (var i=0;i<this._width;i++) {\n\t\tfor (var j=0;j<this._height;j++) {\n\t\t\tcallback(i, j, map[i][j]);\n\t\t}\n\t}\n\tthis._map = null;\n\treturn this;\n}\n\nROT.Map.IceyMaze.prototype._randomize = function(dirs) {\n\tfor (var i=0;i<4;i++) {\n\t\tdirs[i][0] = 0;\n\t\tdirs[i][1] = 0;\n\t}\n\t\n\tswitch (Math.floor(ROT.RNG.getUniform()*4)) {\n\t\tcase 0:\n\t\t\tdirs[0][0] = -1; dirs[1][0] = 1;\n\t\t\tdirs[2][1] = -1; dirs[3][1] = 1;\n\t\tbreak;\n\t\tcase 1:\n\t\t\tdirs[3][0] = -1; dirs[2][0] = 1;\n\t\t\tdirs[1][1] = -1; dirs[0][1] = 1;\n\t\tbreak;\n\t\tcase 2:\n\t\t\tdirs[2][0] = -1; dirs[3][0] = 1;\n\t\t\tdirs[0][1] = -1; dirs[1][1] = 1;\n\t\tbreak;\n\t\tcase 3:\n\t\t\tdirs[1][0] = -1; dirs[0][0] = 1;\n\t\t\tdirs[3][1] = -1; dirs[2][1] = 1;\n\t\tbreak;\n\t}\n}\n\nROT.Map.IceyMaze.prototype._isFree = function(map, x, y, width, height) {\n\tif (x < 1 || y < 1 || x >= width || y >= height) { return false; }\n\treturn map[x][y];\n}\n/**\n * @class Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n * @augments ROT.Map\n */\nROT.Map.EllerMaze = function(width, height) {\n\tROT.Map.call(this, width, height);\n}\nROT.Map.EllerMaze.extend(ROT.Map);\n\nROT.Map.EllerMaze.prototype.create = function(callback) {\n\tvar map = this._fillMap(1);\n\tvar w = Math.ceil((this._width-2)/2);\n\t\n\tvar rand = 9/24;\n\t\n\tvar L = [];\n\tvar R = [];\n\t\n\tfor (var i=0;i<w;i++) {\n\t\tL.push(i);\n\t\tR.push(i);\n\t}\n\tL.push(w-1); /* fake stop-block at the right side */\n\n\tfor (var j=1;j+3<this._height;j+=2) {\n\t\t/* one row */\n\t\tfor (var i=0;i<w;i++) {\n\t\t\t/* cell coords (will be always empty) */\n\t\t\tvar x = 2*i+1;\n\t\t\tvar y = j;\n\t\t\tmap[x][y] = 0;\n\t\t\t\n\t\t\t/* right connection */\n\t\t\tif (i != L[i+1] && ROT.RNG.getUniform() > rand) {\n\t\t\t\tthis._addToList(i, L, R);\n\t\t\t\tmap[x+1][y] = 0;\n\t\t\t}\n\t\t\t\n\t\t\t/* bottom connection */\n\t\t\tif (i != L[i] && ROT.RNG.getUniform() > rand) {\n\t\t\t\t/* remove connection */\n\t\t\t\tthis._removeFromList(i, L, R);\n\t\t\t} else {\n\t\t\t\t/* create connection */\n\t\t\t\tmap[x][y+1] = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t/* last row */\n\tfor (var i=0;i<w;i++) {\n\t\t/* cell coords (will be always empty) */\n\t\tvar x = 2*i+1;\n\t\tvar y = j;\n\t\tmap[x][y] = 0;\n\t\t\n\t\t/* right connection */\n\t\tif (i != L[i+1] && (i == L[i] || ROT.RNG.getUniform() > rand)) {\n\t\t\t/* dig right also if the cell is separated, so it gets connected to the rest of maze */\n\t\t\tthis._addToList(i, L, R);\n\t\t\tmap[x+1][y] = 0;\n\t\t}\n\t\t\n\t\tthis._removeFromList(i, L, R);\n\t}\n\t\n\tfor (var i=0;i<this._width;i++) {\n\t\tfor (var j=0;j<this._height;j++) {\n\t\t\tcallback(i, j, map[i][j]);\n\t\t}\n\t}\n\t\n\treturn this;\n}\n\n/**\n * Remove \"i\" from its list\n */\nROT.Map.EllerMaze.prototype._removeFromList = function(i, L, R) {\n\tR[L[i]] = R[i];\n\tL[R[i]] = L[i];\n\tR[i] = i;\n\tL[i] = i;\n}\n\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nROT.Map.EllerMaze.prototype._addToList = function(i, L, R) {\n\tR[L[i+1]] = R[i];\n\tL[R[i]] = L[i+1];\n\tR[i] = i+1;\n\tL[i+1] = i;\n}\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nROT.Map.Cellular = function(width, height, options) {\n\tROT.Map.call(this, width, height);\n\tthis._options = {\n\t\tborn: [5, 6, 7, 8],\n\t\tsurvive: [4, 5, 6, 7, 8],\n\t\ttopology: 8,\n\t\tconnected: false\n\t};\n\tthis.setOptions(options);\n\t\n\tthis._dirs = ROT.DIRS[this._options.topology];\n\tthis._map = this._fillMap(0);\n}\nROT.Map.Cellular.extend(ROT.Map);\n\n/**\n * Fill the map with random values\n * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n */\nROT.Map.Cellular.prototype.randomize = function(probability) {\n\tfor (var i=0;i<this._width;i++) {\n\t\tfor (var j=0;j<this._height;j++) {\n\t\t\tthis._map[i][j] = (ROT.RNG.getUniform() < probability ? 1 : 0);\n\t\t}\n\t}\n\treturn this;\n}\n\n/**\n * Change options.\n * @see ROT.Map.Cellular\n */\nROT.Map.Cellular.prototype.setOptions = function(options) {\n\tfor (var p in options) { this._options[p] = options[p]; }\n}\n\nROT.Map.Cellular.prototype.set = function(x, y, value) {\n\tthis._map[x][y] = value;\n}\n\nROT.Map.Cellular.prototype.create = function(callback) {\n\tvar newMap = this._fillMap(0);\n\tvar born = this._options.born;\n\tvar survive = this._options.survive;\n\n\n\tfor (var j=0;j<this._height;j++) {\n\t\tvar widthStep = 1;\n\t\tvar widthStart = 0;\n\t\tif (this._options.topology == 6) { \n\t\t\twidthStep = 2;\n\t\t\twidthStart = j%2;\n\t\t}\n\n\t\tfor (var i=widthStart; i<this._width; i+=widthStep) {\n\n\t\t\tvar cur = this._map[i][j];\n\t\t\tvar ncount = this._getNeighbors(i, j);\n\t\t\t\n\t\t\tif (cur && survive.indexOf(ncount) != -1) { /* survive */\n\t\t\t\tnewMap[i][j] = 1;\n\t\t\t} else if (!cur && born.indexOf(ncount) != -1) { /* born */\n\t\t\t\tnewMap[i][j] = 1;\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\t\n\tthis._map = newMap;\n\n\tif (this._options.connected) { this._completeMaze(); } // optionally connect every space\n\n\tif (!callback) { return; }\n\n\tfor (var j=0;j<this._height;j++) {\n\t\tvar widthStep = 1;\n\t\tvar widthStart = 0;\n\t\tif (this._options.topology == 6) { \n\t\t\twidthStep = 2;\n\t\t\twidthStart = j%2;\n\t\t}\n\t\tfor (var i=widthStart; i<this._width; i+=widthStep) {\n\t\t\tcallback(i, j, newMap[i][j]);\n\t\t}\n\t}\n}\n\n/**\n * Get neighbor count at [i,j] in this._map\n */\nROT.Map.Cellular.prototype._getNeighbors = function(cx, cy) {\n\tvar result = 0;\n\tfor (var i=0;i<this._dirs.length;i++) {\n\t\tvar dir = this._dirs[i];\n\t\tvar x = cx + dir[0];\n\t\tvar y = cy + dir[1];\n\t\t\n\t\tif (x < 0 || x >= this._width || x < 0 || y >= this._width) { continue; }\n\t\tresult += (this._map[x][y] == 1 ? 1 : 0);\n\t}\n\t\n\treturn result;\n}\n\n/**\n * Make sure every non-wall space is accessible.\n */\nROT.Map.Cellular.prototype._completeMaze = function() {\n\tvar allFreeSpace = [];\n\tvar notConnected = {};\n\t// find all free space\n\tfor (var x = 0; x < this._width; x++) {\n\t\tfor (var y = 0; y < this._height; y++) {\n\t\t\tif (this._freeSpace(x, y)) {\n\t\t\t\tvar p = [x, y];\n\t\t\t\tnotConnected[this._pointKey(p)] = p;\n\t\t\t\tallFreeSpace.push([x, y]);\n\t\t\t}\n\t\t}\n\t}\n\tvar start = allFreeSpace[ROT.RNG.getUniformInt(0, allFreeSpace.length - 1)];\n\n\tvar key = this._pointKey(start);\n\tvar connected = {};\n\tconnected[key] = start;\n\tdelete notConnected[key]\n\n\t// find what's connected to the starting point\n\tthis._findConnected(connected, notConnected, [start]);\n\n\twhile (Object.keys(notConnected).length > 0) {\n\n\t\t// find two points from notConnected to connected\n\t\tvar p = this._getFromTo(connected, notConnected);\n\t\tvar from = p[0]; // notConnected\n\t\tvar to = p[1]; // connected\n\n\t\t// find everything connected to the starting point\n\t\tvar local = {};\n\t\tlocal[this._pointKey(from)] = from;\n\t\tthis._findConnected(local, notConnected, [from], true);\n\n\t\t// connect to a connected square\n\t\tthis._tunnelToConnected(to, from, connected, notConnected);\n\n\t\t// now all of local is connected\n\t\tfor (var k in local) {\n\t\t\tvar pp = local[k];\n\t\t\tthis._map[pp[0]][pp[1]] = 0;\n\t\t\tconnected[k] = pp;\n\t\t\tdelete notConnected[k];\n\t\t}\n\t}\n}\n\n/**\n * Find random points to connect. Search for the closest point in the larger space. \n * This is to minimize the length of the passage while maintaining good performance.\n */\nROT.Map.Cellular.prototype._getFromTo = function(connected, notConnected) {\n\tvar from, to, d;\n\tvar connectedKeys = Object.keys(connected);\n\tvar notConnectedKeys = Object.keys(notConnected);\n\tfor (var i = 0; i < 5; i++) {\n\t\tif (connectedKeys.length < notConnectedKeys.length) {\n\t\t\tvar keys = connectedKeys;\n\t\t\tto = connected[keys[ROT.RNG.getUniformInt(0, keys.length - 1)]]\n\t\t\tfrom = this._getClosest(to, notConnected);\n\t\t} else {\n\t\t\tvar keys = notConnectedKeys;\n\t\t\tfrom = notConnected[keys[ROT.RNG.getUniformInt(0, keys.length - 1)]]\n\t\t\tto = this._getClosest(from, connected);\n\t\t}\n\t\td = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n\t\tif (d < 64) {\n\t\t\tbreak;\n\t\t}\n\t}\n\t// console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n\treturn [from, to];\n}\n\nROT.Map.Cellular.prototype._getClosest = function(point, space) {\n\tvar minPoint = null;\n\tvar minDist = null;\n\tfor (k in space) {\n\t\tvar p = space[k];\n\t\tvar d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n\t\tif (minDist == null || d < minDist) {\n\t\t\tminDist = d;\n\t\t\tminPoint = p;\n\t\t}\n\t}\n\treturn minPoint;\n}\n\nROT.Map.Cellular.prototype._findConnected = function(connected, notConnected, stack, keepNotConnected) {\n\twhile(stack.length > 0) {\n\t\tvar p = stack.splice(0, 1)[0];\n\t\tvar tests = [\n\t\t\t[p[0] + 1, p[1]],\n\t\t\t[p[0] - 1, p[1]],\n\t\t\t[p[0],     p[1] + 1],\n\t\t\t[p[0],     p[1] - 1]\n\t\t];\n\t\tfor (var i = 0; i < tests.length; i++) {\n\t\t\tvar key = this._pointKey(tests[i]);\n\t\t\tif (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1])) {\n\t\t\t\tconnected[key] = tests[i];\n\t\t\t\tif (!keepNotConnected) {\n\t\t\t\t\tdelete notConnected[key];\n\t\t\t\t}\n\t\t\t\tstack.push(tests[i]);\n\t\t\t}\n\t\t}\n\t}\n}\n\nROT.Map.Cellular.prototype._tunnelToConnected = function(to, from, connected, notConnected) {\n\tvar key = this._pointKey(from);\n\tvar a, b;\n\tif (from[0] < to[0]) {\n\t\ta = from;\n\t\tb = to;\n\t} else {\n\t\ta = to;\n\t\tb = from;\n\t}\n\tfor (var xx = a[0]; xx <= b[0]; xx++) {\n\t\tthis._map[xx][a[1]] = 0;\n\t\tvar p = [xx, a[1]];\n\t\tvar pkey = this._pointKey(p);\n\t\tconnected[pkey] = p;\n\t\tdelete notConnected[pkey];\n\t}\n\n\t// x is now fixed\n\tvar x = b[0];\n\n\tif (from[1] < to[1]) {\n\t\ta = from;\n\t\tb = to;\n\t} else {\n\t\ta = to;\n\t\tb = from;\n\t}\n\tfor (var yy = a[1]; yy < b[1]; yy++) {\n\t\tthis._map[x][yy] = 0;\n\t\tvar p = [x, yy];\n\t\tvar pkey = this._pointKey(p);\n\t\tconnected[pkey] = p;\n\t\tdelete notConnected[pkey];\n\t}\n}\n\nROT.Map.Cellular.prototype._freeSpace = function(x, y) {\n\treturn x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] != 1;\n}\n\nROT.Map.Cellular.prototype._pointKey = function(p) {\n\treturn p[0] + \".\" + p[1];\n}\n\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nROT.Map.Dungeon = function(width, height) {\n\tROT.Map.call(this, width, height);\n\tthis._rooms = []; /* list of all rooms */\n\tthis._corridors = [];\n}\nROT.Map.Dungeon.extend(ROT.Map);\n\n/**\n * Get all generated rooms\n * @returns {ROT.Map.Feature.Room[]}\n */\nROT.Map.Dungeon.prototype.getRooms = function() {\n\treturn this._rooms;\n}\n\n/**\n * Get all generated corridors\n * @returns {ROT.Map.Feature.Corridor[]}\n */\nROT.Map.Dungeon.prototype.getCorridors = function() {\n\treturn this._corridors;\n}\n/**\n * @class Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at \n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n * @augments ROT.Map.Dungeon\n */\nROT.Map.Digger = function(width, height, options) {\n\tROT.Map.Dungeon.call(this, width, height);\n\t\n\tthis._options = {\n\t\troomWidth: [3, 9], /* room minimum and maximum width */\n\t\troomHeight: [3, 5], /* room minimum and maximum height */\n\t\tcorridorLength: [3, 10], /* corridor minimum and maximum length */\n\t\tdugPercentage: 0.2, /* we stop after this percentage of level area has been dug out */\n\t\ttimeLimit: 1000 /* we stop after this much time has passed (msec) */\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\t\n\tthis._features = {\n\t\t\"Room\": 4,\n\t\t\"Corridor\": 4\n\t}\n\tthis._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n\tthis._walls = {}; /* these are available for digging */\n\t\n\tthis._digCallback = this._digCallback.bind(this);\n\tthis._canBeDugCallback = this._canBeDugCallback.bind(this);\n\tthis._isWallCallback = this._isWallCallback.bind(this);\n\tthis._priorityWallCallback = this._priorityWallCallback.bind(this);\n}\nROT.Map.Digger.extend(ROT.Map.Dungeon);\n\n/**\n * Create a map\n * @see ROT.Map#create\n */\nROT.Map.Digger.prototype.create = function(callback) {\n\tthis._rooms = [];\n\tthis._corridors = [];\n\tthis._map = this._fillMap(1);\n\tthis._walls = {};\n\tthis._dug = 0;\n\tvar area = (this._width-2) * (this._height-2);\n\n\tthis._firstRoom();\n\t\n\tvar t1 = Date.now();\n\n\tdo {\n\t\tvar t2 = Date.now();\n\t\tif (t2 - t1 > this._options.timeLimit) { break; }\n\n\t\t/* find a good wall */\n\t\tvar wall = this._findWall();\n\t\tif (!wall) { break; } /* no more walls */\n\t\t\n\t\tvar parts = wall.split(\",\");\n\t\tvar x = parseInt(parts[0]);\n\t\tvar y = parseInt(parts[1]);\n\t\tvar dir = this._getDiggingDirection(x, y);\n\t\tif (!dir) { continue; } /* this wall is not suitable */\n\t\t\n//\t\tconsole.log(\"wall\", x, y);\n\n\t\t/* try adding a feature */\n\t\tvar featureAttempts = 0;\n\t\tdo {\n\t\t\tfeatureAttempts++;\n\t\t\tif (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n\t\t\t\t//if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n\t\t\t\tthis._removeSurroundingWalls(x, y);\n\t\t\t\tthis._removeSurroundingWalls(x-dir[0], y-dir[1]);\n\t\t\t\tbreak; \n\t\t\t}\n\t\t} while (featureAttempts < this._featureAttempts);\n\t\t\n\t\tvar priorityWalls = 0;\n\t\tfor (var id in this._walls) { \n\t\t\tif (this._walls[id] > 1) { priorityWalls++; }\n\t\t}\n\n\t} while (this._dug/area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n\n\tthis._addDoors();\n\n\tif (callback) {\n\t\tfor (var i=0;i<this._width;i++) {\n\t\t\tfor (var j=0;j<this._height;j++) {\n\t\t\t\tcallback(i, j, this._map[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis._walls = {};\n\tthis._map = null;\n\n\treturn this;\n}\n\nROT.Map.Digger.prototype._digCallback = function(x, y, value) {\n\tif (value == 0 || value == 2) { /* empty */\n\t\tthis._map[x][y] = 0;\n\t\tthis._dug++;\n\t} else { /* wall */\n\t\tthis._walls[x+\",\"+y] = 1;\n\t}\n}\n\nROT.Map.Digger.prototype._isWallCallback = function(x, y) {\n\tif (x < 0 || y < 0 || x >= this._width || y >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\nROT.Map.Digger.prototype._canBeDugCallback = function(x, y) {\n\tif (x < 1 || y < 1 || x+1 >= this._width || y+1 >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\nROT.Map.Digger.prototype._priorityWallCallback = function(x, y) {\n\tthis._walls[x+\",\"+y] = 2;\n}\n\nROT.Map.Digger.prototype._firstRoom = function() {\n\tvar cx = Math.floor(this._width/2);\n\tvar cy = Math.floor(this._height/2);\n\tvar room = ROT.Map.Feature.Room.createRandomCenter(cx, cy, this._options);\n\tthis._rooms.push(room);\n\troom.create(this._digCallback);\n}\n\n/**\n * Get a suitable wall\n */\nROT.Map.Digger.prototype._findWall = function() {\n\tvar prio1 = [];\n\tvar prio2 = [];\n\tfor (var id in this._walls) {\n\t\tvar prio = this._walls[id];\n\t\tif (prio == 2) { \n\t\t\tprio2.push(id); \n\t\t} else {\n\t\t\tprio1.push(id);\n\t\t}\n\t}\n\t\n\tvar arr = (prio2.length ? prio2 : prio1);\n\tif (!arr.length) { return null; } /* no walls :/ */\n\t\n\tvar id = arr.random();\n\tdelete this._walls[id];\n\n\treturn id;\n}\n\n/**\n * Tries adding a feature\n * @returns {bool} was this a successful try?\n */\nROT.Map.Digger.prototype._tryFeature = function(x, y, dx, dy) {\n\tvar feature = ROT.RNG.getWeightedValue(this._features);\n\tfeature = ROT.Map.Feature[feature].createRandomAt(x, y, dx, dy, this._options);\n\t\n\tif (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n//\t\tconsole.log(\"not valid\");\n//\t\tfeature.debug();\n\t\treturn false;\n\t}\n\t\n\tfeature.create(this._digCallback);\n//\tfeature.debug();\n\n\tif (feature instanceof ROT.Map.Feature.Room) { this._rooms.push(feature); }\n\tif (feature instanceof ROT.Map.Feature.Corridor) { \n\t\tfeature.createPriorityWalls(this._priorityWallCallback);\n\t\tthis._corridors.push(feature); \n\t}\n\t\n\treturn true;\n}\n\nROT.Map.Digger.prototype._removeSurroundingWalls = function(cx, cy) {\n\tvar deltas = ROT.DIRS[4];\n\n\tfor (var i=0;i<deltas.length;i++) {\n\t\tvar delta = deltas[i];\n\t\tvar x = cx + delta[0];\n\t\tvar y = cy + delta[1];\n\t\tdelete this._walls[x+\",\"+y];\n\t\tvar x = cx + 2*delta[0];\n\t\tvar y = cy + 2*delta[1];\n\t\tdelete this._walls[x+\",\"+y];\n\t}\n}\n\n/**\n * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n */\nROT.Map.Digger.prototype._getDiggingDirection = function(cx, cy) {\n\tif (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) { return null; }\n\n\tvar result = null;\n\tvar deltas = ROT.DIRS[4];\n\t\n\tfor (var i=0;i<deltas.length;i++) {\n\t\tvar delta = deltas[i];\n\t\tvar x = cx + delta[0];\n\t\tvar y = cy + delta[1];\n\t\t\n\t\tif (!this._map[x][y]) { /* there already is another empty neighbor! */\n\t\t\tif (result) { return null; }\n\t\t\tresult = delta;\n\t\t}\n\t}\n\t\n\t/* no empty neighbor */\n\tif (!result) { return null; }\n\t\n\treturn [-result[0], -result[1]];\n}\n\n/**\n * Find empty spaces surrounding rooms, and apply doors.\n */\nROT.Map.Digger.prototype._addDoors = function() {\n\tvar data = this._map;\n\tvar isWallCallback = function(x, y) {\n\t\treturn (data[x][y] == 1);\n\t}\n\tfor (var i = 0; i < this._rooms.length; i++ ) {\n\t\tvar room = this._rooms[i];\n\t\troom.clearDoors();\n\t\troom.addDoors(isWallCallback);\n\t}\n}\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nROT.Map.Uniform = function(width, height, options) {\n\tROT.Map.Dungeon.call(this, width, height);\n\n\tthis._options = {\n\t\troomWidth: [3, 9], /* room minimum and maximum width */\n\t\troomHeight: [3, 5], /* room minimum and maximum height */\n\t\troomDugPercentage: 0.1, /* we stop after this percentage of level area has been dug out by rooms */\n\t\ttimeLimit: 1000 /* we stop after this much time has passed (msec) */\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\n\tthis._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n\tthis._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n\n\tthis._connected = []; /* list of already connected rooms */\n\tthis._unconnected = []; /* list of remaining unconnected rooms */\n\t\n\tthis._digCallback = this._digCallback.bind(this);\n\tthis._canBeDugCallback = this._canBeDugCallback.bind(this);\n\tthis._isWallCallback = this._isWallCallback.bind(this);\n}\nROT.Map.Uniform.extend(ROT.Map.Dungeon);\n\n/**\n * Create a map. If the time limit has been hit, returns null.\n * @see ROT.Map#create\n */\nROT.Map.Uniform.prototype.create = function(callback) {\n\tvar t1 = Date.now();\n\twhile (1) {\n\t\tvar t2 = Date.now();\n\t\tif (t2 - t1 > this._options.timeLimit) { return null; } /* time limit! */\n\t\n\t\tthis._map = this._fillMap(1);\n\t\tthis._dug = 0;\n\t\tthis._rooms = [];\n\t\tthis._unconnected = [];\n\t\tthis._generateRooms();\n\t\tif (this._rooms.length < 2) { continue; }\n\t\tif (this._generateCorridors()) { break; }\n\t}\n\t\n\tif (callback) {\n\t\tfor (var i=0;i<this._width;i++) {\n\t\t\tfor (var j=0;j<this._height;j++) {\n\t\t\t\tcallback(i, j, this._map[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn this;\n}\n\n/**\n * Generates a suitable amount of rooms\n */\nROT.Map.Uniform.prototype._generateRooms = function() {\n\tvar w = this._width-2;\n\tvar h = this._height-2;\n\n\tdo {\n\t\tvar room = this._generateRoom();\n\t\tif (this._dug/(w*h) > this._options.roomDugPercentage) { break; } /* achieved requested amount of free space */\n\t} while (room);\n\n\t/* either enough rooms, or not able to generate more of them :) */\n}\n\n/**\n * Try to generate one room\n */\nROT.Map.Uniform.prototype._generateRoom = function() {\n\tvar count = 0;\n\twhile (count < this._roomAttempts) {\n\t\tcount++;\n\t\t\n\t\tvar room = ROT.Map.Feature.Room.createRandom(this._width, this._height, this._options);\n\t\tif (!room.isValid(this._isWallCallback, this._canBeDugCallback)) { continue; }\n\t\t\n\t\troom.create(this._digCallback);\n\t\tthis._rooms.push(room);\n\t\treturn room;\n\t} \n\n\t/* no room was generated in a given number of attempts */\n\treturn null;\n}\n\n/**\n * Generates connectors beween rooms\n * @returns {bool} success Was this attempt successfull?\n */\nROT.Map.Uniform.prototype._generateCorridors = function() {\n\tvar cnt = 0;\n\twhile (cnt < this._corridorAttempts) {\n\t\tcnt++;\n\t\tthis._corridors = [];\n\n\t\t/* dig rooms into a clear map */\n\t\tthis._map = this._fillMap(1);\n\t\tfor (var i=0;i<this._rooms.length;i++) { \n\t\t\tvar room = this._rooms[i];\n\t\t\troom.clearDoors();\n\t\t\troom.create(this._digCallback); \n\t\t}\n\n\t\tthis._unconnected = this._rooms.slice().randomize();\n\t\tthis._connected = [];\n\t\tif (this._unconnected.length) { this._connected.push(this._unconnected.pop()); } /* first one is always connected */\n\t\t\n\t\twhile (1) {\n\t\t\t/* 1. pick random connected room */\n\t\t\tvar connected = this._connected.random();\n\t\t\t\n\t\t\t/* 2. find closest unconnected */\n\t\t\tvar room1 = this._closestRoom(this._unconnected, connected);\n\t\t\t\n\t\t\t/* 3. connect it to closest connected */\n\t\t\tvar room2 = this._closestRoom(this._connected, room1);\n\t\t\t\n\t\t\tvar ok = this._connectRooms(room1, room2);\n\t\t\tif (!ok) { break; } /* stop connecting, re-shuffle */\n\t\t\t\n\t\t\tif (!this._unconnected.length) { return true; } /* done; no rooms remain */\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * For a given room, find the closest one from the list\n */\nROT.Map.Uniform.prototype._closestRoom = function(rooms, room) {\n\tvar dist = Infinity;\n\tvar center = room.getCenter();\n\tvar result = null;\n\t\n\tfor (var i=0;i<rooms.length;i++) {\n\t\tvar r = rooms[i];\n\t\tvar c = r.getCenter();\n\t\tvar dx = c[0]-center[0];\n\t\tvar dy = c[1]-center[1];\n\t\tvar d = dx*dx+dy*dy;\n\t\t\n\t\tif (d < dist) {\n\t\t\tdist = d;\n\t\t\tresult = r;\n\t\t}\n\t}\n\t\n\treturn result;\n}\n\nROT.Map.Uniform.prototype._connectRooms = function(room1, room2) {\n\t/*\n\t\troom1.debug();\n\t\troom2.debug();\n\t*/\n\n\tvar center1 = room1.getCenter();\n\tvar center2 = room2.getCenter();\n\n\tvar diffX = center2[0] - center1[0];\n\tvar diffY = center2[1] - center1[1];\n\n\tif (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n\t\tvar dirIndex1 = (diffY > 0 ? 2 : 0);\n\t\tvar dirIndex2 = (dirIndex1 + 2) % 4;\n\t\tvar min = room2.getLeft();\n\t\tvar max = room2.getRight();\n\t\tvar index = 0;\n\t} else { /* first try connecting east-west walls */\n\t\tvar dirIndex1 = (diffX > 0 ? 1 : 3);\n\t\tvar dirIndex2 = (dirIndex1 + 2) % 4;\n\t\tvar min = room2.getTop();\n\t\tvar max = room2.getBottom();\n\t\tvar index = 1;\n\t}\n\n\tvar start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n\tif (!start) { return false; }\n\n\tif (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n\t\tvar end = start.slice();\n\t\tvar value = null;\n\t\tswitch (dirIndex2) {\n\t\t\tcase 0: value = room2.getTop()-1; break;\n\t\t\tcase 1: value = room2.getRight()+1; break;\n\t\t\tcase 2: value = room2.getBottom()+1; break;\n\t\t\tcase 3: value = room2.getLeft()-1; break;\n\t\t}\n\t\tend[(index+1)%2] = value;\n\t\tthis._digLine([start, end]);\n\t\t\n\t} else if (start[index] < min-1 || start[index] > max+1) { /* need to switch target wall (L-like) */\n\n\t\tvar diff = start[index] - center2[index];\n\t\tswitch (dirIndex2) {\n\t\t\tcase 0:\n\t\t\tcase 1:\tvar rotation = (diff < 0 ? 3 : 1); break;\n\t\t\tcase 2:\n\t\t\tcase 3:\tvar rotation = (diff < 0 ? 1 : 3); break;\n\t\t}\n\t\tdirIndex2 = (dirIndex2 + rotation) % 4;\n\t\t\n\t\tvar end = this._placeInWall(room2, dirIndex2);\n\t\tif (!end) { return false; }\n\n\t\tvar mid = [0, 0];\n\t\tmid[index] = start[index];\n\t\tvar index2 = (index+1)%2;\n\t\tmid[index2] = end[index2];\n\t\tthis._digLine([start, mid, end]);\n\t\t\n\t} else { /* use current wall pair, but adjust the line in the middle (S-like) */\n\t\n\t\tvar index2 = (index+1)%2;\n\t\tvar end = this._placeInWall(room2, dirIndex2);\n\t\tif (!end) { return false; }\n\t\tvar mid = Math.round((end[index2] + start[index2])/2);\n\n\t\tvar mid1 = [0, 0];\n\t\tvar mid2 = [0, 0];\n\t\tmid1[index] = start[index];\n\t\tmid1[index2] = mid;\n\t\tmid2[index] = end[index];\n\t\tmid2[index2] = mid;\n\t\tthis._digLine([start, mid1, mid2, end]);\n\t}\n\n\troom1.addDoor(start[0], start[1]);\n\troom2.addDoor(end[0], end[1]);\n\t\n\tvar index = this._unconnected.indexOf(room1);\n\tif (index != -1) {\n\t\tthis._unconnected.splice(index, 1);\n\t\tthis._connected.push(room1);\n\t}\n\n\tvar index = this._unconnected.indexOf(room2);\n\tif (index != -1) {\n\t\tthis._unconnected.splice(index, 1);\n\t\tthis._connected.push(room2);\n\t}\n\t\n\treturn true;\n}\n\nROT.Map.Uniform.prototype._placeInWall = function(room, dirIndex) {\n\tvar start = [0, 0];\n\tvar dir = [0, 0];\n\tvar length = 0;\n\t\n\tswitch (dirIndex) {\n\t\tcase 0:\n\t\t\tdir = [1, 0];\n\t\t\tstart = [room.getLeft(), room.getTop()-1];\n\t\t\tlength = room.getRight()-room.getLeft()+1;\n\t\tbreak;\n\t\tcase 1:\n\t\t\tdir = [0, 1];\n\t\t\tstart = [room.getRight()+1, room.getTop()];\n\t\t\tlength = room.getBottom()-room.getTop()+1;\n\t\tbreak;\n\t\tcase 2:\n\t\t\tdir = [1, 0];\n\t\t\tstart = [room.getLeft(), room.getBottom()+1];\n\t\t\tlength = room.getRight()-room.getLeft()+1;\n\t\tbreak;\n\t\tcase 3:\n\t\t\tdir = [0, 1];\n\t\t\tstart = [room.getLeft()-1, room.getTop()];\n\t\t\tlength = room.getBottom()-room.getTop()+1;\n\t\tbreak;\n\t}\n\t\n\tvar avail = [];\n\tvar lastBadIndex = -2;\n\n\tfor (var i=0;i<length;i++) {\n\t\tvar x = start[0] + i*dir[0];\n\t\tvar y = start[1] + i*dir[1];\n\t\tavail.push(null);\n\t\t\n\t\tvar isWall = (this._map[x][y] == 1);\n\t\tif (isWall) {\n\t\t\tif (lastBadIndex != i-1) { avail[i] = [x, y]; }\n\t\t} else {\n\t\t\tlastBadIndex = i;\n\t\t\tif (i) { avail[i-1] = null; }\n\t\t}\n\t}\n\t\n\tfor (var i=avail.length-1; i>=0; i--) {\n\t\tif (!avail[i]) { avail.splice(i, 1); }\n\t}\n\treturn (avail.length ? avail.random() : null);\n}\n\n/**\n * Dig a polyline.\n */\nROT.Map.Uniform.prototype._digLine = function(points) {\n\tfor (var i=1;i<points.length;i++) {\n\t\tvar start = points[i-1];\n\t\tvar end = points[i];\n\t\tvar corridor = new ROT.Map.Feature.Corridor(start[0], start[1], end[0], end[1]);\n\t\tcorridor.create(this._digCallback);\n\t\tthis._corridors.push(corridor);\n\t}\n}\n\nROT.Map.Uniform.prototype._digCallback = function(x, y, value) {\n\tthis._map[x][y] = value;\n\tif (value == 0) { this._dug++; }\n}\n\nROT.Map.Uniform.prototype._isWallCallback = function(x, y) {\n\tif (x < 0 || y < 0 || x >= this._width || y >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\nROT.Map.Uniform.prototype._canBeDugCallback = function(x, y) {\n\tif (x < 1 || y < 1 || x+1 >= this._width || y+1 >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\n/**\n * @author hyakugei\n * @class Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.cellWidth=3] Number of cells to create on the horizontal (number of rooms horizontally)\n * @param {int[]} [options.cellHeight=3] Number of cells to create on the vertical (number of rooms vertically) \n * @param {int} [options.roomWidth] Room min and max width - normally set auto-magically via the constructor.\n * @param {int} [options.roomHeight] Room min and max height - normally set auto-magically via the constructor. \n */\nROT.Map.Rogue = function(width, height, options) {\n\tROT.Map.call(this, width, height);\n\t\n\tthis._options = {\n\t\tcellWidth: 3,  // NOTE to self, these could probably work the same as the roomWidth/room Height values\n\t\tcellHeight: 3  //     ie. as an array with min-max values for each direction....\n\t}\n\t\n\tfor (var p in options) { this._options[p] = options[p]; }\n\t\n\t/*\n\tSet the room sizes according to the over-all width of the map, \n\tand the cell sizes. \n\t*/\n\t\n\tif (!this._options.hasOwnProperty(\"roomWidth\")) {\n\t\tthis._options[\"roomWidth\"] = this._calculateRoomSize(this._width, this._options[\"cellWidth\"]);\n\t}\n\tif (!this._options.hasOwnProperty(\"roomHeight\")) {\n\t\tthis._options[\"roomHeight\"] = this._calculateRoomSize(this._height, this._options[\"cellHeight\"]);\n\t}\n\t\n}\n\nROT.Map.Rogue.extend(ROT.Map); \n\n/**\n * @see ROT.Map#create\n */\nROT.Map.Rogue.prototype.create = function(callback) {\n\tthis.map = this._fillMap(1);\n\tthis.rooms = [];\n\tthis.connectedCells = [];\n\t\n\tthis._initRooms();\n\tthis._connectRooms();\n\tthis._connectUnconnectedRooms();\n\tthis._createRandomRoomConnections();\n\tthis._createRooms();\n\tthis._createCorridors();\n\t\n\tif (callback) {\n\t\tfor (var i = 0; i < this._width; i++) {\n\t\t\tfor (var j = 0; j < this._height; j++) {\n\t\t\t\tcallback(i, j, this.map[i][j]);   \n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn this;\n}\n\nROT.Map.Rogue.prototype._calculateRoomSize = function(size, cell) {\n\tvar max = Math.floor((size/cell) * 0.8);\n\tvar min = Math.floor((size/cell) * 0.25);\n\tif (min < 2) min = 2;\n\tif (max < 2) max = 2;\n\treturn [min, max];\n}\n\nROT.Map.Rogue.prototype._initRooms = function () { \n\t// create rooms array. This is the \"grid\" list from the algo.  \n\tfor (var i = 0; i < this._options.cellWidth; i++) {  \n\t\tthis.rooms.push([]);\n\t\tfor(var j = 0; j < this._options.cellHeight; j++) {\n\t\t\tthis.rooms[i].push({\"x\":0, \"y\":0, \"width\":0, \"height\":0, \"connections\":[], \"cellx\":i, \"celly\":j});\n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._connectRooms = function() {\n\t//pick random starting grid\n\tvar cgx = ROT.RNG.getUniformInt(0, this._options.cellWidth-1);\n\tvar cgy = ROT.RNG.getUniformInt(0, this._options.cellHeight-1);\n\t\n\tvar idx;\n\tvar ncgx;\n\tvar ncgy;\n\t\n\tvar found = false;\n\tvar room;\n\tvar otherRoom;\n\t\n\t// find  unconnected neighbour cells\n\tdo {\n\t\n\t\t//var dirToCheck = [0,1,2,3,4,5,6,7];\n\t\tvar dirToCheck = [0,2,4,6];\n\t\tdirToCheck = dirToCheck.randomize();\n\t\t\n\t\tdo {\n\t\t\tfound = false;\n\t\t\tidx = dirToCheck.pop();\n\t\t\t\n\t\t\t\n\t\t\tncgx = cgx + ROT.DIRS[8][idx][0];\n\t\t\tncgy = cgy + ROT.DIRS[8][idx][1];\n\t\t\t\n\t\t\tif(ncgx < 0 || ncgx >= this._options.cellWidth) continue;\n\t\t\tif(ncgy < 0 || ncgy >= this._options.cellHeight) continue;\n\t\t\t\n\t\t\troom = this.rooms[cgx][cgy];\n\t\t\t\n\t\t\tif(room[\"connections\"].length > 0)\n\t\t\t{\n\t\t\t\t// as long as this room doesn't already coonect to me, we are ok with it. \n\t\t\t\tif(room[\"connections\"][0][0] == ncgx &&\n\t\t\t\troom[\"connections\"][0][1] == ncgy)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\totherRoom = this.rooms[ncgx][ncgy];\n\t\t\t\n\t\t\tif (otherRoom[\"connections\"].length == 0) { \n\t\t\t\totherRoom[\"connections\"].push([cgx,cgy]);\n\t\t\t\t\n\t\t\t\tthis.connectedCells.push([ncgx, ncgy]);\n\t\t\t\tcgx = ncgx;\n\t\t\t\tcgy = ncgy;\n\t\t\t\tfound = true;\n\t\t\t}\n\t\t\t\t\t\n\t\t} while (dirToCheck.length > 0 && found == false)\n\t\t\n\t} while (dirToCheck.length > 0)\n\n}\n\nROT.Map.Rogue.prototype._connectUnconnectedRooms = function() {\n\t//While there are unconnected rooms, try to connect them to a random connected neighbor \n\t//(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n\tvar cw = this._options.cellWidth;\n\tvar ch = this._options.cellHeight;\n\t\n\tvar randomConnectedCell;\n\tthis.connectedCells = this.connectedCells.randomize();\n\tvar room;\n\tvar otherRoom;\n\tvar validRoom;\n\t\n\tfor (var i = 0; i < this._options.cellWidth; i++) {\n\t\tfor (var j = 0; j < this._options.cellHeight; j++)  {\n\t\t\t\t\n\t\t\troom = this.rooms[i][j];\n\t\t\t\n\t\t\tif (room[\"connections\"].length == 0) {\n\t\t\t\tvar directions = [0,2,4,6];\n\t\t\t\tdirections = directions.randomize();\n\t\t\t\t\n\t\t\t\tvar validRoom = false;\n\t\t\t\t\n\t\t\t\tdo {\n\t\t\t\t\t\n\t\t\t\t\tvar dirIdx = directions.pop();\n\t\t\t\t\tvar newI = i + ROT.DIRS[8][dirIdx][0];\n\t\t\t\t\tvar newJ = j + ROT.DIRS[8][dirIdx][1];\n\t\t\t\t\t\n\t\t\t\t\tif (newI < 0 || newI >= cw || \n\t\t\t\t\tnewJ < 0 || newJ >= ch) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\totherRoom = this.rooms[newI][newJ];\n\t\t\t\t\t\n\t\t\t\t\tvalidRoom = true;\n\t\t\t\t\t\n\t\t\t\t\tif (otherRoom[\"connections\"].length == 0) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < otherRoom[\"connections\"].length; k++) {\n\t\t\t\t\t\tif(otherRoom[\"connections\"][k][0] == i && \n\t\t\t\t\t\totherRoom[\"connections\"][k][1] == j) {\n\t\t\t\t\t\t\tvalidRoom = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (validRoom) break;\n\t\t\t\t\t\n\t\t\t\t} while (directions.length)\n\t\t\t\t\n\t\t\t\tif(validRoom) { \n\t\t\t\t\troom[\"connections\"].push( [otherRoom[\"cellx\"], otherRoom[\"celly\"]] );  \n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"-- Unable to connect room.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._createRandomRoomConnections = function(connections) {\n\t// Empty for now. \n}\n\n\nROT.Map.Rogue.prototype._createRooms = function() {\n\t// Create Rooms \n\t\n\tvar w = this._width;\n\tvar h = this._height;\n\t\n\tvar cw = this._options.cellWidth;\n\tvar ch = this._options.cellHeight;\n\t\n\tvar cwp = Math.floor(this._width / cw);\n\tvar chp = Math.floor(this._height / ch);\n\t\n\tvar roomw;\n\tvar roomh;\n\tvar roomWidth = this._options[\"roomWidth\"];\n\tvar roomHeight = this._options[\"roomHeight\"];\n\tvar sx;\n\tvar sy;\n\tvar tx;\n\tvar ty;\n\tvar otherRoom;\n\t\n\tfor (var i = 0; i < cw; i++) {\n\t\tfor (var j = 0; j < ch; j++) {\n\t\t\tsx = cwp * i;\n\t\t\tsy = chp * j;\n\t\t\t\n\t\t\tif (sx == 0) sx = 1;\n\t\t\tif (sy == 0) sy = 1;\n\t\t\t\n\t\t\troomw = ROT.RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n\t\t\troomh = ROT.RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n\t\t\t\n\t\t\tif (j > 0) {\n\t\t\t\totherRoom = this.rooms[i][j-1];\n\t\t\t\twhile (sy - (otherRoom[\"y\"] + otherRoom[\"height\"] ) < 3) {\n\t\t\t\t\tsy++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (i > 0) {\n\t\t\t\totherRoom = this.rooms[i-1][j];\n\t\t\t\twhile(sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n\t\t\t\t\tsx++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar sxOffset = Math.round(ROT.RNG.getUniformInt(0, cwp-roomw)/2);\n\t\t\tvar syOffset = Math.round(ROT.RNG.getUniformInt(0, chp-roomh)/2);\n\t\t\t\n\t\t\twhile (sx + sxOffset + roomw >= w) {\n\t\t\t\tif(sxOffset) {\n\t\t\t\t\tsxOffset--;\n\t\t\t\t} else {\n\t\t\t\t\troomw--; \n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\twhile (sy + syOffset + roomh >= h) { \n\t\t\t\tif(syOffset) {\n\t\t\t\t\tsyOffset--;\n\t\t\t\t} else {\n\t\t\t\t\troomh--; \n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tsx = sx + sxOffset;\n\t\t\tsy = sy + syOffset;\n\t\t\t\n\t\t\tthis.rooms[i][j][\"x\"] = sx;\n\t\t\tthis.rooms[i][j][\"y\"] = sy;\n\t\t\tthis.rooms[i][j][\"width\"] = roomw;\n\t\t\tthis.rooms[i][j][\"height\"] = roomh;  \n\t\t\t\n\t\t\tfor (var ii = sx; ii < sx + roomw; ii++) {\n\t\t\t\tfor (var jj = sy; jj < sy + roomh; jj++) {\n\t\t\t\t\tthis.map[ii][jj] = 0;\n\t\t\t\t}\n\t\t\t}  \n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._getWallPosition = function(aRoom, aDirection) {\n\tvar rx;\n\tvar ry;\n\tvar door;\n\t\n\tif (aDirection == 1 || aDirection == 3) {\n\t\trx = ROT.RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n\t\tif (aDirection == 1) {\n\t\t\try = aRoom[\"y\"] - 2;\n\t\t\tdoor = ry + 1;\n\t\t} else {\n\t\t\try = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n\t\t\tdoor = ry -1;\n\t\t}\n\t\t\n\t\tthis.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space. \n\t\t\n\t} else if (aDirection == 2 || aDirection == 4) {\n\t\try = ROT.RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n\t\tif(aDirection == 2) {\n\t\t\trx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n\t\t\tdoor = rx - 1;\n\t\t} else {\n\t\t\trx = aRoom[\"x\"] - 2;\n\t\t\tdoor = rx + 1;\n\t\t}\n\t\t\n\t\tthis.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space. \n\t\t\n\t}\n\treturn [rx, ry];\n}\n\n/***\n* @param startPosition a 2 element array\n* @param endPosition a 2 element array\n*/\nROT.Map.Rogue.prototype._drawCorridore = function (startPosition, endPosition) {\n\tvar xOffset = endPosition[0] - startPosition[0];\n\tvar yOffset = endPosition[1] - startPosition[1];\n\t\n\tvar xpos = startPosition[0];\n\tvar ypos = startPosition[1];\n\t\n\tvar tempDist;\n\tvar xDir;\n\tvar yDir;\n\t\n\tvar move; // 2 element array, element 0 is the direction, element 1 is the total value to move. \n\tvar moves = []; // a list of 2 element arrays\n\t\n\tvar xAbs = Math.abs(xOffset);\n\tvar yAbs = Math.abs(yOffset);\n\t\n\tvar percent = ROT.RNG.getUniform(); // used to split the move at different places along the long axis\n\tvar firstHalf = percent;\n\tvar secondHalf = 1 - percent;\n\t\n\txDir = xOffset > 0 ? 2 : 6;\n\tyDir = yOffset > 0 ? 4 : 0;\n\t\n\tif (xAbs < yAbs) {\n\t\t// move firstHalf of the y offset\n\t\ttempDist = Math.ceil(yAbs * firstHalf);\n\t\tmoves.push([yDir, tempDist]);\n\t\t// move all the x offset\n\t\tmoves.push([xDir, xAbs]);\n\t\t// move sendHalf of the  y offset\n\t\ttempDist = Math.floor(yAbs * secondHalf);\n\t\tmoves.push([yDir, tempDist]);\n\t} else {\n\t\t//  move firstHalf of the x offset\n\t\ttempDist = Math.ceil(xAbs * firstHalf);\n\t\tmoves.push([xDir, tempDist]);\n\t\t// move all the y offset\n\t\tmoves.push([yDir, yAbs]);\n\t\t// move secondHalf of the x offset.\n\t\ttempDist = Math.floor(xAbs * secondHalf);\n\t\tmoves.push([xDir, tempDist]);  \n\t}\n\t\n\tthis.map[xpos][ypos] = 0;\n\t\n\twhile (moves.length > 0) {\n\t\tmove = moves.pop();\n\t\twhile (move[1] > 0) {\n\t\t\txpos += ROT.DIRS[8][move[0]][0];\n\t\t\typos += ROT.DIRS[8][move[0]][1];\n\t\t\tthis.map[xpos][ypos] = 0;\n\t\t\tmove[1] = move[1] - 1;\n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._createCorridors = function () {\n\t// Draw Corridors between connected rooms\n\t\n\tvar cw = this._options.cellWidth;\n\tvar ch = this._options.cellHeight;\n\tvar room;\n\tvar connection;\n\tvar otherRoom;\n\tvar wall;\n\tvar otherWall;\n\t\n\tfor (var i = 0; i < cw; i++) {\n\t\tfor (var j = 0; j < ch; j++) {\n\t\t\troom = this.rooms[i][j];\n\t\t\t\n\t\t\tfor (var k = 0; k < room[\"connections\"].length; k++) {\n\t\t\t\t\t\n\t\t\t\tconnection = room[\"connections\"][k]; \n\t\t\t\t\n\t\t\t\totherRoom = this.rooms[connection[0]][connection[1]];\n\t\t\t\t\n\t\t\t\t// figure out what wall our corridor will start one.\n\t\t\t\t// figure out what wall our corridor will end on. \n\t\t\t\tif (otherRoom[\"cellx\"] > room[\"cellx\"] ) {\n\t\t\t\t\twall = 2;\n\t\t\t\t\totherWall = 4;\n\t\t\t\t} else if (otherRoom[\"cellx\"] < room[\"cellx\"] ) {\n\t\t\t\t\twall = 4;\n\t\t\t\t\totherWall = 2;\n\t\t\t\t} else if(otherRoom[\"celly\"] > room[\"celly\"]) {\n\t\t\t\t\twall = 3;\n\t\t\t\t\totherWall = 1;\n\t\t\t\t} else if(otherRoom[\"celly\"] < room[\"celly\"]) {\n\t\t\t\t\twall = 1;\n\t\t\t\t\totherWall = 3;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis._drawCorridore(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n\t\t\t}\n\t\t}\n\t}\n}\n/**\n * @class Dungeon feature; has own .create() method\n */\nROT.Map.Feature = function() {}\nROT.Map.Feature.prototype.isValid = function(canBeDugCallback) {}\nROT.Map.Feature.prototype.create = function(digCallback) {}\nROT.Map.Feature.prototype.debug = function() {}\nROT.Map.Feature.createRandomAt = function(x, y, dx, dy, options) {}\n\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nROT.Map.Feature.Room = function(x1, y1, x2, y2, doorX, doorY) {\n\tthis._x1 = x1;\n\tthis._y1 = y1;\n\tthis._x2 = x2;\n\tthis._y2 = y2;\n\tthis._doors = {};\n\tif (arguments.length > 4) { this.addDoor(doorX, doorY); }\n}\nROT.Map.Feature.Room.extend(ROT.Map.Feature);\n\n/**\n * Room of random size, with a given doors and direction\n */\nROT.Map.Feature.Room.createRandomAt = function(x, y, dx, dy, options) {\n\tvar min = options.roomWidth[0];\n\tvar max = options.roomWidth[1];\n\tvar width = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar min = options.roomHeight[0];\n\tvar max = options.roomHeight[1];\n\tvar height = ROT.RNG.getUniformInt(min, max);\n\t\n\tif (dx == 1) { /* to the right */\n\t\tvar y2 = y - Math.floor(ROT.RNG.getUniform() * height);\n\t\treturn new this(x+1, y2, x+width, y2+height-1, x, y);\n\t}\n\t\n\tif (dx == -1) { /* to the left */\n\t\tvar y2 = y - Math.floor(ROT.RNG.getUniform() * height);\n\t\treturn new this(x-width, y2, x-1, y2+height-1, x, y);\n\t}\n\n\tif (dy == 1) { /* to the bottom */\n\t\tvar x2 = x - Math.floor(ROT.RNG.getUniform() * width);\n\t\treturn new this(x2, y+1, x2+width-1, y+height, x, y);\n\t}\n\n\tif (dy == -1) { /* to the top */\n\t\tvar x2 = x - Math.floor(ROT.RNG.getUniform() * width);\n\t\treturn new this(x2, y-height, x2+width-1, y-1, x, y);\n\t}\n\n        throw new Error(\"dx or dy must be 1 or -1\");\n}\n\n/**\n * Room of random size, positioned around center coords\n */\nROT.Map.Feature.Room.createRandomCenter = function(cx, cy, options) {\n\tvar min = options.roomWidth[0];\n\tvar max = options.roomWidth[1];\n\tvar width = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar min = options.roomHeight[0];\n\tvar max = options.roomHeight[1];\n\tvar height = ROT.RNG.getUniformInt(min, max);\n\n\tvar x1 = cx - Math.floor(ROT.RNG.getUniform()*width);\n\tvar y1 = cy - Math.floor(ROT.RNG.getUniform()*height);\n\tvar x2 = x1 + width - 1;\n\tvar y2 = y1 + height - 1;\n\n\treturn new this(x1, y1, x2, y2);\n}\n\n/**\n * Room of random size within a given dimensions\n */\nROT.Map.Feature.Room.createRandom = function(availWidth, availHeight, options) {\n\tvar min = options.roomWidth[0];\n\tvar max = options.roomWidth[1];\n\tvar width = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar min = options.roomHeight[0];\n\tvar max = options.roomHeight[1];\n\tvar height = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar left = availWidth - width - 1;\n\tvar top = availHeight - height - 1;\n\n\tvar x1 = 1 + Math.floor(ROT.RNG.getUniform()*left);\n\tvar y1 = 1 + Math.floor(ROT.RNG.getUniform()*top);\n\tvar x2 = x1 + width - 1;\n\tvar y2 = y1 + height - 1;\n\n\treturn new this(x1, y1, x2, y2);\n}\n\nROT.Map.Feature.Room.prototype.addDoor = function(x, y) {\n\tthis._doors[x+\",\"+y] = 1;\n\treturn this;\n}\n\n/**\n * @param {function}\n */\nROT.Map.Feature.Room.prototype.getDoors = function(callback) {\n\tfor (var key in this._doors) {\n\t\tvar parts = key.split(\",\");\n\t\tcallback(parseInt(parts[0]), parseInt(parts[1]));\n\t}\n\treturn this;\n}\n\nROT.Map.Feature.Room.prototype.clearDoors = function() {\n\tthis._doors = {};\n\treturn this;\n}\n\nROT.Map.Feature.Room.prototype.addDoors = function(isWallCallback) {\n\tvar left = this._x1-1;\n\tvar right = this._x2+1;\n\tvar top = this._y1-1;\n\tvar bottom = this._y2+1;\n\n\tfor (var x=left; x<=right; x++) {\n\t\tfor (var y=top; y<=bottom; y++) {\n\t\t\tif (x != left && x != right && y != top && y != bottom) { continue; }\n\t\t\tif (isWallCallback(x, y)) { continue; }\n\n\t\t\tthis.addDoor(x, y);\n\t\t}\n\t}\n\n\treturn this;\n}\n\nROT.Map.Feature.Room.prototype.debug = function() {\n\tconsole.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n}\n\nROT.Map.Feature.Room.prototype.isValid = function(isWallCallback, canBeDugCallback) { \n\tvar left = this._x1-1;\n\tvar right = this._x2+1;\n\tvar top = this._y1-1;\n\tvar bottom = this._y2+1;\n\t\n\tfor (var x=left; x<=right; x++) {\n\t\tfor (var y=top; y<=bottom; y++) {\n\t\t\tif (x == left || x == right || y == top || y == bottom) {\n\t\t\t\tif (!isWallCallback(x, y)) { return false; }\n\t\t\t} else {\n\t\t\t\tif (!canBeDugCallback(x, y)) { return false; }\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n */\nROT.Map.Feature.Room.prototype.create = function(digCallback) { \n\tvar left = this._x1-1;\n\tvar right = this._x2+1;\n\tvar top = this._y1-1;\n\tvar bottom = this._y2+1;\n\t\n\tvar value = 0;\n\tfor (var x=left; x<=right; x++) {\n\t\tfor (var y=top; y<=bottom; y++) {\n\t\t\tif (x+\",\"+y in this._doors) {\n\t\t\t\tvalue = 2;\n\t\t\t} else if (x == left || x == right || y == top || y == bottom) {\n\t\t\t\tvalue = 1;\n\t\t\t} else {\n\t\t\t\tvalue = 0;\n\t\t\t}\n\t\t\tdigCallback(x, y, value);\n\t\t}\n\t}\n}\n\nROT.Map.Feature.Room.prototype.getCenter = function() {\n\treturn [Math.round((this._x1 + this._x2)/2), Math.round((this._y1 + this._y2)/2)];\n}\n\nROT.Map.Feature.Room.prototype.getLeft = function() {\n\treturn this._x1;\n}\n\nROT.Map.Feature.Room.prototype.getRight = function() {\n\treturn this._x2;\n}\n\nROT.Map.Feature.Room.prototype.getTop = function() {\n\treturn this._y1;\n}\n\nROT.Map.Feature.Room.prototype.getBottom = function() {\n\treturn this._y2;\n}\n\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nROT.Map.Feature.Corridor = function(startX, startY, endX, endY) {\n\tthis._startX = startX;\n\tthis._startY = startY;\n\tthis._endX = endX; \n\tthis._endY = endY;\n\tthis._endsWithAWall = true;\n}\nROT.Map.Feature.Corridor.extend(ROT.Map.Feature);\n\nROT.Map.Feature.Corridor.createRandomAt = function(x, y, dx, dy, options) {\n\tvar min = options.corridorLength[0];\n\tvar max = options.corridorLength[1];\n\tvar length = ROT.RNG.getUniformInt(min, max);\n\t\n\treturn new this(x, y, x + dx*length, y + dy*length);\n}\n\nROT.Map.Feature.Corridor.prototype.debug = function() {\n\tconsole.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n}\n\nROT.Map.Feature.Corridor.prototype.isValid = function(isWallCallback, canBeDugCallback){ \n\tvar sx = this._startX;\n\tvar sy = this._startY;\n\tvar dx = this._endX-sx;\n\tvar dy = this._endY-sy;\n\tvar length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n\t\n\tif (dx) { dx = dx/Math.abs(dx); }\n\tif (dy) { dy = dy/Math.abs(dy); }\n\tvar nx = dy;\n\tvar ny = -dx;\n\t\n\tvar ok = true;\n\tfor (var i=0; i<length; i++) {\n\t\tvar x = sx + i*dx;\n\t\tvar y = sy + i*dy;\n\n\t\tif (!canBeDugCallback(     x,      y)) { ok = false; }\n\t\tif (!isWallCallback  (x + nx, y + ny)) { ok = false; }\n\t\tif (!isWallCallback  (x - nx, y - ny)) { ok = false; }\n\t\t\n\t\tif (!ok) {\n\t\t\tlength = i;\n\t\t\tthis._endX = x-dx;\n\t\t\tthis._endY = y-dy;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\t/**\n\t * If the length degenerated, this corridor might be invalid\n\t */\n\t \n\t/* not supported */\n\tif (length == 0) { return false; } \n\t\n\t /* length 1 allowed only if the next space is empty */\n\tif (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) { return false; }\n\t\n\t/**\n\t * We do not want the corridor to crash into a corner of a room;\n\t * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n\t * \n\t * Situation:\n\t * #######1\n\t * .......?\n\t * #######2\n\t * \n\t * The corridor was dug from left to right.\n\t * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n\t */\n\tvar firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n\tvar secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n\tthis._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n\tif ((firstCornerBad || secondCornerBad) && this._endsWithAWall) { return false; }\n\n\treturn true;\n}\n\n/**\n * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n */\nROT.Map.Feature.Corridor.prototype.create = function(digCallback) { \n\tvar sx = this._startX;\n\tvar sy = this._startY;\n\tvar dx = this._endX-sx;\n\tvar dy = this._endY-sy;\n\tvar length = 1+Math.max(Math.abs(dx), Math.abs(dy));\n\t\n\tif (dx) { dx = dx/Math.abs(dx); }\n\tif (dy) { dy = dy/Math.abs(dy); }\n\tvar nx = dy;\n\tvar ny = -dx;\n\t\n\tfor (var i=0; i<length; i++) {\n\t\tvar x = sx + i*dx;\n\t\tvar y = sy + i*dy;\n\t\tdigCallback(x, y, 0);\n\t}\n\t\n\treturn true;\n}\n\nROT.Map.Feature.Corridor.prototype.createPriorityWalls = function(priorityWallCallback) {\n\tif (!this._endsWithAWall) { return; }\n\n\tvar sx = this._startX;\n\tvar sy = this._startY;\n\n\tvar dx = this._endX-sx;\n\tvar dy = this._endY-sy;\n\tif (dx) { dx = dx/Math.abs(dx); }\n\tif (dy) { dy = dy/Math.abs(dy); }\n\tvar nx = dy;\n\tvar ny = -dx;\n\n\tpriorityWallCallback(this._endX + dx, this._endY + dy);\n\tpriorityWallCallback(this._endX + nx, this._endY + ny);\n\tpriorityWallCallback(this._endX - nx, this._endY - ny);\n}\n/**\n * @class Base noise generator\n */\nROT.Noise = function() {\n};\n\nROT.Noise.prototype.get = function(x, y) {}\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\n\n/**\n * @class 2D simplex noise generator\n * @param {int} [gradients=256] Random gradients\n */\nROT.Noise.Simplex = function(gradients) {\n\tROT.Noise.call(this);\n\n\tthis._F2 = 0.5 * (Math.sqrt(3) - 1);\n\tthis._G2 = (3 - Math.sqrt(3)) / 6;\n\n\tthis._gradients = [\n\t\t[ 0, -1],\n\t\t[ 1, -1],\n\t\t[ 1,  0],\n\t\t[ 1,  1],\n\t\t[ 0,  1],\n\t\t[-1,  1],\n\t\t[-1,  0],\n\t\t[-1, -1]\n\t];\n\n\tvar permutations = [];\n\tvar count = gradients || 256;\n\tfor (var i=0;i<count;i++) { permutations.push(i); }\n\tpermutations = permutations.randomize();\n\n\tthis._perms = [];\n\tthis._indexes = [];\n\n\tfor (var i=0;i<2*count;i++) {\n\t\tthis._perms.push(permutations[i % count]);\n\t\tthis._indexes.push(this._perms[i] % this._gradients.length);\n\t}\n\n};\nROT.Noise.Simplex.extend(ROT.Noise);\n\nROT.Noise.Simplex.prototype.get = function(xin, yin) {\n\tvar perms = this._perms;\n\tvar indexes = this._indexes;\n\tvar count = perms.length/2;\n\tvar G2 = this._G2;\n\n\tvar n0 =0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n\n\t// Skew the input space to determine which simplex cell we're in\n\tvar s = (xin + yin) * this._F2; // Hairy factor for 2D\n\tvar i = Math.floor(xin + s);\n\tvar j = Math.floor(yin + s);\n\tvar t = (i + j) * G2;\n\tvar X0 = i - t; // Unskew the cell origin back to (x,y) space\n\tvar Y0 = j - t;\n\tvar x0 = xin - X0; // The x,y distances from the cell origin\n\tvar y0 = yin - Y0;\n\n\t// For the 2D case, the simplex shape is an equilateral triangle.\n\t// Determine which simplex we are in.\n\tvar i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n\tif (x0 > y0) {\n\t\ti1 = 1;\n\t\tj1 = 0;\n\t} else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n\t\ti1 = 0;\n\t\tj1 = 1;\n\t} // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n\n\t// A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n\t// a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n\t// c = (3-sqrt(3))/6\n\tvar x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n\tvar y1 = y0 - j1 + G2;\n\tvar x2 = x0 - 1 + 2*G2; // Offsets for last corner in (x,y) unskewed coords\n\tvar y2 = y0 - 1 + 2*G2;\n\n\t// Work out the hashed gradient indices of the three simplex corners\n\tvar ii = i.mod(count);\n\tvar jj = j.mod(count);\n\n\t// Calculate the contribution from the three corners\n\tvar t0 = 0.5 - x0*x0 - y0*y0;\n\tif (t0 >= 0) {\n\t\tt0 *= t0;\n\t\tgi = indexes[ii+perms[jj]];\n\t\tvar grad = this._gradients[gi];\n\t\tn0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n\t}\n\t\n\tvar t1 = 0.5 - x1*x1 - y1*y1;\n\tif (t1 >= 0) {\n\t\tt1 *= t1;\n\t\tgi = indexes[ii+i1+perms[jj+j1]];\n\t\tvar grad = this._gradients[gi];\n\t\tn1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n\t}\n\t\n\tvar t2 = 0.5 - x2*x2 - y2*y2;\n\tif (t2 >= 0) {\n\t\tt2 *= t2;\n\t\tgi = indexes[ii+1+perms[jj+1]];\n\t\tvar grad = this._gradients[gi];\n\t\tn2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n\t}\n\n\t// Add contributions from each corner to get the final noise value.\n\t// The result is scaled to return values in the interval [-1,1].\n\treturn 70 * (n0 + n1 + n2);\n}\n/**\n * @class Abstract FOV algorithm\n * @param {function} lightPassesCallback Does the light pass through x,y?\n * @param {object} [options]\n * @param {int} [options.topology=8] 4/6/8\n */\nROT.FOV = function(lightPassesCallback, options) {\n\tthis._lightPasses = lightPassesCallback;\n\tthis._options = {\n\t\ttopology: 8\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n};\n\n/**\n * Compute visibility for a 360-degree circle\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {function} callback\n */\nROT.FOV.prototype.compute = function(x, y, R, callback) {}\n\n/**\n * Return all neighbors in a concentric ring\n * @param {int} cx center-x\n * @param {int} cy center-y\n * @param {int} r range\n */\nROT.FOV.prototype._getCircle = function(cx, cy, r) {\n\tvar result = [];\n\tvar dirs, countFactor, startOffset;\n\n\tswitch (this._options.topology) {\n\t\tcase 4:\n\t\t\tcountFactor = 1;\n\t\t\tstartOffset = [0, 1];\n\t\t\tdirs = [\n\t\t\t\tROT.DIRS[8][7],\n\t\t\t\tROT.DIRS[8][1],\n\t\t\t\tROT.DIRS[8][3],\n\t\t\t\tROT.DIRS[8][5]\n\t\t\t]\n\t\tbreak;\n\n\t\tcase 6:\n\t\t\tdirs = ROT.DIRS[6];\n\t\t\tcountFactor = 1;\n\t\t\tstartOffset = [-1, 1];\n\t\tbreak;\n\n\t\tcase 8:\n\t\t\tdirs = ROT.DIRS[4];\n\t\t\tcountFactor = 2;\n\t\t\tstartOffset = [-1, 1];\n\t\tbreak;\n\t}\n\n\t/* starting neighbor */\n\tvar x = cx + startOffset[0]*r;\n\tvar y = cy + startOffset[1]*r;\n\n\t/* circle */\n\tfor (var i=0;i<dirs.length;i++) {\n\t\tfor (var j=0;j<r*countFactor;j++) {\n\t\t\tresult.push([x, y]);\n\t\t\tx += dirs[i][0];\n\t\t\ty += dirs[i][1];\n\n\t\t}\n\t}\n\n\treturn result;\n}\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nROT.FOV.DiscreteShadowcasting = function(lightPassesCallback, options) {\n\tROT.FOV.call(this, lightPassesCallback, options);\n}\nROT.FOV.DiscreteShadowcasting.extend(ROT.FOV);\n\n/**\n * @see ROT.FOV#compute\n */\nROT.FOV.DiscreteShadowcasting.prototype.compute = function(x, y, R, callback) {\n\tvar center = this._coords;\n\tvar map = this._map;\n\n\t/* this place is always visible */\n\tcallback(x, y, 0, 1);\n\n\t/* standing in a dark place. FIXME is this a good idea?  */\n\tif (!this._lightPasses(x, y)) { return; }\n\t\n\t/* start and end angles */\n\tvar DATA = [];\n\t\n\tvar A, B, cx, cy, blocks;\n\n\t/* analyze surrounding cells in concentric rings, starting from the center */\n\tfor (var r=1; r<=R; r++) {\n\t\tvar neighbors = this._getCircle(x, y, r);\n\t\tvar angle = 360 / neighbors.length;\n\n\t\tfor (var i=0;i<neighbors.length;i++) {\n\t\t\tcx = neighbors[i][0];\n\t\t\tcy = neighbors[i][1];\n\t\t\tA = angle * (i - 0.5);\n\t\t\tB = A + angle;\n\t\t\t\n\t\t\tblocks = !this._lightPasses(cx, cy);\n\t\t\tif (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) { callback(cx, cy, r, 1); }\n\t\t\t\n\t\t\tif (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) { return; } /* cutoff? */\n\n\t\t} /* for all cells in this ring */\n\t} /* for all rings */\n}\n\n/**\n * @param {int} A start angle\n * @param {int} B end angle\n * @param {bool} blocks Does current cell block visibility?\n * @param {int[][]} DATA shadowed angle pairs\n */\nROT.FOV.DiscreteShadowcasting.prototype._visibleCoords = function(A, B, blocks, DATA) {\n\tif (A < 0) { \n\t\tvar v1 = arguments.callee(0, B, blocks, DATA);\n\t\tvar v2 = arguments.callee(360+A, 360, blocks, DATA);\n\t\treturn v1 || v2;\n\t}\n\t\n\tvar index = 0;\n\twhile (index < DATA.length && DATA[index] < A) { index++; }\n\t\n\tif (index == DATA.length) { /* completely new shadow */\n\t\tif (blocks) { DATA.push(A, B); } \n\t\treturn true;\n\t}\n\t\n\tvar count = 0;\n\t\n\tif (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n\t\twhile (index < DATA.length && DATA[index] < B) {\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\tif (count == 0) { return false; }\n\t\t\n\t\tif (blocks) { \n\t\t\tif (count % 2) {\n\t\t\t\tDATA.splice(index-count, count, B);\n\t\t\t} else {\n\t\t\t\tDATA.splice(index-count, count);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\n\t} else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n\t\twhile (index < DATA.length && DATA[index] < B) {\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\t/* visible when outside an existing shadow, or when overlapping */\n\t\tif (A == DATA[index-count] && count == 1) { return false; }\n\t\t\n\t\tif (blocks) { \n\t\t\tif (count % 2) {\n\t\t\t\tDATA.splice(index-count, count, A);\n\t\t\t} else {\n\t\t\t\tDATA.splice(index-count, count, A, B);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\treturn true;\n\t}\n}\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nROT.FOV.PreciseShadowcasting = function(lightPassesCallback, options) {\n\tROT.FOV.call(this, lightPassesCallback, options);\n}\nROT.FOV.PreciseShadowcasting.extend(ROT.FOV);\n\n/**\n * @see ROT.FOV#compute\n */\nROT.FOV.PreciseShadowcasting.prototype.compute = function(x, y, R, callback) {\n\t/* this place is always visible */\n\tcallback(x, y, 0, 1);\n\n\t/* standing in a dark place. FIXME is this a good idea?  */\n\tif (!this._lightPasses(x, y)) { return; }\n\t\n\t/* list of all shadows */\n\tvar SHADOWS = [];\n\t\n\tvar cx, cy, blocks, A1, A2, visibility;\n\n\t/* analyze surrounding cells in concentric rings, starting from the center */\n\tfor (var r=1; r<=R; r++) {\n\t\tvar neighbors = this._getCircle(x, y, r);\n\t\tvar neighborCount = neighbors.length;\n\n\t\tfor (var i=0;i<neighborCount;i++) {\n\t\t\tcx = neighbors[i][0];\n\t\t\tcy = neighbors[i][1];\n\t\t\t/* shift half-an-angle backwards to maintain consistency of 0-th cells */\n\t\t\tA1 = [i ? 2*i-1 : 2*neighborCount-1, 2*neighborCount];\n\t\t\tA2 = [2*i+1, 2*neighborCount]; \n\t\t\t\n\t\t\tblocks = !this._lightPasses(cx, cy);\n\t\t\tvisibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n\t\t\tif (visibility) { callback(cx, cy, r, visibility); }\n\n\t\t\tif (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) { return; } /* cutoff? */\n\n\t\t} /* for all cells in this ring */\n\t} /* for all rings */\n}\n\n/**\n * @param {int[2]} A1 arc start\n * @param {int[2]} A2 arc end\n * @param {bool} blocks Does current arc block visibility?\n * @param {int[][]} SHADOWS list of active shadows\n */\nROT.FOV.PreciseShadowcasting.prototype._checkVisibility = function(A1, A2, blocks, SHADOWS) {\n\tif (A1[0] > A2[0]) { /* split into two sub-arcs */\n\t\tvar v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n\t\tvar v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n\t\treturn (v1+v2)/2;\n\t}\n\n\t/* index1: first shadow >= A1 */\n\tvar index1 = 0, edge1 = false;\n\twhile (index1 < SHADOWS.length) {\n\t\tvar old = SHADOWS[index1];\n\t\tvar diff = old[0]*A1[1] - A1[0]*old[1];\n\t\tif (diff >= 0) { /* old >= A1 */\n\t\t\tif (diff == 0 && !(index1 % 2)) { edge1 = true; }\n\t\t\tbreak;\n\t\t}\n\t\tindex1++;\n\t}\n\n\t/* index2: last shadow <= A2 */\n\tvar index2 = SHADOWS.length, edge2 = false;\n\twhile (index2--) {\n\t\tvar old = SHADOWS[index2];\n\t\tvar diff = A2[0]*old[1] - old[0]*A2[1];\n\t\tif (diff >= 0) { /* old <= A2 */\n\t\t\tif (diff == 0 && (index2 % 2)) { edge2 = true; }\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tvar visible = true;\n\tif (index1 == index2 && (edge1 || edge2)) {  /* subset of existing shadow, one of the edges match */\n\t\tvisible = false; \n\t} else if (edge1 && edge2 && index1+1==index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n\t\tvisible = false;\n\t} else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n\t\tvisible = false;\n\t}\n\t\n\tif (!visible) { return 0; } /* fast case: not visible */\n\t\n\tvar visibleLength, P;\n\n\t/* compute the length of visible arc, adjust list of shadows (if blocking) */\n\tvar remove = index2-index1+1;\n\tif (remove % 2) {\n\t\tif (index1 % 2) { /* first edge within existing shadow, second outside */\n\t\t\tvar P = SHADOWS[index1];\n\t\t\tvisibleLength = (A2[0]*P[1] - P[0]*A2[1]) / (P[1] * A2[1]);\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove, A2); }\n\t\t} else { /* second edge within existing shadow, first outside */\n\t\t\tvar P = SHADOWS[index2];\n\t\t\tvisibleLength = (P[0]*A1[1] - A1[0]*P[1]) / (A1[1] * P[1]);\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove, A1); }\n\t\t}\n\t} else {\n\t\tif (index1 % 2) { /* both edges within existing shadows */\n\t\t\tvar P1 = SHADOWS[index1];\n\t\t\tvar P2 = SHADOWS[index2];\n\t\t\tvisibleLength = (P2[0]*P1[1] - P1[0]*P2[1]) / (P1[1] * P2[1]);\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove); }\n\t\t} else { /* both edges outside existing shadows */\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove, A1, A2); }\n\t\t\treturn 1; /* whole arc visible! */\n\t\t}\n\t}\n\n\tvar arcLength = (A2[0]*A1[1] - A1[0]*A2[1]) / (A1[1] * A2[1]);\n\n\treturn visibleLength/arcLength;\n}\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nROT.FOV.RecursiveShadowcasting = function(lightPassesCallback, options) {\n\tROT.FOV.call(this, lightPassesCallback, options);\n}\nROT.FOV.RecursiveShadowcasting.extend(ROT.FOV);\n\n/** Octants used for translating recursive shadowcasting offsets */\nROT.FOV.RecursiveShadowcasting.OCTANTS = [\n\t[-1,  0,  0,  1],\n\t[ 0, -1,  1,  0],\n\t[ 0, -1, -1,  0],\n\t[-1,  0,  0, -1],\n\t[ 1,  0,  0, -1],\n\t[ 0,  1, -1,  0],\n\t[ 0,  1,  1,  0],\n\t[ 1,  0,  0,  1]\n];\n\n/**\n * Compute visibility for a 360-degree circle\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype.compute = function(x, y, R, callback) {\n\t//You can always see your own tile\n\tcallback(x, y, 0, 1);\n\tfor(var i = 0; i < ROT.FOV.RecursiveShadowcasting.OCTANTS.length; i++) {\n\t\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[i], R, callback);\n\t}\n}\n\n/**\n * Compute visibility for a 180-degree arc\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype.compute180 = function(x, y, R, dir, callback) {\n\t//You can always see your own tile\n\tcallback(x, y, 0, 1);\n\tvar previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n\tvar nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n\tvar nextOctant = (dir+ 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[nextPreviousOctant], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[previousOctant], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[dir], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[nextOctant], R, callback);\n}\n\n/**\n * Compute visibility for a 90-degree arc\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype.compute90 = function(x, y, R, dir, callback) {\n\t//You can always see your own tile\n\tcallback(x, y, 0, 1);\n\tvar previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[dir], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[previousOctant], R, callback);\n}\n\n/**\n * Render one octant (45-degree arc) of the viewshed\n * @param {int} x\n * @param {int} y\n * @param {int} octant Octant to be rendered\n * @param {int} R Maximum visibility radius\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype._renderOctant = function(x, y, octant, R, callback) {\n\t//Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n\tthis._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n}\n\n/**\n * Actually calculates the visibility\n * @param {int} startX The starting X coordinate\n * @param {int} startY The starting Y coordinate\n * @param {int} row The row to render\n * @param {float} visSlopeStart The slope to start at\n * @param {float} visSlopeEnd The slope to end at\n * @param {int} radius The radius to reach out to\n * @param {int} xx \n * @param {int} xy \n * @param {int} yx \n * @param {int} yy \n * @param {function} callback The callback to use when we hit a block that is visible\n */\nROT.FOV.RecursiveShadowcasting.prototype._castVisibility = function(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n\tif(visSlopeStart < visSlopeEnd) { return; }\n\tfor(var i = row; i <= radius; i++) {\n\t\tvar dx = -i - 1;\n\t\tvar dy = -i;\n\t\tvar blocked = false;\n\t\tvar newStart = 0;\n\n\t\t//'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n\t\twhile(dx <= 0) {\n\t\t\tdx += 1;\n\n\t\t\t//Translate from relative coordinates to map coordinates\n\t\t\tvar mapX = startX + dx * xx + dy * xy;\n\t\t\tvar mapY = startY + dx * yx + dy * yy;\n\n\t\t\t//Range of the row\n\t\t\tvar slopeStart = (dx - 0.5) / (dy + 0.5);\n\t\t\tvar slopeEnd = (dx + 0.5) / (dy - 0.5);\n\t\t\n\t\t\t//Ignore if not yet at left edge of Octant\n\t\t\tif(slopeEnd > visSlopeStart) { continue; }\n\t\t\t\n\t\t\t//Done if past right edge\n\t\t\tif(slopeStart < visSlopeEnd) { break; }\n\t\t\t\t\n\t\t\t//If it's in range, it's visible\n\t\t\tif((dx * dx + dy * dy) < (radius * radius)) {\n\t\t\t\tcallback(mapX, mapY, i, 1);\n\t\t\t}\n\t\n\t\t\tif(!blocked) {\n\t\t\t\t//If tile is a blocking tile, cast around it\n\t\t\t\tif(!this._lightPasses(mapX, mapY) && i < radius) {\n\t\t\t\t\tblocked = true;\n\t\t\t\t\tthis._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n\t\t\t\t\tnewStart = slopeEnd;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//Keep narrowing if scanning across a block\n\t\t\t\tif(!this._lightPasses(mapX, mapY)) {\n\t\t\t\t\tnewStart = slopeEnd;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\n\t\t\t\t//Block has ended\n\t\t\t\tblocked = false;\n\t\t\t\tvisSlopeStart = newStart;\n\t\t\t}\n\t\t}\n\t\tif(blocked) { break; }\n\t}\n}\n/**\n * @namespace Color operations\n */\nROT.Color = {\n\tfromString: function(str) {\n\t\tvar cached, r;\n\t\tif (str in this._cache) {\n\t\t\tcached = this._cache[str];\n\t\t} else {\n\t\t\tif (str.charAt(0) == \"#\") { /* hex rgb */\n\n\t\t\t\tvar values = str.match(/[0-9a-f]/gi).map(function(x) { return parseInt(x, 16); });\n\t\t\t\tif (values.length == 3) {\n\t\t\t\t\tcached = values.map(function(x) { return x*17; });\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i=0;i<3;i++) {\n\t\t\t\t\t\tvalues[i+1] += 16*values[i];\n\t\t\t\t\t\tvalues.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t\tcached = values;\n\t\t\t\t}\n\n\t\t\t} else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { /* decimal rgb */\n\t\t\t\tcached = r[1].split(/\\s*,\\s*/).map(function(x) { return parseInt(x); });\n\t\t\t} else { /* html name */\n\t\t\t\tcached = [0, 0, 0];\n\t\t\t}\n\n\t\t\tthis._cache[str] = cached;\n\t\t}\n\n\t\treturn cached.slice();\n\t},\n\n\t/**\n\t * Add two or more colors\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tadd: function(color1, color2) {\n\t\tvar result = color1.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tresult[i] += arguments[j][i];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Add two or more colors, MODIFIES FIRST ARGUMENT\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tadd_: function(color1, color2) {\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tcolor1[i] += arguments[j][i];\n\t\t\t}\n\t\t}\n\t\treturn color1;\n\t},\n\n\t/**\n\t * Multiply (mix) two or more colors\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tmultiply: function(color1, color2) {\n\t\tvar result = color1.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tresult[i] *= arguments[j][i] / 255;\n\t\t\t}\n\t\t\tresult[i] = Math.round(result[i]);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tmultiply_: function(color1, color2) {\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tcolor1[i] *= arguments[j][i] / 255;\n\t\t\t}\n\t\t\tcolor1[i] = Math.round(color1[i]);\n\t\t}\n\t\treturn color1;\n\t},\n\n\t/**\n\t * Interpolate (blend) two colors with a given factor\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @param {float} [factor=0.5] 0..1\n\t * @returns {number[]}\n\t */\n\tinterpolate: function(color1, color2, factor) {\n\t\tif (arguments.length < 3) { factor = 0.5; }\n\t\tvar result = color1.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tresult[i] = Math.round(result[i] + factor*(color2[i]-color1[i]));\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Interpolate (blend) two colors with a given factor in HSL mode\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @param {float} [factor=0.5] 0..1\n\t * @returns {number[]}\n\t */\n\tinterpolateHSL: function(color1, color2, factor) {\n\t\tif (arguments.length < 3) { factor = 0.5; }\n\t\tvar hsl1 = this.rgb2hsl(color1);\n\t\tvar hsl2 = this.rgb2hsl(color2);\n\t\tfor (var i=0;i<3;i++) {\n\t\t\thsl1[i] += factor*(hsl2[i]-hsl1[i]);\n\t\t}\n\t\treturn this.hsl2rgb(hsl1);\n\t},\n\n\t/**\n\t * Create a new random color based on this one\n\t * @param {number[]} color\n\t * @param {number[]} diff Set of standard deviations\n\t * @returns {number[]}\n\t */\n\trandomize: function(color, diff) {\n\t\tif (!(diff instanceof Array)) { diff = Math.round(ROT.RNG.getNormal(0, diff)); }\n\t\tvar result = color.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tresult[i] += (diff instanceof Array ? Math.round(ROT.RNG.getNormal(0, diff[i])) : diff);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n\t * @param {number[]} color\n\t * @returns {number[]}\n\t */\n\trgb2hsl: function(color) {\n\t\tvar r = color[0]/255;\n\t\tvar g = color[1]/255;\n\t\tvar b = color[2]/255;\n\n\t\tvar max = Math.max(r, g, b), min = Math.min(r, g, b);\n\t\tvar h, s, l = (max + min) / 2;\n\n\t\tif (max == min) {\n\t\t\th = s = 0; // achromatic\n\t\t} else {\n\t\t\tvar d = max - min;\n\t\t\ts = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n\t\t\tswitch(max) {\n\t\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\n\t\t\t\tcase g: h = (b - r) / d + 2; break;\n\t\t\t\tcase b: h = (r - g) / d + 4; break;\n\t\t\t}\n\t\t\th /= 6;\n\t\t}\n\n\t\treturn [h, s, l];\n\t},\n\n\t/**\n\t * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n\t * @param {number[]} color\n\t * @returns {number[]}\n\t */\n\thsl2rgb: function(color) {\n\t\tvar l = color[2];\n\n\t\tif (color[1] == 0) {\n\t\t\tl = Math.round(l*255);\n\t\t\treturn [l, l, l];\n\t\t} else {\n\t\t\tvar hue2rgb = function(p, q, t) {\n\t\t\t\tif (t < 0) t += 1;\n\t\t\t\tif (t > 1) t -= 1;\n\t\t\t\tif (t < 1/6) return p + (q - p) * 6 * t;\n\t\t\t\tif (t < 1/2) return q;\n\t\t\t\tif (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n\t\t\t\treturn p;\n\t\t\t}\n\n\t\t\tvar s = color[1];\n\t\t\tvar q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n\t\t\tvar p = 2 * l - q;\n\t\t\tvar r = hue2rgb(p, q, color[0] + 1/3);\n\t\t\tvar g = hue2rgb(p, q, color[0]);\n\t\t\tvar b = hue2rgb(p, q, color[0] - 1/3);\n\t\t\treturn [Math.round(r*255), Math.round(g*255), Math.round(b*255)];\n\t\t}\n\t},\n\n\ttoRGB: function(color) {\n\t\treturn \"rgb(\" + this._clamp(color[0]) + \",\" + this._clamp(color[1]) + \",\" + this._clamp(color[2]) + \")\";\n\t},\n\n\ttoHex: function(color) {\n\t\tvar parts = [];\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tparts.push(this._clamp(color[i]).toString(16).lpad(\"0\", 2));\n\t\t}\n\t\treturn \"#\" + parts.join(\"\");\n\t},\n\n\t_clamp: function(num) {\n\t\tif (num < 0) {\n\t\t\treturn 0;\n\t\t} else if (num > 255) {\n\t\t\treturn 255;\n\t\t} else {\n\t\t\treturn num;\n\t\t}\n\t},\n\n\t_cache: {\n\t\t\"black\": [0,0,0],\n\t\t\"navy\": [0,0,128],\n\t\t\"darkblue\": [0,0,139],\n\t\t\"mediumblue\": [0,0,205],\n\t\t\"blue\": [0,0,255],\n\t\t\"darkgreen\": [0,100,0],\n\t\t\"green\": [0,128,0],\n\t\t\"teal\": [0,128,128],\n\t\t\"darkcyan\": [0,139,139],\n\t\t\"deepskyblue\": [0,191,255],\n\t\t\"darkturquoise\": [0,206,209],\n\t\t\"mediumspringgreen\": [0,250,154],\n\t\t\"lime\": [0,255,0],\n\t\t\"springgreen\": [0,255,127],\n\t\t\"aqua\": [0,255,255],\n\t\t\"cyan\": [0,255,255],\n\t\t\"midnightblue\": [25,25,112],\n\t\t\"dodgerblue\": [30,144,255],\n\t\t\"forestgreen\": [34,139,34],\n\t\t\"seagreen\": [46,139,87],\n\t\t\"darkslategray\": [47,79,79],\n\t\t\"darkslategrey\": [47,79,79],\n\t\t\"limegreen\": [50,205,50],\n\t\t\"mediumseagreen\": [60,179,113],\n\t\t\"turquoise\": [64,224,208],\n\t\t\"royalblue\": [65,105,225],\n\t\t\"steelblue\": [70,130,180],\n\t\t\"darkslateblue\": [72,61,139],\n\t\t\"mediumturquoise\": [72,209,204],\n\t\t\"indigo\": [75,0,130],\n\t\t\"darkolivegreen\": [85,107,47],\n\t\t\"cadetblue\": [95,158,160],\n\t\t\"cornflowerblue\": [100,149,237],\n\t\t\"mediumaquamarine\": [102,205,170],\n\t\t\"dimgray\": [105,105,105],\n\t\t\"dimgrey\": [105,105,105],\n\t\t\"slateblue\": [106,90,205],\n\t\t\"olivedrab\": [107,142,35],\n\t\t\"slategray\": [112,128,144],\n\t\t\"slategrey\": [112,128,144],\n\t\t\"lightslategray\": [119,136,153],\n\t\t\"lightslategrey\": [119,136,153],\n\t\t\"mediumslateblue\": [123,104,238],\n\t\t\"lawngreen\": [124,252,0],\n\t\t\"chartreuse\": [127,255,0],\n\t\t\"aquamarine\": [127,255,212],\n\t\t\"maroon\": [128,0,0],\n\t\t\"purple\": [128,0,128],\n\t\t\"olive\": [128,128,0],\n\t\t\"gray\": [128,128,128],\n\t\t\"grey\": [128,128,128],\n\t\t\"skyblue\": [135,206,235],\n\t\t\"lightskyblue\": [135,206,250],\n\t\t\"blueviolet\": [138,43,226],\n\t\t\"darkred\": [139,0,0],\n\t\t\"darkmagenta\": [139,0,139],\n\t\t\"saddlebrown\": [139,69,19],\n\t\t\"darkseagreen\": [143,188,143],\n\t\t\"lightgreen\": [144,238,144],\n\t\t\"mediumpurple\": [147,112,216],\n\t\t\"darkviolet\": [148,0,211],\n\t\t\"palegreen\": [152,251,152],\n\t\t\"darkorchid\": [153,50,204],\n\t\t\"yellowgreen\": [154,205,50],\n\t\t\"sienna\": [160,82,45],\n\t\t\"brown\": [165,42,42],\n\t\t\"darkgray\": [169,169,169],\n\t\t\"darkgrey\": [169,169,169],\n\t\t\"lightblue\": [173,216,230],\n\t\t\"greenyellow\": [173,255,47],\n\t\t\"paleturquoise\": [175,238,238],\n\t\t\"lightsteelblue\": [176,196,222],\n\t\t\"powderblue\": [176,224,230],\n\t\t\"firebrick\": [178,34,34],\n\t\t\"darkgoldenrod\": [184,134,11],\n\t\t\"mediumorchid\": [186,85,211],\n\t\t\"rosybrown\": [188,143,143],\n\t\t\"darkkhaki\": [189,183,107],\n\t\t\"silver\": [192,192,192],\n\t\t\"mediumvioletred\": [199,21,133],\n\t\t\"indianred\": [205,92,92],\n\t\t\"peru\": [205,133,63],\n\t\t\"chocolate\": [210,105,30],\n\t\t\"tan\": [210,180,140],\n\t\t\"lightgray\": [211,211,211],\n\t\t\"lightgrey\": [211,211,211],\n\t\t\"palevioletred\": [216,112,147],\n\t\t\"thistle\": [216,191,216],\n\t\t\"orchid\": [218,112,214],\n\t\t\"goldenrod\": [218,165,32],\n\t\t\"crimson\": [220,20,60],\n\t\t\"gainsboro\": [220,220,220],\n\t\t\"plum\": [221,160,221],\n\t\t\"burlywood\": [222,184,135],\n\t\t\"lightcyan\": [224,255,255],\n\t\t\"lavender\": [230,230,250],\n\t\t\"darksalmon\": [233,150,122],\n\t\t\"violet\": [238,130,238],\n\t\t\"palegoldenrod\": [238,232,170],\n\t\t\"lightcoral\": [240,128,128],\n\t\t\"khaki\": [240,230,140],\n\t\t\"aliceblue\": [240,248,255],\n\t\t\"honeydew\": [240,255,240],\n\t\t\"azure\": [240,255,255],\n\t\t\"sandybrown\": [244,164,96],\n\t\t\"wheat\": [245,222,179],\n\t\t\"beige\": [245,245,220],\n\t\t\"whitesmoke\": [245,245,245],\n\t\t\"mintcream\": [245,255,250],\n\t\t\"ghostwhite\": [248,248,255],\n\t\t\"salmon\": [250,128,114],\n\t\t\"antiquewhite\": [250,235,215],\n\t\t\"linen\": [250,240,230],\n\t\t\"lightgoldenrodyellow\": [250,250,210],\n\t\t\"oldlace\": [253,245,230],\n\t\t\"red\": [255,0,0],\n\t\t\"fuchsia\": [255,0,255],\n\t\t\"magenta\": [255,0,255],\n\t\t\"deeppink\": [255,20,147],\n\t\t\"orangered\": [255,69,0],\n\t\t\"tomato\": [255,99,71],\n\t\t\"hotpink\": [255,105,180],\n\t\t\"coral\": [255,127,80],\n\t\t\"darkorange\": [255,140,0],\n\t\t\"lightsalmon\": [255,160,122],\n\t\t\"orange\": [255,165,0],\n\t\t\"lightpink\": [255,182,193],\n\t\t\"pink\": [255,192,203],\n\t\t\"gold\": [255,215,0],\n\t\t\"peachpuff\": [255,218,185],\n\t\t\"navajowhite\": [255,222,173],\n\t\t\"moccasin\": [255,228,181],\n\t\t\"bisque\": [255,228,196],\n\t\t\"mistyrose\": [255,228,225],\n\t\t\"blanchedalmond\": [255,235,205],\n\t\t\"papayawhip\": [255,239,213],\n\t\t\"lavenderblush\": [255,240,245],\n\t\t\"seashell\": [255,245,238],\n\t\t\"cornsilk\": [255,248,220],\n\t\t\"lemonchiffon\": [255,250,205],\n\t\t\"floralwhite\": [255,250,240],\n\t\t\"snow\": [255,250,250],\n\t\t\"yellow\": [255,255,0],\n\t\t\"lightyellow\": [255,255,224],\n\t\t\"ivory\": [255,255,240],\n\t\t\"white\": [255,255,255]\n\t}\n}\n/**\n * @class Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n * @param {function} reflectivityCallback Callback to retrieve cell reflectivity (0..1)\n * @param {object} [options]\n * @param {int} [options.passes=1] Number of passes. 1 equals to simple FOV of all light sources, >1 means a *highly simplified* radiosity-like algorithm.\n * @param {int} [options.emissionThreshold=100] Cells with emissivity > threshold will be treated as light source in the next pass.\n * @param {int} [options.range=10] Max light range\n */\nROT.Lighting = function(reflectivityCallback, options) {\n\tthis._reflectivityCallback = reflectivityCallback;\n\tthis._options = {\n\t\tpasses: 1,\n\t\temissionThreshold: 100,\n\t\trange: 10\n\t};\n\tthis._fov = null;\n\n\tthis._lights = {};\n\tthis._reflectivityCache = {};\n\tthis._fovCache = {};\n\n\tthis.setOptions(options);\n}\n\n/**\n * Adjust options at runtime\n * @see ROT.Lighting\n * @param {object} [options]\n */\nROT.Lighting.prototype.setOptions = function(options) {\n\tfor (var p in options) { this._options[p] = options[p]; }\n\tif (options && options.range) { this.reset(); }\n\treturn this;\n}\n\n/**\n * Set the used Field-Of-View algo\n * @param {ROT.FOV} fov\n */\nROT.Lighting.prototype.setFOV = function(fov) {\n\tthis._fov = fov;\n\tthis._fovCache = {};\n\treturn this;\n}\n\n/**\n * Set (or remove) a light source\n * @param {int} x\n * @param {int} y\n * @param {null || string || number[3]} color\n */\nROT.Lighting.prototype.setLight = function(x, y, color) {\n\tvar key = x+\",\"+y;\n\n\tif (color) {\n\t\tthis._lights[key] = (typeof(color) == \"string\" ? ROT.Color.fromString(color) : color);\n\t} else {\n\t\tdelete this._lights[key];\n\t}\n\treturn this;\n}\n\n/**\n * Remove all light sources\n */\nROT.Lighting.prototype.clearLights = function() {\n    this._lights = {};\n}\n\n/**\n * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n */\nROT.Lighting.prototype.reset = function() {\n\tthis._reflectivityCache = {};\n\tthis._fovCache = {};\n\n\treturn this;\n}\n\n/**\n * Compute the lighting\n * @param {function} lightingCallback Will be called with (x, y, color) for every lit cell\n */\nROT.Lighting.prototype.compute = function(lightingCallback) {\n\tvar doneCells = {};\n\tvar emittingCells = {};\n\tvar litCells = {};\n\n\tfor (var key in this._lights) { /* prepare emitters for first pass */\n\t\tvar light = this._lights[key];\n\t\temittingCells[key] = [0, 0, 0];\n\t\tROT.Color.add_(emittingCells[key], light);\n\t}\n\n\tfor (var i=0;i<this._options.passes;i++) { /* main loop */\n\t\tthis._emitLight(emittingCells, litCells, doneCells);\n\t\tif (i+1 == this._options.passes) { continue; } /* not for the last pass */\n\t\temittingCells = this._computeEmitters(litCells, doneCells);\n\t}\n\n\tfor (var litKey in litCells) { /* let the user know what and how is lit */\n\t\tvar parts = litKey.split(\",\");\n\t\tvar x = parseInt(parts[0]);\n\t\tvar y = parseInt(parts[1]);\n\t\tlightingCallback(x, y, litCells[litKey]);\n\t}\n\n\treturn this;\n}\n\n/**\n * Compute one iteration from all emitting cells\n * @param {object} emittingCells These emit light\n * @param {object} litCells Add projected light to these\n * @param {object} doneCells These already emitted, forbid them from further calculations\n */\nROT.Lighting.prototype._emitLight = function(emittingCells, litCells, doneCells) {\n\tfor (var key in emittingCells) {\n\t\tvar parts = key.split(\",\");\n\t\tvar x = parseInt(parts[0]);\n\t\tvar y = parseInt(parts[1]);\n\t\tthis._emitLightFromCell(x, y, emittingCells[key], litCells);\n\t\tdoneCells[key] = 1;\n\t}\n\treturn this;\n}\n\n/**\n * Prepare a list of emitters for next pass\n * @param {object} litCells\n * @param {object} doneCells\n * @returns {object}\n */\nROT.Lighting.prototype._computeEmitters = function(litCells, doneCells) {\n\tvar result = {};\n\n\tfor (var key in litCells) {\n\t\tif (key in doneCells) { continue; } /* already emitted */\n\n\t\tvar color = litCells[key];\n\n\t\tif (key in this._reflectivityCache) {\n\t\t\tvar reflectivity = this._reflectivityCache[key];\n\t\t} else {\n\t\t\tvar parts = key.split(\",\");\n\t\t\tvar x = parseInt(parts[0]);\n\t\t\tvar y = parseInt(parts[1]);\n\t\t\tvar reflectivity = this._reflectivityCallback(x, y);\n\t\t\tthis._reflectivityCache[key] = reflectivity;\n\t\t}\n\n\t\tif (reflectivity == 0) { continue; } /* will not reflect at all */\n\n\t\t/* compute emission color */\n\t\tvar emission = [];\n\t\tvar intensity = 0;\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tvar part = Math.round(color[i]*reflectivity);\n\t\t\temission[i] = part;\n\t\t\tintensity += part;\n\t\t}\n\t\tif (intensity > this._options.emissionThreshold) { result[key] = emission; }\n\t}\n\n\treturn result;\n}\n\n/**\n * Compute one iteration from one cell\n * @param {int} x\n * @param {int} y\n * @param {number[]} color\n * @param {object} litCells Cell data to by updated\n */\nROT.Lighting.prototype._emitLightFromCell = function(x, y, color, litCells) {\n\tvar key = x+\",\"+y;\n\tif (key in this._fovCache) {\n\t\tvar fov = this._fovCache[key];\n\t} else {\n\t\tvar fov = this._updateFOV(x, y);\n\t}\n\n\tfor (var fovKey in fov) {\n\t\tvar formFactor = fov[fovKey];\n\n\t\tif (fovKey in litCells) { /* already lit */\n\t\t\tvar result = litCells[fovKey];\n\t\t} else { /* newly lit */\n\t\t\tvar result = [0, 0, 0];\n\t\t\tlitCells[fovKey] = result;\n\t\t}\n\n\t\tfor (var i=0;i<3;i++) { result[i] += Math.round(color[i]*formFactor); } /* add light color */\n\t}\n\n\treturn this;\n}\n\n/**\n * Compute FOV (\"form factor\") for a potential light source at [x,y]\n * @param {int} x\n * @param {int} y\n * @returns {object}\n */\nROT.Lighting.prototype._updateFOV = function(x, y) {\n\tvar key1 = x+\",\"+y;\n\tvar cache = {};\n\tthis._fovCache[key1] = cache;\n\tvar range = this._options.range;\n\tvar cb = function(x, y, r, vis) {\n\t\tvar key2 = x+\",\"+y;\n\t\tvar formFactor = vis * (1-r/range);\n\t\tif (formFactor == 0) { return; }\n\t\tcache[key2] = formFactor;\n\t}\n\tthis._fov.compute(x, y, range, cb.bind(this));\n\n\treturn cache;\n}\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nROT.Path = function(toX, toY, passableCallback, options) {\n\tthis._toX = toX;\n\tthis._toY = toY;\n\tthis._fromX = null;\n\tthis._fromY = null;\n\tthis._passableCallback = passableCallback;\n\tthis._options = {\n\t\ttopology: 8\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\n\tthis._dirs = ROT.DIRS[this._options.topology];\n\tif (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n\t\tthis._dirs = [\n\t\t\tthis._dirs[0],\n\t\t\tthis._dirs[2],\n\t\t\tthis._dirs[4],\n\t\t\tthis._dirs[6],\n\t\t\tthis._dirs[1],\n\t\t\tthis._dirs[3],\n\t\t\tthis._dirs[5],\n\t\t\tthis._dirs[7]\n\t\t]\n\t}\n}\n\n/**\n * Compute a path from a given point\n * @param {int} fromX\n * @param {int} fromY\n * @param {function} callback Will be called for every path item with arguments \"x\" and \"y\"\n */\nROT.Path.prototype.compute = function(fromX, fromY, callback) {\n}\n\nROT.Path.prototype._getNeighbors = function(cx, cy) {\n\tvar result = [];\n\tfor (var i=0;i<this._dirs.length;i++) {\n\t\tvar dir = this._dirs[i];\n\t\tvar x = cx + dir[0];\n\t\tvar y = cy + dir[1];\n\t\t\n\t\tif (!this._passableCallback(x, y)) { continue; }\n\t\tresult.push([x, y]);\n\t}\n\t\n\treturn result;\n}\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nROT.Path.Dijkstra = function(toX, toY, passableCallback, options) {\n\tROT.Path.call(this, toX, toY, passableCallback, options);\n\n\tthis._computed = {};\n\tthis._todo = [];\n\tthis._add(toX, toY, null);\n}\nROT.Path.Dijkstra.extend(ROT.Path);\n\n/**\n * Compute a path from a given point\n * @see ROT.Path#compute\n */\nROT.Path.Dijkstra.prototype.compute = function(fromX, fromY, callback) {\n\tvar key = fromX+\",\"+fromY;\n\tif (!(key in this._computed)) { this._compute(fromX, fromY); }\n\tif (!(key in this._computed)) { return; }\n\t\n\tvar item = this._computed[key];\n\twhile (item) {\n\t\tcallback(item.x, item.y);\n\t\titem = item.prev;\n\t}\n}\n\n/**\n * Compute a non-cached value\n */\nROT.Path.Dijkstra.prototype._compute = function(fromX, fromY) {\n\twhile (this._todo.length) {\n\t\tvar item = this._todo.shift();\n\t\tif (item.x == fromX && item.y == fromY) { return; }\n\t\t\n\t\tvar neighbors = this._getNeighbors(item.x, item.y);\n\t\t\n\t\tfor (var i=0;i<neighbors.length;i++) {\n\t\t\tvar neighbor = neighbors[i];\n\t\t\tvar x = neighbor[0];\n\t\t\tvar y = neighbor[1];\n\t\t\tvar id = x+\",\"+y;\n\t\t\tif (id in this._computed) { continue; } /* already done */\t\n\t\t\tthis._add(x, y, item); \n\t\t}\n\t}\n}\n\nROT.Path.Dijkstra.prototype._add = function(x, y, prev) {\n\tvar obj = {\n\t\tx: x,\n\t\ty: y,\n\t\tprev: prev\n\t}\n\tthis._computed[x+\",\"+y] = obj;\n\tthis._todo.push(obj);\n}\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nROT.Path.AStar = function(toX, toY, passableCallback, options) {\n\tROT.Path.call(this, toX, toY, passableCallback, options);\n\n\tthis._todo = [];\n\tthis._done = {};\n\tthis._fromX = null;\n\tthis._fromY = null;\n}\nROT.Path.AStar.extend(ROT.Path);\n\n/**\n * Compute a path from a given point\n * @see ROT.Path#compute\n */\nROT.Path.AStar.prototype.compute = function(fromX, fromY, callback) {\n\tthis._todo = [];\n\tthis._done = {};\n\tthis._fromX = fromX;\n\tthis._fromY = fromY;\n\tthis._add(this._toX, this._toY, null);\n\n\twhile (this._todo.length) {\n\t\tvar item = this._todo.shift();\n\t\tif (item.x == fromX && item.y == fromY) { break; }\n\t\tvar neighbors = this._getNeighbors(item.x, item.y);\n\n\t\tfor (var i=0;i<neighbors.length;i++) {\n\t\t\tvar neighbor = neighbors[i];\n\t\t\tvar x = neighbor[0];\n\t\t\tvar y = neighbor[1];\n\t\t\tvar id = x+\",\"+y;\n\t\t\tif (id in this._done) { continue; }\n\t\t\tthis._add(x, y, item); \n\t\t}\n\t}\n\t\n\tvar item = this._done[fromX+\",\"+fromY];\n\tif (!item) { return; }\n\t\n\twhile (item) {\n\t\tcallback(item.x, item.y);\n\t\titem = item.prev;\n\t}\n}\n\nROT.Path.AStar.prototype._add = function(x, y, prev) {\n\tvar obj = {\n\t\tx: x,\n\t\ty: y,\n\t\tprev: prev,\n\t\tg: (prev ? prev.g+1 : 0),\n\t\th: this._distance(x, y)\n\t}\n\tthis._done[x+\",\"+y] = obj;\n\t\n\t/* insert into priority queue */\n\t\n\tvar f = obj.g + obj.h;\n\tfor (var i=0;i<this._todo.length;i++) {\n\t\tvar item = this._todo[i];\n\t\tif (f < item.g + item.h) {\n\t\t\tthis._todo.splice(i, 0, obj);\n\t\t\treturn;\n\t\t}\n\t}\n\t\n\tthis._todo.push(obj);\n}\n\nROT.Path.AStar.prototype._distance = function(x, y) {\n\tswitch (this._options.topology) {\n\t\tcase 4:\n\t\t\treturn (Math.abs(x-this._fromX) + Math.abs(y-this._fromY));\n\t\tbreak;\n\n\t\tcase 6:\n\t\t\tvar dx = Math.abs(x - this._fromX);\n\t\t\tvar dy = Math.abs(y - this._fromY);\n\t\t\treturn dy + Math.max(0, (dx-dy)/2);\n\t\tbreak;\n\n\t\tcase 8: \n\t\t\treturn Math.max(Math.abs(x-this._fromX), Math.abs(y-this._fromY));\n\t\tbreak;\n\t}\n\n        throw new Error(\"Illegal topology\");\n}\n/**\n * @class Terminal backend\n * @private\n */\nROT.Display.Term = function(context) {\n\tROT.Display.Backend.call(this, context);\n\tthis._cx = -1;\n\tthis._cy = -1;\n\tthis._lastColor = \"\";\n\tthis._options = {};\n\tthis._ox = 0;\n\tthis._oy = 0;\n\tthis._termcolor = {};\n}\nROT.Display.Term.extend(ROT.Display.Backend);\n\nROT.Display.Term.prototype.compute = function(options) {\n\tthis._options = options;\n\tthis._ox = Math.floor((process.stdout.columns - options.width) / 2);\n\tthis._oy = Math.floor((process.stdout.rows - options.height) / 2);\n\tthis._termcolor = new ROT.Display.Term[options.termColor.capitalize()](this._context);\n\tthis._context._termcolor = this._termcolor;\n}\n\nROT.Display.Term.prototype.draw = function(data, clearBefore) {\n\t// determine where to draw what with what colors\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\t// determine if we need to move the terminal cursor\n\tvar dx = this._ox + x;\n\tvar dy = this._oy + y;\n\tif (dx < 0 || dx >= process.stdout.columns) { return; }\n\tif (dy < 0 || dy >= process.stdout.rows) { return; }\n\tif (dx !== this._cx || dy !== this._cy) {\n\t\tprocess.stdout.write(this._termcolor.positionToAnsi(dx,dy));\n\t\tthis._cx = dx;\n\t\tthis._cy = dy;\n\t}\n\n\t// terminals automatically clear, but if we're clearing when we're\n\t// not otherwise provided with a character, just use a space instead\n\tif (clearBefore) {\n\t\tif (!ch) {\n\t\t\tch = \" \";\n\t\t}\n\t}\n\t\t\n\t// if we're not clearing and not provided with a character, do nothing\n\tif (!ch) { return; }\n\n\t// determine if we need to change colors\n\tvar newColor = this._termcolor.colorToAnsi(fg,bg);\n\tif (newColor !== this._lastColor) {\n\t\tprocess.stdout.write(newColor);\n\t\tthis._lastColor = newColor;\n\t}\n\n\t// write the provided symbol to the display\n\tvar chars = [].concat(ch);\n\tprocess.stdout.write(chars[0]);\n\n\t// update our position, given that we wrote a character\n\tthis._cx++;\n\tif (this._cx >= process.stdout.columns) {\n\t\tthis._cx = 0;\n\t\tthis._cy++;\n\t}\n}\n\nROT.Display.Term.prototype.computeSize = function(availWidth, availHeight) {\n\treturn [process.stdout.columns, process.stdout.rows];\n}\n\nROT.Display.Term.prototype.computeFontSize = function(availWidth, availHeight) {\n\treturn 12;\n}\n\nROT.Display.Term.prototype.eventToPosition = function(x, y) {\n\treturn [x,y]\n}\n/**\n * @class Abstract terminal code module\n * @private\n */\nROT.Display.Term.Color = function(context) {\n\tthis._context = context;\n}\n\nROT.Display.Term.Color.prototype.clearToAnsi = function(bg) {\n}\n\nROT.Display.Term.Color.prototype.colorToAnsi = function(fg, bg) {\n}\n\nROT.Display.Term.Color.prototype.positionToAnsi = function(x, y) {\n}\n/**\n * @class xterm terminal code module\n * @private\n */\nROT.Display.Term.Xterm = function(context) {\n\tROT.Display.Term.Color.call(this, context);\n}\nROT.Display.Term.Xterm.extend(ROT.Display.Term.Color);\n\nROT.Display.Term.Xterm.prototype.clearToAnsi = function(bg) {\n\treturn \"\\x1b[0;48;5;\"\n\t\t+ this._termcolor(bg)\n\t\t+ \"m\\x1b[2J\";\n}\n\nROT.Display.Term.Xterm.prototype.colorToAnsi = function(fg, bg) {\n\treturn \"\\x1b[0;38;5;\"\n\t\t+ this._termcolor(fg)\n\t\t+ \";48;5;\"\n\t\t+ this._termcolor(bg)\n\t\t+ \"m\";\n}\n\nROT.Display.Term.Xterm.prototype.positionToAnsi = function(x, y) {\n\treturn \"\\x1b[\" + (y+1) + \";\" + (x+1) + \"H\";\n}\n\nROT.Display.Term.Xterm.prototype._termcolor = function(color) {\n\tvar SRC_COLORS = 256.0;\n\tvar DST_COLORS = 6.0;\n\tvar COLOR_RATIO = DST_COLORS / SRC_COLORS;\n\tvar rgb = ROT.Color.fromString(color);\n\tvar r = Math.floor(rgb[0] * COLOR_RATIO);\n\tvar g = Math.floor(rgb[1] * COLOR_RATIO);\n\tvar b = Math.floor(rgb[2] * COLOR_RATIO);\n\treturn r*36 + g*6 + b*1 + 16;\n}\n/**\n * Export to Node.js module\n */\nfor (var p in ROT) {\n\texports[p] = ROT[p];\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6), __webpack_require__(17)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Entity = function () {\n\tfunction Entity(visual) {\n\t\t_classCallCheck(this, Entity);\n\n\t\tthis._visual = visual;\n\t\tthis._xy = null;\n\t\tthis._level = null;\n\t}\n\n\t_createClass(Entity, [{\n\t\tkey: \"getVisual\",\n\t\tvalue: function getVisual() {\n\t\t\treturn this._visual;\n\t\t}\n\t}, {\n\t\tkey: \"getXY\",\n\t\tvalue: function getXY() {\n\t\t\treturn this._xy;\n\t\t}\n\t}, {\n\t\tkey: \"getLevel\",\n\t\tvalue: function getLevel() {\n\t\t\treturn this._level;\n\t\t}\n\t}, {\n\t\tkey: \"setPosition\",\n\t\tvalue: function setPosition(xy, level) {\n\t\t\tthis._xy = xy;\n\t\t\tthis._level = level;\n\t\t\treturn this;\n\t\t}\n\t}]);\n\n\treturn Entity;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Entity);\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar XY = function () {\n\tfunction XY() {\n\t\tvar x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\t\tvar y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n\t\t_classCallCheck(this, XY);\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\t_createClass(XY, [{\n\t\tkey: \"toString\",\n\t\tvalue: function toString() {\n\t\t\treturn this.x + \",\" + this.y;\n\t\t}\n\t}, {\n\t\tkey: \"is\",\n\t\tvalue: function is(xy) {\n\t\t\treturn this.x === xy.x && this.y === xy.y;\n\t\t}\n\t}, {\n\t\tkey: \"dist8\",\n\t\tvalue: function dist8(xy) {\n\t\t\tvar dx = xy.x - this.x,\n\t\t\t    dy = xy.y - this.y;\n\n\t\t\treturn Math.max(Math.abs(dx), Math.abs(dy));\n\t\t}\n\t}, {\n\t\tkey: \"dist4\",\n\t\tvalue: function dist4(xy) {\n\t\t\tvar dx = xy.x - this.x,\n\t\t\t    dy = xy.y - this.y;\n\n\t\t\treturn Math.abs(dx) + Math.abs(dy);\n\t\t}\n\t}, {\n\t\tkey: \"dist\",\n\t\tvalue: function dist(xy) {\n\t\t\tvar dx = xy.x - this.x,\n\t\t\t    dy = xy.y - this.y;\n\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t}\n\t}, {\n\t\tkey: \"plus\",\n\t\tvalue: function plus(xy) {\n\t\t\treturn new XY(this.x + xy.x, this.y + xy.y);\n\t\t}\n\t}, {\n\t\tkey: \"minus\",\n\t\tvalue: function minus(xy) {\n\t\t\treturn new XY(this.x - xy.x, this.y - xy.y);\n\t\t}\n\t}]);\n\n\treturn XY;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (XY);\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__entity__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__game__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rot_js__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rot_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rot_js__);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\nvar Being = function (_Entity) {\n\t_inherits(Being, _Entity);\n\n\tfunction Being(visual) {\n\t\t_classCallCheck(this, Being);\n\n\t\tvar _this = _possibleConstructorReturn(this, (Being.__proto__ || Object.getPrototypeOf(Being)).call(this, visual));\n\n\t\t_this._speed = 100;\n\t\t_this._hp = 10;\n\t\treturn _this;\n\t}\n\n\t_createClass(Being, [{\n\t\tkey: 'getSpeed',\n\t\tvalue: function getSpeed() {\n\t\t\t// Called by the Scheduler\n\t\t\treturn this._speed;\n\t\t}\n\t}, {\n\t\tkey: 'damage',\n\t\tvalue: function damage(_damage) {\n\t\t\tthis._hp -= _damage;\n\t\t\tif (this._hp <= 0) {\n\t\t\t\tthis.die();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'act',\n\t\tvalue: function act() {\n\t\t\t// FIXME\n\t\t}\n\t}, {\n\t\tkey: 'die',\n\t\tvalue: function die() {\n\t\t\t__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].scheduler.remove(this);\n\t\t}\n\t}, {\n\t\tkey: 'setPosition',\n\t\tvalue: function setPosition(xy, level) {\n\t\t\t// came to a currently active level; add self to the scheduler\n\t\t\tif (level !== this._level && level === __WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].level) {\n\t\t\t\t__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].scheduler.add(this, true);\n\t\t\t}\n\n\t\t\tif (level.getTileAt(xy).passable) {\n\t\t\t\treturn __WEBPACK_IMPORTED_MODULE_0__entity__[\"a\" /* default */].prototype.setPosition.call(this, xy, level);\n\t\t\t} else {\n\t\t\t\tif (typeof level.getTileAt(xy).bump === \"function\") {\n\t\t\t\t\tlevel.getTileAt(xy).bump(xy);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'teleport',\n\t\tvalue: function teleport(level) {\n\t\t\tthis._level.setEntity(this, this._level.getFreeCells().random());\n\t\t}\n\t}]);\n\n\treturn Being;\n}(__WEBPACK_IMPORTED_MODULE_0__entity__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Being);\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar asap = __webpack_require__(9);\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nif (typeof Promise === 'undefined') {\r\n  // Rejection tracking prevents a common issue where React gets into an\r\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\r\n  // and the user has no idea what causes React's erratic future behavior.\r\n  __webpack_require__(19).enable();\r\n  window.Promise = __webpack_require__(18);\r\n}\r\n\r\n// fetch() polyfill for making API calls.\r\n__webpack_require__(20);\r\n\r\n// Object.assign() is commonly used with React.\r\n// It will use the native implementation if it's present and isn't buggy.\r\nObject.assign = __webpack_require__(16);\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rot_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__game__ = __webpack_require__(0);\n\n\n\nif (!__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.isSupported()) {\n    alert(\"The rot.js library isn't supported by your browser.\");\n} else {\n    // Initialize the game\n    __WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].init();\n}\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__entity__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__game__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__xy__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__map__ = __webpack_require__(11);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\nvar Level = function () {\n\tfunction Level() {\n\t\t_classCallCheck(this, Level);\n\n\t\t// FIXME data structure for storing entities\n\t\tthis._beings = {};\n\n\t\t// FIXME map data\n\t\tthis._size = new __WEBPACK_IMPORTED_MODULE_2__xy__[\"a\" /* default */](80, 25);\n\t\tvar mapData = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__map__[\"a\" /* default */])(80, 25);\n\t\tthis._map = mapData.map;\n\t\tthis._freeCells = mapData.freeCells;\n\n\t\tthis._empty = new __WEBPACK_IMPORTED_MODULE_0__entity__[\"a\" /* default */]({ ch: \".\", fg: \"#888\", bg: null });\n\t}\n\n\t_createClass(Level, [{\n\t\tkey: 'getSize',\n\t\tvalue: function getSize() {\n\t\t\treturn this._size;\n\t\t}\n\t}, {\n\t\tkey: 'setEntity',\n\t\tvalue: function setEntity(entity, xy) {\n\t\t\t// FIXME remove from old position, draw\n\t\t\tvar oldXY = entity.getXY();\n\t\t\tif (entity.getLevel() === this) {\n\t\t\t\tdelete this._beings[oldXY];\n\t\t\t\tif (__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].level === this) {\n\t\t\t\t\t__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].draw(oldXY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (entity.setPosition(xy, this)) {\n\t\t\t\tentity.setPosition(xy, this); // propagate position data to the entity itself\n\t\t\t\t// FIXME set new position, draw\n\t\t\t\tthis._beings[xy] = entity;\n\t\t\t\tif (__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].level === this) {\n\t\t\t\t\t__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].draw(xy);\n\t\t\t\t\t__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].textBuffer.write(\"An entity moves to \" + xy + \".\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (entity.getLevel() === this) {\n\t\t\t\t\tentity.setPosition(oldXY, this);\n\t\t\t\t\tthis._beings[oldXY] = entity;\n\t\t\t\t\tif (__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].level === this) {\n\t\t\t\t\t\t__WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].draw(oldXY);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'getEntityAt',\n\t\tvalue: function getEntityAt(xy) {\n\t\t\treturn this._beings[xy] || this._map[xy] || this._empty;\n\t\t}\n\t}, {\n\t\tkey: 'getTileAt',\n\t\tvalue: function getTileAt(xy) {\n\t\t\treturn this._map[xy] || this._empty;\n\t\t}\n\t}, {\n\t\tkey: 'getBeings',\n\t\tvalue: function getBeings() {\n\t\t\t// FIXME list of all beings\n\t\t\treturn this._beings;\n\t\t}\n\t}, {\n\t\tkey: 'getFreeCells',\n\t\tvalue: function getFreeCells() {\n\t\t\treturn this._freeCells;\n\t\t}\n\t}]);\n\n\treturn Level;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Level);\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = generateMap;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rot_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__entity__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tile__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__xy__ = __webpack_require__(3);\n\n\n\n\n\nfunction generateMap(w, h) {\n    var digger = new __WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.Map.Digger(w, h);\n    var map = {};\n    var freeCells = [];\n\n    var digCallback = function digCallback(x, y, value) {\n        var key = new __WEBPACK_IMPORTED_MODULE_3__xy__[\"a\" /* default */](x, y);\n        if (value) {\n            map[key] = new __WEBPACK_IMPORTED_MODULE_2__tile__[\"a\" /* default */](\"wall\");\n        } else {\n            map[key] = new __WEBPACK_IMPORTED_MODULE_2__tile__[\"a\" /* default */](\"floor\");\n            freeCells.push(key);\n        }\n    };\n\n    var placeDoors = function placeDoors(x, y) {\n        var key = new __WEBPACK_IMPORTED_MODULE_3__xy__[\"a\" /* default */](x, y);\n        map[key] = new __WEBPACK_IMPORTED_MODULE_2__tile__[\"a\" /* default */](\"door\");\n        if (key in freeCells) {\n            delete freeCells[key];\n        }\n    };\n\n    digger.create(digCallback.bind(this));\n    var rooms = digger.getRooms();\n    var corridors = digger.getCorridors();\n    for (var i = 0; i < rooms.length; i++) {\n        var room = rooms[i];\n        room.getDoors(placeDoors);\n    }\n    return { map: map, freeCells: freeCells };\n}\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rot_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__being__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__game__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__xy__ = __webpack_require__(3);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\nvar Player = function (_Being) {\n\t_inherits(Player, _Being);\n\n\tfunction Player() {\n\t\t_classCallCheck(this, Player);\n\n\t\tvar _this = _possibleConstructorReturn(this, (Player.__proto__ || Object.getPrototypeOf(Player)).call(this, { ch: \"@\", fg: \"#fff\" }));\n\n\t\t_this._handleKey = function (code) {\n\t\t\tif (code in this._keys) {\n\t\t\t\t__WEBPACK_IMPORTED_MODULE_2__game__[\"a\" /* default */].textBuffer.clear();\n\t\t\t\tif (typeof this._keys[code] === \"number\") {\n\t\t\t\t\tvar direction = this._keys[code];\n\n\t\t\t\t\tif (direction === -1) {\n\t\t\t\t\t\t// noop\n\t\t\t\t\t\t// FIXME show something?\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar dir = __WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.DIRS[8][direction];\n\t\t\t\t\tvar xy = this._xy.plus(new __WEBPACK_IMPORTED_MODULE_3__xy__[\"a\" /* default */](dir[0], dir[1]));\n\n\t\t\t\t\tthis._level.setEntity(this, xy);\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tswitch (this._keys[code]) {\n\t\t\t\t\t\tcase \"teleport\":\n\t\t\t\t\t\t\tthis.teleport(this._level);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false; // unknown key\n\t\t};\n\n\t\t_this._keys = {};\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_K] = 0;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_UP] = 0;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD8] = 0;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_U] = 1;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD9] = 1;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_PAGE_UP] = 1;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_L] = 2;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_RIGHT] = 2;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD6] = 2;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_N] = 3;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD3] = 3;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_PAGE_DOWN] = 3;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_J] = 4;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_DOWN] = 4;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD2] = 4;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_B] = 5;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD1] = 5;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_END] = 5;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_H] = 6;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_LEFT] = 6;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD4] = 6;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_Y] = 7;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD7] = 7;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_HOME] = 7;\n\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_PERIOD] = -1;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_CLEAR] = -1;\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_NUMPAD5] = -1;\n\n\t\t_this._keys[__WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_T] = \"teleport\";\n\t\treturn _this;\n\t}\n\n\t_createClass(Player, [{\n\t\tkey: 'act',\n\t\tvalue: function act() {\n\t\t\t__WEBPACK_IMPORTED_MODULE_2__game__[\"a\" /* default */].textBuffer.write(\"It is your turn, press any relevant key.\");\n\t\t\t__WEBPACK_IMPORTED_MODULE_2__game__[\"a\" /* default */].textBuffer.flush();\n\t\t\t__WEBPACK_IMPORTED_MODULE_2__game__[\"a\" /* default */].engine.lock();\n\t\t\twindow.addEventListener(\"keydown\", this);\n\t\t}\n\t}, {\n\t\tkey: 'die',\n\t\tvalue: function die() {\n\t\t\t_get(Player.prototype.__proto__ || Object.getPrototypeOf(Player.prototype), 'die', this).call(this);\n\t\t\t__WEBPACK_IMPORTED_MODULE_2__game__[\"a\" /* default */].over();\n\t\t}\n\t}, {\n\t\tkey: 'handleEvent',\n\t\tvalue: function handleEvent(e) {\n\t\t\tvar code = e.keyCode;\n\n\t\t\tvar keyHandled = this._handleKey(e.keyCode);\n\n\t\t\tif (keyHandled) {\n\t\t\t\twindow.removeEventListener(\"keydown\", this);\n\t\t\t\t__WEBPACK_IMPORTED_MODULE_2__game__[\"a\" /* default */].engine.unlock();\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn Player;\n}(__WEBPACK_IMPORTED_MODULE_1__being__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Player);\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rot_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rot_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__game__ = __webpack_require__(0);\n\n\n\nvar Screen = {};\n\n// Define our initial start screen\nScreen.startScreen = {\n    enter: function enter() {\n        console.log(\"Entered start screen.\");\n    },\n    exit: function exit() {\n        console.log(\"Exited start screen.\");\n    },\n    render: function render(display) {\n        // Render our prompt to the screen\n        display.drawText(1, 1, \"%c{yellow}Javascript Roguelike\");\n        display.drawText(1, 3, \"%c{cyan}HELP:\");\n        display.drawText(1, 4, \"%c{yellow}- Use arrows, vi keys or numpad keys to move\");\n        display.drawText(1, 5, \"%c{yellow}- Press 'T' to teleport!\");\n        display.drawText(1, 7, \"Press [Enter] to start!\");\n    },\n    handleInput: function handleInput(inputType, inputData) {\n        // When [Enter] is pressed, go to the play screen\n        if (inputType === 'keydown') {\n            if (inputData.keyCode === __WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.VK_RETURN) {\n                __WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].startGame();\n            }\n        }\n    }\n};\n\n// Define our winning screen\nScreen.winScreen = {\n    enter: function enter() {\n        console.log(\"Entered win screen.\");\n    },\n    exit: function exit() {\n        console.log(\"Exited win screen.\");\n    },\n    render: function render(display) {\n        // Render our prompt to the screen\n        for (var i = 0; i < 22; i++) {\n            // Generate random background colors\n            var r = Math.round(Math.random() * 255);\n            var g = Math.round(Math.random() * 255);\n            var b = Math.round(Math.random() * 255);\n            var background = __WEBPACK_IMPORTED_MODULE_0_rot_js___default.a.Color.toRGB([r, g, b]);\n            display.drawText(2, i + 1, \"%b{\" + background + \"}You win!\");\n        }\n    },\n    handleInput: function handleInput(inputType, inputData) {\n        // Nothing to do here\n    }\n};\n\n// Define our losing screen\nScreen.loseScreen = {\n    enter: function enter() {\n        console.log(\"Entered lose screen.\");\n    },\n    exit: function exit() {\n        console.log(\"Exited lose screen.\");\n    },\n    render: function render(display) {\n        // Render our prompt to the screen\n        for (var i = 0; i < 22; i++) {\n            display.drawText(2, i + 1, \"%b{red}You lose! :(\");\n        }\n    },\n    handleInput: function handleInput(inputType, inputData) {\n        // Nothing to do here\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Screen);\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__xy__ = __webpack_require__(3);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar TextBuffer = function () {\n\tfunction TextBuffer() {\n\t\t_classCallCheck(this, TextBuffer);\n\n\t\tthis._data = [];\n\t\tthis._options = {\n\t\t\tdisplay: null,\n\t\t\tposition: new __WEBPACK_IMPORTED_MODULE_0__xy__[\"a\" /* default */](),\n\t\t\tsize: new __WEBPACK_IMPORTED_MODULE_0__xy__[\"a\" /* default */]()\n\t\t};\n\t}\n\n\t_createClass(TextBuffer, [{\n\t\tkey: \"configure\",\n\t\tvalue: function configure(options) {\n\t\t\tfor (var p in options) {\n\t\t\t\tthis._options[p] = options[p];\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"clear\",\n\t\tvalue: function clear() {\n\t\t\tthis._data = [];\n\t\t}\n\t}, {\n\t\tkey: \"write\",\n\t\tvalue: function write(text) {\n\t\t\tthis._data.push(text);\n\t\t}\n\t}, {\n\t\tkey: \"flush\",\n\t\tvalue: function flush() {\n\t\t\tvar options = this._options;\n\t\t\tvar display = options.display;\n\t\t\tvar pos = options.position;\n\t\t\tvar size = options.size;\n\n\t\t\t// clear\n\t\t\tfor (var i = 0; i < size.x; i++) {\n\t\t\t\tfor (var j = 0; j < size.y; j++) {\n\t\t\t\t\tdisplay.draw(pos.x + i, pos.y + j);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar text = this._data.join(\" \");\n\t\t\tdisplay.drawText(pos.x, pos.y, text, size.x);\n\t\t}\n\t}]);\n\n\treturn TextBuffer;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (TextBuffer);\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__entity__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__game__ = __webpack_require__(0);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\nvar Tile = function (_Entity) {\n    _inherits(Tile, _Entity);\n\n    function Tile(type) {\n        _classCallCheck(this, Tile);\n\n        // FIXME\n        var tile = Tile.Types[type];\n\n        var _this = _possibleConstructorReturn(this, (Tile.__proto__ || Object.getPrototypeOf(Tile)).call(this, tile.visual));\n\n        _this.name = tile.name;\n        _this.passable = tile.passable;\n        _this.blocksLos = tile.blocksLos;\n        _this.bump = tile.bump ? tile.bump : _this.bump;\n        return _this;\n    }\n\n    _createClass(Tile, [{\n        key: 'bump',\n        value: function bump(xy) {\n            if (!this.passable) {\n                __WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].textBuffer.write('You cannot move through this ' + this.name + ' no matter how hard you try.');\n                return false;\n            }\n            return true;\n        }\n    }]);\n\n    return Tile;\n}(__WEBPACK_IMPORTED_MODULE_0__entity__[\"a\" /* default */]);\n\nTile.Types = {\n    floor: {\n        name: 'Floor',\n        visual: { ch: '.', fg: '#444', bg: '#222' },\n        passable: true,\n        blocksLos: false\n    },\n    wall: {\n        name: 'Wall',\n        visual: { ch: '#', fg: '#777', bg: '#2e2e2e' },\n        passable: false,\n        blocksLos: true\n    },\n    door: {\n        name: 'Door',\n        visual: { ch: '+', fg: 'yellow', bg: '#222' },\n        passable: false,\n        blocksLos: true,\n        bump: function bump(xy) {\n            if (!this.passable) {\n                this.passable = true;\n                this.blocksLos = false;\n                this._visual.ch = \"'\";\n                __WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].draw(xy);\n                __WEBPACK_IMPORTED_MODULE_1__game__[\"a\" /* default */].textBuffer.write('You open the ' + this.name + '.');\n                return false;\n            }\n            return true;\n        }\n    }\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = (Tile);\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = __webpack_require__(5);\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Promise = __webpack_require__(5);\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._10 = null;\n  Promise._97 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._10 = function (promise) {\n    if (\n      promise._81 === 2 && // IS REJECTED\n      rejections[promise._72]\n    ) {\n      if (rejections[promise._72].logged) {\n        onHandled(promise._72);\n      } else {\n        clearTimeout(rejections[promise._72].timeout);\n      }\n      delete rejections[promise._72];\n    }\n  };\n  Promise._97 = function (promise, err) {\n    if (promise._45 === 0) { // not yet handled\n      promise._72 = id++;\n      rejections[promise._72] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._72),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(7);\nmodule.exports = __webpack_require__(8);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// static/js/main.1bff24ae.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dung/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 76aa79216542f192a201","import ROT from 'rot-js'\r\nimport Being from './being'\r\nimport Entity from './entity'\r\nimport Level from './level'\r\nimport Player from './player'\r\nimport Screen from './screens'\r\nimport TextBuffer from './textbuffer'\r\nimport XY from './xy'\r\n\r\nclass Game {\r\n\tstatic scheduler = null\r\n\tstatic engine = null\r\n\tstatic player = null\r\n\tstatic level = null\r\n\tstatic display = null\r\n\tstatic textBuffer = null\r\n\tstatic currentScreen = null\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.scheduler = new ROT.Scheduler.Speed();\r\n\t\tthis.engine = new ROT.Engine(this.scheduler);\r\n\t\tthis.display = new ROT.Display({fontSize:16});\r\n\t\tthis.textBuffer = new TextBuffer(this.display);\r\n\t\tdocument.body.appendChild(this.display.getContainer());\r\n\t\tthis.player = new Player();\r\n\r\n\t\t// Create a helper function for binding to an event\r\n\t\t// and making it send it to the screen\r\n\t\tconst game = this; // So that we don't lose this\r\n\t\tconst bindEventToScreen = function(event) {\r\n\t\t\twindow.addEventListener(event, function(e) {\r\n\t\t\t\t// When an event is received, send it to the\r\n\t\t\t\t// screen if there is one\r\n\t\t\t\tif (game.currentScreen !== null) {\r\n\t\t\t\t\t// Send the event type and data to the screen\r\n\t\t\t\t\tgame.currentScreen.handleInput(event, e);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t// Bind keyboard input events\r\n\t\tbindEventToScreen('keydown');\r\n\t\tbindEventToScreen('keyup');\r\n\t\tbindEventToScreen('keypress');\r\n\r\n\t\tthis.switchScreen(Screen.startScreen);\r\n\t}\r\n\r\n\tstartGame() {\r\n\t\t// FIXME build a level and position a player\r\n\t\tconst level = new Level();\r\n\t\tconst size = level.getSize();\r\n\t\tthis._switchLevel(level);\r\n\t\tthis.level.setEntity(this.player, level.getFreeCells().random());\r\n\r\n\t\tthis.engine.start();\r\n\t}\r\n\r\n\tdraw(xy) {\r\n\t\tconst tile = this.level.getTileAt(xy);\r\n\t\tconst tileVisual = tile.getVisual();\r\n\t\tconst entity = this.level.getEntityAt(xy);\r\n\t\tconst visual = entity.getVisual();\r\n\t\tthis.display.draw(xy.x, xy.y, visual.ch, visual.fg, tileVisual.bg);\r\n\t}\r\n\r\n\tover() {\r\n\t\tthis.engine.lock();\r\n\t\t// FIXME show something\r\n\t\tthis.switchScreen(Screen.loseScreen);\r\n\t}\r\n\r\n\t_switchLevel(level) {\r\n\t\t// remove old beings from the scheduler\r\n\t\tthis.scheduler.clear();\r\n\r\n\t\tthis.level = level;\r\n\t\tconst size = this.level.getSize();\r\n\r\n\t\tconst bufferSize = 3;\r\n\t\tthis.display.setOptions({width:size.x, height:size.y + bufferSize});\r\n\t\tthis.textBuffer.configure({\r\n\t\t\tdisplay: this.display,\r\n\t\t\tposition: new XY(0, size.y),\r\n\t\t\tsize: new XY(size.x, bufferSize)\r\n\t\t});\r\n\t\tthis.textBuffer.clear();\r\n\r\n\t\t/* FIXME draw a level */\r\n\t\tconst xy = new XY();\r\n\t\tfor (let i = 0; i < size.x; i++) {\r\n\t\t\txy.x = i;\r\n\t\t\tfor (let j = 0; j < size.y; j++) {\r\n\t\t\t\txy.y = j;\r\n\t\t\t\tthis.draw(xy);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// add new beings to the scheduler\r\n\t\tconst beings = this.level.getBeings();\r\n\t\tfor (let p in beings) {\r\n\t\t\tthis.scheduler.add(beings[p], true);\r\n\t\t}\r\n\t}\r\n\r\n\tgetDisplay() {\r\n\t\treturn this.display;\r\n\t}\r\n\r\n\tswitchScreen(screen) {\r\n\t\t// If we had a screen before, notify it that we exited\r\n\t\tif (Game.currentScreen !== null) {\r\n\t\t\tGame.currentScreen.exit();\r\n\t\t}\r\n\t\t// Clear the display\r\n\t\tthis.getDisplay().clear();\r\n\t\t// Update our current screen, notify it we entered\r\n\t\t// and then render it\r\n\t\tthis.currentScreen = screen;\r\n\t\tif (this.currentScreen) {\r\n\t\t\tthis.currentScreen.enter();\r\n\t\t\tthis.currentScreen.render(this.display);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst game = new Game();\r\nexport default game;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game.js","/*\n\tThis is rot.js, the ROguelike Toolkit in JavaScript.\n\tVersion 0.6~dev, generated on Mon Nov 30 10:34:42 CET 2015.\n*/\n/**\n * Add objects for Node.js environment\n */\nglobal.requestAnimationFrame = function(cb) {\n\treturn setTimeout(cb, 1000/60);\n};\n\nglobal.document = {\n\tbody: {\n\t\tappendChild: function(child) {},\n\t\tscrollLeft: 0,\n\t\tscrollTop: 0\n\t},\n\tcreateElement: function(type) {\n\t\tvar canvas;\n\t\treturn canvas = {\n\t\t\tgetBoundingClientRect: function() {\n\t\t\t\tvar rect;\n\t\t\t\treturn rect = {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\ttop: 0\n\t\t\t\t};\n\t\t\t},\n\t\t\tgetContext: function(type) {\n\t\t\t\tvar context;\n\t\t\t\treturn context = {\n\t\t\t\t\t_termcolor: null,\n\t\t\t\t\tbeginPath: function() {},\n\t\t\t\t\tcanvas: canvas,\n\t\t\t\t\tclearRect: function(x, y, w, h) {\n\t\t\t\t\t\tif(this._termcolor !== null) {\n\t\t\t\t\t\t\tvar clearCmd = this._termcolor.clearToAnsi(this.fillStyle);\n\t\t\t\t\t\t\tprocess.stdout.write(clearCmd);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tdrawImage: function(a, b, c, d, e, f, g, h, i) {},\n\t\t\t\t\tfill: function() {},\n\t\t\t\t\tfillRect: function(x, y, w, h) {\n\t\t\t\t\t\tif(this._termcolor !== null) {\n\t\t\t\t\t\t\tvar clearCmd = this._termcolor.clearToAnsi(this.fillStyle);\n\t\t\t\t\t\t\tprocess.stdout.write(clearCmd);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfillStyle: \"#000\",\n\t\t\t\t\tfillText: function(chs, x, y) {},\n\t\t\t\t\tfont: \"monospace\",\n\t\t\t\t\tlineTo: function(x, y) {},\n\t\t\t\t\tmeasureText: function(ch) {\n\t\t\t\t\t\tvar result;\n\t\t\t\t\t\treturn result = {\n\t\t\t\t\t\t\twidth: 12\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\tmoveTo: function(x, y) {},\n\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\ttextBaseline: \"middle\"\n\t\t\t\t};\n\t\t\t},\n\t\t\theight: 0,\n\t\t\tstyle: {\n\t\t\t\tleft: \"100px\",\n\t\t\t\tposition: \"absolute\",\n\t\t\t\ttop: \"100px\",\n\t\t\t\tvisibility: \"hidden\"\n\t\t\t},\n\t\t\twidth: 0\n\t\t};\n\t},\n\tdocumentElement: {\n\t\tscrollLeft: 0,\n\t\tscrollTop: 0\n\t}\n};\n/**\n * @namespace Top-level ROT namespace\n */\nvar ROT = {\n\t/**\n\t * @returns {bool} Is rot.js supported by this browser?\n\t */\n\tisSupported: function() {\n\t\treturn !!(document.createElement(\"canvas\").getContext && Function.prototype.bind);\n\t},\n\n\t/** Default with for display and map generators */\n\tDEFAULT_WIDTH: 80,\n\t/** Default height for display and map generators */\n\tDEFAULT_HEIGHT: 25,\n\n\t/** Directional constants. Ordering is important! */\n\tDIRS: {\n\t\t\"4\": [\n\t\t\t[ 0, -1],\n\t\t\t[ 1,  0],\n\t\t\t[ 0,  1],\n\t\t\t[-1,  0]\n\t\t],\n\t\t\"8\": [\n\t\t\t[ 0, -1],\n\t\t\t[ 1, -1],\n\t\t\t[ 1,  0],\n\t\t\t[ 1,  1],\n\t\t\t[ 0,  1],\n\t\t\t[-1,  1],\n\t\t\t[-1,  0],\n\t\t\t[-1, -1]\n\t\t],\n\t\t\"6\": [\n\t\t\t[-1, -1],\n\t\t\t[ 1, -1],\n\t\t\t[ 2,  0],\n\t\t\t[ 1,  1],\n\t\t\t[-1,  1],\n\t\t\t[-2,  0]\n\t\t]\n\t},\n\n\t/** Cancel key. */\n\tVK_CANCEL: 3, \n\t/** Help key. */\n\tVK_HELP: 6, \n\t/** Backspace key. */\n\tVK_BACK_SPACE: 8, \n\t/** Tab key. */\n\tVK_TAB: 9, \n\t/** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n\tVK_CLEAR: 12, \n\t/** Return/enter key on the main keyboard. */\n\tVK_RETURN: 13, \n\t/** Reserved, but not used. */\n\tVK_ENTER: 14, \n\t/** Shift key. */\n\tVK_SHIFT: 16, \n\t/** Control key. */\n\tVK_CONTROL: 17, \n\t/** Alt (Option on Mac) key. */\n\tVK_ALT: 18, \n\t/** Pause key. */\n\tVK_PAUSE: 19, \n\t/** Caps lock. */\n\tVK_CAPS_LOCK: 20, \n\t/** Escape key. */\n\tVK_ESCAPE: 27, \n\t/** Space bar. */\n\tVK_SPACE: 32, \n\t/** Page Up key. */\n\tVK_PAGE_UP: 33, \n\t/** Page Down key. */\n\tVK_PAGE_DOWN: 34, \n\t/** End key. */\n\tVK_END: 35, \n\t/** Home key. */\n\tVK_HOME: 36, \n\t/** Left arrow. */\n\tVK_LEFT: 37, \n\t/** Up arrow. */\n\tVK_UP: 38, \n\t/** Right arrow. */\n\tVK_RIGHT: 39, \n\t/** Down arrow. */\n\tVK_DOWN: 40, \n\t/** Print Screen key. */\n\tVK_PRINTSCREEN: 44, \n\t/** Ins(ert) key. */\n\tVK_INSERT: 45, \n\t/** Del(ete) key. */\n\tVK_DELETE: 46, \n\t/***/\n\tVK_0: 48,\n\t/***/\n\tVK_1: 49,\n\t/***/\n\tVK_2: 50,\n\t/***/\n\tVK_3: 51,\n\t/***/\n\tVK_4: 52,\n\t/***/\n\tVK_5: 53,\n\t/***/\n\tVK_6: 54,\n\t/***/\n\tVK_7: 55,\n\t/***/\n\tVK_8: 56,\n\t/***/\n\tVK_9: 57,\n\t/** Colon (:) key. Requires Gecko 15.0 */\n\tVK_COLON: 58, \n\t/** Semicolon (;) key. */\n\tVK_SEMICOLON: 59, \n\t/** Less-than (<) key. Requires Gecko 15.0 */\n\tVK_LESS_THAN: 60, \n\t/** Equals (=) key. */\n\tVK_EQUALS: 61, \n\t/** Greater-than (>) key. Requires Gecko 15.0 */\n\tVK_GREATER_THAN: 62, \n\t/** Question mark (?) key. Requires Gecko 15.0 */\n\tVK_QUESTION_MARK: 63, \n\t/** Atmark (@) key. Requires Gecko 15.0 */\n\tVK_AT: 64, \n\t/***/\n\tVK_A: 65,\n\t/***/\n\tVK_B: 66,\n\t/***/\n\tVK_C: 67,\n\t/***/\n\tVK_D: 68,\n\t/***/\n\tVK_E: 69,\n\t/***/\n\tVK_F: 70,\n\t/***/\n\tVK_G: 71,\n\t/***/\n\tVK_H: 72,\n\t/***/\n\tVK_I: 73,\n\t/***/\n\tVK_J: 74,\n\t/***/\n\tVK_K: 75,\n\t/***/\n\tVK_L: 76,\n\t/***/\n\tVK_M: 77,\n\t/***/\n\tVK_N: 78,\n\t/***/\n\tVK_O: 79,\n\t/***/\n\tVK_P: 80,\n\t/***/\n\tVK_Q: 81,\n\t/***/\n\tVK_R: 82,\n\t/***/\n\tVK_S: 83,\n\t/***/\n\tVK_T: 84,\n\t/***/\n\tVK_U: 85,\n\t/***/\n\tVK_V: 86,\n\t/***/\n\tVK_W: 87,\n\t/***/\n\tVK_X: 88,\n\t/***/\n\tVK_Y: 89,\n\t/***/\n\tVK_Z: 90,\n\t/***/\n\tVK_CONTEXT_MENU: 93,\n\t/** 0 on the numeric keypad. */\n\tVK_NUMPAD0: 96, \n\t/** 1 on the numeric keypad. */\n\tVK_NUMPAD1: 97, \n\t/** 2 on the numeric keypad. */\n\tVK_NUMPAD2: 98, \n\t/** 3 on the numeric keypad. */\n\tVK_NUMPAD3: 99, \n\t/** 4 on the numeric keypad. */\n\tVK_NUMPAD4: 100, \n\t/** 5 on the numeric keypad. */\n\tVK_NUMPAD5: 101, \n\t/** 6 on the numeric keypad. */\n\tVK_NUMPAD6: 102, \n\t/** 7 on the numeric keypad. */\n\tVK_NUMPAD7: 103, \n\t/** 8 on the numeric keypad. */\n\tVK_NUMPAD8: 104, \n\t/** 9 on the numeric keypad. */\n\tVK_NUMPAD9: 105, \n\t/** * on the numeric keypad. */\n\tVK_MULTIPLY: 106,\n\t/** + on the numeric keypad. */\n\tVK_ADD: 107, \n\t/***/\n\tVK_SEPARATOR: 108,\n\t/** - on the numeric keypad. */\n\tVK_SUBTRACT: 109, \n\t/** Decimal point on the numeric keypad. */\n\tVK_DECIMAL: 110, \n\t/** / on the numeric keypad. */\n\tVK_DIVIDE: 111, \n\t/** F1 key. */\n\tVK_F1: 112, \n\t/** F2 key. */\n\tVK_F2: 113, \n\t/** F3 key. */\n\tVK_F3: 114, \n\t/** F4 key. */\n\tVK_F4: 115, \n\t/** F5 key. */\n\tVK_F5: 116, \n\t/** F6 key. */\n\tVK_F6: 117, \n\t/** F7 key. */\n\tVK_F7: 118, \n\t/** F8 key. */\n\tVK_F8: 119, \n\t/** F9 key. */\n\tVK_F9: 120, \n\t/** F10 key. */\n\tVK_F10: 121, \n\t/** F11 key. */\n\tVK_F11: 122, \n\t/** F12 key. */\n\tVK_F12: 123, \n\t/** F13 key. */\n\tVK_F13: 124, \n\t/** F14 key. */\n\tVK_F14: 125, \n\t/** F15 key. */\n\tVK_F15: 126, \n\t/** F16 key. */\n\tVK_F16: 127, \n\t/** F17 key. */\n\tVK_F17: 128, \n\t/** F18 key. */\n\tVK_F18: 129, \n\t/** F19 key. */\n\tVK_F19: 130, \n\t/** F20 key. */\n\tVK_F20: 131, \n\t/** F21 key. */\n\tVK_F21: 132, \n\t/** F22 key. */\n\tVK_F22: 133, \n\t/** F23 key. */\n\tVK_F23: 134, \n\t/** F24 key. */\n\tVK_F24: 135, \n\t/** Num Lock key. */\n\tVK_NUM_LOCK: 144, \n\t/** Scroll Lock key. */\n\tVK_SCROLL_LOCK: 145, \n\t/** Circumflex (^) key. Requires Gecko 15.0 */\n\tVK_CIRCUMFLEX: 160, \n\t/** Exclamation (!) key. Requires Gecko 15.0 */\n\tVK_EXCLAMATION: 161, \n\t/** Double quote () key. Requires Gecko 15.0 */\n\tVK_DOUBLE_QUOTE: 162, \n\t/** Hash (#) key. Requires Gecko 15.0 */\n\tVK_HASH: 163, \n\t/** Dollar sign ($) key. Requires Gecko 15.0 */\n\tVK_DOLLAR: 164, \n\t/** Percent (%) key. Requires Gecko 15.0 */\n\tVK_PERCENT: 165, \n\t/** Ampersand (&) key. Requires Gecko 15.0 */\n\tVK_AMPERSAND: 166, \n\t/** Underscore (_) key. Requires Gecko 15.0 */\n\tVK_UNDERSCORE: 167, \n\t/** Open parenthesis (() key. Requires Gecko 15.0 */\n\tVK_OPEN_PAREN: 168, \n\t/** Close parenthesis ()) key. Requires Gecko 15.0 */\n\tVK_CLOSE_PAREN: 169, \n\t/* Asterisk (*) key. Requires Gecko 15.0 */\n\tVK_ASTERISK: 170,\n\t/** Plus (+) key. Requires Gecko 15.0 */\n\tVK_PLUS: 171, \n\t/** Pipe (|) key. Requires Gecko 15.0 */\n\tVK_PIPE: 172, \n\t/** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n\tVK_HYPHEN_MINUS: 173, \n\t/** Open curly bracket ({) key. Requires Gecko 15.0 */\n\tVK_OPEN_CURLY_BRACKET: 174, \n\t/** Close curly bracket (}) key. Requires Gecko 15.0 */\n\tVK_CLOSE_CURLY_BRACKET: 175, \n\t/** Tilde (~) key. Requires Gecko 15.0 */\n\tVK_TILDE: 176, \n\t/** Comma (,) key. */\n\tVK_COMMA: 188, \n\t/** Period (.) key. */\n\tVK_PERIOD: 190, \n\t/** Slash (/) key. */\n\tVK_SLASH: 191, \n\t/** Back tick (`) key. */\n\tVK_BACK_QUOTE: 192, \n\t/** Open square bracket ([) key. */\n\tVK_OPEN_BRACKET: 219, \n\t/** Back slash (\\) key. */\n\tVK_BACK_SLASH: 220, \n\t/** Close square bracket (]) key. */\n\tVK_CLOSE_BRACKET: 221, \n\t/** Quote (''') key. */\n\tVK_QUOTE: 222, \n\t/** Meta key on Linux, Command key on Mac. */\n\tVK_META: 224, \n\t/** AltGr key on Linux. Requires Gecko 15.0 */\n\tVK_ALTGR: 225, \n\t/** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n\tVK_WIN: 91, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_KANA: 21, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_HANGUL: 21, \n\t/** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n\tVK_EISU: 22, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_JUNJA: 23, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_FINAL: 24, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_HANJA: 25, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_KANJI: 25, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_CONVERT: 28, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_NONCONVERT: 29, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_ACCEPT: 30, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_MODECHANGE: 31, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_SELECT: 41, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_PRINT: 42, \n\t/** Linux support for this keycode was added in Gecko 4.0. */\n\tVK_EXECUTE: 43, \n\t/** Linux support for this keycode was added in Gecko 4.0.\t */\n\tVK_SLEEP: 95 \n};\n/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nROT.Text = {\n\tRE_COLORS: /%([bc]){([^}]*)}/g,\n\n\t/* token types */\n\tTYPE_TEXT:\t\t0,\n\tTYPE_NEWLINE:\t1,\n\tTYPE_FG:\t\t2,\n\tTYPE_BG:\t\t3,\n\n\t/**\n\t * Measure size of a resulting text block\n\t */\n\tmeasure: function(str, maxWidth) {\n\t\tvar result = {width:0, height:1};\n\t\tvar tokens = this.tokenize(str, maxWidth);\n\t\tvar lineWidth = 0;\n\n\t\tfor (var i=0;i<tokens.length;i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tswitch (token.type) {\n\t\t\t\tcase this.TYPE_TEXT:\n\t\t\t\t\tlineWidth += token.value.length;\n\t\t\t\tbreak;\n\n\t\t\t\tcase this.TYPE_NEWLINE:\n\t\t\t\t\tresult.height++;\n\t\t\t\t\tresult.width = Math.max(result.width, lineWidth);\n\t\t\t\t\tlineWidth = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tresult.width = Math.max(result.width, lineWidth);\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * Convert string to a series of a formatting commands\n\t */\n\ttokenize: function(str, maxWidth) {\n\t\tvar result = [];\n\n\t\t/* first tokenization pass - split texts and color formatting commands */\n\t\tvar offset = 0;\n\t\tstr.replace(this.RE_COLORS, function(match, type, name, index) {\n\t\t\t/* string before */\n\t\t\tvar part = str.substring(offset, index);\n\t\t\tif (part.length) {\n\t\t\t\tresult.push({\n\t\t\t\t\ttype: ROT.Text.TYPE_TEXT,\n\t\t\t\t\tvalue: part\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/* color command */\n\t\t\tresult.push({\n\t\t\t\ttype: (type == \"c\" ? ROT.Text.TYPE_FG : ROT.Text.TYPE_BG),\n\t\t\t\tvalue: name.trim()\n\t\t\t});\n\n\t\t\toffset = index + match.length;\n\t\t\treturn \"\";\n\t\t});\n\n\t\t/* last remaining part */\n\t\tvar part = str.substring(offset);\n\t\tif (part.length) {\n\t\t\tresult.push({\n\t\t\t\ttype: ROT.Text.TYPE_TEXT,\n\t\t\t\tvalue: part\n\t\t\t});\n\t\t}\n\n\t\treturn this._breakLines(result, maxWidth);\n\t},\n\n\t/* insert line breaks into first-pass tokenized data */\n\t_breakLines: function(tokens, maxWidth) {\n\t\tif (!maxWidth) { maxWidth = Infinity; };\n\n\t\tvar i = 0;\n\t\tvar lineLength = 0;\n\t\tvar lastTokenWithSpace = -1;\n\n\t\twhile (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n\t\t\tvar token = tokens[i];\n\t\t\tif (token.type == ROT.Text.TYPE_NEWLINE) { /* reset */\n\t\t\t\tlineLength = 0; \n\t\t\t\tlastTokenWithSpace = -1;\n\t\t\t}\n\t\t\tif (token.type != ROT.Text.TYPE_TEXT) { /* skip non-text tokens */\n\t\t\t\ti++;\n\t\t\t\tcontinue; \n\t\t\t}\n\n\t\t\t/* remove spaces at the beginning of line */\n\t\t\twhile (lineLength == 0 && token.value.charAt(0) == \" \") { token.value = token.value.substring(1); }\n\n\t\t\t/* forced newline? insert two new tokens after this one */\n\t\t\tvar index = token.value.indexOf(\"\\n\");\n\t\t\tif (index != -1) { \n\t\t\t\ttoken.value = this._breakInsideToken(tokens, i, index, true); \n\n\t\t\t\t/* if there are spaces at the end, we must remove them (we do not want the line too long) */\n\t\t\t\tvar arr = token.value.split(\"\");\n\t\t\t\twhile (arr.length && arr[arr.length-1] == \" \") { arr.pop(); }\n\t\t\t\ttoken.value = arr.join(\"\");\n\t\t\t}\n\n\t\t\t/* token degenerated? */\n\t\t\tif (!token.value.length) {\n\t\t\t\ttokens.splice(i, 1);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n\n\t\t\t\t/* is it possible to break within this token? */\n\t\t\t\tvar index = -1;\n\t\t\t\twhile (1) {\n\t\t\t\t\tvar nextIndex = token.value.indexOf(\" \", index+1);\n\t\t\t\t\tif (nextIndex == -1) { break; }\n\t\t\t\t\tif (lineLength + nextIndex > maxWidth) { break; }\n\t\t\t\t\tindex = nextIndex;\n\t\t\t\t}\n\n\t\t\t\tif (index != -1) { /* break at space within this one */\n\t\t\t\t\ttoken.value = this._breakInsideToken(tokens, i, index, true);\n\t\t\t\t} else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n\t\t\t\t\tvar token = tokens[lastTokenWithSpace];\n\t\t\t\t\tvar breakIndex = token.value.lastIndexOf(\" \");\n\t\t\t\t\ttoken.value = this._breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n\t\t\t\t\ti = lastTokenWithSpace;\n\t\t\t\t} else { /* force break in this token */\n\t\t\t\t\ttoken.value = this._breakInsideToken(tokens, i, maxWidth-lineLength, false);\n\t\t\t\t}\n\n\t\t\t} else { /* line not long, continue */\n\t\t\t\tlineLength += token.value.length;\n\t\t\t\tif (token.value.indexOf(\" \") != -1) { lastTokenWithSpace = i; }\n\t\t\t}\n\t\t\t\n\t\t\ti++; /* advance to next token */\n\t\t}\n\n\n\t\ttokens.push({type: ROT.Text.TYPE_NEWLINE}); /* insert fake newline to fix the last text line */\n\n\t\t/* remove trailing space from text tokens before newlines */\n\t\tvar lastTextToken = null;\n\t\tfor (var i=0;i<tokens.length;i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tswitch (token.type) {\n\t\t\t\tcase ROT.Text.TYPE_TEXT: lastTextToken = token; break;\n\t\t\t\tcase ROT.Text.TYPE_NEWLINE: \n\t\t\t\t\tif (lastTextToken) { /* remove trailing space */\n\t\t\t\t\t\tvar arr = lastTextToken.value.split(\"\");\n\t\t\t\t\t\twhile (arr.length && arr[arr.length-1] == \" \") { arr.pop(); }\n\t\t\t\t\t\tlastTextToken.value = arr.join(\"\");\n\t\t\t\t\t}\n\t\t\t\t\tlastTextToken = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\ttokens.pop(); /* remove fake token */\n\n\t\treturn tokens;\n\t},\n\n\t/**\n\t * Create new tokens and insert them into the stream\n\t * @param {object[]} tokens\n\t * @param {int} tokenIndex Token being processed\n\t * @param {int} breakIndex Index within current token's value\n\t * @param {bool} removeBreakChar Do we want to remove the breaking character?\n\t * @returns {string} remaining unbroken token value\n\t */\n\t_breakInsideToken: function(tokens, tokenIndex, breakIndex, removeBreakChar) {\n\t\tvar newBreakToken = {\n\t\t\ttype: ROT.Text.TYPE_NEWLINE\n\t\t}\n\t\tvar newTextToken = {\n\t\t\ttype: ROT.Text.TYPE_TEXT,\n\t\t\tvalue: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n\t\t}\n\t\ttokens.splice(tokenIndex+1, 0, newBreakToken, newTextToken);\n\t\treturn tokens[tokenIndex].value.substring(0, breakIndex);\n\t}\n}\n/**\n * @returns {any} Randomly picked item, null when length=0\n */\nArray.prototype.random = Array.prototype.random || function() {\n\tif (!this.length) { return null; }\n\treturn this[Math.floor(ROT.RNG.getUniform() * this.length)];\n}\n\n/**\n * @returns {array} New array with randomized items\n * FIXME destroys this!\n */\nArray.prototype.randomize = Array.prototype.randomize || function() {\n\tvar result = [];\n\twhile (this.length) {\n\t\tvar index = this.indexOf(this.random());\n\t\tresult.push(this.splice(index, 1)[0]);\n\t}\n\treturn result;\n}\n/**\n * Always positive modulus\n * @param {int} n Modulus\n * @returns {int} this modulo n\n */\nNumber.prototype.mod = Number.prototype.mod || function(n) {\n\treturn ((this%n)+n)%n;\n}\n/**\n * @returns {string} First letter capitalized\n */\nString.prototype.capitalize = String.prototype.capitalize || function() {\n\treturn this.charAt(0).toUpperCase() + this.substring(1);\n}\n\n/** \n * Left pad\n * @param {string} [character=\"0\"]\n * @param {int} [count=2]\n */\nString.prototype.lpad = String.prototype.lpad || function(character, count) {\n\tvar ch = character || \"0\";\n\tvar cnt = count || 2;\n\n\tvar s = \"\";\n\twhile (s.length < (cnt - this.length)) { s += ch; }\n\ts = s.substring(0, cnt-this.length);\n\treturn s+this;\n}\n\n/** \n * Right pad\n * @param {string} [character=\"0\"]\n * @param {int} [count=2]\n */\nString.prototype.rpad = String.prototype.rpad || function(character, count) {\n\tvar ch = character || \"0\";\n\tvar cnt = count || 2;\n\n\tvar s = \"\";\n\twhile (s.length < (cnt - this.length)) { s += ch; }\n\ts = s.substring(0, cnt-this.length);\n\treturn this+s;\n}\n\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nString.format = String.format || function(template) {\n\tvar map = String.format.map;\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\n\tvar replacer = function(match, group1, group2, index) {\n\t\tif (template.charAt(index-1) == \"%\") { return match.substring(1); }\n\t\tif (!args.length) { return match; }\n\t\tvar obj = args[0];\n\n\t\tvar group = group1 || group2;\n\t\tvar parts = group.split(\",\");\n\t\tvar name = parts.shift();\n\t\tvar method = map[name.toLowerCase()];\n\t\tif (!method) { return match; }\n\n\t\tvar obj = args.shift();\n\t\tvar replaced = obj[method].apply(obj, parts);\n\n\t\tvar first = name.charAt(0);\n\t\tif (first != first.toLowerCase()) { replaced = replaced.capitalize(); }\n\n\t\treturn replaced;\n\t}\n\treturn template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\n\nString.format.map = String.format.map || {\n\t\"s\": \"toString\"\n}\n\n/**\n * Convenience shortcut to String.format(this)\n */\nString.prototype.format = String.prototype.format || function() {\n\tvar args = Array.prototype.slice.call(arguments);\n\targs.unshift(this);\n\treturn String.format.apply(String, args);\n}\n\nif (!Object.create) {  \n\t/**\n\t * ES5 Object.create\n\t */\n\tObject.create = function(o) {  \n\t\tvar tmp = function() {};\n\t\ttmp.prototype = o;\n\t\treturn new tmp();\n\t};  \n}  \n/**\n * Sets prototype of this function to an instance of parent function\n * @param {function} parent\n */\nFunction.prototype.extend = Function.prototype.extend || function(parent) {\n\tthis.prototype = Object.create(parent.prototype);\n\tthis.prototype.constructor = this;\n\treturn this;\n}\nif (typeof window != \"undefined\") {\n\twindow.requestAnimationFrame =\n\t\twindow.requestAnimationFrame\n\t\t|| window.mozRequestAnimationFrame\n\t\t|| window.webkitRequestAnimationFrame\n\t\t|| window.oRequestAnimationFrame\n\t\t|| window.msRequestAnimationFrame\n\t\t|| function(cb) { return setTimeout(cb, 1000/60); };\n\n\twindow.cancelAnimationFrame =\n\t\twindow.cancelAnimationFrame\n\t\t|| window.mozCancelAnimationFrame\n\t\t|| window.webkitCancelAnimationFrame\n\t\t|| window.oCancelAnimationFrame\n\t\t|| window.msCancelAnimationFrame\n\t\t|| function(id) { return clearTimeout(id); };\n}\n/**\n * @class Visual map display\n * @param {object} [options]\n * @param {int} [options.width=ROT.DEFAULT_WIDTH]\n * @param {int} [options.height=ROT.DEFAULT_HEIGHT]\n * @param {int} [options.fontSize=15]\n * @param {string} [options.fontFamily=\"monospace\"]\n * @param {string} [options.fontStyle=\"\"] bold/italic/none/both\n * @param {string} [options.fg=\"#ccc\"]\n * @param {string} [options.bg=\"#000\"]\n * @param {float} [options.spacing=1]\n * @param {float} [options.border=0]\n * @param {string} [options.layout=\"rect\"]\n * @param {bool} [options.forceSquareRatio=false]\n * @param {int} [options.tileWidth=32]\n * @param {int} [options.tileHeight=32]\n * @param {object} [options.tileMap={}]\n * @param {image} [options.tileSet=null]\n * @param {image} [options.tileColorize=false]\n */\nROT.Display = function(options) {\n\tvar canvas = document.createElement(\"canvas\");\n\tthis._context = canvas.getContext(\"2d\");\n\tthis._data = {};\n\tthis._dirty = false; /* false = nothing, true = all, object = dirty cells */\n\tthis._options = {};\n\tthis._backend = null;\n\t\n\tvar defaultOptions = {\n\t\twidth: ROT.DEFAULT_WIDTH,\n\t\theight: ROT.DEFAULT_HEIGHT,\n\t\ttranspose: false,\n\t\tlayout: \"rect\",\n\t\tfontSize: 15,\n\t\tspacing: 1,\n\t\tborder: 0,\n\t\tforceSquareRatio: false,\n\t\tfontFamily: \"monospace\",\n\t\tfontStyle: \"\",\n\t\tfg: \"#ccc\",\n\t\tbg: \"#000\",\n\t\ttileWidth: 32,\n\t\ttileHeight: 32,\n\t\ttileMap: {},\n\t\ttileSet: null,\n\t\ttileColorize: false,\n\t\ttermColor: \"xterm\"\n\t};\n\tfor (var p in options) { defaultOptions[p] = options[p]; }\n\tthis.setOptions(defaultOptions);\n\tthis.DEBUG = this.DEBUG.bind(this);\n\n\tthis._tick = this._tick.bind(this);\n\trequestAnimationFrame(this._tick);\n}\n\n/**\n * Debug helper, ideal as a map generator callback. Always bound to this.\n * @param {int} x\n * @param {int} y\n * @param {int} what\n */\nROT.Display.prototype.DEBUG = function(x, y, what) {\n\tvar colors = [this._options.bg, this._options.fg];\n\tthis.draw(x, y, null, null, colors[what % colors.length]);\n}\n\n/**\n * Clear the whole display (cover it with background color)\n */\nROT.Display.prototype.clear = function() {\n\tthis._data = {};\n\tthis._dirty = true;\n}\n\n/**\n * @see ROT.Display\n */\nROT.Display.prototype.setOptions = function(options) {\n\tfor (var p in options) { this._options[p] = options[p]; }\n\tif (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n\t\tif (options.layout) { \n\t\t\tthis._backend = new ROT.Display[options.layout.capitalize()](this._context);\n\t\t}\n\n\t\tvar font = (this._options.fontStyle ? this._options.fontStyle + \" \" : \"\") + this._options.fontSize + \"px \" + this._options.fontFamily;\n\t\tthis._context.font = font;\n\t\tthis._backend.compute(this._options);\n\t\tthis._context.font = font;\n\t\tthis._context.textAlign = \"center\";\n\t\tthis._context.textBaseline = \"middle\";\n\t\tthis._dirty = true;\n\t}\n\treturn this;\n}\n\n/**\n * Returns currently set options\n * @returns {object} Current options object \n */\nROT.Display.prototype.getOptions = function() {\n\treturn this._options;\n}\n\n/**\n * Returns the DOM node of this display\n * @returns {node} DOM node\n */\nROT.Display.prototype.getContainer = function() {\n\treturn this._context.canvas;\n}\n\n/**\n * Compute the maximum width/height to fit into a set of given constraints\n * @param {int} availWidth Maximum allowed pixel width\n * @param {int} availHeight Maximum allowed pixel height\n * @returns {int[2]} cellWidth,cellHeight\n */\nROT.Display.prototype.computeSize = function(availWidth, availHeight) {\n\treturn this._backend.computeSize(availWidth, availHeight, this._options);\n}\n\n/**\n * Compute the maximum font size to fit into a set of given constraints\n * @param {int} availWidth Maximum allowed pixel width\n * @param {int} availHeight Maximum allowed pixel height\n * @returns {int} fontSize\n */\nROT.Display.prototype.computeFontSize = function(availWidth, availHeight) {\n\treturn this._backend.computeFontSize(availWidth, availHeight, this._options);\n}\n\n/**\n * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n * @param {Event} e event\n * @returns {int[2]} -1 for values outside of the canvas\n */\nROT.Display.prototype.eventToPosition = function(e) {\n\tif (e.touches) {\n\t\tvar x = e.touches[0].clientX;\n\t\tvar y = e.touches[0].clientY;\n\t} else {\n\t\tvar x = e.clientX;\n\t\tvar y = e.clientY;\n\t}\n\n\tvar rect = this._context.canvas.getBoundingClientRect();\n\tx -= rect.left;\n\ty -= rect.top;\n\t\n\tif (x < 0 || y < 0 || x >= this._context.canvas.width || y >= this._context.canvas.height) { return [-1, -1]; }\n\n\treturn this._backend.eventToPosition(x, y);\n}\n\n/**\n * @param {int} x\n * @param {int} y\n * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n * @param {string} [fg] foreground color\n * @param {string} [bg] background color\n */\nROT.Display.prototype.draw = function(x, y, ch, fg, bg) {\n\tif (!fg) { fg = this._options.fg; }\n\tif (!bg) { bg = this._options.bg; }\n\tthis._data[x+\",\"+y] = [x, y, ch, fg, bg];\n\t\n\tif (this._dirty === true) { return; } /* will already redraw everything */\n\tif (!this._dirty) { this._dirty = {}; } /* first! */\n\tthis._dirty[x+\",\"+y] = true;\n}\n\n/**\n * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n * @param {int} x\n * @param {int} y\n * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n * @param {int} [maxWidth] wrap at what width?\n * @returns {int} lines drawn\n */\nROT.Display.prototype.drawText = function(x, y, text, maxWidth) {\n\tvar fg = null;\n\tvar bg = null;\n\tvar cx = x;\n\tvar cy = y;\n\tvar lines = 1;\n\tif (!maxWidth) { maxWidth = this._options.width-x; }\n\n\tvar tokens = ROT.Text.tokenize(text, maxWidth);\n\n\twhile (tokens.length) { /* interpret tokenized opcode stream */\n\t\tvar token = tokens.shift();\n\t\tswitch (token.type) {\n\t\t\tcase ROT.Text.TYPE_TEXT:\n\t\t\t\tvar isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n\t\t\t\tfor (var i=0;i<token.value.length;i++) {\n\t\t\t\t\tvar cc = token.value.charCodeAt(i);\n\t\t\t\t\tvar c = token.value.charAt(i);\n\t\t\t\t\t// Assign to `true` when the current char is full-width.\n\t\t\t\t\tisFullWidth = (cc > 0xff && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) && cc > 0xffee;\n\t\t\t\t\t// Current char is space, whatever full-width or half-width both are OK.\n\t\t\t\t\tisSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n\t\t\t\t\t// The previous char is full-width and\n\t\t\t\t\t// current char is nether half-width nor a space.\n\t\t\t\t\tif (isPrevFullWidth && !isFullWidth && !isSpace) { cx++; } // add an extra position\n\t\t\t\t\t// The current char is full-width and\n\t\t\t\t\t// the previous char is not a space.\n\t\t\t\t\tif(isFullWidth && !isPrevSpace) { cx++; } // add an extra position\n\t\t\t\t\tthis.draw(cx++, cy, c, fg, bg);\n\t\t\t\t\tisPrevSpace = isSpace;\n\t\t\t\t\tisPrevFullWidth = isFullWidth;\n\t\t\t\t}\n\t\t\tbreak;\n\n\t\t\tcase ROT.Text.TYPE_FG:\n\t\t\t\tfg = token.value || null;\n\t\t\tbreak;\n\n\t\t\tcase ROT.Text.TYPE_BG:\n\t\t\t\tbg = token.value || null;\n\t\t\tbreak;\n\n\t\t\tcase ROT.Text.TYPE_NEWLINE:\n\t\t\t\tcx = x;\n\t\t\t\tcy++;\n\t\t\t\tlines++\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn lines;\n}\n\n/**\n * Timer tick: update dirty parts\n */\nROT.Display.prototype._tick = function() {\n\trequestAnimationFrame(this._tick);\n\n\tif (!this._dirty) { return; }\n\n\tif (this._dirty === true) { /* draw all */\n\t\tthis._context.fillStyle = this._options.bg;\n\t\tthis._context.fillRect(0, 0, this._context.canvas.width, this._context.canvas.height);\n\n\t\tfor (var id in this._data) { /* redraw cached data */\n\t\t\tthis._draw(id, false);\n\t\t}\n\n\t} else { /* draw only dirty */\n\t\tfor (var key in this._dirty) {\n\t\t\tthis._draw(key, true);\n\t\t}\n\t}\n\n\tthis._dirty = false;\n}\n\n/**\n * @param {string} key What to draw\n * @param {bool} clearBefore Is it necessary to clean before?\n */\nROT.Display.prototype._draw = function(key, clearBefore) {\n\tvar data = this._data[key];\n\tif (data[4] != this._options.bg) { clearBefore = true; }\n\n\tthis._backend.draw(data, clearBefore);\n}\n/**\n * @class Abstract display backend module\n * @private\n */\nROT.Display.Backend = function(context) {\n\tthis._context = context;\n}\n\nROT.Display.Backend.prototype.compute = function(options) {\n}\n\nROT.Display.Backend.prototype.draw = function(data, clearBefore) {\n}\n\nROT.Display.Backend.prototype.computeSize = function(availWidth, availHeight) {\n}\n\nROT.Display.Backend.prototype.computeFontSize = function(availWidth, availHeight) {\n}\n\nROT.Display.Backend.prototype.eventToPosition = function(x, y) {\n}\n/**\n * @class Rectangular backend\n * @private\n */\nROT.Display.Rect = function(context) {\n\tROT.Display.Backend.call(this, context);\n\t\n\tthis._spacingX = 0;\n\tthis._spacingY = 0;\n\tthis._canvasCache = {};\n\tthis._options = {};\n}\nROT.Display.Rect.extend(ROT.Display.Backend);\n\nROT.Display.Rect.cache = false;\n\nROT.Display.Rect.prototype.compute = function(options) {\n\tthis._canvasCache = {};\n\tthis._options = options;\n\n\tvar charWidth = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._spacingX = Math.ceil(options.spacing * charWidth);\n\tthis._spacingY = Math.ceil(options.spacing * options.fontSize);\n\n\tif (this._options.forceSquareRatio) {\n\t\tthis._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n\t}\n\n\tthis._context.canvas.width = options.width * this._spacingX;\n\tthis._context.canvas.height = options.height * this._spacingY;\n}\n\nROT.Display.Rect.prototype.draw = function(data, clearBefore) {\n\tif (this.constructor.cache) {\n\t\tthis._drawWithCache(data, clearBefore);\n\t} else {\n\t\tthis._drawNoCache(data, clearBefore);\n\t}\n}\n\nROT.Display.Rect.prototype._drawWithCache = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tvar hash = \"\"+ch+fg+bg;\n\tif (hash in this._canvasCache) {\n\t\tvar canvas = this._canvasCache[hash];\n\t} else {\n\t\tvar b = this._options.border;\n\t\tvar canvas = document.createElement(\"canvas\");\n\t\tvar ctx = canvas.getContext(\"2d\");\n\t\tcanvas.width = this._spacingX;\n\t\tcanvas.height = this._spacingY;\n\t\tctx.fillStyle = bg;\n\t\tctx.fillRect(b, b, canvas.width-b, canvas.height-b);\n\t\t\n\t\tif (ch) {\n\t\t\tctx.fillStyle = fg;\n\t\t\tctx.font = this._context.font;\n\t\t\tctx.textAlign = \"center\";\n\t\t\tctx.textBaseline = \"middle\";\n\n\t\t\tvar chars = [].concat(ch);\n\t\t\tfor (var i=0;i<chars.length;i++) {\n\t\t\t\tctx.fillText(chars[i], this._spacingX/2, Math.ceil(this._spacingY/2));\n\t\t\t}\n\t\t}\n\t\tthis._canvasCache[hash] = canvas;\n\t}\n\t\n\tthis._context.drawImage(canvas, x*this._spacingX, y*this._spacingY);\n}\n\nROT.Display.Rect.prototype._drawNoCache = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tif (clearBefore) { \n\t\tvar b = this._options.border;\n\t\tthis._context.fillStyle = bg;\n\t\tthis._context.fillRect(x*this._spacingX + b, y*this._spacingY + b, this._spacingX - b, this._spacingY - b);\n\t}\n\t\n\tif (!ch) { return; }\n\n\tthis._context.fillStyle = fg;\n\n\tvar chars = [].concat(ch);\n\tfor (var i=0;i<chars.length;i++) {\n\t\tthis._context.fillText(chars[i], (x+0.5) * this._spacingX, Math.ceil((y+0.5) * this._spacingY));\n\t}\n}\n\nROT.Display.Rect.prototype.computeSize = function(availWidth, availHeight) {\n\tvar width = Math.floor(availWidth / this._spacingX);\n\tvar height = Math.floor(availHeight / this._spacingY);\n\treturn [width, height];\n}\n\nROT.Display.Rect.prototype.computeFontSize = function(availWidth, availHeight) {\n\tvar boxWidth = Math.floor(availWidth / this._options.width);\n\tvar boxHeight = Math.floor(availHeight / this._options.height);\n\n\t/* compute char ratio */\n\tvar oldFont = this._context.font;\n\tthis._context.font = \"100px \" + this._options.fontFamily;\n\tvar width = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._context.font = oldFont;\n\tvar ratio = width / 100;\n\t\t\n\tvar widthFraction = ratio * boxHeight / boxWidth;\n\tif (widthFraction > 1) { /* too wide with current aspect ratio */\n\t\tboxHeight = Math.floor(boxHeight / widthFraction);\n\t}\n\treturn Math.floor(boxHeight / this._options.spacing);\n}\n\nROT.Display.Rect.prototype.eventToPosition = function(x, y) {\n\treturn [Math.floor(x/this._spacingX), Math.floor(y/this._spacingY)];\n}\n/**\n * @class Hexagonal backend\n * @private\n */\nROT.Display.Hex = function(context) {\n\tROT.Display.Backend.call(this, context);\n\n\tthis._spacingX = 0;\n\tthis._spacingY = 0;\n\tthis._hexSize = 0;\n\tthis._options = {};\n}\nROT.Display.Hex.extend(ROT.Display.Backend);\n\nROT.Display.Hex.prototype.compute = function(options) {\n\tthis._options = options;\n\n\t/* FIXME char size computation does not respect transposed hexes */\n\tvar charWidth = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._hexSize = Math.floor(options.spacing * (options.fontSize + charWidth/Math.sqrt(3)) / 2);\n\tthis._spacingX = this._hexSize * Math.sqrt(3) / 2;\n\tthis._spacingY = this._hexSize * 1.5;\n\n\tif (options.transpose) {\n\t\tvar xprop = \"height\";\n\t\tvar yprop = \"width\";\n\t} else {\n\t\tvar xprop = \"width\";\n\t\tvar yprop = \"height\";\n\t}\n\tthis._context.canvas[xprop] = Math.ceil( (options.width + 1) * this._spacingX );\n\tthis._context.canvas[yprop] = Math.ceil( (options.height - 1) * this._spacingY + 2*this._hexSize );\n}\n\nROT.Display.Hex.prototype.draw = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tvar px = [\n\t\t(x+1) * this._spacingX,\n\t\ty * this._spacingY + this._hexSize\n\t];\n\tif (this._options.transpose) { px.reverse(); }\n\n\tif (clearBefore) { \n\t\tthis._context.fillStyle = bg;\n\t\tthis._fill(px[0], px[1]);\n\t}\n\t\n\tif (!ch) { return; }\n\n\tthis._context.fillStyle = fg;\n\n\tvar chars = [].concat(ch);\n\tfor (var i=0;i<chars.length;i++) {\n\t\tthis._context.fillText(chars[i], px[0], Math.ceil(px[1]));\n\t}\n}\n\nROT.Display.Hex.prototype.computeSize = function(availWidth, availHeight) {\n\tif (this._options.transpose) {\n\t\tavailWidth += availHeight;\n\t\tavailHeight = availWidth - availHeight;\n\t\tavailWidth -= availHeight;\n\t}\n\n\tvar width = Math.floor(availWidth / this._spacingX) - 1;\n\tvar height = Math.floor((availHeight - 2*this._hexSize) / this._spacingY + 1);\n\treturn [width, height];\n}\n\nROT.Display.Hex.prototype.computeFontSize = function(availWidth, availHeight) {\n\tif (this._options.transpose) {\n\t\tavailWidth += availHeight;\n\t\tavailHeight = availWidth - availHeight;\n\t\tavailWidth -= availHeight;\n\t}\n\n\tvar hexSizeWidth = 2*availWidth / ((this._options.width+1) * Math.sqrt(3)) - 1;\n\tvar hexSizeHeight = availHeight / (2 + 1.5*(this._options.height-1));\n\tvar hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n\n\t/* compute char ratio */\n\tvar oldFont = this._context.font;\n\tthis._context.font = \"100px \" + this._options.fontFamily;\n\tvar width = Math.ceil(this._context.measureText(\"W\").width);\n\tthis._context.font = oldFont;\n\tvar ratio = width / 100;\n\n\thexSize = Math.floor(hexSize)+1; /* closest larger hexSize */\n\n\t/* FIXME char size computation does not respect transposed hexes */\n\tvar fontSize = 2*hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n\n\t/* closest smaller fontSize */\n\treturn Math.ceil(fontSize)-1;\n}\n\nROT.Display.Hex.prototype.eventToPosition = function(x, y) {\n\tif (this._options.transpose) {\n\t\tx += y;\n\t\ty = x-y;\n\t\tx -= y;\n\t\tvar prop = \"width\";\n\t} else {\n\t\tvar prop = \"height\";\n\t}\n\tvar size = this._context.canvas[prop] / this._options[prop];\n\ty = Math.floor(y/size);\n\n\tif (y.mod(2)) { /* odd row */\n\t\tx -= this._spacingX;\n\t\tx = 1 + 2*Math.floor(x/(2*this._spacingX));\n\t} else {\n\t\tx = 2*Math.floor(x/(2*this._spacingX));\n\t}\n\t\n\treturn [x, y];\n}\n\n/**\n * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n */\nROT.Display.Hex.prototype._fill = function(cx, cy) {\n\tvar a = this._hexSize;\n\tvar b = this._options.border;\n\t\n\tthis._context.beginPath();\n\n\tif (this._options.transpose) {\n\t\tthis._context.moveTo(cx-a+b,\tcy);\n\t\tthis._context.lineTo(cx-a/2+b,\tcy+this._spacingX-b);\n\t\tthis._context.lineTo(cx+a/2-b,\tcy+this._spacingX-b);\n\t\tthis._context.lineTo(cx+a-b,\tcy);\n\t\tthis._context.lineTo(cx+a/2-b,\tcy-this._spacingX+b);\n\t\tthis._context.lineTo(cx-a/2+b,\tcy-this._spacingX+b);\n\t\tthis._context.lineTo(cx-a+b,\tcy);\n\t} else {\n\t\tthis._context.moveTo(cx,\t\t\t\t\tcy-a+b);\n\t\tthis._context.lineTo(cx+this._spacingX-b,\tcy-a/2+b);\n\t\tthis._context.lineTo(cx+this._spacingX-b,\tcy+a/2-b);\n\t\tthis._context.lineTo(cx,\t\t\t\t\tcy+a-b);\n\t\tthis._context.lineTo(cx-this._spacingX+b,\tcy+a/2-b);\n\t\tthis._context.lineTo(cx-this._spacingX+b,\tcy-a/2+b);\n\t\tthis._context.lineTo(cx,\t\t\t\t\tcy-a+b);\n\t}\n\tthis._context.fill();\n}\n/**\n * @class Tile backend\n * @private\n */\nROT.Display.Tile = function(context) {\n\tROT.Display.Rect.call(this, context);\n\t\n\tthis._options = {};\n\tthis._colorCanvas = document.createElement(\"canvas\");\n}\nROT.Display.Tile.extend(ROT.Display.Rect);\n\nROT.Display.Tile.prototype.compute = function(options) {\n\tthis._options = options;\n\tthis._context.canvas.width = options.width * options.tileWidth;\n\tthis._context.canvas.height = options.height * options.tileHeight;\n\tthis._colorCanvas.width = options.tileWidth;\n\tthis._colorCanvas.height = options.tileHeight;\n}\n\nROT.Display.Tile.prototype.draw = function(data, clearBefore) {\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\tvar tileWidth = this._options.tileWidth;\n\tvar tileHeight = this._options.tileHeight;\n\n\tif (clearBefore) {\n\t\tif (this._options.tileColorize) {\n\t\t\tthis._context.clearRect(x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n\t\t} else {\n\t\t\tthis._context.fillStyle = bg;\n\t\t\tthis._context.fillRect(x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n\t\t}\n\t}\n\n\tif (!ch) { return; }\n\n\tvar chars = [].concat(ch);\n\tfor (var i=0;i<chars.length;i++) {\n\t\tvar tile = this._options.tileMap[chars[i]];\n\t\tif (!tile) { throw new Error(\"Char '\" + chars[i] + \"' not found in tileMap\"); }\n\t\t\n\t\tif (this._options.tileColorize) { /* apply colorization */\n\t\t\tvar canvas = this._colorCanvas;\n\t\t\tvar context = canvas.getContext(\"2d\");\n\t\t\tcontext.clearRect(0, 0, tileWidth, tileHeight);\n\n\t\t\tcontext.drawImage(\n\t\t\t\tthis._options.tileSet,\n\t\t\t\ttile[0], tile[1], tileWidth, tileHeight,\n\t\t\t\t0, 0, tileWidth, tileHeight\n\t\t\t);\n\n\t\t\tif (fg != \"transparent\") {\n\t\t\t\tcontext.fillStyle = fg;\n\t\t\t\tcontext.globalCompositeOperation = \"source-atop\";\n\t\t\t\tcontext.fillRect(0, 0, tileWidth, tileHeight);\n\t\t\t}\n\n\t\t\tif (bg != \"transparent\") {\n\t\t\t\tcontext.fillStyle = bg;\n\t\t\t\tcontext.globalCompositeOperation = \"destination-over\";\n\t\t\t\tcontext.fillRect(0, 0, tileWidth, tileHeight);\n\t\t\t}\n\n\t\t\tthis._context.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n\n\t\t} else { /* no colorizing, easy */\n\t\t\tthis._context.drawImage(\n\t\t\t\tthis._options.tileSet,\n\t\t\t\ttile[0], tile[1], tileWidth, tileHeight,\n\t\t\t\tx*tileWidth, y*tileHeight, tileWidth, tileHeight\n\t\t\t);\n\t\t}\n\t}\n}\n\nROT.Display.Tile.prototype.computeSize = function(availWidth, availHeight) {\n\tvar width = Math.floor(availWidth / this._options.tileWidth);\n\tvar height = Math.floor(availHeight / this._options.tileHeight);\n\treturn [width, height];\n}\n\nROT.Display.Tile.prototype.computeFontSize = function(availWidth, availHeight) {\n\tvar width = Math.floor(availWidth / this._options.width);\n\tvar height = Math.floor(availHeight / this._options.height);\n\treturn [width, height];\n}\n\nROT.Display.Tile.prototype.eventToPosition = function(x, y) {\n\treturn [Math.floor(x/this._options.tileWidth), Math.floor(y/this._options.tileHeight)];\n}\n/**\n * @namespace\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nROT.RNG = {\n\t/**\n\t * @returns {number} \n\t */\n\tgetSeed: function() {\n\t\treturn this._seed;\n\t},\n\n\t/**\n\t * @param {number} seed Seed the number generator\n\t */\n\tsetSeed: function(seed) {\n\t\tseed = (seed < 1 ? 1/seed : seed);\n\n\t\tthis._seed = seed;\n\t\tthis._s0 = (seed >>> 0) * this._frac;\n\n\t\tseed = (seed*69069 + 1) >>> 0;\n\t\tthis._s1 = seed * this._frac;\n\n\t\tseed = (seed*69069 + 1) >>> 0;\n\t\tthis._s2 = seed * this._frac;\n\n\t\tthis._c = 1;\n\t\treturn this;\n\t},\n\n\t/**\n\t * @returns {float} Pseudorandom value [0,1), uniformly distributed\n\t */\n\tgetUniform: function() {\n\t\tvar t = 2091639 * this._s0 + this._c * this._frac;\n\t\tthis._s0 = this._s1;\n\t\tthis._s1 = this._s2;\n\t\tthis._c = t | 0;\n\t\tthis._s2 = t - this._c;\n\t\treturn this._s2;\n\t},\n\n\t/**\n\t * @param {int} lowerBound The lower end of the range to return a value from, inclusive\n\t * @param {int} upperBound The upper end of the range to return a value from, inclusive\n\t * @returns {int} Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n\t */\n\tgetUniformInt: function(lowerBound, upperBound) {\n\t\tvar max = Math.max(lowerBound, upperBound);\n\t\tvar min = Math.min(lowerBound, upperBound);\n\t\treturn Math.floor(this.getUniform() * (max - min + 1)) + min;\n\t},\n\n\t/**\n\t * @param {float} [mean=0] Mean value\n\t * @param {float} [stddev=1] Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n\t * @returns {float} A normally distributed pseudorandom value\n\t */\n\tgetNormal: function(mean, stddev) {\n\t\tdo {\n\t\t\tvar u = 2*this.getUniform()-1;\n\t\t\tvar v = 2*this.getUniform()-1;\n\t\t\tvar r = u*u + v*v;\n\t\t} while (r > 1 || r == 0);\n\n\t\tvar gauss = u * Math.sqrt(-2*Math.log(r)/r);\n\t\treturn (mean || 0) + gauss*(stddev || 1);\n\t},\n\n\t/**\n\t * @returns {int} Pseudorandom value [1,100] inclusive, uniformly distributed\n\t */\n\tgetPercentage: function() {\n\t\treturn 1 + Math.floor(this.getUniform()*100);\n\t},\n\t\n\t/**\n\t * @param {object} data key=whatever, value=weight (relative probability)\n\t * @returns {string} whatever\n\t */\n\tgetWeightedValue: function(data) {\n\t\tvar total = 0;\n\t\t\n\t\tfor (var id in data) {\n\t\t\ttotal += data[id];\n\t\t}\n\t\tvar random = this.getUniform()*total;\n\t\t\n\t\tvar part = 0;\n\t\tfor (var id in data) {\n\t\t\tpart += data[id];\n\t\t\tif (random < part) { return id; }\n\t\t}\n\n\t\t// If by some floating-point annoyance we have\n\t\t// random >= total, just return the last id.\n\t\treturn id;\n\t},\n\n\t/**\n\t * Get RNG state. Useful for storing the state and re-setting it via setState.\n\t * @returns {?} Internal state\n\t */\n\tgetState: function() {\n\t\treturn [this._s0, this._s1, this._s2, this._c];\n\t},\n\n\t/**\n\t * Set a previously retrieved state.\n\t * @param {?} state\n\t */\n\tsetState: function(state) {\n\t\tthis._s0 = state[0];\n\t\tthis._s1 = state[1];\n\t\tthis._s2 = state[2];\n\t\tthis._c  = state[3];\n\t\treturn this;\n\t},\n\n\t/**\n\t * Returns a cloned RNG\n\t */\n\tclone: function() {\n\t\tvar clone = Object.create(this);\n\t\tclone.setState(this.getState());\n\t\treturn clone;\n\t},\n\n\t_s0: 0,\n\t_s1: 0,\n\t_s2: 0,\n\t_c: 0,\n\t_frac: 2.3283064365386963e-10 /* 2^-32 */\n}\n\nROT.RNG.setSeed(Date.now());\n/**\n * @class (Markov process)-based string generator. \n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>. \n * Offers configurable order and prior.\n * @param {object} [options]\n * @param {bool} [options.words=false] Use word mode?\n * @param {int} [options.order=3]\n * @param {float} [options.prior=0.001]\n */\nROT.StringGenerator = function(options) {\n\tthis._options = {\n\t\twords: false,\n\t\torder: 3,\n\t\tprior: 0.001\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\n\tthis._boundary = String.fromCharCode(0);\n\tthis._suffix = this._boundary;\n\tthis._prefix = [];\n\tfor (var i=0;i<this._options.order;i++) { this._prefix.push(this._boundary); }\n\n\tthis._priorValues = {};\n\tthis._priorValues[this._boundary] = this._options.prior;\n\n\tthis._data = {};\n}\n\n/**\n * Remove all learning data\n */\nROT.StringGenerator.prototype.clear = function() {\n\tthis._data = {};\n\tthis._priorValues = {};\n}\n\n/**\n * @returns {string} Generated string\n */\nROT.StringGenerator.prototype.generate = function() {\n\tvar result = [this._sample(this._prefix)];\n\twhile (result[result.length-1] != this._boundary) {\n\t\tresult.push(this._sample(result));\n\t}\n\treturn this._join(result.slice(0, -1));\n}\n\n/**\n * Observe (learn) a string from a training set\n */\nROT.StringGenerator.prototype.observe = function(string) {\n\tvar tokens = this._split(string);\n\n\tfor (var i=0; i<tokens.length; i++) {\n\t\tthis._priorValues[tokens[i]] = this._options.prior;\n\t}\n\n\ttokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n\n\tfor (var i=this._options.order; i<tokens.length; i++) {\n\t\tvar context = tokens.slice(i-this._options.order, i);\n\t\tvar event = tokens[i];\n\t\tfor (var j=0; j<context.length; j++) {\n\t\t\tvar subcontext = context.slice(j);\n\t\t\tthis._observeEvent(subcontext, event);\n\t\t}\n\t}\n}\n\nROT.StringGenerator.prototype.getStats = function() {\n\tvar parts = [];\n\n\tvar priorCount = 0;\n\tfor (var p in this._priorValues) { priorCount++; }\n\tpriorCount--; /* boundary */\n\tparts.push(\"distinct samples: \" + priorCount);\n\n\tvar dataCount = 0;\n\tvar eventCount = 0;\n\tfor (var p in this._data) { \n\t\tdataCount++; \n\t\tfor (var key in this._data[p]) {\n\t\t\teventCount++;\n\t\t}\n\t}\n\tparts.push(\"dictionary size (contexts): \" + dataCount);\n\tparts.push(\"dictionary size (events): \" + eventCount);\n\n\treturn parts.join(\", \");\n}\n\n/**\n * @param {string}\n * @returns {string[]}\n */\nROT.StringGenerator.prototype._split = function(str) {\n\treturn str.split(this._options.words ? /\\s+/ : \"\");\n}\n\n/**\n * @param {string[]}\n * @returns {string} \n */\nROT.StringGenerator.prototype._join = function(arr) {\n\treturn arr.join(this._options.words ? \" \" : \"\");\n}\n\n/**\n * @param {string[]} context\n * @param {string} event\n */\nROT.StringGenerator.prototype._observeEvent = function(context, event) {\n\tvar key = this._join(context);\n\tif (!(key in this._data)) { this._data[key] = {}; }\n\tvar data = this._data[key];\n\n\tif (!(event in data)) { data[event] = 0; }\n\tdata[event]++;\n}\n\n/**\n * @param {string[]}\n * @returns {string}\n */\nROT.StringGenerator.prototype._sample = function(context) {\n\tcontext = this._backoff(context);\n\tvar key = this._join(context);\n\tvar data = this._data[key];\n\n\tvar available = {};\n\n\tif (this._options.prior) {\n\t\tfor (var event in this._priorValues) { available[event] = this._priorValues[event]; }\n\t\tfor (var event in data) { available[event] += data[event]; }\n\t} else { \n\t\tavailable = data;\n\t}\n\n\treturn ROT.RNG.getWeightedValue(available);\n}\n\n/**\n * @param {string[]}\n * @returns {string[]}\n */\nROT.StringGenerator.prototype._backoff = function(context) {\n\tif (context.length > this._options.order) {\n\t\tcontext = context.slice(-this._options.order);\n\t} else if (context.length < this._options.order) {\n\t\tcontext = this._prefix.slice(0, this._options.order - context.length).concat(context);\n\t}\n\n\twhile (!(this._join(context) in this._data) && context.length > 0) { context = context.slice(1); }\n\n\treturn context;\n}\n/**\n * @class Generic event queue: stores events and retrieves them based on their time\n */\nROT.EventQueue = function() {\n\tthis._time = 0;\n\tthis._events = [];\n\tthis._eventTimes = [];\n}\n\n/**\n * @returns {number} Elapsed time\n */\nROT.EventQueue.prototype.getTime = function() {\n\treturn this._time;\n}\n\n/**\n * Clear all scheduled events\n */\nROT.EventQueue.prototype.clear = function() {\n\tthis._events = [];\n\tthis._eventTimes = [];\n\treturn this;\n}\n\n/**\n * @param {?} event\n * @param {number} time\n */\nROT.EventQueue.prototype.add = function(event, time) {\n\tvar index = this._events.length;\n\tfor (var i=0;i<this._eventTimes.length;i++) {\n\t\tif (this._eventTimes[i] > time) {\n\t\t\tindex = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tthis._events.splice(index, 0, event);\n\tthis._eventTimes.splice(index, 0, time);\n}\n\n/**\n * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n * @returns {? || null} The event previously added by addEvent, null if no event available\n */\nROT.EventQueue.prototype.get = function() {\n\tif (!this._events.length) { return null; }\n\n\tvar time = this._eventTimes.splice(0, 1)[0];\n\tif (time > 0) { /* advance */\n\t\tthis._time += time;\n\t\tfor (var i=0;i<this._eventTimes.length;i++) { this._eventTimes[i] -= time; }\n\t}\n\n\treturn this._events.splice(0, 1)[0];\n}\n\n/**\n * Remove an event from the queue\n * @param {?} event\n * @returns {bool} success?\n */\nROT.EventQueue.prototype.remove = function(event) {\n\tvar index = this._events.indexOf(event);\n\tif (index == -1) { return false }\n\tthis._remove(index);\n\treturn true;\n}\n\n/**\n * Remove an event from the queue\n * @param {int} index\n */\nROT.EventQueue.prototype._remove = function(index) {\n\tthis._events.splice(index, 1);\n\tthis._eventTimes.splice(index, 1);\n}\n/**\n * @class Abstract scheduler\n */\nROT.Scheduler = function() {\n\tthis._queue = new ROT.EventQueue();\n\tthis._repeat = [];\n\tthis._current = null;\n}\n\n/**\n * @see ROT.EventQueue#getTime\n */\nROT.Scheduler.prototype.getTime = function() {\n\treturn this._queue.getTime();\n}\n\n/**\n * @param {?} item\n * @param {bool} repeat\n */\nROT.Scheduler.prototype.add = function(item, repeat) {\n\tif (repeat) { this._repeat.push(item); }\n\treturn this;\n}\n\n/**\n * Clear all items\n */\nROT.Scheduler.prototype.clear = function() {\n\tthis._queue.clear();\n\tthis._repeat = [];\n\tthis._current = null;\n\treturn this;\n}\n\n/**\n * Remove a previously added item\n * @param {?} item\n * @returns {bool} successful?\n */\nROT.Scheduler.prototype.remove = function(item) {\n\tvar result = this._queue.remove(item);\n\n\tvar index = this._repeat.indexOf(item);\n\tif (index != -1) { this._repeat.splice(index, 1); }\n\n\tif (this._current == item) { this._current = null; }\n\n\treturn result;\n}\n\n/**\n * Schedule next item\n * @returns {?}\n */\nROT.Scheduler.prototype.next = function() {\n\tthis._current = this._queue.get();\n\treturn this._current;\n}\n/**\n * @class Simple fair scheduler (round-robin style)\n * @augments ROT.Scheduler\n */\nROT.Scheduler.Simple = function() {\n\tROT.Scheduler.call(this);\n}\nROT.Scheduler.Simple.extend(ROT.Scheduler);\n\n/**\n * @see ROT.Scheduler#add\n */\nROT.Scheduler.Simple.prototype.add = function(item, repeat) {\n\tthis._queue.add(item, 0);\n\treturn ROT.Scheduler.prototype.add.call(this, item, repeat);\n}\n\n/**\n * @see ROT.Scheduler#next\n */\nROT.Scheduler.Simple.prototype.next = function() {\n\tif (this._current && this._repeat.indexOf(this._current) != -1) {\n\t\tthis._queue.add(this._current, 0);\n\t}\n\treturn ROT.Scheduler.prototype.next.call(this);\n}\n/**\n * @class Speed-based scheduler\n * @augments ROT.Scheduler\n */\nROT.Scheduler.Speed = function() {\n\tROT.Scheduler.call(this);\n}\nROT.Scheduler.Speed.extend(ROT.Scheduler);\n\n/**\n * @param {object} item anything with \"getSpeed\" method\n * @param {bool} repeat\n * @see ROT.Scheduler#add\n */\nROT.Scheduler.Speed.prototype.add = function(item, repeat) {\n\tthis._queue.add(item, 1/item.getSpeed());\n\treturn ROT.Scheduler.prototype.add.call(this, item, repeat);\n}\n\n/**\n * @see ROT.Scheduler#next\n */\nROT.Scheduler.Speed.prototype.next = function() {\n\tif (this._current && this._repeat.indexOf(this._current) != -1) {\n\t\tthis._queue.add(this._current, 1/this._current.getSpeed());\n\t}\n\treturn ROT.Scheduler.prototype.next.call(this);\n}\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nROT.Scheduler.Action = function() {\n\tROT.Scheduler.call(this);\n\tthis._defaultDuration = 1; /* for newly added */\n\tthis._duration = this._defaultDuration; /* for this._current */\n}\nROT.Scheduler.Action.extend(ROT.Scheduler);\n\n/**\n * @param {object} item\n * @param {bool} repeat\n * @param {number} [time=1]\n * @see ROT.Scheduler#add\n */\nROT.Scheduler.Action.prototype.add = function(item, repeat, time) {\n\tthis._queue.add(item, time || this._defaultDuration);\n\treturn ROT.Scheduler.prototype.add.call(this, item, repeat);\n}\n\nROT.Scheduler.Action.prototype.clear = function() {\n\tthis._duration = this._defaultDuration;\n\treturn ROT.Scheduler.prototype.clear.call(this);\n}\n\nROT.Scheduler.Action.prototype.remove = function(item) {\n\tif (item == this._current) { this._duration = this._defaultDuration; }\n\treturn ROT.Scheduler.prototype.remove.call(this, item);\n}\n\n/**\n * @see ROT.Scheduler#next\n */\nROT.Scheduler.Action.prototype.next = function() {\n\tif (this._current && this._repeat.indexOf(this._current) != -1) {\n\t\tthis._queue.add(this._current, this._duration || this._defaultDuration);\n\t\tthis._duration = this._defaultDuration;\n\t}\n\treturn ROT.Scheduler.prototype.next.call(this);\n}\n\n/**\n * Set duration for the active item\n */\nROT.Scheduler.Action.prototype.setDuration = function(time) {\n\tif (this._current) { this._duration = time; }\n\treturn this;\n}\n/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nROT.Engine = function(scheduler) {\n\tthis._scheduler = scheduler;\n\tthis._lock = 1;\n}\n\n/**\n * Start the main loop. When this call returns, the loop is locked.\n */\nROT.Engine.prototype.start = function() {\n\treturn this.unlock();\n}\n\n/**\n * Interrupt the engine by an asynchronous action\n */\nROT.Engine.prototype.lock = function() {\n\tthis._lock++;\n\treturn this;\n}\n\n/**\n * Resume execution (paused by a previous lock)\n */\nROT.Engine.prototype.unlock = function() {\n\tif (!this._lock) { throw new Error(\"Cannot unlock unlocked engine\"); }\n\tthis._lock--;\n\n\twhile (!this._lock) {\n\t\tvar actor = this._scheduler.next();\n\t\tif (!actor) { return this.lock(); } /* no actors */\n\t\tvar result = actor.act();\n\t\tif (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n\t\t\tthis.lock();\n\t\t\tresult.then(this.unlock.bind(this));\n\t\t}\n\t}\n\n\treturn this;\n}\n/**\n * @class Base map generator\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n */\nROT.Map = function(width, height) {\n\tthis._width = width || ROT.DEFAULT_WIDTH;\n\tthis._height = height || ROT.DEFAULT_HEIGHT;\n};\n\nROT.Map.prototype.create = function(callback) {}\n\nROT.Map.prototype._fillMap = function(value) {\n\tvar map = [];\n\tfor (var i=0;i<this._width;i++) {\n\t\tmap.push([]);\n\t\tfor (var j=0;j<this._height;j++) { map[i].push(value); }\n\t}\n\treturn map;\n}\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nROT.Map.Arena = function(width, height) {\n\tROT.Map.call(this, width, height);\n}\nROT.Map.Arena.extend(ROT.Map);\n\nROT.Map.Arena.prototype.create = function(callback) {\n\tvar w = this._width-1;\n\tvar h = this._height-1;\n\tfor (var i=0;i<=w;i++) {\n\t\tfor (var j=0;j<=h;j++) {\n\t\t\tvar empty = (i && j && i<w && j<h);\n\t\t\tcallback(i, j, empty ? 0 : 1);\n\t\t}\n\t}\n\treturn this;\n}\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nROT.Map.DividedMaze = function(width, height) {\n\tROT.Map.call(this, width, height);\n\tthis._stack = [];\n}\nROT.Map.DividedMaze.extend(ROT.Map);\n\nROT.Map.DividedMaze.prototype.create = function(callback) {\n\tvar w = this._width;\n\tvar h = this._height;\n\t\n\tthis._map = [];\n\t\n\tfor (var i=0;i<w;i++) {\n\t\tthis._map.push([]);\n\t\tfor (var j=0;j<h;j++) {\n\t\t\tvar border = (i == 0 || j == 0 || i+1 == w || j+1 == h);\n\t\t\tthis._map[i].push(border ? 1 : 0);\n\t\t}\n\t}\n\t\n\tthis._stack = [\n\t\t[1, 1, w-2, h-2]\n\t];\n\tthis._process();\n\t\n\tfor (var i=0;i<w;i++) {\n\t\tfor (var j=0;j<h;j++) {\n\t\t\tcallback(i, j, this._map[i][j]);\n\t\t}\n\t}\n\tthis._map = null;\n\treturn this;\n}\n\nROT.Map.DividedMaze.prototype._process = function() {\n\twhile (this._stack.length) {\n\t\tvar room = this._stack.shift(); /* [left, top, right, bottom] */\n\t\tthis._partitionRoom(room);\n\t}\n}\n\nROT.Map.DividedMaze.prototype._partitionRoom = function(room) {\n\tvar availX = [];\n\tvar availY = [];\n\t\n\tfor (var i=room[0]+1;i<room[2];i++) {\n\t\tvar top = this._map[i][room[1]-1];\n\t\tvar bottom = this._map[i][room[3]+1];\n\t\tif (top && bottom && !(i % 2)) { availX.push(i); }\n\t}\n\t\n\tfor (var j=room[1]+1;j<room[3];j++) {\n\t\tvar left = this._map[room[0]-1][j];\n\t\tvar right = this._map[room[2]+1][j];\n\t\tif (left && right && !(j % 2)) { availY.push(j); }\n\t}\n\n\tif (!availX.length || !availY.length) { return; }\n\n\tvar x = availX.random();\n\tvar y = availY.random();\n\t\n\tthis._map[x][y] = 1;\n\t\n\tvar walls = [];\n\t\n\tvar w = []; walls.push(w); /* left part */\n\tfor (var i=room[0]; i<x; i++) { \n\t\tthis._map[i][y] = 1;\n\t\tw.push([i, y]); \n\t}\n\t\n\tvar w = []; walls.push(w); /* right part */\n\tfor (var i=x+1; i<=room[2]; i++) { \n\t\tthis._map[i][y] = 1;\n\t\tw.push([i, y]); \n\t}\n\n\tvar w = []; walls.push(w); /* top part */\n\tfor (var j=room[1]; j<y; j++) { \n\t\tthis._map[x][j] = 1;\n\t\tw.push([x, j]); \n\t}\n\t\n\tvar w = []; walls.push(w); /* bottom part */\n\tfor (var j=y+1; j<=room[3]; j++) { \n\t\tthis._map[x][j] = 1;\n\t\tw.push([x, j]); \n\t}\n\t\t\n\tvar solid = walls.random();\n\tfor (var i=0;i<walls.length;i++) {\n\t\tvar w = walls[i];\n\t\tif (w == solid) { continue; }\n\t\t\n\t\tvar hole = w.random();\n\t\tthis._map[hole[0]][hole[1]] = 0;\n\t}\n\n\tthis._stack.push([room[0], room[1], x-1, y-1]); /* left top */\n\tthis._stack.push([x+1, room[1], room[2], y-1]); /* right top */\n\tthis._stack.push([room[0], y+1, x-1, room[3]]); /* left bottom */\n\tthis._stack.push([x+1, y+1, room[2], room[3]]); /* right bottom */\n}\n/**\n * @class Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n * @augments ROT.Map\n */\nROT.Map.IceyMaze = function(width, height, regularity) {\n\tROT.Map.call(this, width, height);\n\tthis._regularity = regularity || 0;\n}\nROT.Map.IceyMaze.extend(ROT.Map);\n\nROT.Map.IceyMaze.prototype.create = function(callback) {\n\tvar width = this._width;\n\tvar height = this._height;\n\t\n\tvar map = this._fillMap(1);\n\t\n\twidth -= (width % 2 ? 1 : 2);\n\theight -= (height % 2 ? 1 : 2);\n\n\tvar cx = 0;\n\tvar cy = 0;\n\tvar nx = 0;\n\tvar ny = 0;\n\n\tvar done = 0;\n\tvar blocked = false;\n\tvar dirs = [\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0]\n\t];\n\tdo {\n\t\tcx = 1 + 2*Math.floor(ROT.RNG.getUniform()*(width-1) / 2);\n\t\tcy = 1 + 2*Math.floor(ROT.RNG.getUniform()*(height-1) / 2);\n\n\t\tif (!done) { map[cx][cy] = 0; }\n\t\t\n\t\tif (!map[cx][cy]) {\n\t\t\tthis._randomize(dirs);\n\t\t\tdo {\n\t\t\t\tif (Math.floor(ROT.RNG.getUniform()*(this._regularity+1)) == 0) { this._randomize(dirs); }\n\t\t\t\tblocked = true;\n\t\t\t\tfor (var i=0;i<4;i++) {\n\t\t\t\t\tnx = cx + dirs[i][0]*2;\n\t\t\t\t\tny = cy + dirs[i][1]*2;\n\t\t\t\t\tif (this._isFree(map, nx, ny, width, height)) {\n\t\t\t\t\t\tmap[nx][ny] = 0;\n\t\t\t\t\t\tmap[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcx = nx;\n\t\t\t\t\t\tcy = ny;\n\t\t\t\t\t\tblocked = false;\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} while (!blocked);\n\t\t}\n\t} while (done+1 < width*height/4);\n\t\n\tfor (var i=0;i<this._width;i++) {\n\t\tfor (var j=0;j<this._height;j++) {\n\t\t\tcallback(i, j, map[i][j]);\n\t\t}\n\t}\n\tthis._map = null;\n\treturn this;\n}\n\nROT.Map.IceyMaze.prototype._randomize = function(dirs) {\n\tfor (var i=0;i<4;i++) {\n\t\tdirs[i][0] = 0;\n\t\tdirs[i][1] = 0;\n\t}\n\t\n\tswitch (Math.floor(ROT.RNG.getUniform()*4)) {\n\t\tcase 0:\n\t\t\tdirs[0][0] = -1; dirs[1][0] = 1;\n\t\t\tdirs[2][1] = -1; dirs[3][1] = 1;\n\t\tbreak;\n\t\tcase 1:\n\t\t\tdirs[3][0] = -1; dirs[2][0] = 1;\n\t\t\tdirs[1][1] = -1; dirs[0][1] = 1;\n\t\tbreak;\n\t\tcase 2:\n\t\t\tdirs[2][0] = -1; dirs[3][0] = 1;\n\t\t\tdirs[0][1] = -1; dirs[1][1] = 1;\n\t\tbreak;\n\t\tcase 3:\n\t\t\tdirs[1][0] = -1; dirs[0][0] = 1;\n\t\t\tdirs[3][1] = -1; dirs[2][1] = 1;\n\t\tbreak;\n\t}\n}\n\nROT.Map.IceyMaze.prototype._isFree = function(map, x, y, width, height) {\n\tif (x < 1 || y < 1 || x >= width || y >= height) { return false; }\n\treturn map[x][y];\n}\n/**\n * @class Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n * @augments ROT.Map\n */\nROT.Map.EllerMaze = function(width, height) {\n\tROT.Map.call(this, width, height);\n}\nROT.Map.EllerMaze.extend(ROT.Map);\n\nROT.Map.EllerMaze.prototype.create = function(callback) {\n\tvar map = this._fillMap(1);\n\tvar w = Math.ceil((this._width-2)/2);\n\t\n\tvar rand = 9/24;\n\t\n\tvar L = [];\n\tvar R = [];\n\t\n\tfor (var i=0;i<w;i++) {\n\t\tL.push(i);\n\t\tR.push(i);\n\t}\n\tL.push(w-1); /* fake stop-block at the right side */\n\n\tfor (var j=1;j+3<this._height;j+=2) {\n\t\t/* one row */\n\t\tfor (var i=0;i<w;i++) {\n\t\t\t/* cell coords (will be always empty) */\n\t\t\tvar x = 2*i+1;\n\t\t\tvar y = j;\n\t\t\tmap[x][y] = 0;\n\t\t\t\n\t\t\t/* right connection */\n\t\t\tif (i != L[i+1] && ROT.RNG.getUniform() > rand) {\n\t\t\t\tthis._addToList(i, L, R);\n\t\t\t\tmap[x+1][y] = 0;\n\t\t\t}\n\t\t\t\n\t\t\t/* bottom connection */\n\t\t\tif (i != L[i] && ROT.RNG.getUniform() > rand) {\n\t\t\t\t/* remove connection */\n\t\t\t\tthis._removeFromList(i, L, R);\n\t\t\t} else {\n\t\t\t\t/* create connection */\n\t\t\t\tmap[x][y+1] = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t/* last row */\n\tfor (var i=0;i<w;i++) {\n\t\t/* cell coords (will be always empty) */\n\t\tvar x = 2*i+1;\n\t\tvar y = j;\n\t\tmap[x][y] = 0;\n\t\t\n\t\t/* right connection */\n\t\tif (i != L[i+1] && (i == L[i] || ROT.RNG.getUniform() > rand)) {\n\t\t\t/* dig right also if the cell is separated, so it gets connected to the rest of maze */\n\t\t\tthis._addToList(i, L, R);\n\t\t\tmap[x+1][y] = 0;\n\t\t}\n\t\t\n\t\tthis._removeFromList(i, L, R);\n\t}\n\t\n\tfor (var i=0;i<this._width;i++) {\n\t\tfor (var j=0;j<this._height;j++) {\n\t\t\tcallback(i, j, map[i][j]);\n\t\t}\n\t}\n\t\n\treturn this;\n}\n\n/**\n * Remove \"i\" from its list\n */\nROT.Map.EllerMaze.prototype._removeFromList = function(i, L, R) {\n\tR[L[i]] = R[i];\n\tL[R[i]] = L[i];\n\tR[i] = i;\n\tL[i] = i;\n}\n\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nROT.Map.EllerMaze.prototype._addToList = function(i, L, R) {\n\tR[L[i+1]] = R[i];\n\tL[R[i]] = L[i+1];\n\tR[i] = i+1;\n\tL[i+1] = i;\n}\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nROT.Map.Cellular = function(width, height, options) {\n\tROT.Map.call(this, width, height);\n\tthis._options = {\n\t\tborn: [5, 6, 7, 8],\n\t\tsurvive: [4, 5, 6, 7, 8],\n\t\ttopology: 8,\n\t\tconnected: false\n\t};\n\tthis.setOptions(options);\n\t\n\tthis._dirs = ROT.DIRS[this._options.topology];\n\tthis._map = this._fillMap(0);\n}\nROT.Map.Cellular.extend(ROT.Map);\n\n/**\n * Fill the map with random values\n * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n */\nROT.Map.Cellular.prototype.randomize = function(probability) {\n\tfor (var i=0;i<this._width;i++) {\n\t\tfor (var j=0;j<this._height;j++) {\n\t\t\tthis._map[i][j] = (ROT.RNG.getUniform() < probability ? 1 : 0);\n\t\t}\n\t}\n\treturn this;\n}\n\n/**\n * Change options.\n * @see ROT.Map.Cellular\n */\nROT.Map.Cellular.prototype.setOptions = function(options) {\n\tfor (var p in options) { this._options[p] = options[p]; }\n}\n\nROT.Map.Cellular.prototype.set = function(x, y, value) {\n\tthis._map[x][y] = value;\n}\n\nROT.Map.Cellular.prototype.create = function(callback) {\n\tvar newMap = this._fillMap(0);\n\tvar born = this._options.born;\n\tvar survive = this._options.survive;\n\n\n\tfor (var j=0;j<this._height;j++) {\n\t\tvar widthStep = 1;\n\t\tvar widthStart = 0;\n\t\tif (this._options.topology == 6) { \n\t\t\twidthStep = 2;\n\t\t\twidthStart = j%2;\n\t\t}\n\n\t\tfor (var i=widthStart; i<this._width; i+=widthStep) {\n\n\t\t\tvar cur = this._map[i][j];\n\t\t\tvar ncount = this._getNeighbors(i, j);\n\t\t\t\n\t\t\tif (cur && survive.indexOf(ncount) != -1) { /* survive */\n\t\t\t\tnewMap[i][j] = 1;\n\t\t\t} else if (!cur && born.indexOf(ncount) != -1) { /* born */\n\t\t\t\tnewMap[i][j] = 1;\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\t\n\tthis._map = newMap;\n\n\tif (this._options.connected) { this._completeMaze(); } // optionally connect every space\n\n\tif (!callback) { return; }\n\n\tfor (var j=0;j<this._height;j++) {\n\t\tvar widthStep = 1;\n\t\tvar widthStart = 0;\n\t\tif (this._options.topology == 6) { \n\t\t\twidthStep = 2;\n\t\t\twidthStart = j%2;\n\t\t}\n\t\tfor (var i=widthStart; i<this._width; i+=widthStep) {\n\t\t\tcallback(i, j, newMap[i][j]);\n\t\t}\n\t}\n}\n\n/**\n * Get neighbor count at [i,j] in this._map\n */\nROT.Map.Cellular.prototype._getNeighbors = function(cx, cy) {\n\tvar result = 0;\n\tfor (var i=0;i<this._dirs.length;i++) {\n\t\tvar dir = this._dirs[i];\n\t\tvar x = cx + dir[0];\n\t\tvar y = cy + dir[1];\n\t\t\n\t\tif (x < 0 || x >= this._width || x < 0 || y >= this._width) { continue; }\n\t\tresult += (this._map[x][y] == 1 ? 1 : 0);\n\t}\n\t\n\treturn result;\n}\n\n/**\n * Make sure every non-wall space is accessible.\n */\nROT.Map.Cellular.prototype._completeMaze = function() {\n\tvar allFreeSpace = [];\n\tvar notConnected = {};\n\t// find all free space\n\tfor (var x = 0; x < this._width; x++) {\n\t\tfor (var y = 0; y < this._height; y++) {\n\t\t\tif (this._freeSpace(x, y)) {\n\t\t\t\tvar p = [x, y];\n\t\t\t\tnotConnected[this._pointKey(p)] = p;\n\t\t\t\tallFreeSpace.push([x, y]);\n\t\t\t}\n\t\t}\n\t}\n\tvar start = allFreeSpace[ROT.RNG.getUniformInt(0, allFreeSpace.length - 1)];\n\n\tvar key = this._pointKey(start);\n\tvar connected = {};\n\tconnected[key] = start;\n\tdelete notConnected[key]\n\n\t// find what's connected to the starting point\n\tthis._findConnected(connected, notConnected, [start]);\n\n\twhile (Object.keys(notConnected).length > 0) {\n\n\t\t// find two points from notConnected to connected\n\t\tvar p = this._getFromTo(connected, notConnected);\n\t\tvar from = p[0]; // notConnected\n\t\tvar to = p[1]; // connected\n\n\t\t// find everything connected to the starting point\n\t\tvar local = {};\n\t\tlocal[this._pointKey(from)] = from;\n\t\tthis._findConnected(local, notConnected, [from], true);\n\n\t\t// connect to a connected square\n\t\tthis._tunnelToConnected(to, from, connected, notConnected);\n\n\t\t// now all of local is connected\n\t\tfor (var k in local) {\n\t\t\tvar pp = local[k];\n\t\t\tthis._map[pp[0]][pp[1]] = 0;\n\t\t\tconnected[k] = pp;\n\t\t\tdelete notConnected[k];\n\t\t}\n\t}\n}\n\n/**\n * Find random points to connect. Search for the closest point in the larger space. \n * This is to minimize the length of the passage while maintaining good performance.\n */\nROT.Map.Cellular.prototype._getFromTo = function(connected, notConnected) {\n\tvar from, to, d;\n\tvar connectedKeys = Object.keys(connected);\n\tvar notConnectedKeys = Object.keys(notConnected);\n\tfor (var i = 0; i < 5; i++) {\n\t\tif (connectedKeys.length < notConnectedKeys.length) {\n\t\t\tvar keys = connectedKeys;\n\t\t\tto = connected[keys[ROT.RNG.getUniformInt(0, keys.length - 1)]]\n\t\t\tfrom = this._getClosest(to, notConnected);\n\t\t} else {\n\t\t\tvar keys = notConnectedKeys;\n\t\t\tfrom = notConnected[keys[ROT.RNG.getUniformInt(0, keys.length - 1)]]\n\t\t\tto = this._getClosest(from, connected);\n\t\t}\n\t\td = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n\t\tif (d < 64) {\n\t\t\tbreak;\n\t\t}\n\t}\n\t// console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n\treturn [from, to];\n}\n\nROT.Map.Cellular.prototype._getClosest = function(point, space) {\n\tvar minPoint = null;\n\tvar minDist = null;\n\tfor (k in space) {\n\t\tvar p = space[k];\n\t\tvar d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n\t\tif (minDist == null || d < minDist) {\n\t\t\tminDist = d;\n\t\t\tminPoint = p;\n\t\t}\n\t}\n\treturn minPoint;\n}\n\nROT.Map.Cellular.prototype._findConnected = function(connected, notConnected, stack, keepNotConnected) {\n\twhile(stack.length > 0) {\n\t\tvar p = stack.splice(0, 1)[0];\n\t\tvar tests = [\n\t\t\t[p[0] + 1, p[1]],\n\t\t\t[p[0] - 1, p[1]],\n\t\t\t[p[0],     p[1] + 1],\n\t\t\t[p[0],     p[1] - 1]\n\t\t];\n\t\tfor (var i = 0; i < tests.length; i++) {\n\t\t\tvar key = this._pointKey(tests[i]);\n\t\t\tif (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1])) {\n\t\t\t\tconnected[key] = tests[i];\n\t\t\t\tif (!keepNotConnected) {\n\t\t\t\t\tdelete notConnected[key];\n\t\t\t\t}\n\t\t\t\tstack.push(tests[i]);\n\t\t\t}\n\t\t}\n\t}\n}\n\nROT.Map.Cellular.prototype._tunnelToConnected = function(to, from, connected, notConnected) {\n\tvar key = this._pointKey(from);\n\tvar a, b;\n\tif (from[0] < to[0]) {\n\t\ta = from;\n\t\tb = to;\n\t} else {\n\t\ta = to;\n\t\tb = from;\n\t}\n\tfor (var xx = a[0]; xx <= b[0]; xx++) {\n\t\tthis._map[xx][a[1]] = 0;\n\t\tvar p = [xx, a[1]];\n\t\tvar pkey = this._pointKey(p);\n\t\tconnected[pkey] = p;\n\t\tdelete notConnected[pkey];\n\t}\n\n\t// x is now fixed\n\tvar x = b[0];\n\n\tif (from[1] < to[1]) {\n\t\ta = from;\n\t\tb = to;\n\t} else {\n\t\ta = to;\n\t\tb = from;\n\t}\n\tfor (var yy = a[1]; yy < b[1]; yy++) {\n\t\tthis._map[x][yy] = 0;\n\t\tvar p = [x, yy];\n\t\tvar pkey = this._pointKey(p);\n\t\tconnected[pkey] = p;\n\t\tdelete notConnected[pkey];\n\t}\n}\n\nROT.Map.Cellular.prototype._freeSpace = function(x, y) {\n\treturn x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] != 1;\n}\n\nROT.Map.Cellular.prototype._pointKey = function(p) {\n\treturn p[0] + \".\" + p[1];\n}\n\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nROT.Map.Dungeon = function(width, height) {\n\tROT.Map.call(this, width, height);\n\tthis._rooms = []; /* list of all rooms */\n\tthis._corridors = [];\n}\nROT.Map.Dungeon.extend(ROT.Map);\n\n/**\n * Get all generated rooms\n * @returns {ROT.Map.Feature.Room[]}\n */\nROT.Map.Dungeon.prototype.getRooms = function() {\n\treturn this._rooms;\n}\n\n/**\n * Get all generated corridors\n * @returns {ROT.Map.Feature.Corridor[]}\n */\nROT.Map.Dungeon.prototype.getCorridors = function() {\n\treturn this._corridors;\n}\n/**\n * @class Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at \n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n * @augments ROT.Map.Dungeon\n */\nROT.Map.Digger = function(width, height, options) {\n\tROT.Map.Dungeon.call(this, width, height);\n\t\n\tthis._options = {\n\t\troomWidth: [3, 9], /* room minimum and maximum width */\n\t\troomHeight: [3, 5], /* room minimum and maximum height */\n\t\tcorridorLength: [3, 10], /* corridor minimum and maximum length */\n\t\tdugPercentage: 0.2, /* we stop after this percentage of level area has been dug out */\n\t\ttimeLimit: 1000 /* we stop after this much time has passed (msec) */\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\t\n\tthis._features = {\n\t\t\"Room\": 4,\n\t\t\"Corridor\": 4\n\t}\n\tthis._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n\tthis._walls = {}; /* these are available for digging */\n\t\n\tthis._digCallback = this._digCallback.bind(this);\n\tthis._canBeDugCallback = this._canBeDugCallback.bind(this);\n\tthis._isWallCallback = this._isWallCallback.bind(this);\n\tthis._priorityWallCallback = this._priorityWallCallback.bind(this);\n}\nROT.Map.Digger.extend(ROT.Map.Dungeon);\n\n/**\n * Create a map\n * @see ROT.Map#create\n */\nROT.Map.Digger.prototype.create = function(callback) {\n\tthis._rooms = [];\n\tthis._corridors = [];\n\tthis._map = this._fillMap(1);\n\tthis._walls = {};\n\tthis._dug = 0;\n\tvar area = (this._width-2) * (this._height-2);\n\n\tthis._firstRoom();\n\t\n\tvar t1 = Date.now();\n\n\tdo {\n\t\tvar t2 = Date.now();\n\t\tif (t2 - t1 > this._options.timeLimit) { break; }\n\n\t\t/* find a good wall */\n\t\tvar wall = this._findWall();\n\t\tif (!wall) { break; } /* no more walls */\n\t\t\n\t\tvar parts = wall.split(\",\");\n\t\tvar x = parseInt(parts[0]);\n\t\tvar y = parseInt(parts[1]);\n\t\tvar dir = this._getDiggingDirection(x, y);\n\t\tif (!dir) { continue; } /* this wall is not suitable */\n\t\t\n//\t\tconsole.log(\"wall\", x, y);\n\n\t\t/* try adding a feature */\n\t\tvar featureAttempts = 0;\n\t\tdo {\n\t\t\tfeatureAttempts++;\n\t\t\tif (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n\t\t\t\t//if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n\t\t\t\tthis._removeSurroundingWalls(x, y);\n\t\t\t\tthis._removeSurroundingWalls(x-dir[0], y-dir[1]);\n\t\t\t\tbreak; \n\t\t\t}\n\t\t} while (featureAttempts < this._featureAttempts);\n\t\t\n\t\tvar priorityWalls = 0;\n\t\tfor (var id in this._walls) { \n\t\t\tif (this._walls[id] > 1) { priorityWalls++; }\n\t\t}\n\n\t} while (this._dug/area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n\n\tthis._addDoors();\n\n\tif (callback) {\n\t\tfor (var i=0;i<this._width;i++) {\n\t\t\tfor (var j=0;j<this._height;j++) {\n\t\t\t\tcallback(i, j, this._map[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis._walls = {};\n\tthis._map = null;\n\n\treturn this;\n}\n\nROT.Map.Digger.prototype._digCallback = function(x, y, value) {\n\tif (value == 0 || value == 2) { /* empty */\n\t\tthis._map[x][y] = 0;\n\t\tthis._dug++;\n\t} else { /* wall */\n\t\tthis._walls[x+\",\"+y] = 1;\n\t}\n}\n\nROT.Map.Digger.prototype._isWallCallback = function(x, y) {\n\tif (x < 0 || y < 0 || x >= this._width || y >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\nROT.Map.Digger.prototype._canBeDugCallback = function(x, y) {\n\tif (x < 1 || y < 1 || x+1 >= this._width || y+1 >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\nROT.Map.Digger.prototype._priorityWallCallback = function(x, y) {\n\tthis._walls[x+\",\"+y] = 2;\n}\n\nROT.Map.Digger.prototype._firstRoom = function() {\n\tvar cx = Math.floor(this._width/2);\n\tvar cy = Math.floor(this._height/2);\n\tvar room = ROT.Map.Feature.Room.createRandomCenter(cx, cy, this._options);\n\tthis._rooms.push(room);\n\troom.create(this._digCallback);\n}\n\n/**\n * Get a suitable wall\n */\nROT.Map.Digger.prototype._findWall = function() {\n\tvar prio1 = [];\n\tvar prio2 = [];\n\tfor (var id in this._walls) {\n\t\tvar prio = this._walls[id];\n\t\tif (prio == 2) { \n\t\t\tprio2.push(id); \n\t\t} else {\n\t\t\tprio1.push(id);\n\t\t}\n\t}\n\t\n\tvar arr = (prio2.length ? prio2 : prio1);\n\tif (!arr.length) { return null; } /* no walls :/ */\n\t\n\tvar id = arr.random();\n\tdelete this._walls[id];\n\n\treturn id;\n}\n\n/**\n * Tries adding a feature\n * @returns {bool} was this a successful try?\n */\nROT.Map.Digger.prototype._tryFeature = function(x, y, dx, dy) {\n\tvar feature = ROT.RNG.getWeightedValue(this._features);\n\tfeature = ROT.Map.Feature[feature].createRandomAt(x, y, dx, dy, this._options);\n\t\n\tif (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n//\t\tconsole.log(\"not valid\");\n//\t\tfeature.debug();\n\t\treturn false;\n\t}\n\t\n\tfeature.create(this._digCallback);\n//\tfeature.debug();\n\n\tif (feature instanceof ROT.Map.Feature.Room) { this._rooms.push(feature); }\n\tif (feature instanceof ROT.Map.Feature.Corridor) { \n\t\tfeature.createPriorityWalls(this._priorityWallCallback);\n\t\tthis._corridors.push(feature); \n\t}\n\t\n\treturn true;\n}\n\nROT.Map.Digger.prototype._removeSurroundingWalls = function(cx, cy) {\n\tvar deltas = ROT.DIRS[4];\n\n\tfor (var i=0;i<deltas.length;i++) {\n\t\tvar delta = deltas[i];\n\t\tvar x = cx + delta[0];\n\t\tvar y = cy + delta[1];\n\t\tdelete this._walls[x+\",\"+y];\n\t\tvar x = cx + 2*delta[0];\n\t\tvar y = cy + 2*delta[1];\n\t\tdelete this._walls[x+\",\"+y];\n\t}\n}\n\n/**\n * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n */\nROT.Map.Digger.prototype._getDiggingDirection = function(cx, cy) {\n\tif (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) { return null; }\n\n\tvar result = null;\n\tvar deltas = ROT.DIRS[4];\n\t\n\tfor (var i=0;i<deltas.length;i++) {\n\t\tvar delta = deltas[i];\n\t\tvar x = cx + delta[0];\n\t\tvar y = cy + delta[1];\n\t\t\n\t\tif (!this._map[x][y]) { /* there already is another empty neighbor! */\n\t\t\tif (result) { return null; }\n\t\t\tresult = delta;\n\t\t}\n\t}\n\t\n\t/* no empty neighbor */\n\tif (!result) { return null; }\n\t\n\treturn [-result[0], -result[1]];\n}\n\n/**\n * Find empty spaces surrounding rooms, and apply doors.\n */\nROT.Map.Digger.prototype._addDoors = function() {\n\tvar data = this._map;\n\tvar isWallCallback = function(x, y) {\n\t\treturn (data[x][y] == 1);\n\t}\n\tfor (var i = 0; i < this._rooms.length; i++ ) {\n\t\tvar room = this._rooms[i];\n\t\troom.clearDoors();\n\t\troom.addDoors(isWallCallback);\n\t}\n}\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nROT.Map.Uniform = function(width, height, options) {\n\tROT.Map.Dungeon.call(this, width, height);\n\n\tthis._options = {\n\t\troomWidth: [3, 9], /* room minimum and maximum width */\n\t\troomHeight: [3, 5], /* room minimum and maximum height */\n\t\troomDugPercentage: 0.1, /* we stop after this percentage of level area has been dug out by rooms */\n\t\ttimeLimit: 1000 /* we stop after this much time has passed (msec) */\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\n\tthis._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n\tthis._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n\n\tthis._connected = []; /* list of already connected rooms */\n\tthis._unconnected = []; /* list of remaining unconnected rooms */\n\t\n\tthis._digCallback = this._digCallback.bind(this);\n\tthis._canBeDugCallback = this._canBeDugCallback.bind(this);\n\tthis._isWallCallback = this._isWallCallback.bind(this);\n}\nROT.Map.Uniform.extend(ROT.Map.Dungeon);\n\n/**\n * Create a map. If the time limit has been hit, returns null.\n * @see ROT.Map#create\n */\nROT.Map.Uniform.prototype.create = function(callback) {\n\tvar t1 = Date.now();\n\twhile (1) {\n\t\tvar t2 = Date.now();\n\t\tif (t2 - t1 > this._options.timeLimit) { return null; } /* time limit! */\n\t\n\t\tthis._map = this._fillMap(1);\n\t\tthis._dug = 0;\n\t\tthis._rooms = [];\n\t\tthis._unconnected = [];\n\t\tthis._generateRooms();\n\t\tif (this._rooms.length < 2) { continue; }\n\t\tif (this._generateCorridors()) { break; }\n\t}\n\t\n\tif (callback) {\n\t\tfor (var i=0;i<this._width;i++) {\n\t\t\tfor (var j=0;j<this._height;j++) {\n\t\t\t\tcallback(i, j, this._map[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn this;\n}\n\n/**\n * Generates a suitable amount of rooms\n */\nROT.Map.Uniform.prototype._generateRooms = function() {\n\tvar w = this._width-2;\n\tvar h = this._height-2;\n\n\tdo {\n\t\tvar room = this._generateRoom();\n\t\tif (this._dug/(w*h) > this._options.roomDugPercentage) { break; } /* achieved requested amount of free space */\n\t} while (room);\n\n\t/* either enough rooms, or not able to generate more of them :) */\n}\n\n/**\n * Try to generate one room\n */\nROT.Map.Uniform.prototype._generateRoom = function() {\n\tvar count = 0;\n\twhile (count < this._roomAttempts) {\n\t\tcount++;\n\t\t\n\t\tvar room = ROT.Map.Feature.Room.createRandom(this._width, this._height, this._options);\n\t\tif (!room.isValid(this._isWallCallback, this._canBeDugCallback)) { continue; }\n\t\t\n\t\troom.create(this._digCallback);\n\t\tthis._rooms.push(room);\n\t\treturn room;\n\t} \n\n\t/* no room was generated in a given number of attempts */\n\treturn null;\n}\n\n/**\n * Generates connectors beween rooms\n * @returns {bool} success Was this attempt successfull?\n */\nROT.Map.Uniform.prototype._generateCorridors = function() {\n\tvar cnt = 0;\n\twhile (cnt < this._corridorAttempts) {\n\t\tcnt++;\n\t\tthis._corridors = [];\n\n\t\t/* dig rooms into a clear map */\n\t\tthis._map = this._fillMap(1);\n\t\tfor (var i=0;i<this._rooms.length;i++) { \n\t\t\tvar room = this._rooms[i];\n\t\t\troom.clearDoors();\n\t\t\troom.create(this._digCallback); \n\t\t}\n\n\t\tthis._unconnected = this._rooms.slice().randomize();\n\t\tthis._connected = [];\n\t\tif (this._unconnected.length) { this._connected.push(this._unconnected.pop()); } /* first one is always connected */\n\t\t\n\t\twhile (1) {\n\t\t\t/* 1. pick random connected room */\n\t\t\tvar connected = this._connected.random();\n\t\t\t\n\t\t\t/* 2. find closest unconnected */\n\t\t\tvar room1 = this._closestRoom(this._unconnected, connected);\n\t\t\t\n\t\t\t/* 3. connect it to closest connected */\n\t\t\tvar room2 = this._closestRoom(this._connected, room1);\n\t\t\t\n\t\t\tvar ok = this._connectRooms(room1, room2);\n\t\t\tif (!ok) { break; } /* stop connecting, re-shuffle */\n\t\t\t\n\t\t\tif (!this._unconnected.length) { return true; } /* done; no rooms remain */\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * For a given room, find the closest one from the list\n */\nROT.Map.Uniform.prototype._closestRoom = function(rooms, room) {\n\tvar dist = Infinity;\n\tvar center = room.getCenter();\n\tvar result = null;\n\t\n\tfor (var i=0;i<rooms.length;i++) {\n\t\tvar r = rooms[i];\n\t\tvar c = r.getCenter();\n\t\tvar dx = c[0]-center[0];\n\t\tvar dy = c[1]-center[1];\n\t\tvar d = dx*dx+dy*dy;\n\t\t\n\t\tif (d < dist) {\n\t\t\tdist = d;\n\t\t\tresult = r;\n\t\t}\n\t}\n\t\n\treturn result;\n}\n\nROT.Map.Uniform.prototype._connectRooms = function(room1, room2) {\n\t/*\n\t\troom1.debug();\n\t\troom2.debug();\n\t*/\n\n\tvar center1 = room1.getCenter();\n\tvar center2 = room2.getCenter();\n\n\tvar diffX = center2[0] - center1[0];\n\tvar diffY = center2[1] - center1[1];\n\n\tif (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n\t\tvar dirIndex1 = (diffY > 0 ? 2 : 0);\n\t\tvar dirIndex2 = (dirIndex1 + 2) % 4;\n\t\tvar min = room2.getLeft();\n\t\tvar max = room2.getRight();\n\t\tvar index = 0;\n\t} else { /* first try connecting east-west walls */\n\t\tvar dirIndex1 = (diffX > 0 ? 1 : 3);\n\t\tvar dirIndex2 = (dirIndex1 + 2) % 4;\n\t\tvar min = room2.getTop();\n\t\tvar max = room2.getBottom();\n\t\tvar index = 1;\n\t}\n\n\tvar start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n\tif (!start) { return false; }\n\n\tif (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n\t\tvar end = start.slice();\n\t\tvar value = null;\n\t\tswitch (dirIndex2) {\n\t\t\tcase 0: value = room2.getTop()-1; break;\n\t\t\tcase 1: value = room2.getRight()+1; break;\n\t\t\tcase 2: value = room2.getBottom()+1; break;\n\t\t\tcase 3: value = room2.getLeft()-1; break;\n\t\t}\n\t\tend[(index+1)%2] = value;\n\t\tthis._digLine([start, end]);\n\t\t\n\t} else if (start[index] < min-1 || start[index] > max+1) { /* need to switch target wall (L-like) */\n\n\t\tvar diff = start[index] - center2[index];\n\t\tswitch (dirIndex2) {\n\t\t\tcase 0:\n\t\t\tcase 1:\tvar rotation = (diff < 0 ? 3 : 1); break;\n\t\t\tcase 2:\n\t\t\tcase 3:\tvar rotation = (diff < 0 ? 1 : 3); break;\n\t\t}\n\t\tdirIndex2 = (dirIndex2 + rotation) % 4;\n\t\t\n\t\tvar end = this._placeInWall(room2, dirIndex2);\n\t\tif (!end) { return false; }\n\n\t\tvar mid = [0, 0];\n\t\tmid[index] = start[index];\n\t\tvar index2 = (index+1)%2;\n\t\tmid[index2] = end[index2];\n\t\tthis._digLine([start, mid, end]);\n\t\t\n\t} else { /* use current wall pair, but adjust the line in the middle (S-like) */\n\t\n\t\tvar index2 = (index+1)%2;\n\t\tvar end = this._placeInWall(room2, dirIndex2);\n\t\tif (!end) { return false; }\n\t\tvar mid = Math.round((end[index2] + start[index2])/2);\n\n\t\tvar mid1 = [0, 0];\n\t\tvar mid2 = [0, 0];\n\t\tmid1[index] = start[index];\n\t\tmid1[index2] = mid;\n\t\tmid2[index] = end[index];\n\t\tmid2[index2] = mid;\n\t\tthis._digLine([start, mid1, mid2, end]);\n\t}\n\n\troom1.addDoor(start[0], start[1]);\n\troom2.addDoor(end[0], end[1]);\n\t\n\tvar index = this._unconnected.indexOf(room1);\n\tif (index != -1) {\n\t\tthis._unconnected.splice(index, 1);\n\t\tthis._connected.push(room1);\n\t}\n\n\tvar index = this._unconnected.indexOf(room2);\n\tif (index != -1) {\n\t\tthis._unconnected.splice(index, 1);\n\t\tthis._connected.push(room2);\n\t}\n\t\n\treturn true;\n}\n\nROT.Map.Uniform.prototype._placeInWall = function(room, dirIndex) {\n\tvar start = [0, 0];\n\tvar dir = [0, 0];\n\tvar length = 0;\n\t\n\tswitch (dirIndex) {\n\t\tcase 0:\n\t\t\tdir = [1, 0];\n\t\t\tstart = [room.getLeft(), room.getTop()-1];\n\t\t\tlength = room.getRight()-room.getLeft()+1;\n\t\tbreak;\n\t\tcase 1:\n\t\t\tdir = [0, 1];\n\t\t\tstart = [room.getRight()+1, room.getTop()];\n\t\t\tlength = room.getBottom()-room.getTop()+1;\n\t\tbreak;\n\t\tcase 2:\n\t\t\tdir = [1, 0];\n\t\t\tstart = [room.getLeft(), room.getBottom()+1];\n\t\t\tlength = room.getRight()-room.getLeft()+1;\n\t\tbreak;\n\t\tcase 3:\n\t\t\tdir = [0, 1];\n\t\t\tstart = [room.getLeft()-1, room.getTop()];\n\t\t\tlength = room.getBottom()-room.getTop()+1;\n\t\tbreak;\n\t}\n\t\n\tvar avail = [];\n\tvar lastBadIndex = -2;\n\n\tfor (var i=0;i<length;i++) {\n\t\tvar x = start[0] + i*dir[0];\n\t\tvar y = start[1] + i*dir[1];\n\t\tavail.push(null);\n\t\t\n\t\tvar isWall = (this._map[x][y] == 1);\n\t\tif (isWall) {\n\t\t\tif (lastBadIndex != i-1) { avail[i] = [x, y]; }\n\t\t} else {\n\t\t\tlastBadIndex = i;\n\t\t\tif (i) { avail[i-1] = null; }\n\t\t}\n\t}\n\t\n\tfor (var i=avail.length-1; i>=0; i--) {\n\t\tif (!avail[i]) { avail.splice(i, 1); }\n\t}\n\treturn (avail.length ? avail.random() : null);\n}\n\n/**\n * Dig a polyline.\n */\nROT.Map.Uniform.prototype._digLine = function(points) {\n\tfor (var i=1;i<points.length;i++) {\n\t\tvar start = points[i-1];\n\t\tvar end = points[i];\n\t\tvar corridor = new ROT.Map.Feature.Corridor(start[0], start[1], end[0], end[1]);\n\t\tcorridor.create(this._digCallback);\n\t\tthis._corridors.push(corridor);\n\t}\n}\n\nROT.Map.Uniform.prototype._digCallback = function(x, y, value) {\n\tthis._map[x][y] = value;\n\tif (value == 0) { this._dug++; }\n}\n\nROT.Map.Uniform.prototype._isWallCallback = function(x, y) {\n\tif (x < 0 || y < 0 || x >= this._width || y >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\nROT.Map.Uniform.prototype._canBeDugCallback = function(x, y) {\n\tif (x < 1 || y < 1 || x+1 >= this._width || y+1 >= this._height) { return false; }\n\treturn (this._map[x][y] == 1);\n}\n\n/**\n * @author hyakugei\n * @class Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.cellWidth=3] Number of cells to create on the horizontal (number of rooms horizontally)\n * @param {int[]} [options.cellHeight=3] Number of cells to create on the vertical (number of rooms vertically) \n * @param {int} [options.roomWidth] Room min and max width - normally set auto-magically via the constructor.\n * @param {int} [options.roomHeight] Room min and max height - normally set auto-magically via the constructor. \n */\nROT.Map.Rogue = function(width, height, options) {\n\tROT.Map.call(this, width, height);\n\t\n\tthis._options = {\n\t\tcellWidth: 3,  // NOTE to self, these could probably work the same as the roomWidth/room Height values\n\t\tcellHeight: 3  //     ie. as an array with min-max values for each direction....\n\t}\n\t\n\tfor (var p in options) { this._options[p] = options[p]; }\n\t\n\t/*\n\tSet the room sizes according to the over-all width of the map, \n\tand the cell sizes. \n\t*/\n\t\n\tif (!this._options.hasOwnProperty(\"roomWidth\")) {\n\t\tthis._options[\"roomWidth\"] = this._calculateRoomSize(this._width, this._options[\"cellWidth\"]);\n\t}\n\tif (!this._options.hasOwnProperty(\"roomHeight\")) {\n\t\tthis._options[\"roomHeight\"] = this._calculateRoomSize(this._height, this._options[\"cellHeight\"]);\n\t}\n\t\n}\n\nROT.Map.Rogue.extend(ROT.Map); \n\n/**\n * @see ROT.Map#create\n */\nROT.Map.Rogue.prototype.create = function(callback) {\n\tthis.map = this._fillMap(1);\n\tthis.rooms = [];\n\tthis.connectedCells = [];\n\t\n\tthis._initRooms();\n\tthis._connectRooms();\n\tthis._connectUnconnectedRooms();\n\tthis._createRandomRoomConnections();\n\tthis._createRooms();\n\tthis._createCorridors();\n\t\n\tif (callback) {\n\t\tfor (var i = 0; i < this._width; i++) {\n\t\t\tfor (var j = 0; j < this._height; j++) {\n\t\t\t\tcallback(i, j, this.map[i][j]);   \n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn this;\n}\n\nROT.Map.Rogue.prototype._calculateRoomSize = function(size, cell) {\n\tvar max = Math.floor((size/cell) * 0.8);\n\tvar min = Math.floor((size/cell) * 0.25);\n\tif (min < 2) min = 2;\n\tif (max < 2) max = 2;\n\treturn [min, max];\n}\n\nROT.Map.Rogue.prototype._initRooms = function () { \n\t// create rooms array. This is the \"grid\" list from the algo.  \n\tfor (var i = 0; i < this._options.cellWidth; i++) {  \n\t\tthis.rooms.push([]);\n\t\tfor(var j = 0; j < this._options.cellHeight; j++) {\n\t\t\tthis.rooms[i].push({\"x\":0, \"y\":0, \"width\":0, \"height\":0, \"connections\":[], \"cellx\":i, \"celly\":j});\n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._connectRooms = function() {\n\t//pick random starting grid\n\tvar cgx = ROT.RNG.getUniformInt(0, this._options.cellWidth-1);\n\tvar cgy = ROT.RNG.getUniformInt(0, this._options.cellHeight-1);\n\t\n\tvar idx;\n\tvar ncgx;\n\tvar ncgy;\n\t\n\tvar found = false;\n\tvar room;\n\tvar otherRoom;\n\t\n\t// find  unconnected neighbour cells\n\tdo {\n\t\n\t\t//var dirToCheck = [0,1,2,3,4,5,6,7];\n\t\tvar dirToCheck = [0,2,4,6];\n\t\tdirToCheck = dirToCheck.randomize();\n\t\t\n\t\tdo {\n\t\t\tfound = false;\n\t\t\tidx = dirToCheck.pop();\n\t\t\t\n\t\t\t\n\t\t\tncgx = cgx + ROT.DIRS[8][idx][0];\n\t\t\tncgy = cgy + ROT.DIRS[8][idx][1];\n\t\t\t\n\t\t\tif(ncgx < 0 || ncgx >= this._options.cellWidth) continue;\n\t\t\tif(ncgy < 0 || ncgy >= this._options.cellHeight) continue;\n\t\t\t\n\t\t\troom = this.rooms[cgx][cgy];\n\t\t\t\n\t\t\tif(room[\"connections\"].length > 0)\n\t\t\t{\n\t\t\t\t// as long as this room doesn't already coonect to me, we are ok with it. \n\t\t\t\tif(room[\"connections\"][0][0] == ncgx &&\n\t\t\t\troom[\"connections\"][0][1] == ncgy)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\totherRoom = this.rooms[ncgx][ncgy];\n\t\t\t\n\t\t\tif (otherRoom[\"connections\"].length == 0) { \n\t\t\t\totherRoom[\"connections\"].push([cgx,cgy]);\n\t\t\t\t\n\t\t\t\tthis.connectedCells.push([ncgx, ncgy]);\n\t\t\t\tcgx = ncgx;\n\t\t\t\tcgy = ncgy;\n\t\t\t\tfound = true;\n\t\t\t}\n\t\t\t\t\t\n\t\t} while (dirToCheck.length > 0 && found == false)\n\t\t\n\t} while (dirToCheck.length > 0)\n\n}\n\nROT.Map.Rogue.prototype._connectUnconnectedRooms = function() {\n\t//While there are unconnected rooms, try to connect them to a random connected neighbor \n\t//(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n\tvar cw = this._options.cellWidth;\n\tvar ch = this._options.cellHeight;\n\t\n\tvar randomConnectedCell;\n\tthis.connectedCells = this.connectedCells.randomize();\n\tvar room;\n\tvar otherRoom;\n\tvar validRoom;\n\t\n\tfor (var i = 0; i < this._options.cellWidth; i++) {\n\t\tfor (var j = 0; j < this._options.cellHeight; j++)  {\n\t\t\t\t\n\t\t\troom = this.rooms[i][j];\n\t\t\t\n\t\t\tif (room[\"connections\"].length == 0) {\n\t\t\t\tvar directions = [0,2,4,6];\n\t\t\t\tdirections = directions.randomize();\n\t\t\t\t\n\t\t\t\tvar validRoom = false;\n\t\t\t\t\n\t\t\t\tdo {\n\t\t\t\t\t\n\t\t\t\t\tvar dirIdx = directions.pop();\n\t\t\t\t\tvar newI = i + ROT.DIRS[8][dirIdx][0];\n\t\t\t\t\tvar newJ = j + ROT.DIRS[8][dirIdx][1];\n\t\t\t\t\t\n\t\t\t\t\tif (newI < 0 || newI >= cw || \n\t\t\t\t\tnewJ < 0 || newJ >= ch) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\totherRoom = this.rooms[newI][newJ];\n\t\t\t\t\t\n\t\t\t\t\tvalidRoom = true;\n\t\t\t\t\t\n\t\t\t\t\tif (otherRoom[\"connections\"].length == 0) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < otherRoom[\"connections\"].length; k++) {\n\t\t\t\t\t\tif(otherRoom[\"connections\"][k][0] == i && \n\t\t\t\t\t\totherRoom[\"connections\"][k][1] == j) {\n\t\t\t\t\t\t\tvalidRoom = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (validRoom) break;\n\t\t\t\t\t\n\t\t\t\t} while (directions.length)\n\t\t\t\t\n\t\t\t\tif(validRoom) { \n\t\t\t\t\troom[\"connections\"].push( [otherRoom[\"cellx\"], otherRoom[\"celly\"]] );  \n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"-- Unable to connect room.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._createRandomRoomConnections = function(connections) {\n\t// Empty for now. \n}\n\n\nROT.Map.Rogue.prototype._createRooms = function() {\n\t// Create Rooms \n\t\n\tvar w = this._width;\n\tvar h = this._height;\n\t\n\tvar cw = this._options.cellWidth;\n\tvar ch = this._options.cellHeight;\n\t\n\tvar cwp = Math.floor(this._width / cw);\n\tvar chp = Math.floor(this._height / ch);\n\t\n\tvar roomw;\n\tvar roomh;\n\tvar roomWidth = this._options[\"roomWidth\"];\n\tvar roomHeight = this._options[\"roomHeight\"];\n\tvar sx;\n\tvar sy;\n\tvar tx;\n\tvar ty;\n\tvar otherRoom;\n\t\n\tfor (var i = 0; i < cw; i++) {\n\t\tfor (var j = 0; j < ch; j++) {\n\t\t\tsx = cwp * i;\n\t\t\tsy = chp * j;\n\t\t\t\n\t\t\tif (sx == 0) sx = 1;\n\t\t\tif (sy == 0) sy = 1;\n\t\t\t\n\t\t\troomw = ROT.RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n\t\t\troomh = ROT.RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n\t\t\t\n\t\t\tif (j > 0) {\n\t\t\t\totherRoom = this.rooms[i][j-1];\n\t\t\t\twhile (sy - (otherRoom[\"y\"] + otherRoom[\"height\"] ) < 3) {\n\t\t\t\t\tsy++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (i > 0) {\n\t\t\t\totherRoom = this.rooms[i-1][j];\n\t\t\t\twhile(sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n\t\t\t\t\tsx++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar sxOffset = Math.round(ROT.RNG.getUniformInt(0, cwp-roomw)/2);\n\t\t\tvar syOffset = Math.round(ROT.RNG.getUniformInt(0, chp-roomh)/2);\n\t\t\t\n\t\t\twhile (sx + sxOffset + roomw >= w) {\n\t\t\t\tif(sxOffset) {\n\t\t\t\t\tsxOffset--;\n\t\t\t\t} else {\n\t\t\t\t\troomw--; \n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\twhile (sy + syOffset + roomh >= h) { \n\t\t\t\tif(syOffset) {\n\t\t\t\t\tsyOffset--;\n\t\t\t\t} else {\n\t\t\t\t\troomh--; \n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tsx = sx + sxOffset;\n\t\t\tsy = sy + syOffset;\n\t\t\t\n\t\t\tthis.rooms[i][j][\"x\"] = sx;\n\t\t\tthis.rooms[i][j][\"y\"] = sy;\n\t\t\tthis.rooms[i][j][\"width\"] = roomw;\n\t\t\tthis.rooms[i][j][\"height\"] = roomh;  \n\t\t\t\n\t\t\tfor (var ii = sx; ii < sx + roomw; ii++) {\n\t\t\t\tfor (var jj = sy; jj < sy + roomh; jj++) {\n\t\t\t\t\tthis.map[ii][jj] = 0;\n\t\t\t\t}\n\t\t\t}  \n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._getWallPosition = function(aRoom, aDirection) {\n\tvar rx;\n\tvar ry;\n\tvar door;\n\t\n\tif (aDirection == 1 || aDirection == 3) {\n\t\trx = ROT.RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n\t\tif (aDirection == 1) {\n\t\t\try = aRoom[\"y\"] - 2;\n\t\t\tdoor = ry + 1;\n\t\t} else {\n\t\t\try = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n\t\t\tdoor = ry -1;\n\t\t}\n\t\t\n\t\tthis.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space. \n\t\t\n\t} else if (aDirection == 2 || aDirection == 4) {\n\t\try = ROT.RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n\t\tif(aDirection == 2) {\n\t\t\trx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n\t\t\tdoor = rx - 1;\n\t\t} else {\n\t\t\trx = aRoom[\"x\"] - 2;\n\t\t\tdoor = rx + 1;\n\t\t}\n\t\t\n\t\tthis.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space. \n\t\t\n\t}\n\treturn [rx, ry];\n}\n\n/***\n* @param startPosition a 2 element array\n* @param endPosition a 2 element array\n*/\nROT.Map.Rogue.prototype._drawCorridore = function (startPosition, endPosition) {\n\tvar xOffset = endPosition[0] - startPosition[0];\n\tvar yOffset = endPosition[1] - startPosition[1];\n\t\n\tvar xpos = startPosition[0];\n\tvar ypos = startPosition[1];\n\t\n\tvar tempDist;\n\tvar xDir;\n\tvar yDir;\n\t\n\tvar move; // 2 element array, element 0 is the direction, element 1 is the total value to move. \n\tvar moves = []; // a list of 2 element arrays\n\t\n\tvar xAbs = Math.abs(xOffset);\n\tvar yAbs = Math.abs(yOffset);\n\t\n\tvar percent = ROT.RNG.getUniform(); // used to split the move at different places along the long axis\n\tvar firstHalf = percent;\n\tvar secondHalf = 1 - percent;\n\t\n\txDir = xOffset > 0 ? 2 : 6;\n\tyDir = yOffset > 0 ? 4 : 0;\n\t\n\tif (xAbs < yAbs) {\n\t\t// move firstHalf of the y offset\n\t\ttempDist = Math.ceil(yAbs * firstHalf);\n\t\tmoves.push([yDir, tempDist]);\n\t\t// move all the x offset\n\t\tmoves.push([xDir, xAbs]);\n\t\t// move sendHalf of the  y offset\n\t\ttempDist = Math.floor(yAbs * secondHalf);\n\t\tmoves.push([yDir, tempDist]);\n\t} else {\n\t\t//  move firstHalf of the x offset\n\t\ttempDist = Math.ceil(xAbs * firstHalf);\n\t\tmoves.push([xDir, tempDist]);\n\t\t// move all the y offset\n\t\tmoves.push([yDir, yAbs]);\n\t\t// move secondHalf of the x offset.\n\t\ttempDist = Math.floor(xAbs * secondHalf);\n\t\tmoves.push([xDir, tempDist]);  \n\t}\n\t\n\tthis.map[xpos][ypos] = 0;\n\t\n\twhile (moves.length > 0) {\n\t\tmove = moves.pop();\n\t\twhile (move[1] > 0) {\n\t\t\txpos += ROT.DIRS[8][move[0]][0];\n\t\t\typos += ROT.DIRS[8][move[0]][1];\n\t\t\tthis.map[xpos][ypos] = 0;\n\t\t\tmove[1] = move[1] - 1;\n\t\t}\n\t}\n}\n\nROT.Map.Rogue.prototype._createCorridors = function () {\n\t// Draw Corridors between connected rooms\n\t\n\tvar cw = this._options.cellWidth;\n\tvar ch = this._options.cellHeight;\n\tvar room;\n\tvar connection;\n\tvar otherRoom;\n\tvar wall;\n\tvar otherWall;\n\t\n\tfor (var i = 0; i < cw; i++) {\n\t\tfor (var j = 0; j < ch; j++) {\n\t\t\troom = this.rooms[i][j];\n\t\t\t\n\t\t\tfor (var k = 0; k < room[\"connections\"].length; k++) {\n\t\t\t\t\t\n\t\t\t\tconnection = room[\"connections\"][k]; \n\t\t\t\t\n\t\t\t\totherRoom = this.rooms[connection[0]][connection[1]];\n\t\t\t\t\n\t\t\t\t// figure out what wall our corridor will start one.\n\t\t\t\t// figure out what wall our corridor will end on. \n\t\t\t\tif (otherRoom[\"cellx\"] > room[\"cellx\"] ) {\n\t\t\t\t\twall = 2;\n\t\t\t\t\totherWall = 4;\n\t\t\t\t} else if (otherRoom[\"cellx\"] < room[\"cellx\"] ) {\n\t\t\t\t\twall = 4;\n\t\t\t\t\totherWall = 2;\n\t\t\t\t} else if(otherRoom[\"celly\"] > room[\"celly\"]) {\n\t\t\t\t\twall = 3;\n\t\t\t\t\totherWall = 1;\n\t\t\t\t} else if(otherRoom[\"celly\"] < room[\"celly\"]) {\n\t\t\t\t\twall = 1;\n\t\t\t\t\totherWall = 3;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis._drawCorridore(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n\t\t\t}\n\t\t}\n\t}\n}\n/**\n * @class Dungeon feature; has own .create() method\n */\nROT.Map.Feature = function() {}\nROT.Map.Feature.prototype.isValid = function(canBeDugCallback) {}\nROT.Map.Feature.prototype.create = function(digCallback) {}\nROT.Map.Feature.prototype.debug = function() {}\nROT.Map.Feature.createRandomAt = function(x, y, dx, dy, options) {}\n\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nROT.Map.Feature.Room = function(x1, y1, x2, y2, doorX, doorY) {\n\tthis._x1 = x1;\n\tthis._y1 = y1;\n\tthis._x2 = x2;\n\tthis._y2 = y2;\n\tthis._doors = {};\n\tif (arguments.length > 4) { this.addDoor(doorX, doorY); }\n}\nROT.Map.Feature.Room.extend(ROT.Map.Feature);\n\n/**\n * Room of random size, with a given doors and direction\n */\nROT.Map.Feature.Room.createRandomAt = function(x, y, dx, dy, options) {\n\tvar min = options.roomWidth[0];\n\tvar max = options.roomWidth[1];\n\tvar width = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar min = options.roomHeight[0];\n\tvar max = options.roomHeight[1];\n\tvar height = ROT.RNG.getUniformInt(min, max);\n\t\n\tif (dx == 1) { /* to the right */\n\t\tvar y2 = y - Math.floor(ROT.RNG.getUniform() * height);\n\t\treturn new this(x+1, y2, x+width, y2+height-1, x, y);\n\t}\n\t\n\tif (dx == -1) { /* to the left */\n\t\tvar y2 = y - Math.floor(ROT.RNG.getUniform() * height);\n\t\treturn new this(x-width, y2, x-1, y2+height-1, x, y);\n\t}\n\n\tif (dy == 1) { /* to the bottom */\n\t\tvar x2 = x - Math.floor(ROT.RNG.getUniform() * width);\n\t\treturn new this(x2, y+1, x2+width-1, y+height, x, y);\n\t}\n\n\tif (dy == -1) { /* to the top */\n\t\tvar x2 = x - Math.floor(ROT.RNG.getUniform() * width);\n\t\treturn new this(x2, y-height, x2+width-1, y-1, x, y);\n\t}\n\n        throw new Error(\"dx or dy must be 1 or -1\");\n}\n\n/**\n * Room of random size, positioned around center coords\n */\nROT.Map.Feature.Room.createRandomCenter = function(cx, cy, options) {\n\tvar min = options.roomWidth[0];\n\tvar max = options.roomWidth[1];\n\tvar width = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar min = options.roomHeight[0];\n\tvar max = options.roomHeight[1];\n\tvar height = ROT.RNG.getUniformInt(min, max);\n\n\tvar x1 = cx - Math.floor(ROT.RNG.getUniform()*width);\n\tvar y1 = cy - Math.floor(ROT.RNG.getUniform()*height);\n\tvar x2 = x1 + width - 1;\n\tvar y2 = y1 + height - 1;\n\n\treturn new this(x1, y1, x2, y2);\n}\n\n/**\n * Room of random size within a given dimensions\n */\nROT.Map.Feature.Room.createRandom = function(availWidth, availHeight, options) {\n\tvar min = options.roomWidth[0];\n\tvar max = options.roomWidth[1];\n\tvar width = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar min = options.roomHeight[0];\n\tvar max = options.roomHeight[1];\n\tvar height = ROT.RNG.getUniformInt(min, max);\n\t\n\tvar left = availWidth - width - 1;\n\tvar top = availHeight - height - 1;\n\n\tvar x1 = 1 + Math.floor(ROT.RNG.getUniform()*left);\n\tvar y1 = 1 + Math.floor(ROT.RNG.getUniform()*top);\n\tvar x2 = x1 + width - 1;\n\tvar y2 = y1 + height - 1;\n\n\treturn new this(x1, y1, x2, y2);\n}\n\nROT.Map.Feature.Room.prototype.addDoor = function(x, y) {\n\tthis._doors[x+\",\"+y] = 1;\n\treturn this;\n}\n\n/**\n * @param {function}\n */\nROT.Map.Feature.Room.prototype.getDoors = function(callback) {\n\tfor (var key in this._doors) {\n\t\tvar parts = key.split(\",\");\n\t\tcallback(parseInt(parts[0]), parseInt(parts[1]));\n\t}\n\treturn this;\n}\n\nROT.Map.Feature.Room.prototype.clearDoors = function() {\n\tthis._doors = {};\n\treturn this;\n}\n\nROT.Map.Feature.Room.prototype.addDoors = function(isWallCallback) {\n\tvar left = this._x1-1;\n\tvar right = this._x2+1;\n\tvar top = this._y1-1;\n\tvar bottom = this._y2+1;\n\n\tfor (var x=left; x<=right; x++) {\n\t\tfor (var y=top; y<=bottom; y++) {\n\t\t\tif (x != left && x != right && y != top && y != bottom) { continue; }\n\t\t\tif (isWallCallback(x, y)) { continue; }\n\n\t\t\tthis.addDoor(x, y);\n\t\t}\n\t}\n\n\treturn this;\n}\n\nROT.Map.Feature.Room.prototype.debug = function() {\n\tconsole.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n}\n\nROT.Map.Feature.Room.prototype.isValid = function(isWallCallback, canBeDugCallback) { \n\tvar left = this._x1-1;\n\tvar right = this._x2+1;\n\tvar top = this._y1-1;\n\tvar bottom = this._y2+1;\n\t\n\tfor (var x=left; x<=right; x++) {\n\t\tfor (var y=top; y<=bottom; y++) {\n\t\t\tif (x == left || x == right || y == top || y == bottom) {\n\t\t\t\tif (!isWallCallback(x, y)) { return false; }\n\t\t\t} else {\n\t\t\t\tif (!canBeDugCallback(x, y)) { return false; }\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n */\nROT.Map.Feature.Room.prototype.create = function(digCallback) { \n\tvar left = this._x1-1;\n\tvar right = this._x2+1;\n\tvar top = this._y1-1;\n\tvar bottom = this._y2+1;\n\t\n\tvar value = 0;\n\tfor (var x=left; x<=right; x++) {\n\t\tfor (var y=top; y<=bottom; y++) {\n\t\t\tif (x+\",\"+y in this._doors) {\n\t\t\t\tvalue = 2;\n\t\t\t} else if (x == left || x == right || y == top || y == bottom) {\n\t\t\t\tvalue = 1;\n\t\t\t} else {\n\t\t\t\tvalue = 0;\n\t\t\t}\n\t\t\tdigCallback(x, y, value);\n\t\t}\n\t}\n}\n\nROT.Map.Feature.Room.prototype.getCenter = function() {\n\treturn [Math.round((this._x1 + this._x2)/2), Math.round((this._y1 + this._y2)/2)];\n}\n\nROT.Map.Feature.Room.prototype.getLeft = function() {\n\treturn this._x1;\n}\n\nROT.Map.Feature.Room.prototype.getRight = function() {\n\treturn this._x2;\n}\n\nROT.Map.Feature.Room.prototype.getTop = function() {\n\treturn this._y1;\n}\n\nROT.Map.Feature.Room.prototype.getBottom = function() {\n\treturn this._y2;\n}\n\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nROT.Map.Feature.Corridor = function(startX, startY, endX, endY) {\n\tthis._startX = startX;\n\tthis._startY = startY;\n\tthis._endX = endX; \n\tthis._endY = endY;\n\tthis._endsWithAWall = true;\n}\nROT.Map.Feature.Corridor.extend(ROT.Map.Feature);\n\nROT.Map.Feature.Corridor.createRandomAt = function(x, y, dx, dy, options) {\n\tvar min = options.corridorLength[0];\n\tvar max = options.corridorLength[1];\n\tvar length = ROT.RNG.getUniformInt(min, max);\n\t\n\treturn new this(x, y, x + dx*length, y + dy*length);\n}\n\nROT.Map.Feature.Corridor.prototype.debug = function() {\n\tconsole.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n}\n\nROT.Map.Feature.Corridor.prototype.isValid = function(isWallCallback, canBeDugCallback){ \n\tvar sx = this._startX;\n\tvar sy = this._startY;\n\tvar dx = this._endX-sx;\n\tvar dy = this._endY-sy;\n\tvar length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n\t\n\tif (dx) { dx = dx/Math.abs(dx); }\n\tif (dy) { dy = dy/Math.abs(dy); }\n\tvar nx = dy;\n\tvar ny = -dx;\n\t\n\tvar ok = true;\n\tfor (var i=0; i<length; i++) {\n\t\tvar x = sx + i*dx;\n\t\tvar y = sy + i*dy;\n\n\t\tif (!canBeDugCallback(     x,      y)) { ok = false; }\n\t\tif (!isWallCallback  (x + nx, y + ny)) { ok = false; }\n\t\tif (!isWallCallback  (x - nx, y - ny)) { ok = false; }\n\t\t\n\t\tif (!ok) {\n\t\t\tlength = i;\n\t\t\tthis._endX = x-dx;\n\t\t\tthis._endY = y-dy;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\t/**\n\t * If the length degenerated, this corridor might be invalid\n\t */\n\t \n\t/* not supported */\n\tif (length == 0) { return false; } \n\t\n\t /* length 1 allowed only if the next space is empty */\n\tif (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) { return false; }\n\t\n\t/**\n\t * We do not want the corridor to crash into a corner of a room;\n\t * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n\t * \n\t * Situation:\n\t * #######1\n\t * .......?\n\t * #######2\n\t * \n\t * The corridor was dug from left to right.\n\t * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n\t */\n\tvar firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n\tvar secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n\tthis._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n\tif ((firstCornerBad || secondCornerBad) && this._endsWithAWall) { return false; }\n\n\treturn true;\n}\n\n/**\n * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n */\nROT.Map.Feature.Corridor.prototype.create = function(digCallback) { \n\tvar sx = this._startX;\n\tvar sy = this._startY;\n\tvar dx = this._endX-sx;\n\tvar dy = this._endY-sy;\n\tvar length = 1+Math.max(Math.abs(dx), Math.abs(dy));\n\t\n\tif (dx) { dx = dx/Math.abs(dx); }\n\tif (dy) { dy = dy/Math.abs(dy); }\n\tvar nx = dy;\n\tvar ny = -dx;\n\t\n\tfor (var i=0; i<length; i++) {\n\t\tvar x = sx + i*dx;\n\t\tvar y = sy + i*dy;\n\t\tdigCallback(x, y, 0);\n\t}\n\t\n\treturn true;\n}\n\nROT.Map.Feature.Corridor.prototype.createPriorityWalls = function(priorityWallCallback) {\n\tif (!this._endsWithAWall) { return; }\n\n\tvar sx = this._startX;\n\tvar sy = this._startY;\n\n\tvar dx = this._endX-sx;\n\tvar dy = this._endY-sy;\n\tif (dx) { dx = dx/Math.abs(dx); }\n\tif (dy) { dy = dy/Math.abs(dy); }\n\tvar nx = dy;\n\tvar ny = -dx;\n\n\tpriorityWallCallback(this._endX + dx, this._endY + dy);\n\tpriorityWallCallback(this._endX + nx, this._endY + ny);\n\tpriorityWallCallback(this._endX - nx, this._endY - ny);\n}\n/**\n * @class Base noise generator\n */\nROT.Noise = function() {\n};\n\nROT.Noise.prototype.get = function(x, y) {}\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\n\n/**\n * @class 2D simplex noise generator\n * @param {int} [gradients=256] Random gradients\n */\nROT.Noise.Simplex = function(gradients) {\n\tROT.Noise.call(this);\n\n\tthis._F2 = 0.5 * (Math.sqrt(3) - 1);\n\tthis._G2 = (3 - Math.sqrt(3)) / 6;\n\n\tthis._gradients = [\n\t\t[ 0, -1],\n\t\t[ 1, -1],\n\t\t[ 1,  0],\n\t\t[ 1,  1],\n\t\t[ 0,  1],\n\t\t[-1,  1],\n\t\t[-1,  0],\n\t\t[-1, -1]\n\t];\n\n\tvar permutations = [];\n\tvar count = gradients || 256;\n\tfor (var i=0;i<count;i++) { permutations.push(i); }\n\tpermutations = permutations.randomize();\n\n\tthis._perms = [];\n\tthis._indexes = [];\n\n\tfor (var i=0;i<2*count;i++) {\n\t\tthis._perms.push(permutations[i % count]);\n\t\tthis._indexes.push(this._perms[i] % this._gradients.length);\n\t}\n\n};\nROT.Noise.Simplex.extend(ROT.Noise);\n\nROT.Noise.Simplex.prototype.get = function(xin, yin) {\n\tvar perms = this._perms;\n\tvar indexes = this._indexes;\n\tvar count = perms.length/2;\n\tvar G2 = this._G2;\n\n\tvar n0 =0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n\n\t// Skew the input space to determine which simplex cell we're in\n\tvar s = (xin + yin) * this._F2; // Hairy factor for 2D\n\tvar i = Math.floor(xin + s);\n\tvar j = Math.floor(yin + s);\n\tvar t = (i + j) * G2;\n\tvar X0 = i - t; // Unskew the cell origin back to (x,y) space\n\tvar Y0 = j - t;\n\tvar x0 = xin - X0; // The x,y distances from the cell origin\n\tvar y0 = yin - Y0;\n\n\t// For the 2D case, the simplex shape is an equilateral triangle.\n\t// Determine which simplex we are in.\n\tvar i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n\tif (x0 > y0) {\n\t\ti1 = 1;\n\t\tj1 = 0;\n\t} else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n\t\ti1 = 0;\n\t\tj1 = 1;\n\t} // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n\n\t// A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n\t// a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n\t// c = (3-sqrt(3))/6\n\tvar x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n\tvar y1 = y0 - j1 + G2;\n\tvar x2 = x0 - 1 + 2*G2; // Offsets for last corner in (x,y) unskewed coords\n\tvar y2 = y0 - 1 + 2*G2;\n\n\t// Work out the hashed gradient indices of the three simplex corners\n\tvar ii = i.mod(count);\n\tvar jj = j.mod(count);\n\n\t// Calculate the contribution from the three corners\n\tvar t0 = 0.5 - x0*x0 - y0*y0;\n\tif (t0 >= 0) {\n\t\tt0 *= t0;\n\t\tgi = indexes[ii+perms[jj]];\n\t\tvar grad = this._gradients[gi];\n\t\tn0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n\t}\n\t\n\tvar t1 = 0.5 - x1*x1 - y1*y1;\n\tif (t1 >= 0) {\n\t\tt1 *= t1;\n\t\tgi = indexes[ii+i1+perms[jj+j1]];\n\t\tvar grad = this._gradients[gi];\n\t\tn1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n\t}\n\t\n\tvar t2 = 0.5 - x2*x2 - y2*y2;\n\tif (t2 >= 0) {\n\t\tt2 *= t2;\n\t\tgi = indexes[ii+1+perms[jj+1]];\n\t\tvar grad = this._gradients[gi];\n\t\tn2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n\t}\n\n\t// Add contributions from each corner to get the final noise value.\n\t// The result is scaled to return values in the interval [-1,1].\n\treturn 70 * (n0 + n1 + n2);\n}\n/**\n * @class Abstract FOV algorithm\n * @param {function} lightPassesCallback Does the light pass through x,y?\n * @param {object} [options]\n * @param {int} [options.topology=8] 4/6/8\n */\nROT.FOV = function(lightPassesCallback, options) {\n\tthis._lightPasses = lightPassesCallback;\n\tthis._options = {\n\t\ttopology: 8\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n};\n\n/**\n * Compute visibility for a 360-degree circle\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {function} callback\n */\nROT.FOV.prototype.compute = function(x, y, R, callback) {}\n\n/**\n * Return all neighbors in a concentric ring\n * @param {int} cx center-x\n * @param {int} cy center-y\n * @param {int} r range\n */\nROT.FOV.prototype._getCircle = function(cx, cy, r) {\n\tvar result = [];\n\tvar dirs, countFactor, startOffset;\n\n\tswitch (this._options.topology) {\n\t\tcase 4:\n\t\t\tcountFactor = 1;\n\t\t\tstartOffset = [0, 1];\n\t\t\tdirs = [\n\t\t\t\tROT.DIRS[8][7],\n\t\t\t\tROT.DIRS[8][1],\n\t\t\t\tROT.DIRS[8][3],\n\t\t\t\tROT.DIRS[8][5]\n\t\t\t]\n\t\tbreak;\n\n\t\tcase 6:\n\t\t\tdirs = ROT.DIRS[6];\n\t\t\tcountFactor = 1;\n\t\t\tstartOffset = [-1, 1];\n\t\tbreak;\n\n\t\tcase 8:\n\t\t\tdirs = ROT.DIRS[4];\n\t\t\tcountFactor = 2;\n\t\t\tstartOffset = [-1, 1];\n\t\tbreak;\n\t}\n\n\t/* starting neighbor */\n\tvar x = cx + startOffset[0]*r;\n\tvar y = cy + startOffset[1]*r;\n\n\t/* circle */\n\tfor (var i=0;i<dirs.length;i++) {\n\t\tfor (var j=0;j<r*countFactor;j++) {\n\t\t\tresult.push([x, y]);\n\t\t\tx += dirs[i][0];\n\t\t\ty += dirs[i][1];\n\n\t\t}\n\t}\n\n\treturn result;\n}\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nROT.FOV.DiscreteShadowcasting = function(lightPassesCallback, options) {\n\tROT.FOV.call(this, lightPassesCallback, options);\n}\nROT.FOV.DiscreteShadowcasting.extend(ROT.FOV);\n\n/**\n * @see ROT.FOV#compute\n */\nROT.FOV.DiscreteShadowcasting.prototype.compute = function(x, y, R, callback) {\n\tvar center = this._coords;\n\tvar map = this._map;\n\n\t/* this place is always visible */\n\tcallback(x, y, 0, 1);\n\n\t/* standing in a dark place. FIXME is this a good idea?  */\n\tif (!this._lightPasses(x, y)) { return; }\n\t\n\t/* start and end angles */\n\tvar DATA = [];\n\t\n\tvar A, B, cx, cy, blocks;\n\n\t/* analyze surrounding cells in concentric rings, starting from the center */\n\tfor (var r=1; r<=R; r++) {\n\t\tvar neighbors = this._getCircle(x, y, r);\n\t\tvar angle = 360 / neighbors.length;\n\n\t\tfor (var i=0;i<neighbors.length;i++) {\n\t\t\tcx = neighbors[i][0];\n\t\t\tcy = neighbors[i][1];\n\t\t\tA = angle * (i - 0.5);\n\t\t\tB = A + angle;\n\t\t\t\n\t\t\tblocks = !this._lightPasses(cx, cy);\n\t\t\tif (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) { callback(cx, cy, r, 1); }\n\t\t\t\n\t\t\tif (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) { return; } /* cutoff? */\n\n\t\t} /* for all cells in this ring */\n\t} /* for all rings */\n}\n\n/**\n * @param {int} A start angle\n * @param {int} B end angle\n * @param {bool} blocks Does current cell block visibility?\n * @param {int[][]} DATA shadowed angle pairs\n */\nROT.FOV.DiscreteShadowcasting.prototype._visibleCoords = function(A, B, blocks, DATA) {\n\tif (A < 0) { \n\t\tvar v1 = arguments.callee(0, B, blocks, DATA);\n\t\tvar v2 = arguments.callee(360+A, 360, blocks, DATA);\n\t\treturn v1 || v2;\n\t}\n\t\n\tvar index = 0;\n\twhile (index < DATA.length && DATA[index] < A) { index++; }\n\t\n\tif (index == DATA.length) { /* completely new shadow */\n\t\tif (blocks) { DATA.push(A, B); } \n\t\treturn true;\n\t}\n\t\n\tvar count = 0;\n\t\n\tif (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n\t\twhile (index < DATA.length && DATA[index] < B) {\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\tif (count == 0) { return false; }\n\t\t\n\t\tif (blocks) { \n\t\t\tif (count % 2) {\n\t\t\t\tDATA.splice(index-count, count, B);\n\t\t\t} else {\n\t\t\t\tDATA.splice(index-count, count);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\n\t} else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n\t\twhile (index < DATA.length && DATA[index] < B) {\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\t/* visible when outside an existing shadow, or when overlapping */\n\t\tif (A == DATA[index-count] && count == 1) { return false; }\n\t\t\n\t\tif (blocks) { \n\t\t\tif (count % 2) {\n\t\t\t\tDATA.splice(index-count, count, A);\n\t\t\t} else {\n\t\t\t\tDATA.splice(index-count, count, A, B);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\treturn true;\n\t}\n}\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nROT.FOV.PreciseShadowcasting = function(lightPassesCallback, options) {\n\tROT.FOV.call(this, lightPassesCallback, options);\n}\nROT.FOV.PreciseShadowcasting.extend(ROT.FOV);\n\n/**\n * @see ROT.FOV#compute\n */\nROT.FOV.PreciseShadowcasting.prototype.compute = function(x, y, R, callback) {\n\t/* this place is always visible */\n\tcallback(x, y, 0, 1);\n\n\t/* standing in a dark place. FIXME is this a good idea?  */\n\tif (!this._lightPasses(x, y)) { return; }\n\t\n\t/* list of all shadows */\n\tvar SHADOWS = [];\n\t\n\tvar cx, cy, blocks, A1, A2, visibility;\n\n\t/* analyze surrounding cells in concentric rings, starting from the center */\n\tfor (var r=1; r<=R; r++) {\n\t\tvar neighbors = this._getCircle(x, y, r);\n\t\tvar neighborCount = neighbors.length;\n\n\t\tfor (var i=0;i<neighborCount;i++) {\n\t\t\tcx = neighbors[i][0];\n\t\t\tcy = neighbors[i][1];\n\t\t\t/* shift half-an-angle backwards to maintain consistency of 0-th cells */\n\t\t\tA1 = [i ? 2*i-1 : 2*neighborCount-1, 2*neighborCount];\n\t\t\tA2 = [2*i+1, 2*neighborCount]; \n\t\t\t\n\t\t\tblocks = !this._lightPasses(cx, cy);\n\t\t\tvisibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n\t\t\tif (visibility) { callback(cx, cy, r, visibility); }\n\n\t\t\tif (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) { return; } /* cutoff? */\n\n\t\t} /* for all cells in this ring */\n\t} /* for all rings */\n}\n\n/**\n * @param {int[2]} A1 arc start\n * @param {int[2]} A2 arc end\n * @param {bool} blocks Does current arc block visibility?\n * @param {int[][]} SHADOWS list of active shadows\n */\nROT.FOV.PreciseShadowcasting.prototype._checkVisibility = function(A1, A2, blocks, SHADOWS) {\n\tif (A1[0] > A2[0]) { /* split into two sub-arcs */\n\t\tvar v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n\t\tvar v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n\t\treturn (v1+v2)/2;\n\t}\n\n\t/* index1: first shadow >= A1 */\n\tvar index1 = 0, edge1 = false;\n\twhile (index1 < SHADOWS.length) {\n\t\tvar old = SHADOWS[index1];\n\t\tvar diff = old[0]*A1[1] - A1[0]*old[1];\n\t\tif (diff >= 0) { /* old >= A1 */\n\t\t\tif (diff == 0 && !(index1 % 2)) { edge1 = true; }\n\t\t\tbreak;\n\t\t}\n\t\tindex1++;\n\t}\n\n\t/* index2: last shadow <= A2 */\n\tvar index2 = SHADOWS.length, edge2 = false;\n\twhile (index2--) {\n\t\tvar old = SHADOWS[index2];\n\t\tvar diff = A2[0]*old[1] - old[0]*A2[1];\n\t\tif (diff >= 0) { /* old <= A2 */\n\t\t\tif (diff == 0 && (index2 % 2)) { edge2 = true; }\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tvar visible = true;\n\tif (index1 == index2 && (edge1 || edge2)) {  /* subset of existing shadow, one of the edges match */\n\t\tvisible = false; \n\t} else if (edge1 && edge2 && index1+1==index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n\t\tvisible = false;\n\t} else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n\t\tvisible = false;\n\t}\n\t\n\tif (!visible) { return 0; } /* fast case: not visible */\n\t\n\tvar visibleLength, P;\n\n\t/* compute the length of visible arc, adjust list of shadows (if blocking) */\n\tvar remove = index2-index1+1;\n\tif (remove % 2) {\n\t\tif (index1 % 2) { /* first edge within existing shadow, second outside */\n\t\t\tvar P = SHADOWS[index1];\n\t\t\tvisibleLength = (A2[0]*P[1] - P[0]*A2[1]) / (P[1] * A2[1]);\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove, A2); }\n\t\t} else { /* second edge within existing shadow, first outside */\n\t\t\tvar P = SHADOWS[index2];\n\t\t\tvisibleLength = (P[0]*A1[1] - A1[0]*P[1]) / (A1[1] * P[1]);\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove, A1); }\n\t\t}\n\t} else {\n\t\tif (index1 % 2) { /* both edges within existing shadows */\n\t\t\tvar P1 = SHADOWS[index1];\n\t\t\tvar P2 = SHADOWS[index2];\n\t\t\tvisibleLength = (P2[0]*P1[1] - P1[0]*P2[1]) / (P1[1] * P2[1]);\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove); }\n\t\t} else { /* both edges outside existing shadows */\n\t\t\tif (blocks) { SHADOWS.splice(index1, remove, A1, A2); }\n\t\t\treturn 1; /* whole arc visible! */\n\t\t}\n\t}\n\n\tvar arcLength = (A2[0]*A1[1] - A1[0]*A2[1]) / (A1[1] * A2[1]);\n\n\treturn visibleLength/arcLength;\n}\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nROT.FOV.RecursiveShadowcasting = function(lightPassesCallback, options) {\n\tROT.FOV.call(this, lightPassesCallback, options);\n}\nROT.FOV.RecursiveShadowcasting.extend(ROT.FOV);\n\n/** Octants used for translating recursive shadowcasting offsets */\nROT.FOV.RecursiveShadowcasting.OCTANTS = [\n\t[-1,  0,  0,  1],\n\t[ 0, -1,  1,  0],\n\t[ 0, -1, -1,  0],\n\t[-1,  0,  0, -1],\n\t[ 1,  0,  0, -1],\n\t[ 0,  1, -1,  0],\n\t[ 0,  1,  1,  0],\n\t[ 1,  0,  0,  1]\n];\n\n/**\n * Compute visibility for a 360-degree circle\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype.compute = function(x, y, R, callback) {\n\t//You can always see your own tile\n\tcallback(x, y, 0, 1);\n\tfor(var i = 0; i < ROT.FOV.RecursiveShadowcasting.OCTANTS.length; i++) {\n\t\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[i], R, callback);\n\t}\n}\n\n/**\n * Compute visibility for a 180-degree arc\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype.compute180 = function(x, y, R, dir, callback) {\n\t//You can always see your own tile\n\tcallback(x, y, 0, 1);\n\tvar previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n\tvar nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n\tvar nextOctant = (dir+ 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[nextPreviousOctant], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[previousOctant], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[dir], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[nextOctant], R, callback);\n}\n\n/**\n * Compute visibility for a 90-degree arc\n * @param {int} x\n * @param {int} y\n * @param {int} R Maximum visibility radius\n * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype.compute90 = function(x, y, R, dir, callback) {\n\t//You can always see your own tile\n\tcallback(x, y, 0, 1);\n\tvar previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[dir], R, callback);\n\tthis._renderOctant(x, y, ROT.FOV.RecursiveShadowcasting.OCTANTS[previousOctant], R, callback);\n}\n\n/**\n * Render one octant (45-degree arc) of the viewshed\n * @param {int} x\n * @param {int} y\n * @param {int} octant Octant to be rendered\n * @param {int} R Maximum visibility radius\n * @param {function} callback\n */\nROT.FOV.RecursiveShadowcasting.prototype._renderOctant = function(x, y, octant, R, callback) {\n\t//Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n\tthis._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n}\n\n/**\n * Actually calculates the visibility\n * @param {int} startX The starting X coordinate\n * @param {int} startY The starting Y coordinate\n * @param {int} row The row to render\n * @param {float} visSlopeStart The slope to start at\n * @param {float} visSlopeEnd The slope to end at\n * @param {int} radius The radius to reach out to\n * @param {int} xx \n * @param {int} xy \n * @param {int} yx \n * @param {int} yy \n * @param {function} callback The callback to use when we hit a block that is visible\n */\nROT.FOV.RecursiveShadowcasting.prototype._castVisibility = function(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n\tif(visSlopeStart < visSlopeEnd) { return; }\n\tfor(var i = row; i <= radius; i++) {\n\t\tvar dx = -i - 1;\n\t\tvar dy = -i;\n\t\tvar blocked = false;\n\t\tvar newStart = 0;\n\n\t\t//'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n\t\twhile(dx <= 0) {\n\t\t\tdx += 1;\n\n\t\t\t//Translate from relative coordinates to map coordinates\n\t\t\tvar mapX = startX + dx * xx + dy * xy;\n\t\t\tvar mapY = startY + dx * yx + dy * yy;\n\n\t\t\t//Range of the row\n\t\t\tvar slopeStart = (dx - 0.5) / (dy + 0.5);\n\t\t\tvar slopeEnd = (dx + 0.5) / (dy - 0.5);\n\t\t\n\t\t\t//Ignore if not yet at left edge of Octant\n\t\t\tif(slopeEnd > visSlopeStart) { continue; }\n\t\t\t\n\t\t\t//Done if past right edge\n\t\t\tif(slopeStart < visSlopeEnd) { break; }\n\t\t\t\t\n\t\t\t//If it's in range, it's visible\n\t\t\tif((dx * dx + dy * dy) < (radius * radius)) {\n\t\t\t\tcallback(mapX, mapY, i, 1);\n\t\t\t}\n\t\n\t\t\tif(!blocked) {\n\t\t\t\t//If tile is a blocking tile, cast around it\n\t\t\t\tif(!this._lightPasses(mapX, mapY) && i < radius) {\n\t\t\t\t\tblocked = true;\n\t\t\t\t\tthis._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n\t\t\t\t\tnewStart = slopeEnd;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//Keep narrowing if scanning across a block\n\t\t\t\tif(!this._lightPasses(mapX, mapY)) {\n\t\t\t\t\tnewStart = slopeEnd;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\n\t\t\t\t//Block has ended\n\t\t\t\tblocked = false;\n\t\t\t\tvisSlopeStart = newStart;\n\t\t\t}\n\t\t}\n\t\tif(blocked) { break; }\n\t}\n}\n/**\n * @namespace Color operations\n */\nROT.Color = {\n\tfromString: function(str) {\n\t\tvar cached, r;\n\t\tif (str in this._cache) {\n\t\t\tcached = this._cache[str];\n\t\t} else {\n\t\t\tif (str.charAt(0) == \"#\") { /* hex rgb */\n\n\t\t\t\tvar values = str.match(/[0-9a-f]/gi).map(function(x) { return parseInt(x, 16); });\n\t\t\t\tif (values.length == 3) {\n\t\t\t\t\tcached = values.map(function(x) { return x*17; });\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i=0;i<3;i++) {\n\t\t\t\t\t\tvalues[i+1] += 16*values[i];\n\t\t\t\t\t\tvalues.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t\tcached = values;\n\t\t\t\t}\n\n\t\t\t} else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { /* decimal rgb */\n\t\t\t\tcached = r[1].split(/\\s*,\\s*/).map(function(x) { return parseInt(x); });\n\t\t\t} else { /* html name */\n\t\t\t\tcached = [0, 0, 0];\n\t\t\t}\n\n\t\t\tthis._cache[str] = cached;\n\t\t}\n\n\t\treturn cached.slice();\n\t},\n\n\t/**\n\t * Add two or more colors\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tadd: function(color1, color2) {\n\t\tvar result = color1.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tresult[i] += arguments[j][i];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Add two or more colors, MODIFIES FIRST ARGUMENT\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tadd_: function(color1, color2) {\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tcolor1[i] += arguments[j][i];\n\t\t\t}\n\t\t}\n\t\treturn color1;\n\t},\n\n\t/**\n\t * Multiply (mix) two or more colors\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tmultiply: function(color1, color2) {\n\t\tvar result = color1.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tresult[i] *= arguments[j][i] / 255;\n\t\t\t}\n\t\t\tresult[i] = Math.round(result[i]);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @returns {number[]}\n\t */\n\tmultiply_: function(color1, color2) {\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tfor (var j=1;j<arguments.length;j++) {\n\t\t\t\tcolor1[i] *= arguments[j][i] / 255;\n\t\t\t}\n\t\t\tcolor1[i] = Math.round(color1[i]);\n\t\t}\n\t\treturn color1;\n\t},\n\n\t/**\n\t * Interpolate (blend) two colors with a given factor\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @param {float} [factor=0.5] 0..1\n\t * @returns {number[]}\n\t */\n\tinterpolate: function(color1, color2, factor) {\n\t\tif (arguments.length < 3) { factor = 0.5; }\n\t\tvar result = color1.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tresult[i] = Math.round(result[i] + factor*(color2[i]-color1[i]));\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Interpolate (blend) two colors with a given factor in HSL mode\n\t * @param {number[]} color1\n\t * @param {number[]} color2\n\t * @param {float} [factor=0.5] 0..1\n\t * @returns {number[]}\n\t */\n\tinterpolateHSL: function(color1, color2, factor) {\n\t\tif (arguments.length < 3) { factor = 0.5; }\n\t\tvar hsl1 = this.rgb2hsl(color1);\n\t\tvar hsl2 = this.rgb2hsl(color2);\n\t\tfor (var i=0;i<3;i++) {\n\t\t\thsl1[i] += factor*(hsl2[i]-hsl1[i]);\n\t\t}\n\t\treturn this.hsl2rgb(hsl1);\n\t},\n\n\t/**\n\t * Create a new random color based on this one\n\t * @param {number[]} color\n\t * @param {number[]} diff Set of standard deviations\n\t * @returns {number[]}\n\t */\n\trandomize: function(color, diff) {\n\t\tif (!(diff instanceof Array)) { diff = Math.round(ROT.RNG.getNormal(0, diff)); }\n\t\tvar result = color.slice();\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tresult[i] += (diff instanceof Array ? Math.round(ROT.RNG.getNormal(0, diff[i])) : diff);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n\t * @param {number[]} color\n\t * @returns {number[]}\n\t */\n\trgb2hsl: function(color) {\n\t\tvar r = color[0]/255;\n\t\tvar g = color[1]/255;\n\t\tvar b = color[2]/255;\n\n\t\tvar max = Math.max(r, g, b), min = Math.min(r, g, b);\n\t\tvar h, s, l = (max + min) / 2;\n\n\t\tif (max == min) {\n\t\t\th = s = 0; // achromatic\n\t\t} else {\n\t\t\tvar d = max - min;\n\t\t\ts = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n\t\t\tswitch(max) {\n\t\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\n\t\t\t\tcase g: h = (b - r) / d + 2; break;\n\t\t\t\tcase b: h = (r - g) / d + 4; break;\n\t\t\t}\n\t\t\th /= 6;\n\t\t}\n\n\t\treturn [h, s, l];\n\t},\n\n\t/**\n\t * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n\t * @param {number[]} color\n\t * @returns {number[]}\n\t */\n\thsl2rgb: function(color) {\n\t\tvar l = color[2];\n\n\t\tif (color[1] == 0) {\n\t\t\tl = Math.round(l*255);\n\t\t\treturn [l, l, l];\n\t\t} else {\n\t\t\tvar hue2rgb = function(p, q, t) {\n\t\t\t\tif (t < 0) t += 1;\n\t\t\t\tif (t > 1) t -= 1;\n\t\t\t\tif (t < 1/6) return p + (q - p) * 6 * t;\n\t\t\t\tif (t < 1/2) return q;\n\t\t\t\tif (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n\t\t\t\treturn p;\n\t\t\t}\n\n\t\t\tvar s = color[1];\n\t\t\tvar q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n\t\t\tvar p = 2 * l - q;\n\t\t\tvar r = hue2rgb(p, q, color[0] + 1/3);\n\t\t\tvar g = hue2rgb(p, q, color[0]);\n\t\t\tvar b = hue2rgb(p, q, color[0] - 1/3);\n\t\t\treturn [Math.round(r*255), Math.round(g*255), Math.round(b*255)];\n\t\t}\n\t},\n\n\ttoRGB: function(color) {\n\t\treturn \"rgb(\" + this._clamp(color[0]) + \",\" + this._clamp(color[1]) + \",\" + this._clamp(color[2]) + \")\";\n\t},\n\n\ttoHex: function(color) {\n\t\tvar parts = [];\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tparts.push(this._clamp(color[i]).toString(16).lpad(\"0\", 2));\n\t\t}\n\t\treturn \"#\" + parts.join(\"\");\n\t},\n\n\t_clamp: function(num) {\n\t\tif (num < 0) {\n\t\t\treturn 0;\n\t\t} else if (num > 255) {\n\t\t\treturn 255;\n\t\t} else {\n\t\t\treturn num;\n\t\t}\n\t},\n\n\t_cache: {\n\t\t\"black\": [0,0,0],\n\t\t\"navy\": [0,0,128],\n\t\t\"darkblue\": [0,0,139],\n\t\t\"mediumblue\": [0,0,205],\n\t\t\"blue\": [0,0,255],\n\t\t\"darkgreen\": [0,100,0],\n\t\t\"green\": [0,128,0],\n\t\t\"teal\": [0,128,128],\n\t\t\"darkcyan\": [0,139,139],\n\t\t\"deepskyblue\": [0,191,255],\n\t\t\"darkturquoise\": [0,206,209],\n\t\t\"mediumspringgreen\": [0,250,154],\n\t\t\"lime\": [0,255,0],\n\t\t\"springgreen\": [0,255,127],\n\t\t\"aqua\": [0,255,255],\n\t\t\"cyan\": [0,255,255],\n\t\t\"midnightblue\": [25,25,112],\n\t\t\"dodgerblue\": [30,144,255],\n\t\t\"forestgreen\": [34,139,34],\n\t\t\"seagreen\": [46,139,87],\n\t\t\"darkslategray\": [47,79,79],\n\t\t\"darkslategrey\": [47,79,79],\n\t\t\"limegreen\": [50,205,50],\n\t\t\"mediumseagreen\": [60,179,113],\n\t\t\"turquoise\": [64,224,208],\n\t\t\"royalblue\": [65,105,225],\n\t\t\"steelblue\": [70,130,180],\n\t\t\"darkslateblue\": [72,61,139],\n\t\t\"mediumturquoise\": [72,209,204],\n\t\t\"indigo\": [75,0,130],\n\t\t\"darkolivegreen\": [85,107,47],\n\t\t\"cadetblue\": [95,158,160],\n\t\t\"cornflowerblue\": [100,149,237],\n\t\t\"mediumaquamarine\": [102,205,170],\n\t\t\"dimgray\": [105,105,105],\n\t\t\"dimgrey\": [105,105,105],\n\t\t\"slateblue\": [106,90,205],\n\t\t\"olivedrab\": [107,142,35],\n\t\t\"slategray\": [112,128,144],\n\t\t\"slategrey\": [112,128,144],\n\t\t\"lightslategray\": [119,136,153],\n\t\t\"lightslategrey\": [119,136,153],\n\t\t\"mediumslateblue\": [123,104,238],\n\t\t\"lawngreen\": [124,252,0],\n\t\t\"chartreuse\": [127,255,0],\n\t\t\"aquamarine\": [127,255,212],\n\t\t\"maroon\": [128,0,0],\n\t\t\"purple\": [128,0,128],\n\t\t\"olive\": [128,128,0],\n\t\t\"gray\": [128,128,128],\n\t\t\"grey\": [128,128,128],\n\t\t\"skyblue\": [135,206,235],\n\t\t\"lightskyblue\": [135,206,250],\n\t\t\"blueviolet\": [138,43,226],\n\t\t\"darkred\": [139,0,0],\n\t\t\"darkmagenta\": [139,0,139],\n\t\t\"saddlebrown\": [139,69,19],\n\t\t\"darkseagreen\": [143,188,143],\n\t\t\"lightgreen\": [144,238,144],\n\t\t\"mediumpurple\": [147,112,216],\n\t\t\"darkviolet\": [148,0,211],\n\t\t\"palegreen\": [152,251,152],\n\t\t\"darkorchid\": [153,50,204],\n\t\t\"yellowgreen\": [154,205,50],\n\t\t\"sienna\": [160,82,45],\n\t\t\"brown\": [165,42,42],\n\t\t\"darkgray\": [169,169,169],\n\t\t\"darkgrey\": [169,169,169],\n\t\t\"lightblue\": [173,216,230],\n\t\t\"greenyellow\": [173,255,47],\n\t\t\"paleturquoise\": [175,238,238],\n\t\t\"lightsteelblue\": [176,196,222],\n\t\t\"powderblue\": [176,224,230],\n\t\t\"firebrick\": [178,34,34],\n\t\t\"darkgoldenrod\": [184,134,11],\n\t\t\"mediumorchid\": [186,85,211],\n\t\t\"rosybrown\": [188,143,143],\n\t\t\"darkkhaki\": [189,183,107],\n\t\t\"silver\": [192,192,192],\n\t\t\"mediumvioletred\": [199,21,133],\n\t\t\"indianred\": [205,92,92],\n\t\t\"peru\": [205,133,63],\n\t\t\"chocolate\": [210,105,30],\n\t\t\"tan\": [210,180,140],\n\t\t\"lightgray\": [211,211,211],\n\t\t\"lightgrey\": [211,211,211],\n\t\t\"palevioletred\": [216,112,147],\n\t\t\"thistle\": [216,191,216],\n\t\t\"orchid\": [218,112,214],\n\t\t\"goldenrod\": [218,165,32],\n\t\t\"crimson\": [220,20,60],\n\t\t\"gainsboro\": [220,220,220],\n\t\t\"plum\": [221,160,221],\n\t\t\"burlywood\": [222,184,135],\n\t\t\"lightcyan\": [224,255,255],\n\t\t\"lavender\": [230,230,250],\n\t\t\"darksalmon\": [233,150,122],\n\t\t\"violet\": [238,130,238],\n\t\t\"palegoldenrod\": [238,232,170],\n\t\t\"lightcoral\": [240,128,128],\n\t\t\"khaki\": [240,230,140],\n\t\t\"aliceblue\": [240,248,255],\n\t\t\"honeydew\": [240,255,240],\n\t\t\"azure\": [240,255,255],\n\t\t\"sandybrown\": [244,164,96],\n\t\t\"wheat\": [245,222,179],\n\t\t\"beige\": [245,245,220],\n\t\t\"whitesmoke\": [245,245,245],\n\t\t\"mintcream\": [245,255,250],\n\t\t\"ghostwhite\": [248,248,255],\n\t\t\"salmon\": [250,128,114],\n\t\t\"antiquewhite\": [250,235,215],\n\t\t\"linen\": [250,240,230],\n\t\t\"lightgoldenrodyellow\": [250,250,210],\n\t\t\"oldlace\": [253,245,230],\n\t\t\"red\": [255,0,0],\n\t\t\"fuchsia\": [255,0,255],\n\t\t\"magenta\": [255,0,255],\n\t\t\"deeppink\": [255,20,147],\n\t\t\"orangered\": [255,69,0],\n\t\t\"tomato\": [255,99,71],\n\t\t\"hotpink\": [255,105,180],\n\t\t\"coral\": [255,127,80],\n\t\t\"darkorange\": [255,140,0],\n\t\t\"lightsalmon\": [255,160,122],\n\t\t\"orange\": [255,165,0],\n\t\t\"lightpink\": [255,182,193],\n\t\t\"pink\": [255,192,203],\n\t\t\"gold\": [255,215,0],\n\t\t\"peachpuff\": [255,218,185],\n\t\t\"navajowhite\": [255,222,173],\n\t\t\"moccasin\": [255,228,181],\n\t\t\"bisque\": [255,228,196],\n\t\t\"mistyrose\": [255,228,225],\n\t\t\"blanchedalmond\": [255,235,205],\n\t\t\"papayawhip\": [255,239,213],\n\t\t\"lavenderblush\": [255,240,245],\n\t\t\"seashell\": [255,245,238],\n\t\t\"cornsilk\": [255,248,220],\n\t\t\"lemonchiffon\": [255,250,205],\n\t\t\"floralwhite\": [255,250,240],\n\t\t\"snow\": [255,250,250],\n\t\t\"yellow\": [255,255,0],\n\t\t\"lightyellow\": [255,255,224],\n\t\t\"ivory\": [255,255,240],\n\t\t\"white\": [255,255,255]\n\t}\n}\n/**\n * @class Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n * @param {function} reflectivityCallback Callback to retrieve cell reflectivity (0..1)\n * @param {object} [options]\n * @param {int} [options.passes=1] Number of passes. 1 equals to simple FOV of all light sources, >1 means a *highly simplified* radiosity-like algorithm.\n * @param {int} [options.emissionThreshold=100] Cells with emissivity > threshold will be treated as light source in the next pass.\n * @param {int} [options.range=10] Max light range\n */\nROT.Lighting = function(reflectivityCallback, options) {\n\tthis._reflectivityCallback = reflectivityCallback;\n\tthis._options = {\n\t\tpasses: 1,\n\t\temissionThreshold: 100,\n\t\trange: 10\n\t};\n\tthis._fov = null;\n\n\tthis._lights = {};\n\tthis._reflectivityCache = {};\n\tthis._fovCache = {};\n\n\tthis.setOptions(options);\n}\n\n/**\n * Adjust options at runtime\n * @see ROT.Lighting\n * @param {object} [options]\n */\nROT.Lighting.prototype.setOptions = function(options) {\n\tfor (var p in options) { this._options[p] = options[p]; }\n\tif (options && options.range) { this.reset(); }\n\treturn this;\n}\n\n/**\n * Set the used Field-Of-View algo\n * @param {ROT.FOV} fov\n */\nROT.Lighting.prototype.setFOV = function(fov) {\n\tthis._fov = fov;\n\tthis._fovCache = {};\n\treturn this;\n}\n\n/**\n * Set (or remove) a light source\n * @param {int} x\n * @param {int} y\n * @param {null || string || number[3]} color\n */\nROT.Lighting.prototype.setLight = function(x, y, color) {\n\tvar key = x+\",\"+y;\n\n\tif (color) {\n\t\tthis._lights[key] = (typeof(color) == \"string\" ? ROT.Color.fromString(color) : color);\n\t} else {\n\t\tdelete this._lights[key];\n\t}\n\treturn this;\n}\n\n/**\n * Remove all light sources\n */\nROT.Lighting.prototype.clearLights = function() {\n    this._lights = {};\n}\n\n/**\n * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n */\nROT.Lighting.prototype.reset = function() {\n\tthis._reflectivityCache = {};\n\tthis._fovCache = {};\n\n\treturn this;\n}\n\n/**\n * Compute the lighting\n * @param {function} lightingCallback Will be called with (x, y, color) for every lit cell\n */\nROT.Lighting.prototype.compute = function(lightingCallback) {\n\tvar doneCells = {};\n\tvar emittingCells = {};\n\tvar litCells = {};\n\n\tfor (var key in this._lights) { /* prepare emitters for first pass */\n\t\tvar light = this._lights[key];\n\t\temittingCells[key] = [0, 0, 0];\n\t\tROT.Color.add_(emittingCells[key], light);\n\t}\n\n\tfor (var i=0;i<this._options.passes;i++) { /* main loop */\n\t\tthis._emitLight(emittingCells, litCells, doneCells);\n\t\tif (i+1 == this._options.passes) { continue; } /* not for the last pass */\n\t\temittingCells = this._computeEmitters(litCells, doneCells);\n\t}\n\n\tfor (var litKey in litCells) { /* let the user know what and how is lit */\n\t\tvar parts = litKey.split(\",\");\n\t\tvar x = parseInt(parts[0]);\n\t\tvar y = parseInt(parts[1]);\n\t\tlightingCallback(x, y, litCells[litKey]);\n\t}\n\n\treturn this;\n}\n\n/**\n * Compute one iteration from all emitting cells\n * @param {object} emittingCells These emit light\n * @param {object} litCells Add projected light to these\n * @param {object} doneCells These already emitted, forbid them from further calculations\n */\nROT.Lighting.prototype._emitLight = function(emittingCells, litCells, doneCells) {\n\tfor (var key in emittingCells) {\n\t\tvar parts = key.split(\",\");\n\t\tvar x = parseInt(parts[0]);\n\t\tvar y = parseInt(parts[1]);\n\t\tthis._emitLightFromCell(x, y, emittingCells[key], litCells);\n\t\tdoneCells[key] = 1;\n\t}\n\treturn this;\n}\n\n/**\n * Prepare a list of emitters for next pass\n * @param {object} litCells\n * @param {object} doneCells\n * @returns {object}\n */\nROT.Lighting.prototype._computeEmitters = function(litCells, doneCells) {\n\tvar result = {};\n\n\tfor (var key in litCells) {\n\t\tif (key in doneCells) { continue; } /* already emitted */\n\n\t\tvar color = litCells[key];\n\n\t\tif (key in this._reflectivityCache) {\n\t\t\tvar reflectivity = this._reflectivityCache[key];\n\t\t} else {\n\t\t\tvar parts = key.split(\",\");\n\t\t\tvar x = parseInt(parts[0]);\n\t\t\tvar y = parseInt(parts[1]);\n\t\t\tvar reflectivity = this._reflectivityCallback(x, y);\n\t\t\tthis._reflectivityCache[key] = reflectivity;\n\t\t}\n\n\t\tif (reflectivity == 0) { continue; } /* will not reflect at all */\n\n\t\t/* compute emission color */\n\t\tvar emission = [];\n\t\tvar intensity = 0;\n\t\tfor (var i=0;i<3;i++) {\n\t\t\tvar part = Math.round(color[i]*reflectivity);\n\t\t\temission[i] = part;\n\t\t\tintensity += part;\n\t\t}\n\t\tif (intensity > this._options.emissionThreshold) { result[key] = emission; }\n\t}\n\n\treturn result;\n}\n\n/**\n * Compute one iteration from one cell\n * @param {int} x\n * @param {int} y\n * @param {number[]} color\n * @param {object} litCells Cell data to by updated\n */\nROT.Lighting.prototype._emitLightFromCell = function(x, y, color, litCells) {\n\tvar key = x+\",\"+y;\n\tif (key in this._fovCache) {\n\t\tvar fov = this._fovCache[key];\n\t} else {\n\t\tvar fov = this._updateFOV(x, y);\n\t}\n\n\tfor (var fovKey in fov) {\n\t\tvar formFactor = fov[fovKey];\n\n\t\tif (fovKey in litCells) { /* already lit */\n\t\t\tvar result = litCells[fovKey];\n\t\t} else { /* newly lit */\n\t\t\tvar result = [0, 0, 0];\n\t\t\tlitCells[fovKey] = result;\n\t\t}\n\n\t\tfor (var i=0;i<3;i++) { result[i] += Math.round(color[i]*formFactor); } /* add light color */\n\t}\n\n\treturn this;\n}\n\n/**\n * Compute FOV (\"form factor\") for a potential light source at [x,y]\n * @param {int} x\n * @param {int} y\n * @returns {object}\n */\nROT.Lighting.prototype._updateFOV = function(x, y) {\n\tvar key1 = x+\",\"+y;\n\tvar cache = {};\n\tthis._fovCache[key1] = cache;\n\tvar range = this._options.range;\n\tvar cb = function(x, y, r, vis) {\n\t\tvar key2 = x+\",\"+y;\n\t\tvar formFactor = vis * (1-r/range);\n\t\tif (formFactor == 0) { return; }\n\t\tcache[key2] = formFactor;\n\t}\n\tthis._fov.compute(x, y, range, cb.bind(this));\n\n\treturn cache;\n}\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nROT.Path = function(toX, toY, passableCallback, options) {\n\tthis._toX = toX;\n\tthis._toY = toY;\n\tthis._fromX = null;\n\tthis._fromY = null;\n\tthis._passableCallback = passableCallback;\n\tthis._options = {\n\t\ttopology: 8\n\t}\n\tfor (var p in options) { this._options[p] = options[p]; }\n\n\tthis._dirs = ROT.DIRS[this._options.topology];\n\tif (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n\t\tthis._dirs = [\n\t\t\tthis._dirs[0],\n\t\t\tthis._dirs[2],\n\t\t\tthis._dirs[4],\n\t\t\tthis._dirs[6],\n\t\t\tthis._dirs[1],\n\t\t\tthis._dirs[3],\n\t\t\tthis._dirs[5],\n\t\t\tthis._dirs[7]\n\t\t]\n\t}\n}\n\n/**\n * Compute a path from a given point\n * @param {int} fromX\n * @param {int} fromY\n * @param {function} callback Will be called for every path item with arguments \"x\" and \"y\"\n */\nROT.Path.prototype.compute = function(fromX, fromY, callback) {\n}\n\nROT.Path.prototype._getNeighbors = function(cx, cy) {\n\tvar result = [];\n\tfor (var i=0;i<this._dirs.length;i++) {\n\t\tvar dir = this._dirs[i];\n\t\tvar x = cx + dir[0];\n\t\tvar y = cy + dir[1];\n\t\t\n\t\tif (!this._passableCallback(x, y)) { continue; }\n\t\tresult.push([x, y]);\n\t}\n\t\n\treturn result;\n}\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nROT.Path.Dijkstra = function(toX, toY, passableCallback, options) {\n\tROT.Path.call(this, toX, toY, passableCallback, options);\n\n\tthis._computed = {};\n\tthis._todo = [];\n\tthis._add(toX, toY, null);\n}\nROT.Path.Dijkstra.extend(ROT.Path);\n\n/**\n * Compute a path from a given point\n * @see ROT.Path#compute\n */\nROT.Path.Dijkstra.prototype.compute = function(fromX, fromY, callback) {\n\tvar key = fromX+\",\"+fromY;\n\tif (!(key in this._computed)) { this._compute(fromX, fromY); }\n\tif (!(key in this._computed)) { return; }\n\t\n\tvar item = this._computed[key];\n\twhile (item) {\n\t\tcallback(item.x, item.y);\n\t\titem = item.prev;\n\t}\n}\n\n/**\n * Compute a non-cached value\n */\nROT.Path.Dijkstra.prototype._compute = function(fromX, fromY) {\n\twhile (this._todo.length) {\n\t\tvar item = this._todo.shift();\n\t\tif (item.x == fromX && item.y == fromY) { return; }\n\t\t\n\t\tvar neighbors = this._getNeighbors(item.x, item.y);\n\t\t\n\t\tfor (var i=0;i<neighbors.length;i++) {\n\t\t\tvar neighbor = neighbors[i];\n\t\t\tvar x = neighbor[0];\n\t\t\tvar y = neighbor[1];\n\t\t\tvar id = x+\",\"+y;\n\t\t\tif (id in this._computed) { continue; } /* already done */\t\n\t\t\tthis._add(x, y, item); \n\t\t}\n\t}\n}\n\nROT.Path.Dijkstra.prototype._add = function(x, y, prev) {\n\tvar obj = {\n\t\tx: x,\n\t\ty: y,\n\t\tprev: prev\n\t}\n\tthis._computed[x+\",\"+y] = obj;\n\tthis._todo.push(obj);\n}\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nROT.Path.AStar = function(toX, toY, passableCallback, options) {\n\tROT.Path.call(this, toX, toY, passableCallback, options);\n\n\tthis._todo = [];\n\tthis._done = {};\n\tthis._fromX = null;\n\tthis._fromY = null;\n}\nROT.Path.AStar.extend(ROT.Path);\n\n/**\n * Compute a path from a given point\n * @see ROT.Path#compute\n */\nROT.Path.AStar.prototype.compute = function(fromX, fromY, callback) {\n\tthis._todo = [];\n\tthis._done = {};\n\tthis._fromX = fromX;\n\tthis._fromY = fromY;\n\tthis._add(this._toX, this._toY, null);\n\n\twhile (this._todo.length) {\n\t\tvar item = this._todo.shift();\n\t\tif (item.x == fromX && item.y == fromY) { break; }\n\t\tvar neighbors = this._getNeighbors(item.x, item.y);\n\n\t\tfor (var i=0;i<neighbors.length;i++) {\n\t\t\tvar neighbor = neighbors[i];\n\t\t\tvar x = neighbor[0];\n\t\t\tvar y = neighbor[1];\n\t\t\tvar id = x+\",\"+y;\n\t\t\tif (id in this._done) { continue; }\n\t\t\tthis._add(x, y, item); \n\t\t}\n\t}\n\t\n\tvar item = this._done[fromX+\",\"+fromY];\n\tif (!item) { return; }\n\t\n\twhile (item) {\n\t\tcallback(item.x, item.y);\n\t\titem = item.prev;\n\t}\n}\n\nROT.Path.AStar.prototype._add = function(x, y, prev) {\n\tvar obj = {\n\t\tx: x,\n\t\ty: y,\n\t\tprev: prev,\n\t\tg: (prev ? prev.g+1 : 0),\n\t\th: this._distance(x, y)\n\t}\n\tthis._done[x+\",\"+y] = obj;\n\t\n\t/* insert into priority queue */\n\t\n\tvar f = obj.g + obj.h;\n\tfor (var i=0;i<this._todo.length;i++) {\n\t\tvar item = this._todo[i];\n\t\tif (f < item.g + item.h) {\n\t\t\tthis._todo.splice(i, 0, obj);\n\t\t\treturn;\n\t\t}\n\t}\n\t\n\tthis._todo.push(obj);\n}\n\nROT.Path.AStar.prototype._distance = function(x, y) {\n\tswitch (this._options.topology) {\n\t\tcase 4:\n\t\t\treturn (Math.abs(x-this._fromX) + Math.abs(y-this._fromY));\n\t\tbreak;\n\n\t\tcase 6:\n\t\t\tvar dx = Math.abs(x - this._fromX);\n\t\t\tvar dy = Math.abs(y - this._fromY);\n\t\t\treturn dy + Math.max(0, (dx-dy)/2);\n\t\tbreak;\n\n\t\tcase 8: \n\t\t\treturn Math.max(Math.abs(x-this._fromX), Math.abs(y-this._fromY));\n\t\tbreak;\n\t}\n\n        throw new Error(\"Illegal topology\");\n}\n/**\n * @class Terminal backend\n * @private\n */\nROT.Display.Term = function(context) {\n\tROT.Display.Backend.call(this, context);\n\tthis._cx = -1;\n\tthis._cy = -1;\n\tthis._lastColor = \"\";\n\tthis._options = {};\n\tthis._ox = 0;\n\tthis._oy = 0;\n\tthis._termcolor = {};\n}\nROT.Display.Term.extend(ROT.Display.Backend);\n\nROT.Display.Term.prototype.compute = function(options) {\n\tthis._options = options;\n\tthis._ox = Math.floor((process.stdout.columns - options.width) / 2);\n\tthis._oy = Math.floor((process.stdout.rows - options.height) / 2);\n\tthis._termcolor = new ROT.Display.Term[options.termColor.capitalize()](this._context);\n\tthis._context._termcolor = this._termcolor;\n}\n\nROT.Display.Term.prototype.draw = function(data, clearBefore) {\n\t// determine where to draw what with what colors\n\tvar x = data[0];\n\tvar y = data[1];\n\tvar ch = data[2];\n\tvar fg = data[3];\n\tvar bg = data[4];\n\n\t// determine if we need to move the terminal cursor\n\tvar dx = this._ox + x;\n\tvar dy = this._oy + y;\n\tif (dx < 0 || dx >= process.stdout.columns) { return; }\n\tif (dy < 0 || dy >= process.stdout.rows) { return; }\n\tif (dx !== this._cx || dy !== this._cy) {\n\t\tprocess.stdout.write(this._termcolor.positionToAnsi(dx,dy));\n\t\tthis._cx = dx;\n\t\tthis._cy = dy;\n\t}\n\n\t// terminals automatically clear, but if we're clearing when we're\n\t// not otherwise provided with a character, just use a space instead\n\tif (clearBefore) {\n\t\tif (!ch) {\n\t\t\tch = \" \";\n\t\t}\n\t}\n\t\t\n\t// if we're not clearing and not provided with a character, do nothing\n\tif (!ch) { return; }\n\n\t// determine if we need to change colors\n\tvar newColor = this._termcolor.colorToAnsi(fg,bg);\n\tif (newColor !== this._lastColor) {\n\t\tprocess.stdout.write(newColor);\n\t\tthis._lastColor = newColor;\n\t}\n\n\t// write the provided symbol to the display\n\tvar chars = [].concat(ch);\n\tprocess.stdout.write(chars[0]);\n\n\t// update our position, given that we wrote a character\n\tthis._cx++;\n\tif (this._cx >= process.stdout.columns) {\n\t\tthis._cx = 0;\n\t\tthis._cy++;\n\t}\n}\n\nROT.Display.Term.prototype.computeSize = function(availWidth, availHeight) {\n\treturn [process.stdout.columns, process.stdout.rows];\n}\n\nROT.Display.Term.prototype.computeFontSize = function(availWidth, availHeight) {\n\treturn 12;\n}\n\nROT.Display.Term.prototype.eventToPosition = function(x, y) {\n\treturn [x,y]\n}\n/**\n * @class Abstract terminal code module\n * @private\n */\nROT.Display.Term.Color = function(context) {\n\tthis._context = context;\n}\n\nROT.Display.Term.Color.prototype.clearToAnsi = function(bg) {\n}\n\nROT.Display.Term.Color.prototype.colorToAnsi = function(fg, bg) {\n}\n\nROT.Display.Term.Color.prototype.positionToAnsi = function(x, y) {\n}\n/**\n * @class xterm terminal code module\n * @private\n */\nROT.Display.Term.Xterm = function(context) {\n\tROT.Display.Term.Color.call(this, context);\n}\nROT.Display.Term.Xterm.extend(ROT.Display.Term.Color);\n\nROT.Display.Term.Xterm.prototype.clearToAnsi = function(bg) {\n\treturn \"\\x1b[0;48;5;\"\n\t\t+ this._termcolor(bg)\n\t\t+ \"m\\x1b[2J\";\n}\n\nROT.Display.Term.Xterm.prototype.colorToAnsi = function(fg, bg) {\n\treturn \"\\x1b[0;38;5;\"\n\t\t+ this._termcolor(fg)\n\t\t+ \";48;5;\"\n\t\t+ this._termcolor(bg)\n\t\t+ \"m\";\n}\n\nROT.Display.Term.Xterm.prototype.positionToAnsi = function(x, y) {\n\treturn \"\\x1b[\" + (y+1) + \";\" + (x+1) + \"H\";\n}\n\nROT.Display.Term.Xterm.prototype._termcolor = function(color) {\n\tvar SRC_COLORS = 256.0;\n\tvar DST_COLORS = 6.0;\n\tvar COLOR_RATIO = DST_COLORS / SRC_COLORS;\n\tvar rgb = ROT.Color.fromString(color);\n\tvar r = Math.floor(rgb[0] * COLOR_RATIO);\n\tvar g = Math.floor(rgb[1] * COLOR_RATIO);\n\tvar b = Math.floor(rgb[2] * COLOR_RATIO);\n\treturn r*36 + g*6 + b*1 + 16;\n}\n/**\n * Export to Node.js module\n */\nfor (var p in ROT) {\n\texports[p] = ROT[p];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rot-js/lib/rot.js\n// module id = 1\n// module chunks = 0","export default class Entity {\r\n\tconstructor(visual) {\r\n\t\tthis._visual = visual;\r\n\t\tthis._xy = null;\r\n\t\tthis._level = null;\r\n\t}\r\n\tgetVisual() {\r\n\t\treturn this._visual;\r\n\t}\r\n\tgetXY() {\r\n\t\treturn this._xy;\r\n\t}\r\n\tgetLevel() {\r\n\t\treturn this._level;\r\n\t}\r\n\tsetPosition(xy, level) {\r\n\t\tthis._xy = xy;\r\n\t\tthis._level = level;\r\n\t\treturn this;\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/entity.js","export default class XY {\r\n\tconstructor(x = 0, y = 0) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\ttoString() {\r\n\t\treturn this.x + \",\" + this.y;\r\n\t}\r\n\tis(xy) {\r\n\t\treturn (this.x === xy.x && this.y === xy.y);\r\n\t}\r\n\tdist8(xy) {\r\n\t\tconst [dx, dy] = [xy.x - this.x, xy.y - this.y];\r\n\t\treturn Math.max(Math.abs(dx), Math.abs(dy));\r\n\t}\r\n\tdist4(xy) {\r\n\t\tconst [dx, dy] = [xy.x - this.x, xy.y - this.y];\r\n\t\treturn Math.abs(dx) + Math.abs(dy);\r\n\t}\r\n\tdist(xy) {\r\n\t\tconst [dx, dy] = [xy.x - this.x, xy.y - this.y];\r\n\t\treturn Math.sqrt(dx*dx+dy*dy);\r\n\t}\r\n\tplus(xy) {\r\n\t\treturn new XY(this.x+xy.x, this.y+xy.y);\r\n\t}\r\n\tminus(xy) {\r\n\t\treturn new XY(this.x-xy.x, this.y-xy.y);\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/xy.js","import Entity from './entity'\r\nimport Game from './game'\r\nimport ROT from 'rot-js'\r\n\r\nexport default class Being extends Entity {\r\n\tconstructor(visual) {\r\n\t\tsuper(visual);\r\n\t\tthis._speed = 100;\r\n\t\tthis._hp = 10;\r\n\t}\r\n\tgetSpeed() {\r\n\t\t// Called by the Scheduler\r\n\t\treturn this._speed;\r\n\t}\r\n\tdamage(damage) {\r\n\t\tthis._hp -= damage;\r\n\t\tif (this._hp <= 0) { this.die(); }\r\n\t}\r\n\tact() {\r\n\t\t// FIXME\r\n\t}\r\n\tdie() {\r\n\t\tGame.scheduler.remove(this);\r\n\t}\r\n\tsetPosition(xy, level) {\r\n\t\t// came to a currently active level; add self to the scheduler\r\n\t\tif (level !== this._level && level === Game.level) {\r\n\t\t\tGame.scheduler.add(this, true);\r\n\t\t}\r\n\r\n\t\tif (level.getTileAt(xy).passable) {\r\n\t\t\treturn Entity.prototype.setPosition.call(this, xy, level);\r\n\t\t} else {\r\n\t\t\tif (typeof level.getTileAt(xy).bump === \"function\") {\r\n\t\t\t\tlevel.getTileAt(xy).bump(xy);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\tteleport(level) {\r\n\t\tthis._level.setEntity(this, this._level.getFreeCells().random())\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/being.js","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/core.js\n// module id = 5\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 6\n// module chunks = 0","'use strict';\r\n\r\nif (typeof Promise === 'undefined') {\r\n  // Rejection tracking prevents a common issue where React gets into an\r\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\r\n  // and the user has no idea what causes React's erratic future behavior.\r\n  require('promise/lib/rejection-tracking').enable();\r\n  window.Promise = require('promise/lib/es6-extensions.js');\r\n}\r\n\r\n// fetch() polyfill for making API calls.\r\nrequire('whatwg-fetch');\r\n\r\n// Object.assign() is commonly used with React.\r\n// It will use the native implementation if it's present and isn't buggy.\r\nObject.assign = require('object-assign');\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/polyfills.js\n// module id = 7\n// module chunks = 0","import ROT from 'rot-js'\r\nimport game from './game';\r\n\r\nif (!ROT.isSupported()) {\r\n    alert(\"The rot.js library isn't supported by your browser.\");\r\n} else {\r\n    // Initialize the game\r\n    game.init();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/asap/browser-raw.js\n// module id = 9\n// module chunks = 0","import Entity from './entity'\r\nimport Game from './game'\r\nimport XY from './xy'\r\nimport generateMap from './map'\r\n\r\nexport default class Level {\r\n\tconstructor() {\r\n\t\t// FIXME data structure for storing entities\r\n\t\tthis._beings = {};\r\n\r\n\t\t// FIXME map data\r\n\t\tthis._size = new XY(80, 25);\r\n\t\tconst mapData = generateMap(80, 25);\r\n\t\tthis._map = mapData.map;\r\n\t\tthis._freeCells = mapData.freeCells;\r\n\r\n\t\tthis._empty = new Entity({ch:\".\", fg:\"#888\", bg:null});\r\n\t}\r\n\tgetSize() {\r\n\t\treturn this._size;\r\n\t}\r\n\tsetEntity(entity, xy) {\r\n\t\t// FIXME remove from old position, draw\r\n\t\tconst oldXY = entity.getXY();\r\n\t\tif (entity.getLevel() === this) {\r\n\t\t\tdelete this._beings[oldXY];\r\n\t\t\tif (Game.level === this) { Game.draw(oldXY); }\r\n\t\t}\r\n\t\tif (entity.setPosition(xy, this)) {\r\n\t\t\tentity.setPosition(xy, this); // propagate position data to the entity itself\r\n\t\t\t// FIXME set new position, draw\r\n\t\t\tthis._beings[xy] = entity;\r\n\t\t\tif (Game.level === this) {\r\n\t\t\t\tGame.draw(xy);\r\n\t\t\t\tGame.textBuffer.write(\"An entity moves to \" + xy + \".\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (entity.getLevel() === this) {\r\n\t\t\t\tentity.setPosition(oldXY, this);\r\n\t\t\t\tthis._beings[oldXY] = entity;\r\n\t\t\t\tif (Game.level === this) { Game.draw(oldXY); }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tgetEntityAt(xy) {\r\n\t\treturn this._beings[xy] || this._map[xy] || this._empty;\r\n\t}\r\n\tgetTileAt(xy) {\r\n\t\treturn this._map[xy] || this._empty;\r\n\t}\r\n\tgetBeings() {\r\n\t\t// FIXME list of all beings\r\n\t\treturn this._beings;\r\n\t}\r\n\tgetFreeCells() {\r\n\t\treturn this._freeCells;\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/level.js","import ROT from 'rot-js'\r\nimport Entity from './entity'\r\nimport Tile from './tile'\r\nimport XY from './xy'\r\n\r\nexport default function generateMap(w, h) {\r\n    const digger = new ROT.Map.Digger(w, h);\r\n    let map = {};\r\n    let freeCells = [];\r\n\r\n    const digCallback = function(x, y, value) {\r\n        const key = new XY(x, y);\r\n        if (value) {\r\n            map[key] = new Tile(\"wall\");\r\n        } else {\r\n            map[key] = new Tile(\"floor\");\r\n            freeCells.push(key);\r\n        }\r\n    }\r\n\r\n    const placeDoors = function(x, y) {\r\n        const key = new XY(x, y);\r\n        map[key] = new Tile(\"door\");\r\n        if (key in freeCells) {\r\n            delete freeCells[key];\r\n        }\r\n    }\r\n\r\n    digger.create(digCallback.bind(this));\r\n    const rooms = digger.getRooms();\r\n    const corridors = digger.getCorridors();\r\n    for (var i=0; i<rooms.length; i++) {\r\n        var room = rooms[i];\r\n        room.getDoors(placeDoors);\r\n    }\r\n    return {map, freeCells};\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/map.js","import ROT from 'rot-js'\r\nimport Being from './being'\r\nimport Game from './game'\r\nimport XY from './xy'\r\n\r\nexport default class Player extends Being {\n\tconstructor() {\n\t\tsuper({ch:\"@\", fg:\"#fff\"});\n\n\t\tthis._keys = {};\r\n\t\tthis._keys[ROT.VK_K] = 0;\r\n\t\tthis._keys[ROT.VK_UP] = 0;\r\n\t\tthis._keys[ROT.VK_NUMPAD8] = 0;\r\n\t\tthis._keys[ROT.VK_U] = 1;\r\n\t\tthis._keys[ROT.VK_NUMPAD9] = 1;\r\n\t\tthis._keys[ROT.VK_PAGE_UP] = 1;\r\n\t\tthis._keys[ROT.VK_L] = 2;\r\n\t\tthis._keys[ROT.VK_RIGHT] = 2;\r\n\t\tthis._keys[ROT.VK_NUMPAD6] = 2;\r\n\t\tthis._keys[ROT.VK_N] = 3;\r\n\t\tthis._keys[ROT.VK_NUMPAD3] = 3;\r\n\t\tthis._keys[ROT.VK_PAGE_DOWN] = 3;\r\n\t\tthis._keys[ROT.VK_J] = 4;\r\n\t\tthis._keys[ROT.VK_DOWN] = 4;\r\n\t\tthis._keys[ROT.VK_NUMPAD2] = 4;\r\n\t\tthis._keys[ROT.VK_B] = 5;\r\n\t\tthis._keys[ROT.VK_NUMPAD1] = 5;\r\n\t\tthis._keys[ROT.VK_END] = 5;\r\n\t\tthis._keys[ROT.VK_H] = 6;\r\n\t\tthis._keys[ROT.VK_LEFT] = 6;\r\n\t\tthis._keys[ROT.VK_NUMPAD4] = 6;\r\n\t\tthis._keys[ROT.VK_Y] = 7;\r\n\t\tthis._keys[ROT.VK_NUMPAD7] = 7;\r\n\t\tthis._keys[ROT.VK_HOME] = 7;\r\n\r\n\t\tthis._keys[ROT.VK_PERIOD] = -1;\r\n\t\tthis._keys[ROT.VK_CLEAR] = -1;\r\n\t\tthis._keys[ROT.VK_NUMPAD5] = -1;\n\n\t\tthis._keys[ROT.VK_T] = \"teleport\";\n\t}\n\tact() {\r\n\t\tGame.textBuffer.write(\"It is your turn, press any relevant key.\");\r\n\t\tGame.textBuffer.flush();\r\n\t\tGame.engine.lock();\r\n\t\twindow.addEventListener(\"keydown\", this);\r\n\t}\n\tdie() {\r\n\t\tsuper.die();\r\n\t\tGame.over();\r\n\t}\n\thandleEvent(e) {\r\n\t\tconst code = e.keyCode;\r\n\r\n\t\tconst keyHandled = this._handleKey(e.keyCode);\r\n\r\n\t\tif (keyHandled) {\r\n\t\t\twindow.removeEventListener(\"keydown\", this);\r\n\t\t\tGame.engine.unlock();\r\n\t\t}\r\n\t}\n\t_handleKey = function(code) {\r\n\t\tif (code in this._keys) {\r\n\t\t\tGame.textBuffer.clear();\r\n\t\t\tif (typeof this._keys[code] === \"number\") {\r\n\t\t\t\tconst direction = this._keys[code];\r\n\r\n\t\t\t\tif (direction === -1) { // noop\r\n\t\t\t\t\t// FIXME show something?\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst dir = ROT.DIRS[8][direction];\r\n\t\t\t\tconst xy = this._xy.plus(new XY(dir[0], dir[1]));\r\n\r\n\t\t\t\tthis._level.setEntity(this, xy);\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tswitch (this._keys[code]) {\r\n\t\t\t\t\tcase \"teleport\":\r\n\t\t\t\t\t\tthis.teleport(this._level);\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false; // unknown key\r\n\t}\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/player.js","import ROT from 'rot-js'\r\nimport Game from './game'\r\n\r\nconst Screen = {};\r\n\r\n// Define our initial start screen\r\nScreen.startScreen = {\r\n    enter: function() {    console.log(\"Entered start screen.\"); },\r\n    exit: function() { console.log(\"Exited start screen.\"); },\r\n    render: function(display) {\r\n        // Render our prompt to the screen\r\n        display.drawText(1,1, \"%c{yellow}Javascript Roguelike\");\r\n        display.drawText(1,3, \"%c{cyan}HELP:\");\r\n        display.drawText(1,4, \"%c{yellow}- Use arrows, vi keys or numpad keys to move\");\r\n        display.drawText(1,5, \"%c{yellow}- Press 'T' to teleport!\");\r\n        display.drawText(1,7, \"Press [Enter] to start!\");\r\n    },\r\n    handleInput: function(inputType, inputData) {\r\n        // When [Enter] is pressed, go to the play screen\r\n        if (inputType === 'keydown') {\r\n            if (inputData.keyCode === ROT.VK_RETURN) {\r\n                Game.startGame();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// Define our winning screen\r\nScreen.winScreen = {\r\n    enter: function() {    console.log(\"Entered win screen.\"); },\r\n    exit: function() { console.log(\"Exited win screen.\"); },\r\n    render: function(display) {\r\n        // Render our prompt to the screen\r\n        for (var i = 0; i < 22; i++) {\r\n            // Generate random background colors\r\n            var r = Math.round(Math.random() * 255);\r\n            var g = Math.round(Math.random() * 255);\r\n            var b = Math.round(Math.random() * 255);\r\n            var background = ROT.Color.toRGB([r, g, b]);\r\n            display.drawText(2, i + 1, \"%b{\" + background + \"}You win!\");\r\n        }\r\n    },\r\n    handleInput: function(inputType, inputData) {\r\n        // Nothing to do here\r\n    }\r\n}\r\n\r\n// Define our losing screen\r\nScreen.loseScreen = {\r\n    enter: function() {    console.log(\"Entered lose screen.\"); },\r\n    exit: function() { console.log(\"Exited lose screen.\"); },\r\n    render: function(display) {\r\n        // Render our prompt to the screen\r\n        for (var i = 0; i < 22; i++) {\r\n            display.drawText(2, i + 1, \"%b{red}You lose! :(\");\r\n        }\r\n    },\r\n    handleInput: function(inputType, inputData) {\r\n        // Nothing to do here\r\n    }\r\n}\r\n\r\nexport default Screen;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/screens.js","import XY from './xy'\r\n\r\nexport default class TextBuffer {\r\n\tconstructor() {\r\n\t\tthis._data = [];\r\n\t\tthis._options = {\r\n\t\t\tdisplay: null,\r\n\t\t\tposition: new XY(),\r\n\t\t\tsize: new XY()\r\n\t\t}\r\n\t}\r\n\tconfigure(options) {\r\n\t\tfor (var p in options) { this._options[p] = options[p]; }\r\n\t}\r\n\tclear() {\r\n\t\tthis._data = [];\r\n\t}\r\n\twrite(text) {\r\n\t\tthis._data.push(text);\r\n\t}\r\n\tflush() {\r\n\t\tconst options = this._options;\r\n\t\tconst display = options.display;\r\n\t\tconst pos = options.position;\r\n\t\tconst size = options.size;\r\n\r\n\t\t// clear\r\n\t\tfor (let i = 0; i < size.x; i++) {\r\n\t\t\tfor (let j = 0; j < size.y; j++) {\r\n\t\t\t\tdisplay.draw(pos.x + i, pos.y + j);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar text = this._data.join(\" \");\r\n\t\tdisplay.drawText(pos.x, pos.y, text, size.x);\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/textbuffer.js","import Entity from './entity'\r\nimport Game from './game'\r\n\r\nexport default class Tile extends Entity {\r\n    constructor(type) {\r\n        // FIXME\r\n        const tile = Tile.Types[type];\r\n        super(tile.visual);\r\n        this.name = tile.name;\r\n        this.passable = tile.passable;\r\n        this.blocksLos = tile.blocksLos;\r\n        this.bump = tile.bump ? tile.bump : this.bump;\r\n    }\r\n    bump(xy) {\r\n        if(!this.passable){\r\n            Game.textBuffer.write('You cannot move through this ' + this.name + ' no matter how hard you try.');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    static Types = {\r\n        floor: {\r\n            name: 'Floor',\r\n            visual: {ch: '.', fg: '#444', bg: '#222'},\r\n            passable: true,\r\n            blocksLos: false\r\n        },\r\n        wall: {\r\n            name: 'Wall',\r\n            visual: {ch: '#', fg: '#777', bg: '#2e2e2e'},\r\n            passable: false,\r\n            blocksLos: true\r\n        },\r\n        door: {\r\n            name: 'Door',\r\n            visual: {ch: '+', fg: 'yellow', bg: '#222'},\r\n            passable: false,\r\n            blocksLos: true,\r\n            bump: function(xy){\r\n                if(!this.passable){\r\n                    this.passable = true;\r\n                    this.blocksLos = false;\r\n                    this._visual.ch = \"'\";\r\n                    Game.draw(xy);\r\n                    Game.textBuffer.write('You open the ' + this.name + '.');\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/tile.js","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 16\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 17\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/es6-extensions.js\n// module id = 18\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._10 = null;\n  Promise._97 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._10 = function (promise) {\n    if (\n      promise._81 === 2 && // IS REJECTED\n      rejections[promise._72]\n    ) {\n      if (rejections[promise._72].logged) {\n        onHandled(promise._72);\n      } else {\n        clearTimeout(rejections[promise._72].timeout);\n      }\n      delete rejections[promise._72];\n    }\n  };\n  Promise._97 = function (promise, err) {\n    if (promise._45 === 0) { // not yet handled\n      promise._72 = id++;\n      rejections[promise._72] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._72),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/rejection-tracking.js\n// module id = 19\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 20\n// module chunks = 0"],"sourceRoot":""}